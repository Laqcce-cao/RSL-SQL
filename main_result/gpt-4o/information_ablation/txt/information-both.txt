SELECT MAX(`free meal count (k-12)` / `enrollment (k-12)`) FROM `frpm` WHERE `county name` = 'Alameda'
SELECT `frpm`.`cdscode`, (`frpm`.`free meal count (ages 5-17)` / `frpm`.`enrollment (ages 5-17)`) AS `eligible_free_rate` FROM `frpm` INNER JOIN `schools` ON `frpm`.`cdscode` = `schools`.`cdscode` WHERE `schools`.`soctype` = 'Continuation Schools' ORDER BY `eligible_free_rate` ASC LIMIT 3
SELECT DISTINCT `s`.`zip` FROM `schools` AS `s` INNER JOIN `frpm` AS `f` ON `s`.`cdscode` = `f`.`cdscode` WHERE `s`.`county` = 'Fresno' AND `f`.`charter school (y/n)` = 1
SELECT `mailstreet` FROM `schools` WHERE `cdscode` = (SELECT `cdscode` FROM `frpm` ORDER BY `frpm count (k-12)` DESC LIMIT 1)
SELECT DISTINCT `T3`.`phone` FROM `frpm` AS `T1` INNER JOIN `schools` AS `T3` ON `T1`.`cdscode` = `T3`.`cdscode` WHERE `T1`.`charter school (y/n)` = 1 AND `T1`.`charter funding type` = 'Directly funded' AND `T3`.`opendate` > '2000-01-01'
SELECT COUNT(DISTINCT `s`.`cdscode`) FROM `schools` AS `s` INNER JOIN `satscores` AS `ss` ON `s`.`cdscode` = `ss`.`cds` WHERE `ss`.`avgscrmath` > 400 AND `s`.`virtual` = 'F'
SELECT `school` FROM `schools` AS S INNER JOIN `satscores` AS SS ON S.`cdscode` = SS.`cds` WHERE SS.`numtsttakr` > 500 AND S.`magnet` = 1
SELECT `s`.`phone` FROM `schools` AS `s` INNER JOIN `satscores` AS `ss` ON `s`.`cdscode` = `ss`.`cds` ORDER BY `ss`.`numtsttakr` DESC LIMIT 1
SELECT SUM(`satscores`.`numtsttakr`) FROM `satscores` INNER JOIN `frpm` ON `satscores`.`cds` = `frpm`.`cdscode` WHERE `frpm`.`frpm count (k-12)` = (SELECT MAX(`frpm count (k-12)`) FROM `frpm`)
SELECT COUNT(DISTINCT `s`.`cdscode`) FROM `schools` AS `s` INNER JOIN `satscores` AS `ss` ON `s`.`cdscode` = `ss`.`cds` WHERE `ss`.`avgscrmath` > 560 AND `s`.`fundingtype` = 'Directly funded'
SELECT `frpm`.`frpm count (ages 5-17)` FROM `frpm` INNER JOIN `satscores` ON `frpm`.`cdscode` = `satscores`.`cds` ORDER BY `satscores`.`avgscrread` DESC LIMIT 1
SELECT DISTINCT `cdscode` FROM `frpm` WHERE `enrollment (k-12)` + `enrollment (ages 5-17)` > 500
SELECT MAX(`frpm`.`free meal count (ages 5-17)` / `frpm`.`enrollment (ages 5-17)`) AS highest_eligible_free_rate FROM `frpm` INNER JOIN `satscores` ON `frpm`.`cdscode` = `satscores`.`cds` WHERE (`satscores`.`numge1500` / `satscores`.`numtsttakr`) > 0.3
SELECT `phone` FROM `schools` AS S INNER JOIN `satscores` AS SS ON S.`cdscode` = SS.`cds` ORDER BY (SS.`numge1500` * 1.0 / SS.`numtsttakr`) DESC LIMIT 3
SELECT `s`.`ncesschool` FROM `schools` AS `s` INNER JOIN `frpm` AS `f` ON `s`.`cdscode` = `f`.`cdscode` ORDER BY `f`.`enrollment (ages 5-17)` DESC LIMIT 5
SELECT `district` FROM `schools` INNER JOIN `satscores` ON `schools`.`cdscode` = `satscores`.`cds` WHERE `schools`.`statustype` = 'Active' GROUP BY `district` ORDER BY AVG(`satscores`.`avgscrread`) DESC LIMIT 1
SELECT COUNT(DISTINCT `schools`.`cdscode`) FROM `schools` INNER JOIN `satscores` ON `schools`.`cdscode` = `satscores`.`cds` WHERE `schools`.`county` = 'Alameda' AND `satscores`.`numtsttakr` < 100
SELECT `s`.`school`, `s`.`charternum`, `ss`.`avgscrwrite` FROM `schools` AS `s` INNER JOIN `satscores` AS `ss` ON `s`.`cdscode` = `ss`.`cds` WHERE `ss`.`avgscrwrite` > 499 AND `s`.`charternum` IS NOT NULL ORDER BY `ss`.`avgscrwrite` DESC
SELECT COUNT(`s`.`cdscode`) FROM `schools` AS `s` INNER JOIN `satscores` AS `ss` ON `s`.`cdscode` = `ss`.`cds` WHERE `s`.`county` = 'Fresno' AND `s`.`fundingtype` = 'Directly funded' AND `ss`.`numtsttakr` <= 250
SELECT `phone` FROM `schools` WHERE `cdscode` = (SELECT `cds` FROM `satscores` ORDER BY `avgscrmath` DESC LIMIT 1)
SELECT COUNT(`schools`.`cdscode`) FROM `schools` JOIN `frpm` ON `schools`.`cdscode` = `frpm`.`cdscode` WHERE `schools`.`county` = 'Amador' AND `frpm`.`low grade` = '9' AND `frpm`.`high grade` = '12'
SELECT COUNT(`schools`.`cdscode`) FROM `schools` INNER JOIN `frpm` ON `schools`.`cdscode` = `frpm`.`cdscode` WHERE `schools`.`county` = 'Los Angeles' AND `frpm`.`free meal count (k-12)` > 500 AND `frpm`.`frpm count (k-12)` < 700
SELECT `school` FROM `schools` INNER JOIN `satscores` ON `schools`.`cdscode` = `satscores`.`cds` WHERE `county` = 'Contra Costa' ORDER BY `numtsttakr` DESC LIMIT 1
SELECT `frpm`.`school name`, `schools`.`street` FROM `frpm` INNER JOIN `schools` ON `frpm`.`cdscode` = `schools`.`cdscode` WHERE (`frpm`.`enrollment (k-12)` - `frpm`.`enrollment (ages 5-17)`) > 30
SELECT DISTINCT `s`.`school` FROM `frpm` AS `f` INNER JOIN `satscores` AS `ss` ON `f`.`cdscode` = `ss`.`cds` INNER JOIN `schools` AS `s` ON `f`.`cdscode` = `s`.`cdscode` WHERE `f`.`percent (%) eligible free (k-12)` > 0.1 AND `ss`.`numge1500` > 0
SELECT `s`.`school`, `s`.`fundingtype` FROM `schools` AS `s` INNER JOIN `satscores` AS `ss` ON `s`.`cdscode` = `ss`.`cds` WHERE `s`.`county` = 'Riverside' GROUP BY `s`.`school`, `s`.`fundingtype` HAVING AVG(`ss`.`avgscrmath`) > 400
SELECT `frpm`.`school name`, `schools`.`street`, `schools`.`city`, `schools`.`state`, `schools`.`zip` FROM `frpm` INNER JOIN `schools` ON `frpm`.`cdscode` = `schools`.`cdscode` WHERE `frpm`.`school type` LIKE '%High Schools%' AND `schools`.`city` = 'Monterey' AND (`frpm`.`frpm count (ages 5-17)` > 800)
SELECT `s`.`school`, `s`.`phone`, `ss`.`avgscrwrite` FROM `schools` AS `s` INNER JOIN `satscores` AS `ss` ON `s`.`cdscode` = `ss`.`cds` WHERE (`s`.`opendate` > '1991-12-31' OR `s`.`closeddate` < '2000-01-01')
SELECT `s`.`school`, `s`.`doctype` FROM `schools` AS `s` INNER JOIN `frpm` AS `f` ON `s`.`cdscode` = `f`.`cdscode` WHERE `f`.`charter funding type` = 'Locally funded' AND (`f`.`enrollment (k-12)` - `f`.`enrollment (ages 5-17)`) > (SELECT AVG(`enrollment (k-12)` - `enrollment (ages 5-17)`) FROM `frpm` WHERE `charter funding type` = 'Locally funded')
SELECT `opendate` FROM `schools` WHERE `cdscode` = (SELECT `cdscode` FROM `frpm` ORDER BY `enrollment (k-12)` DESC LIMIT 1)
SELECT `city` FROM `schools` INNER JOIN `frpm` ON `schools`.`cdscode` = `frpm`.`cdscode` ORDER BY `frpm`.`enrollment (k-12)` ASC LIMIT 5
SELECT `frpm`.`cdscode`, (`frpm`.`free meal count (k-12)` / `frpm`.`enrollment (k-12)`) AS `eligible_free_rate` FROM `frpm` INNER JOIN `schools` ON `frpm`.`cdscode` = `schools`.`cdscode` ORDER BY `frpm`.`enrollment (k-12)` DESC LIMIT 2 OFFSET 9
SELECT `frpm`.`cdscode`, (`frpm`.`frpm count (k-12)` / `frpm`.`enrollment (k-12)`) AS `meal_rate` FROM `frpm` INNER JOIN `schools` ON `frpm`.`cdscode` = `schools`.`cdscode` WHERE `schools`.`soc` = 66 ORDER BY `frpm`.`frpm count (k-12)` DESC LIMIT 5
SELECT `schools`.`school`, `schools`.`website` FROM `frpm` INNER JOIN `schools` ON `frpm`.`cdscode` = `schools`.`cdscode` WHERE `frpm`.`free meal count (ages 5-17)` BETWEEN 1900 AND 2000
SELECT (`free meal count (ages 5-17)` / `enrollment (ages 5-17)`) AS free_rate FROM frpm INNER JOIN schools ON frpm.cdscode = schools.cdscode WHERE schools.admfname1 = 'Kacey' AND schools.admlname1 = 'Gibson'
SELECT `admemail1` FROM `schools` INNER JOIN `frpm` ON `schools`.`cdscode` = `frpm`.`cdscode` WHERE `frpm`.`charter school (y/n)` = 1 ORDER BY `frpm`.`enrollment (k-12)` ASC LIMIT 1
SELECT `admfname1`, `admlname1`, `admfname2`, `admlname2`, `admfname3`, `admlname3` FROM `schools` INNER JOIN `satscores` ON `schools`.`cdscode` = `satscores`.`cds` ORDER BY `satscores`.`numge1500` DESC LIMIT 1
SELECT `street`, `city`, `zip`, `state` FROM `schools` AS S INNER JOIN `satscores` AS SS ON S.`cdscode` = SS.`cds` ORDER BY (CAST(SS.`numge1500` AS FLOAT) / SS.`numtsttakr`) ASC LIMIT 1
SELECT `s`.`website` FROM `schools` AS `s` INNER JOIN `satscores` AS `ss` ON `s`.`cdscode` = `ss`.`cds` WHERE `s`.`county` = 'Los Angeles' AND `ss`.`numtsttakr` BETWEEN 2000 AND 3000
SELECT AVG(`satscores`.`numtsttakr`) FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`cdscode` WHERE `schools`.`county` = 'Fresno' AND strftime('%Y', `schools`.`opendate`) = '1980'
SELECT `phone` FROM `schools` INNER JOIN `satscores` ON `schools`.`cdscode` = `satscores`.`cds` WHERE `district` = 'Fresno Unified' ORDER BY `avgscrread` ASC LIMIT 1
SELECT `s`.`school` FROM `schools` AS `s` INNER JOIN `satscores` AS `ss` ON `s`.`cdscode` = `ss`.`cds` WHERE `s`.`virtual` = 'P' AND `s`.`school` IS NOT NULL AND `s`.`school` IN (SELECT `s2`.`school` FROM `schools` AS `s2` INNER JOIN `satscores` AS `ss2` ON `s2`.`cdscode` = `ss2`.`cds` WHERE `s2`.`virtual` = 'P' AND `s2`.`school` IS NOT NULL ORDER BY `ss2`.`avgscrread` DESC LIMIT 5)
SELECT `edopsname` FROM `schools` WHERE `cdscode` = (SELECT `cds` FROM `satscores` ORDER BY `avgscrmath` DESC LIMIT 1)
SELECT `satscores`.`avgscrmath`, `schools`.`county` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`cdscode` ORDER BY (`satscores`.`avgscrmath` + `satscores`.`avgscrread` + `satscores`.`avgscrwrite`) / 3 ASC LIMIT 1
SELECT AVG(`satscores`.`avgscrwrite`), `schools`.`city` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`cdscode` WHERE `satscores`.`numtsttakr` = (SELECT MAX(`numtsttakr`) FROM `satscores` WHERE `numge1500` >= 1500) GROUP BY `schools`.`city`
SELECT `schools`.`school`, AVG(`satscores`.`avgscrwrite`) AS `average_writing_score` FROM `schools` INNER JOIN `satscores` ON `schools`.`cdscode` = `satscores`.`cds` WHERE `schools`.`admfname1` = 'Ricci' AND `schools`.`admlname1` = 'Ulrich' GROUP BY `schools`.`school`
SELECT `school` FROM `schools` INNER JOIN `frpm` ON `schools`.`cdscode` = `frpm`.`cdscode` WHERE `schools`.`doc` = '31' ORDER BY `frpm`.`enrollment (k-12)` DESC LIMIT 1
SELECT COUNT(`cdscode`) / 12 FROM `schools` WHERE `county` = 'Alameda' AND `doc` = '52' AND `opendate` LIKE '1980-%'
SELECT (SELECT COUNT(*) FROM schools WHERE `county` = 'Orange' AND `doc` = '54') * 1.0 / (SELECT COUNT(*) FROM schools WHERE `county` = 'Orange' AND `doc` = '52') AS ratio
SELECT `s`.`county`, `s`.`school`, `s`.`closeddate` FROM `schools` AS `s` WHERE `s`.`statustype` = 'Closed' GROUP BY `s`.`county` ORDER BY COUNT(`s`.`cdscode`) DESC, `s`.`county` LIMIT 1
SELECT `s`.`street`, `s`.`school` FROM `schools` AS `s` INNER JOIN `satscores` AS `ss` ON `s`.`cdscode` = `ss`.`cds` ORDER BY `ss`.`avgscrmath` DESC LIMIT 1 OFFSET 6
SELECT `schools`.`mailstreet`, `schools`.`school` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`cdscode` ORDER BY `satscores`.`avgscrread` ASC LIMIT 1
SELECT COUNT(DISTINCT `s`.`cdscode`) FROM `schools` AS `s` INNER JOIN `satscores` AS `ss` ON `s`.`cdscode` = `ss`.`cds` WHERE (`ss`.`avgscrread` + `ss`.`avgscrmath` + `ss`.`avgscrwrite`) >= 1500 AND `s`.`mailcity` = 'Lakeport'
SELECT SUM(`numtsttakr`) FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`cdscode` WHERE `schools`.`mailcity` = 'Fresno'
SELECT `school`, `mailzip` FROM `schools` WHERE `admfname1` = 'Avetik' AND `admlname1` = 'Atoian'
SELECT CAST(COUNT(CASE WHEN `county` = 'Colusa' THEN `school` ELSE NULL END) AS REAL) / COUNT(CASE WHEN `county` = 'Humboldt' THEN `school` ELSE NULL END) FROM `schools` WHERE `mailstate` = 'CA'
SELECT COUNT(`cdscode`) FROM `schools` WHERE `mailstate` = 'CA' AND `city` = 'San Joaquin' AND `statustype` = 'Active'
SELECT `phone`, `ext` FROM `schools` WHERE `cdscode` = (SELECT `cds` FROM `satscores` ORDER BY `avgscrwrite` DESC LIMIT 1 OFFSET 332)
SELECT `school`, `phone`, `ext` FROM `schools` WHERE `zip` = '95203-3704'
SELECT `website` FROM `schools` WHERE (`admfname1` = 'Mike' AND `admlname1` = 'Larson') OR (`admfname1` = 'Dante' AND `admlname1` = 'Alvarez')
SELECT `website` FROM `schools` WHERE `virtual` = 'P' AND `charter` = 1 AND `county` = 'San Joaquin'
SELECT COUNT(*) FROM `schools` WHERE `city` = 'Hickman' AND `charter` = 1 AND `doc` = 52
SELECT COUNT(DISTINCT `s`.`cdscode`) FROM `schools` AS `s` INNER JOIN `frpm` AS `f` ON `s`.`cdscode` = `f`.`cdscode` WHERE `s`.`county` = 'Los Angeles' AND `s`.`charter` = 0 AND (`f`.`free meal count (k-12)` * 100 / `f`.`enrollment (k-12)`) < 0.18
SELECT `school`, `city`, `admfname1`, `admlname1`, `admfname2`, `admlname2`, `admfname3`, `admlname3` FROM `schools` WHERE `charter` = 1 AND `charternum` = '00D2'
SELECT COUNT(*) FROM `schools` WHERE `mailcity` = 'Hickman' AND `charternum` = '00D4'
SELECT CAST(SUM(CASE WHEN `fundingtype` = 'Locally funded' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`cdscode`) FROM `schools` WHERE `county` = 'Santa Clara'
SELECT COUNT(`cdscode`) FROM `schools` WHERE `fundingtype` = 'Directly funded' AND `county` = 'Stanislaus' AND `opendate` BETWEEN '2000-01-01' AND '2005-12-31'
SELECT COUNT(*) FROM `schools` WHERE `statustype` = 'Closed' AND `district` LIKE '%Community College District%' AND `closeddate` LIKE '1989%' AND `city` = 'San Francisco'
SELECT `county` FROM `schools` WHERE `soc` = 11 AND `closeddate` BETWEEN '1980-01-01' AND '1989-12-31' GROUP BY `county` ORDER BY COUNT(`closeddate`) DESC LIMIT 1
SELECT DISTINCT `ncesdist` FROM `schools` WHERE `soc` = 31
SELECT COUNT(`cdscode`) FROM `schools` WHERE `county` = 'Alpine' AND `doctype` = 'District Community Day School' AND (`statustype` = 'Active' OR `statustype` = 'Closed')
SELECT `district` FROM `schools` WHERE `magnet` = 0 AND `city` = 'Fresno'
SELECT SUM(`enrollment (ages 5-17)`) FROM `frpm` AS F INNER JOIN `schools` AS S ON F.`cdscode` = S.`cdscode` WHERE S.`city` = 'Fremont' AND S.`edopscode` = 'SSS' AND F.`academic year` = '2014-2015'
SELECT `frpm`.`frpm count (ages 5-17)` FROM `frpm` INNER JOIN `schools` ON `frpm`.`cdscode` = `schools`.`cdscode` WHERE `schools`.`school` = 'Youth Authority School' AND `schools`.`mailstreet` = 'PO Box 1040'
SELECT MIN(`low grade`) FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`ncesdist` = '0613360' AND `schools`.`edopscode` = 'SPECON'
SELECT `s`.`school`, `s`.`eilname` FROM `schools` AS `s` INNER JOIN `frpm` AS `f` ON `s`.`cdscode` = `f`.`cdscode` WHERE `f`.`nslp provision status` = 'Breakfast Provision 2' AND `f`.`county code` = '37'
SELECT `city` FROM `schools` INNER JOIN `frpm` ON `schools`.`cdscode` = `frpm`.`cdscode` WHERE `frpm`.`nslp provision status` = '2' AND `frpm`.`low grade` = '9' AND `frpm`.`high grade` = '12' AND `schools`.`county` = 'Merced' AND `schools`.`eilcode` = 'HS'
SELECT `schools`.`school`, `frpm`.`percent (%) eligible frpm (ages 5-17)` FROM `schools` JOIN `frpm` ON `schools`.`cdscode` = `frpm`.`cdscode` WHERE `schools`.`county` = 'Los Angeles' AND `frpm`.`low grade` = 'K' AND `frpm`.`high grade` = '9'
SELECT `gsserved` FROM `schools` WHERE `city` = 'Adelanto' GROUP BY `gsserved` ORDER BY COUNT(`gsserved`) DESC LIMIT 1
SELECT `county`, COUNT(`school`) AS `num_schools` FROM `schools` WHERE `virtual` = 'F' AND `county` IN ('San Diego', 'Santa Barbara') GROUP BY `county` ORDER BY `num_schools` DESC LIMIT 1
SELECT `s`.`school`, `s`.`latitude`, `f`.`school type` FROM `schools` AS `s` INNER JOIN `frpm` AS `f` ON `s`.`CDSCode` = `f`.`CDSCode` WHERE `s`.`latitude` = (SELECT MAX(`latitude`) FROM `schools`)
SELECT `s`.`city`, `s`.`school`, `f`.`low grade` FROM `schools` AS `s` INNER JOIN `frpm` AS `f` ON `s`.`CDSCode` = `f`.`CDSCode` WHERE `s`.`state` = 'CA' ORDER BY `s`.`latitude` ASC LIMIT 1
SELECT `gsoffered` FROM `schools` ORDER BY ABS(`longitude`) DESC LIMIT 1
SELECT COUNT(DISTINCT `s`.`city`) AS `number_of_cities`, `s`.`city`, COUNT(`s`.`cdscode`) AS `number_of_schools` FROM `schools` AS `s` INNER JOIN `frpm` AS `f` ON `s`.`cdscode` = `f`.`cdscode` WHERE `s`.`magnet` = 1 AND `s`.`gsoffered` = 'K-8' AND `f`.`nslp provision status` = 'Multiple Provision Types' GROUP BY `s`.`city`
SELECT `admfname1`, `district` FROM `schools` WHERE `admfname1` IS NOT NULL GROUP BY `admfname1`, `district` ORDER BY COUNT(`admfname1`) DESC LIMIT 2
SELECT T1.`percent (%) eligible free (k-12)`, T1.`district code` FROM `frpm` AS T1 INNER JOIN `schools` AS T2 ON T1.`cdscode` = T2.`cdscode` WHERE T2.`admfname1` = 'Alusine'
SELECT `admlname1`, `district`, `county`, `school` FROM `schools` WHERE `charternum` = '40'
SELECT `admemail1` FROM `schools` WHERE `county` = 'San Bernardino' AND `district` = 'San Bernardino City Unified' AND `opendate` BETWEEN '2009-01-01' AND '2010-12-31' AND (`soctype` = 'Intermediate/Middle Schools (Public)' OR `doc` = 54)
SELECT `s`.`school`, `s`.`admemail1` FROM `schools` AS `s` INNER JOIN `satscores` AS `ss` ON `s`.`cdscode` = `ss`.`cds` ORDER BY `ss`.`numge1500` DESC LIMIT 1
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `account`.`frequency` = 'POPLATEK PO OBRATU' AND `district`.`a3` = 'East Bohemia'
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `district`.`a3` = 'Prague'
SELECT CASE WHEN AVG(`a12`) > AVG(`a13`) THEN '1995' ELSE '1996' END AS Higher_Unemployment_Rate FROM `district`
SELECT COUNT(DISTINCT `district`.`district_id`) FROM `district` JOIN `client` ON `district`.`district_id` = `client`.`district_id` WHERE `client`.`gender` = 'F' AND `district`.`a11` > 6000 AND `district`.`a11` < 10000
SELECT COUNT(`client`.`client_id`) FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'M' AND `district`.`a3` = 'North Bohemia' AND `district`.`a11` > 8000
SELECT `account`.`account_id`, (MAX(`district`.`a11`) - MIN(`district`.`a11`)) AS gap FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' AND `client`.`birth_date` = (SELECT MIN(`birth_date`) FROM `client` WHERE `gender` = 'F') GROUP BY `account`.`account_id` ORDER BY `district`.`a11` ASC LIMIT 1
SELECT `account`.`account_id` FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` WHERE `client`.`birth_date` = (SELECT MAX(`birth_date`) FROM `client`) AND `district`.`a11` = (SELECT MAX(`a11`) FROM `district`)
SELECT COUNT(DISTINCT `disp`.`client_id`) FROM `disp` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` WHERE `account`.`frequency` = 'POPLATEK TYDNE' AND `disp`.`type` = 'OWNER'
SELECT `client_id` FROM `disp` WHERE `type` = 'DISPONENT' AND `account_id` IN (SELECT `account_id` FROM `account` WHERE `frequency` = 'POPLATEK PO OBRATU')
SELECT `account`.`account_id` FROM `account` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE STRFTIME('%Y', `loan`.`date`) = '1997' AND `loan`.`status` = 'A' AND `account`.`frequency` = 'POPLATEK TYDNE' ORDER BY `loan`.`amount` ASC LIMIT 1
SELECT `account`.`account_id` FROM `account` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `loan`.`duration` > 12 AND STRFTIME('%Y', `account`.`date`) = '1993' AND `loan`.`status` = 'A' ORDER BY `loan`.`amount` DESC LIMIT 1
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' AND `client`.`birth_date` < '1950-01-01' AND `district`.`a2` = 'Sokolov'
SELECT `account_id` FROM `trans` WHERE STRFTIME('%Y', `date`) = '1995' ORDER BY `date` ASC LIMIT 1
SELECT DISTINCT `account`.`account_id` FROM `account` INNER JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `account`.`date` < '1997-01-01' AND `trans`.`amount` > 3000
SELECT `client`.`client_id` FROM `card` INNER JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `card`.`issued` = '1994-03-03'
SELECT `account`.`date` FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` WHERE `trans`.`amount` = 840 AND `trans`.`date` = '1998-10-14'
SELECT `district`.`district_id` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`date` = '1994-08-25'
SELECT MAX(`T1`.`amount`) FROM `trans` AS `T1` INNER JOIN `disp` AS `T2` ON `T1`.`account_id` = `T2`.`account_id` INNER JOIN `card` AS `T3` ON `T2`.`disp_id` = `T3`.`disp_id` WHERE `T3`.`issued` = '1996-10-21'
SELECT `client`.`gender` FROM `client` INNER JOIN `account` ON `client`.`district_id` = `account`.`district_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`a11` = (SELECT MAX(`a11`) FROM `district`) ORDER BY `client`.`birth_date` ASC LIMIT 1
SELECT t.amount FROM trans t JOIN (SELECT a.account_id FROM account a JOIN loan l ON a.account_id = l.account_id ORDER BY l.amount DESC LIMIT 1) AS max_loan_account ON t.account_id = max_loan_account.account_id ORDER BY t.date ASC LIMIT 1
SELECT COUNT(T1.`client_id`) FROM `client` AS T1 INNER JOIN `disp` AS T2 ON T1.`client_id` = T2.`client_id` INNER JOIN `account` AS T3 ON T2.`account_id` = T3.`account_id` INNER JOIN `district` AS T4 ON T3.`district_id` = T4.`district_id` WHERE T4.`a2` = 'Jesenik' AND T1.`gender` = 'F'
SELECT t1.`disp_id` FROM `disp` AS t1 INNER JOIN `trans` AS t2 ON t1.`account_id` = t2.`account_id` WHERE t2.`amount` = 5100 AND t2.`date` = '1998-09-02'
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`a2` = 'Litomerice' AND STRFTIME('%Y', `account`.`date`) = '1996'
SELECT `district`.`a2` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' AND `client`.`birth_date` = '1976-01-29'
SELECT `client`.`birth_date` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `loan` ON `disp`.`account_id` = `loan`.`account_id` WHERE `loan`.`amount` = 98832 AND `loan`.`date` = '1996-01-03'
SELECT T1.`account_id` FROM `account` AS T1 INNER JOIN `disp` AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN `client` AS T3 ON T2.`client_id` = T3.`client_id` INNER JOIN `district` AS T4 ON T1.`district_id` = T4.`district_id` WHERE T4.`a3` = 'Prague' ORDER BY T1.`date` ASC LIMIT 1
SELECT CAST(SUM(CASE WHEN `gender` = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`client_id`) FROM `client` WHERE `district_id` = (SELECT `district_id` FROM `district` WHERE `a3` = 'south Bohemia' ORDER BY `a4` DESC LIMIT 1)
SELECT ((t2.balance - t1.balance) / t1.balance) * 100 AS increase_rate FROM trans AS t1 JOIN trans AS t2 ON t1.account_id = t2.account_id WHERE t1.date = '1993-03-22' AND t2.date = '1998-12-27' AND t1.account_id = (SELECT l.account_id FROM loan AS l JOIN account AS a ON l.account_id = a.account_id WHERE l.date = (SELECT MIN(date) FROM loan WHERE date >= '1993-07-05') LIMIT 1)
SELECT SUM(CASE WHEN `status` = 'A' THEN `amount` ELSE 0 END) * 100.0 / SUM(`amount`) FROM `loan`
SELECT CAST(SUM(IIF(`status` = 'A', 1, 0)) AS REAL) * 100 / COUNT(`account_id`) FROM `loan` WHERE `amount` < 100000
SELECT `account`.`account_id`, `district`.`a2`, `district`.`a3` FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `account`.`date` LIKE '1993%' AND `account`.`frequency` = 'POPLATEK PO OBRATU'
SELECT DISTINCT `client`.`client_id`, `disp`.`account_id`, `account`.`frequency` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `district`.`a3` = 'east Bohemia' AND `account`.`date` BETWEEN '1995-01-01' AND '2000-12-31' AND `disp`.`type` = 'OWNER'
SELECT `account`.`account_id`, `account`.`date` FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`a2` = 'Prachatice'
SELECT `district`.`a2`, `district`.`a3` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`loan_id` = 4990
SELECT `account`.`account_id`, `district`.`a2`, `district`.`a3` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`amount` > 300000
SELECT `loan`.`loan_id`, `district`.`a3`, `district`.`a11` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`duration` = 60
SELECT `district`.`a3`, ((`district`.`a13` - `district`.`a12`) / `district`.`a12`) * 100 AS `unemployment_increment_rate` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`status` = 'D'
SELECT CAST(SUM(IIF(D.a2 = 'Decin' AND strftime('%Y', A.date) = '1993', 1, 0)) AS REAL) * 100 / COUNT(A.account_id) FROM account AS A INNER JOIN district AS D ON A.district_id = D.district_id WHERE strftime('%Y', A.date) = '1993'
SELECT `account_id` FROM `account` WHERE `frequency` = 'POPLATEK MESICNE'
SELECT `d`.`a2`, COUNT(`c`.`client_id`) AS `female_count` FROM `client` AS `c` INNER JOIN `account` AS `a` ON `c`.`district_id` = `a`.`district_id` INNER JOIN `district` AS `d` ON `a`.`district_id` = `d`.`district_id` WHERE `c`.`gender` = 'F' GROUP BY `d`.`a2` ORDER BY `female_count` DESC LIMIT 9
SELECT `d`.`a2`, `t`.`amount` FROM `trans` AS `t` INNER JOIN `account` AS `a` ON `t`.`account_id` = `a`.`account_id` INNER JOIN `district` AS `d` ON `a`.`district_id` = `d`.`district_id` WHERE `t`.`type` = 'VYDAJ' AND `t`.`date` LIKE '1996-01%' ORDER BY `t`.`amount` DESC LIMIT 10
SELECT COUNT(DISTINCT `disp`.`client_id`) FROM `disp` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` LEFT JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `district`.`a3` = 'South Bohemia' AND `card`.`card_id` IS NULL
SELECT `d`.`a3` FROM `loan` AS `l` INNER JOIN `account` AS `a` ON `l`.`account_id` = `a`.`account_id` INNER JOIN `district` AS `d` ON `a`.`district_id` = `d`.`district_id` WHERE `l`.`status` = 'C' GROUP BY `d`.`a3` ORDER BY COUNT(`l`.`loan_id`) DESC LIMIT 1
SELECT AVG(`loan`.`amount`) FROM `loan` INNER JOIN `disp` ON `loan`.`account_id` = `disp`.`account_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `client`.`gender` = 'M'
SELECT `a3`, `a2` FROM `district` ORDER BY `a13` DESC LIMIT 1
SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.a16 = (SELECT MAX(a16) FROM district)
SELECT COUNT(DISTINCT T1.`account_id`) FROM `account` AS T1 INNER JOIN `disp` AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN `trans` AS T3 ON T1.`account_id` = T3.`account_id` WHERE T3.`operation` = 'VYBER KARTOU' AND T3.`balance` < 0 AND T1.`frequency` = 'POPLATEK MESICNE'
SELECT COUNT(DISTINCT `loan`.`loan_id`) FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `loan`.`amount` >= 250000 AND `loan`.`status` = 'A' AND `account`.`frequency` = 'POPLATEK MESICNE' AND `loan`.`date` BETWEEN '1995-01-01' AND '1997-12-31'
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `loan`.`status` IN ('C', 'D') AND `account`.`district_id` = 1
SELECT COUNT(`client`.`client_id`) FROM `district` INNER JOIN `client` ON `district`.`district_id` = `client`.`district_id` WHERE `district`.`a15` = (SELECT DISTINCT `a15` FROM `district` ORDER BY `a15` DESC LIMIT 1 OFFSET 1) AND `client`.`gender` = 'M'
SELECT COUNT(`card`.`card_id`) FROM `card` INNER JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` WHERE `card`.`type` = 'gold' AND `disp`.`type` = 'OWNER'
SELECT COUNT(*) FROM `account` AS A INNER JOIN `district` AS D ON A.`district_id` = D.`district_id` WHERE D.`a2` = 'Pisek'
SELECT DISTINCT T3.a3 FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.amount > 10000 AND T1.date LIKE '1997%'
SELECT DISTINCT `order`.`account_id` FROM `order` INNER JOIN `account` ON `order`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `order`.`k_symbol` = 'SIPO' AND `district`.`a2` = 'Pisek'
SELECT DISTINCT `account`.`account_id` FROM `account` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`type` = 'gold'
SELECT AVG(`amount`) FROM `trans` WHERE `operation` = 'VYBER KARTOU' AND STRFTIME('%Y', `date`) = '2021' GROUP BY STRFTIME('%m', `date`)
SELECT DISTINCT `disp`.`client_id` FROM `trans` INNER JOIN `card` ON `trans`.`account_id` = `card`.`disp_id` INNER JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` WHERE `trans`.`operation` = 'VYBER KARTOU' AND STRFTIME('%Y', `trans`.`date`) = '1998' AND `trans`.`amount` < (SELECT AVG(`amount`) FROM `trans` WHERE `operation` = 'VYBER KARTOU' AND STRFTIME('%Y', `date`) = '1998')
SELECT DISTINCT `client`.`client_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` INNER JOIN `loan` ON `disp`.`account_id` = `loan`.`account_id` WHERE `client`.`gender` = 'F'
SELECT COUNT(DISTINCT `disp`.`account_id`) FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' AND `district`.`a3` LIKE '%south Bohemia%'
SELECT `account`.`account_id` FROM `account` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `district`.`a2` = 'Tabor' AND `disp`.`type` = 'OWNER'
SELECT DISTINCT `disp`.`type` FROM `disp` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `disp`.`type` != 'OWNER' AND `district`.`a11` > 8000 AND `district`.`a11` <= 9000
SELECT COUNT(DISTINCT T1.account_id) FROM `account` AS T1 INNER JOIN `district` AS T2 ON T1.district_id = T2.district_id INNER JOIN `trans` AS T3 ON T1.account_id = T3.account_id WHERE T2.a3 = 'North Bohemia' AND T3.bank = 'AB'
SELECT DISTINCT `district`.`a2` FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `trans`.`type` = 'VYDAJ'
SELECT AVG(`d`.`a15`) FROM `district` AS `d` INNER JOIN `account` AS `a` ON `d`.`district_id` = `a`.`district_id` WHERE `d`.`a15` > 4000 AND strftime('%Y', `a`.`date`) >= '1997'
SELECT COUNT(`card`.`card_id`) FROM `card` JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` WHERE `card`.`type` = 'classic' AND `disp`.`type` = 'OWNER'
SELECT COUNT(T1.gender) FROM `client` AS T1 INNER JOIN `district` AS T2 ON T1.district_id = T2.district_id WHERE T2.a2 = 'Hl.m. Praha' AND T1.gender = 'M'
SELECT (COUNT(CASE WHEN `type` = 'gold' AND `issued` < '1998-01-01' THEN 1 END) * 100.0 / COUNT(*)) AS percent_gold FROM `card`
SELECT `client`.`client_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `loan` ON `disp`.`account_id` = `loan`.`account_id` WHERE `disp`.`type` = 'OWNER' ORDER BY `loan`.`amount` DESC LIMIT 1
SELECT `d`.`a15` FROM `account` AS `a` INNER JOIN `district` AS `d` ON `a`.`district_id` = `d`.`district_id` WHERE `a`.`account_id` = 532
SELECT `account`.`district_id` FROM `order` INNER JOIN `account` ON `order`.`account_id` = `account`.`account_id` WHERE `order`.`order_id` = 33333
SELECT `trans_id`, `account_id`, `date`, `amount`, `balance` FROM `trans` WHERE `operation` = 'VYBER' AND `account_id` IN (SELECT `account_id` FROM `disp` WHERE `client_id` = 3356)
SELECT COUNT(`loan`.`loan_id`) FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `account`.`frequency` = 'POPLATEK TYDNE' AND `loan`.`amount` < 200000
SELECT DISTINCT `card`.`type` FROM `card` INNER JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` WHERE `disp`.`client_id` = 13539
SELECT `district`.`a3` FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`client_id` = 3541
SELECT `d`.`a3` FROM `loan` AS `l` INNER JOIN `account` AS `a` ON `l`.`account_id` = `a`.`account_id` INNER JOIN `district` AS `d` ON `a`.`district_id` = `d`.`district_id` WHERE `l`.`status` = 'A' GROUP BY `d`.`a3` ORDER BY COUNT(`a`.`account_id`) DESC LIMIT 1
SELECT `client`.`client_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `order` ON `disp`.`account_id` = `order`.`account_id` WHERE `order`.`order_id` = 32423
SELECT `trans`.* FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` WHERE `account`.`district_id` = 5
SELECT COUNT(T1.`account_id`) FROM `account` AS T1 INNER JOIN `district` AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`a2` = 'Jesenik'
SELECT DISTINCT `client`.`client_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`type` = 'junior' AND `card`.`issued` >= '1997-01-01'
SELECT CAST(SUM(CASE WHEN `client`.`gender` = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`client`.`gender`) FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`a11` > 10000
SELECT (SUM(CASE WHEN STRFTIME('%Y', L.date) = '1997' THEN L.amount ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', L.date) = '1996' THEN L.amount ELSE 0 END)) * 100.0 / SUM(CASE WHEN STRFTIME('%Y', L.date) = '1996' THEN L.amount ELSE 0 END) AS growth_rate FROM loan AS L INNER JOIN disp AS D ON L.account_id = D.account_id INNER JOIN client AS C ON D.client_id = C.client_id WHERE C.gender = 'M'
SELECT COUNT(`trans_id`) FROM `trans` WHERE `operation` = 'VYBER KARTOU' AND `date` > '1995-12-31'
SELECT (SELECT `a16` FROM `district` WHERE `a3` = 'north Bohemia') - (SELECT `a16` FROM `district` WHERE `a3` = 'east Bohemia') AS `crime_difference`
SELECT COUNT(*) FROM `disp` WHERE `type` IN ('OWNER', 'DISPONENT') AND `account_id` BETWEEN 1 AND 10
SELECT `frequency` FROM `account` WHERE `account_id` = 3; SELECT `k_symbol` FROM `trans` WHERE `account_id` = 3 AND `amount` = -3539;
SELECT STRFTIME('%Y', `client`.`birth_date`) AS `birth_year` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` WHERE `disp`.`account_id` = 130 AND `disp`.`type` = 'OWNER'
SELECT COUNT(*) FROM `account` AS T1 INNER JOIN `disp` AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`type` = 'OWNER' AND T1.`frequency` = 'POPLATEK PO OBRATU'
SELECT l.amount, l.status FROM loan l JOIN disp d ON l.account_id = d.account_id WHERE d.client_id = '992'
SELECT SUM(T2.balance), T3.gender FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.trans_id = 851 AND T2.client_id = 4
SELECT DISTINCT `card`.`type` FROM `card` INNER JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` WHERE `disp`.`client_id` = 9
SELECT SUM(t.amount) FROM `trans` t INNER JOIN `disp` d ON t.account_id = d.account_id WHERE d.client_id = 617 AND SUBSTR(t.date, 1, 4) = '1998'
SELECT `client`.`client_id`, `client`.`birth_date` FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `account` ON `disp`.`account_id` = `account`.`account_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `client`.`birth_date` BETWEEN '1983-01-01' AND '1987-12-31' AND `district`.`a3` = 'East Bohemia'
SELECT `client`.`client_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `loan` ON `disp`.`account_id` = `loan`.`account_id` WHERE `client`.`gender` = 'F' ORDER BY `loan`.`amount` DESC LIMIT 3
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `order` ON `disp`.`account_id` = `order`.`account_id` WHERE `client`.`gender` = 'M' AND `client`.`birth_date` BETWEEN '1974-01-01' AND '1976-12-31' AND `order`.`k_symbol` = 'SIPO' AND `order`.`amount` > 4000
SELECT COUNT(T1.account_id) FROM `account` AS T1 INNER JOIN `district` AS T2 ON T1.district_id = T2.district_id WHERE T2.a2 = 'Beroun' AND STRFTIME('%Y', T1.date) > '1996'
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `client`.`gender` = 'F' AND `card`.`type` = 'junior'
SELECT CAST(COUNT(CASE WHEN c.`gender` = 'F' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(c.`client_id`) FROM `client` AS c INNER JOIN `disp` AS d ON c.`client_id` = d.`client_id` INNER JOIN `account` AS a ON d.`account_id` = a.`account_id` INNER JOIN `district` AS dis ON a.`district_id` = dis.`district_id` WHERE dis.`a3` = 'Prague'
SELECT CAST(SUM(CASE WHEN T2.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.gender) FROM account AS T1 INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS T2 ON T3.client_id = T2.client_id WHERE T1.frequency = 'POPLATEK TYDNE'
SELECT COUNT(DISTINCT `disp`.`client_id`) FROM `disp` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` WHERE `account`.`frequency` = 'POPLATEK TYDNE' AND `disp`.`type` = 'OWNER'
SELECT `account_id` FROM `loan` WHERE `duration` > 24 AND `status` = 'A' AND `account_id` IN (SELECT `account_id` FROM `account` WHERE `date` < '1997-01-01') ORDER BY `amount` ASC LIMIT 1
SELECT `a`.`account_id` FROM `client` AS `c` INNER JOIN `disp` AS `d` ON `c`.`client_id` = `d`.`client_id` INNER JOIN `account` AS `a` ON `d`.`account_id` = `a`.`account_id` INNER JOIN `district` AS `dist` ON `c`.`district_id` = `dist`.`district_id` WHERE `c`.`gender` = 'F' ORDER BY `c`.`birth_date` ASC, `dist`.`a11` ASC LIMIT 1
SELECT COUNT(*) FROM `client` AS C INNER JOIN `district` AS D ON C.`district_id` = D.`district_id` WHERE C.`birth_date` LIKE '1920%' AND D.`a3` = 'East Bohemia'
SELECT COUNT(`loan`.`loan_id`) FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `loan`.`duration` = 24 AND `account`.`frequency` = 'POPLATEK TYDNE'
SELECT AVG(`loan`.`amount`) FROM `loan` JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `loan`.`status` IN ('C', 'D') AND `account`.`frequency` = 'POPLATEK PO OBRATU'
SELECT DISTINCT `client`.`client_id`, `district`.`a3` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `disp`.`type` = 'OWNER'
SELECT `client`.`client_id`, (strftime('%Y', 'now') - strftime('%Y', `client`.`birth_date`)) AS `age` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`type` = 'gold' AND `disp`.`type` = 'OWNER'
SELECT `bond_type` FROM `bond` GROUP BY `bond_type` ORDER BY COUNT(`bond_type`) DESC LIMIT 1
SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' AND T1.element = 'cl'
SELECT AVG(o_count) FROM (SELECT `molecule_id`, SUM(CASE WHEN `element` = 'o' THEN 1 ELSE 0 END) AS o_count FROM `atom` WHERE `molecule_id` IN (SELECT DISTINCT `molecule_id` FROM `bond` WHERE `bond_type` = '-') GROUP BY `molecule_id`)
SELECT CAST(SUM(CASE WHEN T2.bond_type = '-' THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'
SELECT COUNT(DISTINCT T3.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.element = 'na' AND T3.label = '-'
SELECT DISTINCT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '#' AND `molecule`.`label` = '+'
SELECT SUM(CASE WHEN `a`.`element` = 'c' THEN 1 ELSE 0 END) * 1.0 / COUNT(`a`.`atom_id`) * 100 AS percentage FROM `atom` AS `a` INNER JOIN `bond` AS `b` ON `a`.`molecule_id` = `b`.`molecule_id` WHERE `b`.`bond_type` = '='
SELECT COUNT(`bond_id`) FROM `bond` WHERE `bond_type` = '#';
SELECT COUNT(`atom_id`) FROM `atom` WHERE `element` != 'br'
SELECT COUNT(`molecule_id`) FROM `molecule` WHERE `molecule_id` BETWEEN 'TR000' AND 'TR099' AND `label` = '+'
SELECT DISTINCT `molecule_id` FROM `atom` WHERE `element` = 'c'
SELECT DISTINCT T1.`element` FROM `atom` AS T1 INNER JOIN `connected` AS T2 ON T1.`atom_id` = T2.`atom_id` OR T1.`atom_id` = T2.`atom_id2` WHERE T2.`bond_id` = 'TR004_8_9'
SELECT DISTINCT a1.`element` FROM `atom` AS a1 INNER JOIN `connected` AS c ON a1.`atom_id` = c.`atom_id` INNER JOIN `bond` AS b ON c.`bond_id` = b.`bond_id` WHERE b.`bond_type` = '=' UNION SELECT DISTINCT a2.`element` FROM `atom` AS a2 INNER JOIN `connected` AS c ON a2.`atom_id` = c.`atom_id2` INNER JOIN `bond` AS b ON c.`bond_id` = b.`bond_id` WHERE b.`bond_type` = '='
SELECT `m`.`label` FROM `molecule` AS `m` INNER JOIN `atom` AS `a` ON `m`.`molecule_id` = `a`.`molecule_id` WHERE `a`.`element` = 'h' GROUP BY `m`.`label` ORDER BY COUNT(`a`.`atom_id`) DESC LIMIT 1
SELECT DISTINCT `b`.`bond_type` FROM `connected` AS `c` INNER JOIN `atom` AS `a` ON `c`.`atom_id` = `a`.`atom_id` OR `c`.`atom_id2` = `a`.`atom_id` INNER JOIN `bond` AS `b` ON `c`.`bond_id` = `b`.`bond_id` WHERE `a`.`element` = 'cl'
SELECT DISTINCT A1.`atom_id`, A2.`atom_id` FROM `connected` AS C INNER JOIN `bond` AS B ON C.`bond_id` = B.`bond_id` INNER JOIN `atom` AS A1 ON C.`atom_id` = A1.`atom_id` INNER JOIN `atom` AS A2 ON C.`atom_id2` = A2.`atom_id` WHERE B.`bond_type` = '-'
SELECT DISTINCT `c`.`atom_id`, `c`.`atom_id2` FROM `connected` AS `c` INNER JOIN `bond` AS `b` ON `c`.`bond_id` = `b`.`bond_id` INNER JOIN `molecule` AS `m` ON `b`.`molecule_id` = `m`.`molecule_id` WHERE `m`.`label` = '-'
SELECT `element` FROM `atom` WHERE `molecule_id` IN (SELECT `molecule_id` FROM `molecule` WHERE `label` = '-') GROUP BY `element` ORDER BY COUNT(`element`) ASC LIMIT 1
SELECT `bond`.`bond_type` FROM `connected` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE (`connected`.`atom_id` = 'TR004_8' AND `connected`.`atom_id2` = 'TR004_20') OR (`connected`.`atom_id` = 'TR004_20' AND `connected`.`atom_id2` = 'TR004_8')
SELECT DISTINCT `molecule`.`label` FROM `molecule` WHERE `molecule`.`label` NOT IN (SELECT DISTINCT `molecule`.`label` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` != 'sn')
SELECT COUNT(DISTINCT a1.`atom_id`) FROM `atom` AS a1 INNER JOIN `connected` AS c ON a1.`atom_id` = c.`atom_id` INNER JOIN `bond` AS b ON c.`bond_id` = b.`bond_id` INNER JOIN `atom` AS a2 ON c.`atom_id2` = a2.`atom_id` WHERE b.`bond_type` = '-' AND (a1.`element` = 'i' OR a1.`element` = 's' OR a2.`element` = 'i' OR a2.`element` = 's')
SELECT DISTINCT A1.`atom_id`, A2.`atom_id` FROM `connected` AS C INNER JOIN `bond` AS B ON C.`bond_id` = B.`bond_id` INNER JOIN `atom` AS A1 ON C.`atom_id` = A1.`atom_id` INNER JOIN `atom` AS A2 ON C.`atom_id2` = A2.`atom_id` WHERE B.`bond_type` = '#'
SELECT DISTINCT `atom`.`atom_id2` FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` WHERE `atom`.`molecule_id` = 'TR181'
SELECT 100 - (CAST(SUM(CASE WHEN `a`.`element` = 'f' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT `a`.`atom_id`)) AS percentage FROM `molecule` AS `m` INNER JOIN `atom` AS `a` ON `m`.`molecule_id` = `a`.`molecule_id` WHERE `m`.`label` = '+'
SELECT CAST(SUM(CASE WHEN `b`.`bond_type` = '#' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`b`.`bond_id`) AS `percent` FROM `molecule` AS `m` INNER JOIN `bond` AS `b` ON `m`.`molecule_id` = `b`.`molecule_id` WHERE `m`.`label` = '+'
SELECT `element` FROM `atom` WHERE `molecule_id` = 'TR000' ORDER BY `element` ASC LIMIT 3
SELECT `atom`.`atom_id` FROM `connected` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `connected`.`bond_id` = 'TR001_2_6' AND `atom`.`molecule_id` = 'TR001'
SELECT SUM(CASE WHEN `label` = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN `label` = '-' THEN 1 ELSE 0 END) AS difference FROM `molecule`
SELECT `atom_id`, `atom_id2` FROM `connected` WHERE `bond_id` = 'TR000_2_5'
SELECT `bond_id` FROM `connected` WHERE `atom_id2` = 'TR000_2'
SELECT `molecule`.`molecule_id` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '=' GROUP BY `molecule`.`molecule_id` ORDER BY `molecule`.`molecule_id` ASC LIMIT 5
SELECT CAST(SUM(CASE WHEN `bond_type` = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`bond_id`) AS percent FROM `bond` WHERE `molecule_id` = 'TR008'
SELECT ROUND(CAST(SUM(CASE WHEN `label` = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`molecule_id`), 3) AS percent FROM `molecule`
SELECT CAST(SUM(CASE WHEN `element` = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`atom_id`) AS percent FROM `atom` WHERE `molecule_id` = 'TR206'
SELECT `bond_type` FROM `bond` WHERE `molecule_id` = 'TR000'
SELECT `a`.`element`, `m`.`label` FROM `atom` AS `a` INNER JOIN `molecule` AS `m` ON `a`.`molecule_id` = `m`.`molecule_id` WHERE `m`.`molecule_id` = 'TR060'
SELECT `bond`.`bond_type`, `molecule`.`label` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`molecule_id` = 'TR010' GROUP BY `bond`.`bond_type` ORDER BY COUNT(`bond`.`bond_type`) DESC LIMIT 1
SELECT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `molecule`.`label` = '-' AND `bond`.`bond_type` = '-' GROUP BY `molecule`.`molecule_id` ORDER BY `molecule`.`molecule_id` ASC LIMIT 3
SELECT `bond_id` FROM `bond` WHERE `molecule_id` = 'TR006' ORDER BY `bond_id` ASC LIMIT 2
SELECT COUNT(`bond`.`bond_id`) FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` WHERE `bond`.`molecule_id` = 'TR009' AND (`connected`.`atom_id` = 'TR009_12' OR `connected`.`atom_id2` = 'TR009_12')
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+' AND `atom`.`element` = 'br'
SELECT T2.`bond_type`, T1.`atom_id`, T1.`atom_id2` FROM `connected` AS T1 INNER JOIN `bond` AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T1.`bond_id` = 'TR001_6_9'
SELECT `m`.`molecule_id`, `m`.`label` FROM `atom` AS `a` INNER JOIN `molecule` AS `m` ON `a`.`molecule_id` = `m`.`molecule_id` WHERE `a`.`atom_id` = 'TR001_10'
SELECT COUNT(DISTINCT `molecule_id`) FROM `bond` WHERE `bond_type` = '#';
SELECT COUNT(`bond_id`) FROM `connected` WHERE `atom_id` LIKE 'TR%_19' OR `atom_id2` LIKE 'TR%_19'
SELECT `element` FROM `atom` WHERE `molecule_id` = 'TR004'
SELECT COUNT(`molecule_id`) FROM `molecule` WHERE `label` = '-'
SELECT DISTINCT `molecule`.`molecule_id` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE SUBSTR(`atom`.`atom_id`, 7, 2) BETWEEN '21' AND '25' AND `molecule`.`label` = '+'
SELECT DISTINCT `b`.`bond_id` FROM `bond` AS `b` INNER JOIN `connected` AS `c` ON `b`.`bond_id` = `c`.`bond_id` INNER JOIN `atom` AS `a1` ON `c`.`atom_id` = `a1`.`atom_id` INNER JOIN `atom` AS `a2` ON `c`.`atom_id2` = `a2`.`atom_id` WHERE (`a1`.`element` = 'p' AND `a2`.`element` = 'n') OR (`a1`.`element` = 'n' AND `a2`.`element` = 'p')
SELECT `molecule`.`label` FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '=' GROUP BY `molecule`.`molecule_id` ORDER BY COUNT(`bond`.`bond_id`) DESC LIMIT 1
SELECT CAST(COUNT(DISTINCT `c`.`bond_id`) AS REAL) / COUNT(DISTINCT `a`.`atom_id`) FROM `atom` AS `a` INNER JOIN `connected` AS `c` ON `a`.`atom_id` = `c`.`atom_id` WHERE `a`.`element` = 'i'
SELECT `bond`.`bond_type`, `bond`.`bond_id` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` WHERE SUBSTR(`connected`.`atom_id`, 7, 2) + 0 = 45
SELECT `element` FROM `atom` WHERE `atom_id` NOT IN (SELECT `atom_id` FROM `connected` UNION SELECT `atom_id2` FROM `connected`)
SELECT T1.`atom_id`, T3.`atom_id2` FROM `connected` AS T1 INNER JOIN `bond` AS T2 ON T1.`bond_id` = T2.`bond_id` INNER JOIN `connected` AS T3 ON T1.`bond_id` = T3.`bond_id` WHERE T2.`molecule_id` = 'TR041' AND T2.`bond_type` = '#'
SELECT DISTINCT T1.`element` FROM `atom` AS T1 INNER JOIN `connected` AS T2 ON T1.`atom_id` = T2.`atom_id` WHERE T2.`bond_id` = 'TR144_8_19'
SELECT `molecule_id` FROM `bond` WHERE `bond_type` = '=' AND `molecule_id` IN (SELECT `molecule_id` FROM `molecule` WHERE `label` = '+') GROUP BY `molecule_id` ORDER BY COUNT(`bond_id`) DESC LIMIT 1
SELECT `element` FROM `atom` WHERE `molecule_id` IN (SELECT `molecule_id` FROM `molecule` WHERE `label` = '+') GROUP BY `element` ORDER BY COUNT(`atom_id`) ASC LIMIT 1
SELECT DISTINCT T2.`atom_id2` FROM `connected` AS T1 INNER JOIN `atom` AS T2 ON T1.`atom_id` = T2.`atom_id` WHERE T2.`element` = 'pb'
SELECT DISTINCT `a`.`element` FROM `atom` AS `a` INNER JOIN `connected` AS `c` ON `a`.`atom_id` = `c`.`atom_id` OR `a`.`atom_id` = `c`.`atom_id2` INNER JOIN `bond` AS `b` ON `c`.`bond_id` = `b`.`bond_id` WHERE `b`.`bond_type` = '#'
SELECT CAST(COUNT(b.`bond_id`) AS FLOAT) * 100 / (SELECT COUNT(`bond_id`) FROM `bond`) AS `percentage` FROM `connected` AS c INNER JOIN `atom` AS a1 ON c.`atom_id` = a1.`atom_id` INNER JOIN `atom` AS a2 ON c.`atom_id2` = a2.`atom_id` GROUP BY a1.`element`, a2.`element` ORDER BY COUNT(b.`bond_id`) DESC LIMIT 1
SELECT CAST(SUM(CASE WHEN M.`label` = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(B.`bond_id`) AS proportion FROM `bond` AS B INNER JOIN `molecule` AS M ON B.`molecule_id` = M.`molecule_id` WHERE B.`bond_type` = '-'
SELECT COUNT(*) FROM `atom` WHERE `element` IN ('c', 'h')
SELECT `connected`.`atom_id2` FROM `connected` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `atom`.`element` = 's'
SELECT DISTINCT `b`.`bond_type` FROM `atom` AS `a` INNER JOIN `connected` AS `c` ON `a`.`atom_id` = `c`.`atom_id` INNER JOIN `bond` AS `b` ON `c`.`bond_id` = `b`.`bond_id` WHERE `a`.`element` = 'sn'
SELECT COUNT(DISTINCT `a`.`element`) FROM `atom` AS `a` INNER JOIN `connected` AS `c` ON `a`.`atom_id` = `c`.`atom_id` INNER JOIN `bond` AS `b` ON `c`.`bond_id` = `b`.`bond_id` WHERE `b`.`bond_type` = '-'
SELECT COUNT(DISTINCT `atom`.`atom_id`) FROM `atom` INNER JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '#' AND (`atom`.`element` = 'p' OR `atom`.`element` = 'br')
SELECT `bond`.`bond_id` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT DISTINCT `b`.`molecule_id` FROM `bond` AS `b` INNER JOIN `molecule` AS `m` ON `b`.`molecule_id` = `m`.`molecule_id` WHERE `b`.`bond_type` = '-' AND `m`.`label` = '-'
SELECT CAST(SUM(CASE WHEN `a`.`element` = 'cl' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(`a`.`atom_id`) AS `percent` FROM `atom` AS `a` INNER JOIN `bond` AS `b` ON `a`.`molecule_id` = `b`.`molecule_id` WHERE `b`.`bond_type` = '-'
SELECT `molecule_id`, `label` FROM `molecule` WHERE `molecule_id` IN ('TR000', 'TR001', 'TR002')
SELECT DISTINCT `molecule_id` FROM `molecule` WHERE `label` = '-'
SELECT COUNT(*) FROM `molecule` WHERE `label` = '+' AND `molecule_id` BETWEEN 'TR000' AND 'TR030'
SELECT DISTINCT `bond_type` FROM `bond` WHERE `molecule_id` BETWEEN 'TR000' AND 'TR050'
SELECT DISTINCT a1.`element` FROM `connected` AS c INNER JOIN `atom` AS a1 ON c.`atom_id` = a1.`atom_id` WHERE c.`bond_id` = 'TR001_10_11' UNION SELECT DISTINCT a2.`element` FROM `connected` AS c INNER JOIN `atom` AS a2 ON c.`atom_id2` = a2.`atom_id` WHERE c.`bond_id` = 'TR001_10_11'
SELECT COUNT(DISTINCT `bond`.`bond_id`) FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `atom`.`element` = 'i'
SELECT CASE WHEN COUNT(CASE WHEN `molecule`.`label` = '+' THEN 1 END) > COUNT(CASE WHEN `molecule`.`label` = '-' THEN 1 END) THEN 'Mostly Carcinogenic' ELSE 'Mostly Non-Carcinogenic' END AS `result` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'ca'
SELECT COUNT(DISTINCT T2.element) = 2 AS has_both_elements FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id WHERE T1.bond_id = 'TR001_1_8' AND T2.element IN ('cl', 'c')
SELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.element = 'c' AND T2.bond_type = '#' AND T3.label = '-' LIMIT 2
SELECT CAST(SUM(CASE WHEN `a`.`element` = 'cl' THEN 1 ELSE 0 END) AS REAL) / COUNT(`m`.`molecule_id`) * 100 AS `percentage` FROM `atom` AS `a` INNER JOIN `molecule` AS `m` ON `a`.`molecule_id` = `m`.`molecule_id` WHERE `m`.`label` = '+'
SELECT DISTINCT `element` FROM `atom` WHERE `molecule_id` = 'TR001'
SELECT DISTINCT `molecule_id` FROM `bond` WHERE `bond_type` = ' = '
SELECT `atom_id`, `atom_id2` FROM `connected` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '#'
SELECT DISTINCT T1.`element` FROM `atom` AS T1 INNER JOIN `connected` AS T2 ON T1.`atom_id` = T2.`atom_id` OR T1.`atom_id` = T2.`atom_id2` WHERE T2.`bond_id` = 'TR000_1_2'
SELECT COUNT(DISTINCT `b`.`molecule_id`) FROM `bond` AS `b` INNER JOIN `molecule` AS `m` ON `b`.`molecule_id` = `m`.`molecule_id` WHERE `b`.`bond_type` = '-' AND `m`.`label` = '-'
SELECT `label` FROM `molecule` WHERE `molecule_id` = (SELECT `molecule_id` FROM `bond` WHERE `bond_id` = 'TR001_10_11')
SELECT `b`.`bond_id`, CASE WHEN `m`.`label` = '+' THEN 'carcinogenic' ELSE 'non-carcinogenic' END AS `carcinogenic_status` FROM `bond` AS `b` INNER JOIN `molecule` AS `m` ON `b`.`molecule_id` = `m`.`molecule_id` WHERE `b`.`bond_type` = '#'
SELECT `element`, COUNT(*) AS `count` FROM `atom` WHERE `molecule_id` IN (SELECT `molecule_id` FROM `molecule` WHERE `label` = '+') AND SUBSTR(`atom_id`, 7, 1) = '4' GROUP BY `element`
SELECT CAST(SUM(CASE WHEN `element` = 'h' THEN 1 ELSE 0 END) AS REAL) / COUNT(`element`) AS ratio, `label` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`molecule_id` = 'TR006' GROUP BY `label`
SELECT DISTINCT T3.label FROM `atom` AS T1 INNER JOIN `molecule` AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.element = 'ca'
SELECT DISTINCT `bond`.`bond_type` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `atom`.`element` = 'c'
SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR001_10_11'
SELECT CAST(COUNT(DISTINCT T1.molecule_id) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#';
SELECT CAST(SUM(CASE WHEN `bond_type` = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`bond_id`) AS `percent` FROM `bond` WHERE `molecule_id` = 'TR047'
SELECT `m`.`label` FROM `molecule` AS `m` INNER JOIN `atom` AS `a` ON `m`.`molecule_id` = `a`.`molecule_id` WHERE `a`.`atom_id` = 'TR001_1'
SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR151'
SELECT `element` FROM `atom` WHERE `molecule_id` = 'TR151' AND `element` IN ('cl', 'br', 'f', 'i', 'sn', 'pb', 'te')
SELECT COUNT(*) FROM `molecule` WHERE `label` = '+'
SELECT `atom_id` FROM `atom` WHERE `element` = 'c' AND substr(`molecule_id`, 3, 3) >= 10 AND substr(`molecule_id`, 3, 3) <= 50
SELECT COUNT(`atom`.`atom_id`) FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT `bond`.`bond_id` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '=' AND `molecule`.`label` = '+'
SELECT COUNT(`atom`.`atom_id`) FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'h' AND `molecule`.`label` = '+'
SELECT `b`.`molecule_id` FROM `bond` AS `b` INNER JOIN `connected` AS `c` ON `b`.`bond_id` = `c`.`bond_id` WHERE `c`.`atom_id` = 'TR000_1' AND `b`.`bond_id` = 'TR000_1_2'
SELECT `atom`.`atom_id` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'c' AND `molecule`.`label` = '-'
SELECT CAST(SUM(CASE WHEN `molecule`.`label` = '+' AND `atom`.`element` = 'h' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(`molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id`
SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR124' AND `label` = '+'
SELECT `atom`.`atom_id` FROM `atom` WHERE `atom`.`molecule_id` = 'TR186'
SELECT `bond_type` FROM `bond` WHERE `bond_id` = 'TR007_4_19'
SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR000_2_4'
SELECT COUNT(T1.bond_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' AND T2.molecule_id = 'TR006' AND T2.label = '+'
SELECT DISTINCT `molecule`.`molecule_id`, `atom`.`element` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT `b`.`bond_id`, `a1`.`element` AS `atom1_element`, `a2`.`element` AS `atom2_element` FROM `bond` AS `b` INNER JOIN `connected` AS `c` ON `b`.`bond_id` = `c`.`bond_id` INNER JOIN `atom` AS `a1` ON `c`.`atom_id` = `a1`.`atom_id` INNER JOIN `atom` AS `a2` ON `c`.`atom_id2` = `a2`.`atom_id` WHERE `b`.`bond_type` = '-'
SELECT DISTINCT m.`molecule_id`, a.`element` FROM `molecule` AS m INNER JOIN `bond` AS b ON m.`molecule_id` = b.`molecule_id` INNER JOIN `atom` AS a ON m.`molecule_id` = a.`molecule_id` WHERE b.`bond_type` = '#'
SELECT DISTINCT T1.element FROM `atom` AS T1 INNER JOIN `connected` AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR000_2_3'
SELECT COUNT(DISTINCT `bond`.`bond_id`) FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` OR `connected`.`atom_id2` = `atom`.`atom_id` WHERE `atom`.`element` = 'cl'
SELECT `atom`.`atom_id`, COUNT(DISTINCT `bond`.`bond_type`) AS `bond_type_count` FROM `atom` INNER JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`molecule_id` = 'TR346' GROUP BY `atom`.`atom_id`
SELECT COUNT(DISTINCT T1.molecule_id), COUNT(DISTINCT T2.molecule_id) FROM bond AS T1 LEFT JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' AND T2.label = '+'
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` LEFT JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` LEFT JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`element` != 's' AND `bond`.`bond_type` != '='
SELECT `m`.`label` FROM `bond` AS `b` INNER JOIN `molecule` AS `m` ON `b`.`molecule_id` = `m`.`molecule_id` WHERE `b`.`bond_id` = 'TR001_2_4'
SELECT COUNT(`atom_id`) FROM `atom` WHERE `molecule_id` = 'TR001'
SELECT COUNT(*) FROM `bond` WHERE `bond_type` = '-'
SELECT DISTINCT `m`.`molecule_id` FROM `molecule` AS `m` INNER JOIN `atom` AS `a` ON `m`.`molecule_id` = `a`.`molecule_id` WHERE `a`.`element` = 'cl' AND `m`.`label` = '+'
SELECT DISTINCT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'c' AND `molecule`.`label` = '-'
SELECT CAST(SUM(CASE WHEN M.`label` = '+' AND A.`element` = 'cl' THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT M.`molecule_id`) * 100 AS percentage FROM `molecule` AS M INNER JOIN `atom` AS A ON M.`molecule_id` = A.`molecule_id` WHERE M.`label` = '+'
SELECT `molecule_id` FROM `bond` WHERE `bond_id` = 'TR001_1_7'
SELECT COUNT(DISTINCT `atom`.`element`) FROM `connected` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `connected`.`bond_id` = 'TR001_3_4'
SELECT `bond`.`bond_type` FROM `connected` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `connected`.`atom_id` = 'TR000_1' AND `connected`.`atom_id2` = 'TR000_2'
SELECT T4.`label` FROM `atom` AS T1 INNER JOIN `connected` AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN `atom` AS T3 ON T2.`atom_id2` = T3.`atom_id` INNER JOIN `molecule` AS T4 ON T1.`molecule_id` = T4.`molecule_id` WHERE T1.`atom_id` = 'TR000_2' AND T3.`atom_id` = 'TR000_4'
SELECT `element` FROM `atom` WHERE `atom_id` = 'TR000_1'
SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR000'
SELECT CAST(SUM(CASE WHEN T2.bond_type = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) AS percentage FROM atom AS T1 INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN bond AS T2 ON T3.bond_id = T2.bond_id
SELECT COUNT(DISTINCT T1.`molecule_id`) FROM `atom` AS T1 INNER JOIN `molecule` AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'n' AND T2.`label` = '+'
SELECT DISTINCT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` OR `atom`.`atom_id` = `connected`.`atom_id2` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `atom`.`element` = 's' AND `bond`.`bond_type` = '='
SELECT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '-' GROUP BY `molecule`.`molecule_id` HAVING COUNT(`atom`.`atom_id`) > 5
SELECT DISTINCT `element` FROM `atom` WHERE `molecule_id` = 'TR024' AND `atom_id` IN (SELECT `atom_id` FROM `bond` WHERE `molecule_id` = 'TR024' AND `bond_type` = '=')
SELECT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+' GROUP BY `molecule`.`molecule_id` ORDER BY COUNT(`atom`.`atom_id`) DESC LIMIT 1
SELECT CAST(SUM(CASE WHEN m.`label` = '+' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(DISTINCT m.`molecule_id`) FROM `molecule` AS m INNER JOIN `atom` AS a ON m.`molecule_id` = a.`molecule_id` INNER JOIN `connected` AS c ON a.`atom_id` = c.`atom_id` INNER JOIN `bond` AS b ON c.`bond_id` = b.`bond_id` WHERE a.`element` = 'h' AND b.`bond_type` = '#'
SELECT COUNT(`molecule_id`) FROM `molecule` WHERE `label` = '+'
SELECT COUNT(DISTINCT `bond`.`molecule_id`) FROM `bond` WHERE `bond`.`bond_type` = '-' AND `bond`.`molecule_id` BETWEEN 'TR004' AND 'TR010'
SELECT COUNT(`atom_id`) FROM `atom` WHERE `molecule_id` = 'TR008' AND `element` = 'c'
SELECT `element` FROM `atom` WHERE `atom_id` = 'TR004_7' AND `molecule_id` IN (SELECT `molecule_id` FROM `molecule` WHERE `label` = '-')
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `atom`.`element` = 'o' AND `bond`.`bond_type` = '='
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '#' AND `molecule`.`label` = '-'
SELECT T1.`element`, T2.`bond_type` FROM `atom` AS T1 INNER JOIN `bond` AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`molecule_id` = 'TR002'
SELECT `atom`.`atom_id` FROM `atom` JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` WHERE `atom`.`element` = 'c' AND `bond`.`bond_type` = '=' AND `atom`.`molecule_id` = 'TR012'
SELECT `atom`.`atom_id` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+' AND `atom`.`element` = 'o'
SELECT `name` FROM `cards` WHERE `cardkingdomfoilid` IS NOT NULL AND `cardkingdomid` IS NOT NULL
SELECT `name` FROM `cards` WHERE `bordercolor` = 'borderless' AND `cardkingdomfoilid` IS NULL AND `cardkingdomid` IS NOT NULL
SELECT `name` FROM `cards` WHERE `faceconvertedmanacost` = (SELECT MAX(`faceconvertedmanacost`) FROM `cards`)
SELECT `name` FROM `cards` WHERE `frameversion` = 2015 AND `edhrecrank` < 100
SELECT `cards`.`name` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`rarity` = 'mythic' AND `legalities`.`format` = 'gladiator' AND `legalities`.`status` = 'Banned'
SELECT T3.`status` FROM `cards` AS T1 INNER JOIN `legalities` AS T3 ON T1.`uuid` = T3.`uuid` WHERE T1.`types` = 'Artifact' AND T1.`side` IS NULL AND T3.`format` = 'vintage'
SELECT `cards`.`id`, `cards`.`artist` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE (`cards`.`power` = '*' OR `cards`.`power` IS NULL) AND `legalities`.`format` = 'commander' AND `legalities`.`status` = 'Legal'
SELECT `c`.`id`, `r`.`text`, `c`.`hascontentwarning` FROM `cards` AS `c` INNER JOIN `rulings` AS `r` ON `c`.`uuid` = `r`.`uuid` WHERE `c`.`artist` = 'Stephen Daniele'
SELECT T2.`text` FROM `cards` AS T1 INNER JOIN `rulings` AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`name` = 'Sublime Epiphany' AND T1.`number` = '74s'
SELECT `c`.`name`, `c`.`artist`, `c`.`ispromo` FROM `cards` AS `c` INNER JOIN `rulings` AS `r` ON `c`.`uuid` = `r`.`uuid` GROUP BY `c`.`uuid` ORDER BY COUNT(`r`.`uuid`) DESC LIMIT 1
SELECT `language` FROM `foreign_data` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Annul' AND `number` = '29')
SELECT `cards`.`name` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Japanese'
SELECT CAST(SUM(CASE WHEN `language` = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`id`) FROM `set_translations`
SELECT `sets`.`name`, `sets`.`totalsetsize` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setcode` WHERE `set_translations`.`language` = 'Italian'
SELECT COUNT(DISTINCT `type`) FROM `cards` WHERE `artist` = 'Aaron Boyd'
SELECT `keywords` FROM `cards` WHERE `name` = 'Angel of Mercy';
SELECT COUNT(*) FROM `cards` WHERE `power` = '*'
SELECT `promotypes` FROM `cards` WHERE `name` = 'Duress'
SELECT `bordercolor` FROM `cards` WHERE `name` = 'Ancestor''s Chosen'
SELECT `originaltype` FROM `cards` WHERE `name` = 'Ancestor''s Chosen'
SELECT DISTINCT `set_translations`.`language` FROM `cards` INNER JOIN `set_translations` ON `cards`.`setcode` = `set_translations`.`setcode` WHERE `cards`.`name` = 'Angel of Mercy'
SELECT COUNT(`cards`.`id`) FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`status` = 'restricted' AND `cards`.`istextless` = 0
SELECT `text` FROM `rulings` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Condemn')
SELECT COUNT(`cards`.`id`) FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`status` = 'restricted' AND `cards`.`isstarter` = 1
SELECT T1.`status` FROM `legalities` AS T1 INNER JOIN `cards` AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`name` = 'Cloudchaser Eagle'
SELECT `type` FROM `cards` WHERE `name` = 'Benalish Knight'
SELECT DISTINCT `format` FROM `legalities` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Benalish Knight')
SELECT DISTINCT `c`.`artist` FROM `cards` AS `c` INNER JOIN `foreign_data` AS `fd` ON `c`.`uuid` = `fd`.`uuid` WHERE `fd`.`language` = 'Phyrexian'
SELECT CAST(COUNT(CASE WHEN `bordercolor` = 'borderless' THEN `id` ELSE NULL END) AS REAL) * 100 / COUNT(`id`) FROM `cards`
SELECT COUNT(*) FROM `foreign_data` AS T1 INNER JOIN `cards` AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`language` = 'German' AND T2.`isreprint` = 1
SELECT COUNT(DISTINCT `cards`.`id`) FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`bordercolor` = 'borderless' AND `foreign_data`.`language` = 'Russian'
SELECT CAST(SUM(CASE WHEN `fd`.`language` = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`c`.`id`) FROM `cards` AS `c` INNER JOIN `foreign_data` AS `fd` ON `c`.`uuid` = `fd`.`uuid` WHERE `c`.`isstoryspotlight` = 1
SELECT COUNT(`id`) FROM `cards` WHERE `toughness` = 99
SELECT `name` FROM `cards` WHERE `artist` = 'Aaron Boyd'
SELECT COUNT(`id`) FROM `cards` WHERE `bordercolor` = 'black' AND `availability` = 'mtgo'
SELECT `id` FROM `cards` WHERE `convertedmanacost` = 0
SELECT DISTINCT `layout` FROM `cards` WHERE `keywords` LIKE '%Flying%'
SELECT COUNT(*) FROM `cards` WHERE `originaltype` = 'Summon - Angel' AND `subtypes` != 'Angel'
SELECT `id` FROM `cards` WHERE `cardkingdomfoilid` IS NOT NULL AND `cardkingdomid` IS NOT NULL
SELECT `id` FROM `cards` WHERE `dueldeck` = 'a'
SELECT `edhrecrank` FROM `cards` WHERE `frameversion` = 2015
SELECT DISTINCT `artist` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Chinese Simplified'
SELECT `c`.`name` FROM `cards` AS `c` INNER JOIN `foreign_data` AS `fd` ON `c`.`uuid` = `fd`.`uuid` WHERE `c`.`availability` = 'paper' AND `fd`.`language` = 'Japanese'
SELECT COUNT(`cards`.`id`) FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`status` = 'Banned' AND `cards`.`bordercolor` = 'white'
SELECT DISTINCT `legalities`.`uuid`, `foreign_data`.`language` FROM `legalities` INNER JOIN `foreign_data` ON `legalities`.`uuid` = `foreign_data`.`uuid` WHERE `legalities`.`format` = 'legacy'
SELECT `text` FROM `rulings` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Beacon of Immortality')
SELECT COUNT(`cards`.`id`), `legalities`.`status` FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`frameversion` = 'future' GROUP BY `legalities`.`status`
SELECT `colors` FROM `cards` WHERE `setcode` = 'OGW'
SELECT DISTINCT `cards`.`name`, `set_translations`.`language` FROM `cards` INNER JOIN `set_translations` ON `cards`.`setcode` = `set_translations`.`setcode` WHERE `cards`.`setcode` = '10E' AND `cards`.`convertedmanacost` = 5
SELECT `cards`.`name`, `rulings`.`date` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`originaltype` = 'Creature - Elf'
SELECT DISTINCT `cards`.`colors`, `legalities`.`format` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`id` BETWEEN 1 AND 20
SELECT `cards`.`name` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`originaltype` = 'Artifact' AND `cards`.`colors` = 'B'
SELECT `c`.`name` FROM `cards` AS `c` INNER JOIN `rulings` AS `r` ON `c`.`uuid` = `r`.`uuid` WHERE `c`.`rarity` = 'uncommon' GROUP BY `c`.`name` ORDER BY MIN(`r`.`date`) ASC LIMIT 3
SELECT COUNT(`id`) FROM `cards` WHERE `artist` = 'John Avon' AND `cardkingdomfoilid` IS NULL
SELECT COUNT(*) FROM `cards` WHERE `bordercolor` = 'white' AND `cardkingdomfoilid` IS NOT NULL AND `cardkingdomid` IS NOT NULL
SELECT COUNT(`id`) FROM `cards` WHERE `artist` = 'UDON' AND `availability` = 'mtgo' AND `hand` = -1
SELECT COUNT(`id`) FROM `cards` WHERE `frameversion` = 1993 AND `availability` = 'paper' AND `hascontentwarning` = 1
SELECT `manacost` FROM `cards` WHERE `layout` = 'normal' AND `frameversion` = 2003 AND `bordercolor` = 'black' AND `availability` = 'mtgo,paper'
SELECT SUM(`manacost`) FROM `cards` WHERE `artist` = 'Rob Alexander'
SELECT DISTINCT `subtypes`, `supertypes` FROM `cards` WHERE `availability` = 'arena'
SELECT DISTINCT `cards`.`setcode` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Spanish'
SELECT (CAST(SUM(`isonlineonly` = 1) AS FLOAT) / COUNT(`id`)) * 100 AS percentage FROM `cards` WHERE `frameeffects` = 'legendary'
SELECT `id`, CAST(SUM(CASE WHEN `isstoryspotlight` = 1 AND `istextless` = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`id`) AS percentage FROM `cards`
SELECT `name`, CAST(SUM(CASE WHEN `language` = 'Spanish' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`id`) AS percentage FROM `foreign_data` GROUP BY `name`
SELECT `language` FROM `set_translations` WHERE `setcode` = (SELECT `code` FROM `sets` WHERE `basesetsize` = 309)
SELECT COUNT(DISTINCT `sets`.`code`) FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setcode` WHERE `sets`.`block` = 'Commander' AND `set_translations`.`language` = 'Portuguese (Brasil)'
SELECT `cards`.`id` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`types` = 'Creature' AND `legalities`.`status` = 'Legal'
SELECT DISTINCT `cards`.`subtypes`, `cards`.`supertypes` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'German' AND `cards`.`subtypes` IS NOT NULL AND `cards`.`supertypes` IS NOT NULL
SELECT COUNT(`id`) FROM `cards` WHERE (`power` IS NULL OR `power` = '*') AND `text` LIKE '%triggered ability%'
SELECT COUNT(DISTINCT `cards`.`id`) FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `legalities`.`format` = 'premodern' AND `rulings`.`text` = 'This is a triggered mana ability.' AND `cards`.`side` IS NULL
SELECT `cards`.`id` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`artist` = 'Erica Yang' AND `legalities`.`format` = 'pauper' AND `legalities`.`status` = 'Legal' AND `cards`.`availability` LIKE '%paper%'
SELECT `artist` FROM `cards` WHERE `text` LIKE '%Das perfekte Gegenmittel zu einer dichten Formation%'
SELECT `T2`.`name` FROM `cards` AS `T1` INNER JOIN `foreign_data` AS `T2` ON `T1`.`uuid` = `T2`.`uuid` WHERE `T2`.`language` = 'French' AND `T1`.`type` LIKE '%Creature%' AND `T1`.`layout` = 'normal' AND `T1`.`bordercolor` = 'black' AND `T1`.`artist` = 'Matthew D. Wilson'
SELECT COUNT(DISTINCT `cards`.`id`) FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`rarity` = 'rare' AND `rulings`.`date` = '2007-02-01'
SELECT `set_translations`.`language` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setcode` WHERE `sets`.`basesetsize` = 180 AND `sets`.`block` = 'Ravnica'
SELECT CAST(SUM(CASE WHEN `hascontentwarning` = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`id`) FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`format` = 'commander' AND `legalities`.`status` = 'Legal'
SELECT CAST(SUM(CASE WHEN `foreign_data`.`language` = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`cards`.`id`) FROM `cards` LEFT JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`power` IS NULL OR `cards`.`power` = '*'
SELECT CAST(SUM(CASE WHEN `set_translations`.`language` = 'Japanese' AND `sets`.`type` = 'expansion' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN `set_translations`.`language` = 'Japanese' THEN 1 ELSE 0 END) FROM `set_translations` INNER JOIN `sets` ON `set_translations`.`setcode` = `sets`.`code`
SELECT DISTINCT `availability` FROM `cards` WHERE `artist` = 'Daren Bader'
SELECT COUNT(`id`) FROM `cards` WHERE `bordercolor` = 'borderless' AND `edhrecrank` > 12000
SELECT COUNT(`id`) FROM `cards` WHERE `isoversized` = 1 AND `isreprint` = 1 AND `ispromo` = 1
SELECT `name` FROM `cards` WHERE (`power` IS NULL OR `power` = '*') AND `promotypes` = 'arenaleague' ORDER BY `name` ASC LIMIT 3
SELECT `language` FROM `foreign_data` WHERE `multiverseid` = 149934
SELECT `id` FROM `cards` WHERE `cardkingdomfoilid` IS NOT NULL AND `cardkingdomid` IS NOT NULL ORDER BY `cardkingdomfoilid` ASC LIMIT 3
SELECT CAST(SUM(CASE WHEN `istextless` = 1 AND `layout` = 'normal' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `cards`
SELECT `number` FROM `cards` WHERE `side` IS NULL AND `subtypes` LIKE '%Angel%' AND `subtypes` LIKE '%Wizard%'
SELECT `name` FROM `sets` WHERE `mtgocode` IS NULL OR `mtgocode` = '' ORDER BY `name` ASC LIMIT 3
SELECT DISTINCT `language` FROM `set_translations` WHERE `setcode` = 'ARC'
SELECT `sets`.`name`, `set_translations`.`translation` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setcode` WHERE `sets`.`id` = 5
SELECT T2.`language`, T3.`type` FROM `set_translations` AS T2 INNER JOIN `sets` AS T3 ON T2.`setcode` = T3.`code` WHERE T3.`id` = 206
SELECT `sets`.`id`, `sets`.`name` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setcode` WHERE `set_translations`.`language` = 'Italian' AND `sets`.`block` = 'Shadowmoor' ORDER BY `sets`.`name` ASC LIMIT 2
SELECT `sets`.`id`, `sets`.`name` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setcode` WHERE `sets`.`isforeignonly` = 0 AND `sets`.`isfoilonly` = 1 AND `set_translations`.`language` = 'Japanese'
SELECT `name` FROM `sets` WHERE `code` = (SELECT `setcode` FROM `set_translations` WHERE `language` = 'Russian') ORDER BY `basesetsize` DESC LIMIT 1
SELECT CAST(SUM(CASE WHEN `c`.`isonlineonly` = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`c`.`id`) FROM `cards` AS `c` INNER JOIN `set_translations` AS `st` ON `c`.`setcode` = `st`.`setcode` WHERE `st`.`language` = 'Chinese Simplified'
SELECT COUNT(*) FROM `sets` AS T1 INNER JOIN `set_translations` AS T2 ON T1.`code` = T2.`setcode` WHERE T2.`language` = 'Japanese' AND (T1.`mtgocode` IS NULL OR T1.`mtgocode` = '')
SELECT `id` FROM `cards` WHERE `bordercolor` = 'black'
SELECT `id` FROM `cards` WHERE `frameeffects` = 'extendedart'
SELECT `name` FROM `cards` WHERE `bordercolor` = 'black' AND `isfullart` = 1
SELECT `language` FROM `set_translations` WHERE `setcode` = (SELECT `code` FROM `sets` WHERE `id` = 174)
SELECT `name` FROM `sets` WHERE `code` = 'ALL'
SELECT `language` FROM `foreign_data` WHERE `name` = 'A Pedra Fellwar'
SELECT `code` FROM `sets` WHERE `releasedate` = '2007-07-13'
SELECT `basesetsize`, `code` FROM `sets` WHERE `block` IN ('Masques', 'Mirage')
SELECT `code` FROM `sets` WHERE `type` = 'expansion'
SELECT `foreign_data`.`name`, `cards`.`type` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'Boros'
SELECT `foreign_data`.`language`, `foreign_data`.`flavortext`, `cards`.`type` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'colorpie'
SELECT CAST(SUM(CASE WHEN `convertedmanacost` = 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`convertedmanacost`) FROM `cards` WHERE `name` = 'Abyssal Horror'
SELECT `code` FROM `sets` WHERE `type` = 'expansion commander'
SELECT `foreign_data`.`name`, `cards`.`type` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'abzan'
SELECT `T2`.`language`, `T1`.`type` FROM `cards` AS `T1` INNER JOIN `foreign_data` AS `T2` ON `T1`.`uuid` = `T2`.`uuid` WHERE `T1`.`watermark` = 'azorius'
SELECT COUNT(*) FROM `cards` WHERE `artist` = 'Aaron Miller' AND `cardkingdomfoilid` IS NOT NULL AND `cardkingdomid` IS NOT NULL
SELECT COUNT(`id`) FROM `cards` WHERE `availability` LIKE '%paper%' AND `hand` = '3'
SELECT `name` FROM `cards` WHERE `istextless` = 0
SELECT `manacost` FROM `cards` WHERE `name` = 'Ancestor''s Chosen'
SELECT COUNT(`id`) FROM `cards` WHERE `bordercolor` = 'white' AND (`power` = '*' OR `power` IS NULL)
SELECT `name` FROM `cards` WHERE `ispromo` = 1 AND `side` IS NOT NULL
SELECT `subtypes`, `supertypes` FROM `cards` WHERE `name` = 'Molimo, Maro-Sorcerer'
SELECT `purchaseurls` FROM `cards` WHERE `promotypes` = 'bundle'
SELECT COUNT(DISTINCT `artist`) FROM `cards` WHERE `bordercolor` = 'black' AND `availability` LIKE '%arena,mtgo%'
SELECT `name` FROM `cards` WHERE `name` IN ('Serra Angel', 'Shrine Keeper') ORDER BY `convertedmanacost` DESC LIMIT 1
SELECT `artist` FROM `cards` WHERE `flavorname` = 'Battra, Dark Destroyer'
SELECT `name` FROM `cards` WHERE `frameversion` = 2003 ORDER BY `convertedmanacost` DESC LIMIT 3
SELECT `set_translations`.`translation` FROM `cards` INNER JOIN `set_translations` ON `cards`.`setcode` = `set_translations`.`setcode` WHERE `cards`.`name` = 'Ancestor''s Chosen' AND `set_translations`.`language` = 'Italian'
SELECT COUNT(*) FROM `cards` AS T1 INNER JOIN `set_translations` AS T2 ON T1.`setcode` = T2.`setcode` WHERE T1.`name` = 'Angel of Mercy'
SELECT `cards`.`name` FROM `cards` INNER JOIN `set_translations` ON `cards`.`setcode` = `set_translations`.`setcode` WHERE `set_translations`.`translation` = 'Hauptset Zehnte Edition'
SELECT COUNT(*) > 0 AS has_korean_version FROM `foreign_data` WHERE `name` = 'Ausgewählter der Ahnfrau' AND `language` = 'Korean'
SELECT COUNT(*) FROM `cards` AS c INNER JOIN `set_translations` AS st ON c.`setcode` = st.`setcode` WHERE st.`translation` = 'Hauptset Zehnte Edition' AND c.`artist` = 'Adam Rex'
SELECT `basesetsize` FROM `sets` AS T1 INNER JOIN `set_translations` AS T2 ON T1.`code` = T2.`setcode` WHERE T2.`translation` = 'Hauptset Zehnte Edition'
SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setcode WHERE T1.name = 'Eighth Edition' AND T2.language = 'Chinese Simplified'
SELECT COUNT(*) > 0 FROM `cards` AS T1 INNER JOIN `sets` AS T2 ON T1.`setcode` = T2.`code` WHERE T1.`name` = 'Angel of Mercy' AND T2.`mtgocode` IS NOT NULL
SELECT `sets`.`releasedate` FROM `cards` INNER JOIN `sets` ON `cards`.`setcode` = `sets`.`code` WHERE `cards`.`name` = 'Ancestor''s Chosen'
SELECT DISTINCT `type` FROM `sets` WHERE `code` IN (SELECT `setcode` FROM `set_translations` WHERE `translation` = 'Hauptset Zehnte Edition')
SELECT COUNT(DISTINCT `sets`.`code`) FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setcode` WHERE `sets`.`block` = 'Ice Age' AND `set_translations`.`language` = 'Italian' AND `set_translations`.`translation` IS NOT NULL
SELECT `isforeignonly` FROM `sets` WHERE `name` = 'Adarkar Valkyrie'
SELECT COUNT(*) FROM `sets` AS S INNER JOIN `set_translations` AS ST ON S.`code` = ST.`setcode` WHERE ST.`language` = 'Italian' AND S.`basesetsize` < 100
SELECT COUNT(`id`) FROM `cards` WHERE `setcode` = (SELECT `code` FROM `sets` WHERE `name` = 'Coldsnap') AND `bordercolor` = 'black'
SELECT `name` FROM `cards` WHERE `setcode` = (SELECT `code` FROM `sets` WHERE `name` = 'Coldsnap') AND `convertedmanacost` = (SELECT MAX(`convertedmanacost`) FROM `cards` WHERE `setcode` = (SELECT `code` FROM `sets` WHERE `name` = 'Coldsnap'))
SELECT DISTINCT `artist` FROM `cards` WHERE `artist` IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND `setcode` = (SELECT `code` FROM `sets` WHERE `name` = 'Coldsnap')
SELECT `name` FROM `cards` WHERE `number` = 4 AND `setcode` = (SELECT `code` FROM `sets` WHERE `name` = 'Coldsnap')
SELECT COUNT(*) FROM `cards` AS T1 INNER JOIN `sets` AS T2 ON T1.`setcode` = T2.`code` WHERE T2.`name` = 'Coldsnap' AND T1.`convertedmanacost` > 5 AND (T1.`power` = '*' OR T1.`power` IS NULL)
SELECT `flavortext` FROM `foreign_data` WHERE `language` = 'Italian' AND `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Ancestor''s Chosen')
SELECT `language` FROM `foreign_data` WHERE `name` = 'Ausgewählter der Ahnfrau' AND `flavortext` IS NOT NULL
SELECT `type` FROM `foreign_data` WHERE `language` = 'German' AND `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Ancestor''s Chosen')
SELECT T2.text FROM `rulings` AS T2 INNER JOIN `cards` AS T1 ON T2.uuid = T1.uuid INNER JOIN `sets` AS T3 ON T1.setcode = T3.code INNER JOIN `set_translations` AS T4 ON T3.code = T4.setcode WHERE T3.name = 'Coldsnap' AND T4.language = 'Italian'
SELECT `foreign_data`.`name` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` INNER JOIN `sets` ON `cards`.`setcode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap' AND `foreign_data`.`language` = 'Italian' AND `cards`.`convertedmanacost` = (SELECT MAX(`convertedmanacost`) FROM `cards` INNER JOIN `sets` ON `cards`.`setcode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap')
SELECT `date` FROM `rulings` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Reminisce')
SELECT CAST(SUM(CASE WHEN `T1`.`convertedmanacost` = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `cards` AS `T1` INNER JOIN `sets` AS `T2` ON `T1`.`setcode` = `T2`.`code` WHERE `T2`.`name` = 'Coldsnap'
SELECT CAST(SUM(CASE WHEN `cardkingdomfoilid` IS NOT NULL AND `cardkingdomid` IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`name`) FROM `cards` WHERE `setcode` = (SELECT `code` FROM `sets` WHERE `name` = 'Coldsnap')
SELECT `code` FROM `sets` WHERE `releasedate` = '2017-07-14'
SELECT `keyrunecode` FROM `sets` WHERE `code` = 'PKHC'
SELECT `mcmid` FROM `sets` WHERE `code` = 'SS2'
SELECT `mcmname` FROM `sets` WHERE `releasedate` = '2017-06-09'
SELECT `type` FROM `sets` WHERE `name` = 'From the Vault: Lore'
SELECT `parentcode` FROM `sets` WHERE `name` = 'Commander 2014 Oversized'
SELECT `c`.`name`, `r`.`text`, `c`.`hascontentwarning` FROM `cards` AS `c` INNER JOIN `rulings` AS `r` ON `c`.`uuid` = `r`.`uuid` WHERE `c`.`artist` = 'Jim Pavelec'
SELECT `sets`.`releasedate` FROM `cards` INNER JOIN `sets` ON `cards`.`setcode` = `sets`.`code` WHERE `cards`.`name` = 'Evacuation'
SELECT `basesetsize` FROM `sets` AS T1 INNER JOIN `set_translations` AS T2 ON T1.`code` = T2.`setcode` WHERE T2.`translation` = 'Rinascita di Alara'
SELECT DISTINCT `type` FROM `sets` WHERE `code` IN (SELECT `setcode` FROM `set_translations` WHERE `translation` = 'Huitième édition')
SELECT DISTINCT `set_translations`.`translation` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`id` = `foreign_data`.`id` INNER JOIN `sets` ON `cards`.`setcode` = `sets`.`code` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setcode` WHERE `foreign_data`.`name` = 'Tendo Ice Bridge' AND `set_translations`.`language` = 'French'
SELECT COUNT(*) FROM `set_translations` AS T1 INNER JOIN `sets` AS T2 ON T1.`setcode` = T2.`code` WHERE T2.`name` = 'Tenth Edition'
SELECT ST.`translation` FROM `set_translations` AS ST INNER JOIN `cards` AS C ON ST.`setcode` = C.`setcode` WHERE C.`name` = 'Fellwar Stone' AND ST.`language` = 'Japanese'
SELECT `name` FROM `cards` WHERE `setcode` = (SELECT `code` FROM `sets` WHERE `name` = 'Journey into Nyx Hero''s Path') ORDER BY `convertedmanacost` DESC LIMIT 1
SELECT `releasedate` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setcode` WHERE `set_translations`.`translation` = 'Ola de frío'
SELECT DISTINCT `sets`.`type` FROM `cards` INNER JOIN `sets` ON `cards`.`setcode` = `sets`.`code` WHERE `cards`.`name` = 'Samite Pilgrim'
SELECT COUNT(`cards`.`id`) FROM `cards` INNER JOIN `sets` ON `cards`.`setcode` = `sets`.`code` WHERE `sets`.`name` = 'World Championship Decks 2004' AND `cards`.`convertedmanacost` = 3
SELECT `st`.`translation` FROM `sets` AS `s` INNER JOIN `set_translations` AS `st` ON `s`.`code` = `st`.`setcode` WHERE `s`.`name` = 'Mirrodin' AND `st`.`language` = 'Chinese Simplified'
SELECT CAST(SUM(CASE WHEN `S`.`isnonfoilonly` = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `set_translations` AS `ST` INNER JOIN `sets` AS `S` ON `ST`.`setcode` = `S`.`code` WHERE `ST`.`language` = 'Japanese'
SELECT CAST(SUM(CASE WHEN `s`.`isonlineonly` = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`s`.`id`) FROM `sets` AS `s` INNER JOIN `set_translations` AS `st` ON `s`.`code` = `st`.`setcode` WHERE `st`.`language` = 'Portuguese (Brazil)'
SELECT DISTINCT `availability` FROM `cards` WHERE `istextless` = 1 AND `artist` = 'Aleksi Briclot'
SELECT `id` FROM `sets` ORDER BY `basesetsize` DESC LIMIT 1
SELECT `artist` FROM `cards` WHERE `side` IS NULL ORDER BY `convertedmanacost` DESC LIMIT 1
SELECT MAX(`frameeffects`) FROM `cards` WHERE `cardkingdomfoilid` IS NOT NULL AND `cardkingdomid` IS NOT NULL
SELECT COUNT(`id`) FROM `cards` WHERE (`power` IS NULL OR `power` = '*') AND `hasfoil` = 0 AND `dueldeck` = 'a'
SELECT `id` FROM `sets` WHERE `type` = 'commander' ORDER BY `totalsetsize` DESC LIMIT 1
SELECT `name`, `manacost` FROM `cards` WHERE `uuid` IN (SELECT `uuid` FROM `legalities` WHERE `format` = 'duel') ORDER BY `convertedmanacost` DESC LIMIT 10
SELECT `c`.`originalreleasedate`, `l`.`format` FROM `cards` AS `c` INNER JOIN `legalities` AS `l` ON `c`.`uuid` = `l`.`uuid` WHERE `c`.`rarity` = 'mythic' AND `l`.`status` = 'Legal' ORDER BY `c`.`originalreleasedate` ASC LIMIT 1
SELECT COUNT(*) FROM `cards` AS T1 INNER JOIN `foreign_data` AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`artist` = 'Volkan Baǵa' AND T2.`language` = 'French'
SELECT COUNT(`cards`.`id`) FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`rarity` = 'rare' AND `cards`.`types` = 'Enchantment' AND `cards`.`name` = 'Abundance' AND `legalities`.`status` = 'Legal'
SELECT `L`.`format`, `C`.`name` FROM `legalities` AS `L` INNER JOIN `cards` AS `C` ON `L`.`uuid` = `C`.`uuid` WHERE `L`.`status` = 'Banned' GROUP BY `L`.`format` HAVING COUNT(`L`.`status` = 'Banned') = (SELECT MAX(banned_count) FROM (SELECT COUNT(`status` = 'Banned') AS banned_count FROM `legalities` WHERE `status` = 'Banned' GROUP BY `format`))
SELECT `language` FROM `set_translations` WHERE `setcode` = (SELECT `code` FROM `sets` WHERE `name` = 'Battlebond')
SELECT `c`.`artist`, `l`.`format` FROM `cards` AS `c` INNER JOIN `legalities` AS `l` ON `c`.`uuid` = `l`.`uuid` GROUP BY `c`.`artist`, `l`.`format` HAVING COUNT(`c`.`uuid`) = (SELECT MIN(card_count) FROM (SELECT `artist`, COUNT(`uuid`) AS card_count FROM `cards` GROUP BY `artist`))
SELECT `L`.`status` FROM `cards` AS `C` INNER JOIN `legalities` AS `L` ON `C`.`uuid` = `L`.`uuid` WHERE `C`.`frameversion` = '1997' AND `C`.`artist` = 'D. Alexander Gregory' AND `L`.`format` = 'legacy' AND (`C`.`hascontentwarning` = 1 OR `C`.`artist` = 'Wizards of the Coast')
SELECT `c`.`name`, `l`.`format` FROM `cards` AS `c` INNER JOIN `legalities` AS `l` ON `c`.`uuid` = `l`.`uuid` WHERE `c`.`edhrecrank` = 1 AND `l`.`status` = 'Banned'
SELECT AVG(annual_count) AS annual_avg_sets, common_language FROM (SELECT COUNT(`id`) AS annual_count, `language` AS common_language FROM `sets` INNER JOIN `set_translations` ON `sets`.`id` = `set_translations`.`id` WHERE `releasedate` BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY strftime('%Y', `releasedate`), `language` ORDER BY COUNT(`language`) DESC LIMIT 1)
SELECT DISTINCT `artist` FROM `cards` WHERE `bordercolor` = 'black' AND `availability` = 'arena'
SELECT `uuid` FROM `legalities` WHERE `format` = 'oldschool' AND (`status` = 'banned' OR `status` = 'restricted')
SELECT COUNT(`id`) FROM `cards` WHERE `artist` = 'Matthew D. Wilson' AND `availability` = 'paper'
SELECT `rulings`.`text` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`artist` = 'Kev Walker' ORDER BY `rulings`.`date` DESC
SELECT DISTINCT `cards`.`name`, `legalities`.`format` FROM `cards` INNER JOIN `sets` ON `cards`.`setcode` = `sets`.`code` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `sets`.`name` = 'Hour of Devastation' AND `legalities`.`status` = 'Legal'
SELECT `s`.`name` FROM `sets` AS `s` WHERE `s`.`code` IN (SELECT `st`.`setcode` FROM `set_translations` AS `st` WHERE `st`.`language` = 'Korean') AND `s`.`code` NOT IN (SELECT `st`.`setcode` FROM `set_translations` AS `st` WHERE `st`.`language` LIKE '%Japanese%')
SELECT DISTINCT `cards`.`frameversion`, `cards`.`name` FROM `cards` LEFT JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`artist` = 'Allen Williams' OR `legalities`.`status` = 'Banned'
SELECT `displayname` FROM `users` WHERE `displayname` IN ('Harlan', 'Jarrod Dixon') ORDER BY `reputation` DESC LIMIT 1
SELECT `displayname` FROM `users` WHERE strftime('%Y', `creationdate`) = '2011'
SELECT COUNT(`id`) FROM `users` WHERE `lastaccessdate` > '2014-09-01'
SELECT `displayname` FROM `users` ORDER BY `views` DESC LIMIT 1
SELECT COUNT(`id`) FROM `users` WHERE `upvotes` > 100 AND `downvotes` > 1
SELECT COUNT(`id`) FROM `users` WHERE `views` > 10 AND strftime('%Y', `creationdate`) > '2013'
SELECT COUNT(*) FROM `posts` AS p INNER JOIN `users` AS u ON p.`owneruserid` = u.`id` WHERE u.`displayname` = 'csgillespie'
SELECT `title` FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` WHERE `users`.`displayname` = 'csgillespie'
SELECT `U`.`displayname` FROM `posts` AS `P` INNER JOIN `users` AS `U` ON `P`.`owneruserid` = `U`.`id` WHERE `P`.`title` = 'Eliciting priors from experts'
SELECT `title` FROM `posts` WHERE `owneruserid` = (SELECT `id` FROM `users` WHERE `displayname` = 'csgillespie') ORDER BY `viewcount` DESC LIMIT 1
SELECT `displayname` FROM `users` WHERE `id` = (SELECT `owneruserid` FROM `posts` ORDER BY `favoritecount` DESC LIMIT 1)
SELECT SUM(`p`.`commentcount`) FROM `posts` AS `p` INNER JOIN `users` AS `u` ON `p`.`owneruserid` = `u`.`id` WHERE `u`.`displayname` = 'csgillespie'
SELECT MAX(`answercount`) FROM `posts` WHERE `owneruserid` = (SELECT `id` FROM `users` WHERE `displayname` = 'csgillespie')
SELECT `users`.`displayname` FROM `posts` INNER JOIN `users` ON `posts`.`lasteditoruserid` = `users`.`id` WHERE `posts`.`title` = 'Examples for teaching: Correlation does not mean causation'
SELECT COUNT(`p`.`id`) FROM `posts` AS `p` INNER JOIN `users` AS `u` ON `p`.`owneruserid` = `u`.`id` WHERE `u`.`displayname` = 'csgillespie' AND `p`.`parentid` IS NULL
SELECT DISTINCT `users`.`displayname` FROM `users` INNER JOIN `posts` ON `users`.`id` = `posts`.`owneruserid` WHERE `posts`.`closeddate` IS NOT NULL
SELECT COUNT(*) FROM `posts` AS p INNER JOIN `users` AS u ON p.`owneruserid` = u.`id` WHERE u.`age` > 65 AND p.`score` >= 20
SELECT `location` FROM `users` WHERE `id` = (SELECT `owneruserid` FROM `posts` WHERE `title` = 'Eliciting priors from experts')
SELECT `posts`.`body` FROM `tags` INNER JOIN `posts` ON `tags`.`excerptpostid` = `posts`.`id` WHERE `tags`.`tagname` = 'bayesian'
SELECT `posts`.`body` FROM `tags` INNER JOIN `posts` ON `tags`.`excerptpostid` = `posts`.`id` ORDER BY `tags`.`count` DESC LIMIT 1
SELECT COUNT(`badges`.`id`) FROM `badges` INNER JOIN `users` ON `badges`.`userid` = `users`.`id` WHERE `users`.`displayname` = 'csgillespie'
SELECT `b`.`name` FROM `badges` AS `b` INNER JOIN `users` AS `u` ON `b`.`userid` = `u`.`id` WHERE `u`.`displayname` = 'csgillespie';
SELECT COUNT(`b`.`id`) FROM `badges` AS `b` INNER JOIN `users` AS `u` ON `b`.`userid` = `u`.`id` WHERE `u`.`displayname` = 'csgillespie' AND strftime('%Y', `b`.`date`) = '2011'
SELECT `displayname` FROM `users` WHERE `id` = (SELECT `userid` FROM `badges` GROUP BY `userid` ORDER BY COUNT(`id`) DESC LIMIT 1)
SELECT AVG(`score`) FROM `posts` AS T1 INNER JOIN `users` AS T2 ON T1.`owneruserid` = T2.`id` WHERE T2.`displayname` = 'csgillespie'
SELECT COUNT(`badges`.`id`) * 1.0 / COUNT(DISTINCT `users`.`displayname`) FROM `users` INNER JOIN `badges` ON `users`.`id` = `badges`.`userid` WHERE `users`.`views` > 200
SELECT (SUM(CASE WHEN `users`.`age` > 65 THEN 1 ELSE 0 END) * 100.0) / COUNT(`posts`.`id`) AS percentage FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` WHERE `posts`.`score` > 5
SELECT COUNT(`id`) FROM `votes` WHERE `userid` = 58 AND `creationdate` = '2010-07-19'
SELECT `creationdate` FROM `votes` GROUP BY `creationdate` ORDER BY COUNT(`id`) DESC LIMIT 1;
SELECT COUNT(`id`) FROM `badges` WHERE `name` = 'Revival'
SELECT `posts`.`title` FROM `comments` INNER JOIN `posts` ON `comments`.`postid` = `posts`.`id` ORDER BY `comments`.`score` DESC LIMIT 1
SELECT COUNT(`comments`.`id`) FROM `posts` INNER JOIN `comments` ON `posts`.`id` = `comments`.`postid` WHERE `posts`.`viewcount` = 1910
SELECT `favoritecount` FROM `posts` WHERE `id` = (SELECT `postid` FROM `comments` WHERE `userid` = 3025 AND `creationdate` = '2014-04-23 20:29:39.0')
SELECT `text` FROM `comments` WHERE `postid` = (SELECT `id` FROM `posts` WHERE `parentid` = 107829 AND `commentcount` = 1)
SELECT `closeddate` IS NOT NULL FROM `posts` WHERE `id` = (SELECT `postid` FROM `comments` WHERE `userid` = 23853 AND `creationdate` = '2013-07-12 09:08:18.0')
SELECT `reputation` FROM `users` WHERE `id` = (SELECT `owneruserid` FROM `posts` WHERE `id` = 65041)
SELECT COUNT(`posts`.`id`) FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` WHERE `users`.`displayname` = 'Tiago Pasqualini'
SELECT `displayname` FROM `users` WHERE `id` = (SELECT `userid` FROM `votes` WHERE `id` = '6347')
SELECT COUNT(*) FROM `votes` WHERE `postid` IN (SELECT `id` FROM `posts` WHERE `title` LIKE '%data visualization%')
SELECT `b`.`name` FROM `badges` AS `b` INNER JOIN `users` AS `u` ON `b`.`userid` = `u`.`id` WHERE `u`.`displayname` = 'DatEpicCoderGuyWhoPrograms'
SELECT CAST(COUNT(`posts`.`id`) AS FLOAT) / COUNT(`votes`.`id`) FROM `posts` LEFT JOIN `votes` ON `posts`.`owneruserid` = `votes`.`userid` WHERE `posts`.`owneruserid` = 24
SELECT `viewcount` FROM `posts` WHERE `title` = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'
SELECT `text` FROM `comments` WHERE `score` = 17
SELECT `displayname` FROM `users` WHERE `websiteurl` = 'http://stackoverflow.com'
SELECT DISTINCT `b`.`name` FROM `badges` AS `b` INNER JOIN `users` AS `u` ON `b`.`userid` = `u`.`id` WHERE `u`.`displayname` = 'SilentGhost'
SELECT `displayname` FROM `users` WHERE `id` = (SELECT `userid` FROM `comments` WHERE `text` = 'thank you user93!')
SELECT `text` FROM `comments` WHERE `userid` = (SELECT `id` FROM `users` WHERE `displayname` = 'A Lion')
SELECT `users`.`displayname`, `users`.`reputation` FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` WHERE `posts`.`title` = 'Understanding what Dassault iSight is doing?'
SELECT `text` FROM `comments` WHERE `postid` = (SELECT `id` FROM `posts` WHERE `title` = 'How does gentle boosting differ from AdaBoost?')
SELECT `u`.`displayname` FROM `badges` AS `b` INNER JOIN `users` AS `u` ON `b`.`userid` = `u`.`id` WHERE `b`.`name` = 'Necromancer' LIMIT 10
SELECT `u`.`displayname` FROM `posts` AS `p` INNER JOIN `users` AS `u` ON `p`.`lasteditoruserid` = `u`.`id` WHERE `p`.`title` = 'Open source tools for visualizing multi-dimensional data'
SELECT `title` FROM `posts` INNER JOIN `users` ON `posts`.`lasteditoruserid` = `users`.`id` WHERE `users`.`displayname` = 'Vebjorn Ljosa'
SELECT SUM(p.`score`), u.`websiteurl` FROM `posts` AS p INNER JOIN `users` AS u ON p.`lasteditoruserid` = u.`id` WHERE u.`displayname` = 'Yevgeny'
SELECT `c`.`text` FROM `comments` AS `c` INNER JOIN `posts` AS `p` ON `c`.`postid` = `p`.`id` INNER JOIN `posthistory` AS `ph` ON `ph`.`postid` = `p`.`id` WHERE `p`.`title` = 'Why square the difference instead of taking the absolute value in standard deviation?' AND `c`.`userid` = `ph`.`userid`
SELECT SUM(`v`.`bountyamount`) FROM `posts` AS `p` INNER JOIN `votes` AS `v` ON `p`.`id` = `v`.`postid` WHERE `p`.`title` LIKE '%data%'
SELECT `u`.`displayname` FROM `votes` AS `v` INNER JOIN `posts` AS `p` ON `v`.`postid` = `p`.`id` INNER JOIN `users` AS `u` ON `v`.`userid` = `u`.`id` WHERE `v`.`bountyamount` = 50 AND `p`.`title` LIKE '%variance%'
SELECT AVG(`p`.`viewcount`) AS avg_view_count, `p`.`title`, `ph`.`comment` FROM `posts` AS `p` INNER JOIN `posthistory` AS `ph` ON `p`.`id` = `ph`.`postid` WHERE `p`.`tags` LIKE '%<humor>%' GROUP BY `p`.`id`
SELECT COUNT(`id`) FROM `comments` WHERE `userid` = 13
SELECT `id` FROM `users` ORDER BY `reputation` DESC LIMIT 1
SELECT `id` FROM `users` ORDER BY `views` ASC LIMIT 1
SELECT COUNT(DISTINCT `userid`) FROM `badges` WHERE `name` = 'Supporter' AND strftime('%Y', `date`) = '2011'
SELECT COUNT(`T1`.`userid`) FROM (SELECT `userid` FROM `badges` GROUP BY `userid` HAVING COUNT(`name`) > 5) AS `T1`
SELECT COUNT(DISTINCT `users`.`id`) FROM `users` INNER JOIN `badges` AS `b1` ON `users`.`id` = `b1`.`userid` INNER JOIN `badges` AS `b2` ON `users`.`id` = `b2`.`userid` WHERE `users`.`location` LIKE 'New York%' AND `b1`.`name` = 'Teacher' AND `b2`.`name` = 'Supporter'
SELECT `users`.`displayname`, `users`.`reputation` FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` WHERE `posts`.`id` = 1
SELECT `users`.`id` FROM `users` INNER JOIN `posts` ON `users`.`id` = `posts`.`owneruserid` INNER JOIN `posthistory` ON `posts`.`id` = `posthistory`.`postid` WHERE `posts`.`viewcount` >= 1000 GROUP BY `posthistory`.`postid` HAVING COUNT(DISTINCT `posthistory`.`id`) = 1
SELECT `b`.`name` FROM `badges` AS `b` INNER JOIN `comments` AS `c` ON `b`.`userid` = `c`.`userid` GROUP BY `c`.`userid` ORDER BY COUNT(`c`.`id`) DESC LIMIT 1
SELECT COUNT(*) FROM `users` AS U INNER JOIN `badges` AS B ON U.`id` = B.`userid` WHERE U.`location` = 'India' AND B.`name` = 'Teacher'
SELECT (CAST(SUM(CASE WHEN strftime('%Y', `date`) = '2010' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*)) - (CAST(SUM(CASE WHEN strftime('%Y', `date`) = '2011' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*)) AS percentage_difference FROM `badges` WHERE `name` = 'Student'
SELECT DISTINCT `posthistorytypeid` FROM `posthistory` WHERE `postid` = 3720; SELECT COUNT(DISTINCT `userid`) FROM `comments` WHERE `postid` = 3720;
SELECT `p`.`id`, `p`.`viewcount` FROM `postlinks` AS `pl` INNER JOIN `posts` AS `p` ON `pl`.`relatedpostid` = `p`.`id` WHERE `pl`.`postid` = 61217
SELECT T1.`score`, T2.`linktypeid` FROM `posts` AS T1 INNER JOIN `postlinks` AS T2 ON T1.`id` = T2.`postid` WHERE T1.`id` = 395
SELECT `posts`.`id`, `posts`.`owneruserid` FROM `posts` WHERE `posts`.`score` > 60
SELECT SUM(`favoritecount`) FROM `posts` WHERE `owneruserid` = 686 AND strftime('%Y', `creationdate`) = '2011'
SELECT CAST(SUM(`u`.`upvotes`) AS REAL) / COUNT(`u`.`id`) AS `average_upvotes`, CAST(SUM(`u`.`age`) AS REAL) / COUNT(`u`.`id`) AS `average_age` FROM `users` AS `u` WHERE (SELECT COUNT(`p`.`id`) FROM `posts` AS `p` WHERE `p`.`owneruserid` = `u`.`id`) > 10
SELECT COUNT(DISTINCT `userid`) FROM `badges` WHERE `name` = 'Announcer'
SELECT `name` FROM `badges` WHERE `date` = '2010-07-19 19:39:08.0'
SELECT COUNT(`id`) FROM `comments` WHERE `score` > 60
SELECT `text` FROM `comments` WHERE `creationdate` = '2010-07-19 19:25:47.0'
SELECT COUNT(*) FROM `posts` WHERE `score` = 10;
SELECT DISTINCT `b`.`name` FROM `badges` AS `b` INNER JOIN `users` AS `u` ON `b`.`userid` = `u`.`id` WHERE `u`.`reputation` = (SELECT MAX(`reputation`) FROM `users`)
SELECT `users`.`reputation` FROM `badges` INNER JOIN `users` ON `badges`.`userid` = `users`.`id` WHERE `badges`.`date` = '2010-07-19 19:39:08.0'
SELECT DISTINCT `b`.`name` FROM `badges` AS `b` INNER JOIN `users` AS `u` ON `b`.`userid` = `u`.`id` WHERE `u`.`displayname` = 'Pierre'
SELECT DISTINCT `b`.`date` FROM `badges` b INNER JOIN `users` u ON b.`userid` = u.`id` WHERE u.`location` = 'Rochester, NY'
SELECT CAST(SUM(CASE WHEN `name` = 'Teacher' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage FROM `badges`
SELECT CAST(COUNT(CASE WHEN `users`.`age` BETWEEN 13 AND 18 THEN 1 END) AS REAL) * 100 / COUNT(`users`.`id`) FROM `badges` INNER JOIN `users` ON `badges`.`userid` = `users`.`id` WHERE `badges`.`name` = 'Organizer'
SELECT `score` FROM `comments` WHERE `postid` = (SELECT `id` FROM `posts` WHERE `creaiondate` = '2010-07-19 19:19:56.0')
SELECT `text` FROM `comments` WHERE `postid` = (SELECT `id` FROM `posts` WHERE `creaiondate` = '2010-07-19 19:37:33.0')
SELECT `users`.`age` FROM `users` INNER JOIN `badges` ON `users`.`id` = `badges`.`userid` WHERE `users`.`location` = 'Vienna, Austria'
SELECT COUNT(DISTINCT `badges`.`userid`) FROM `badges` INNER JOIN `users` ON `badges`.`userid` = `users`.`id` WHERE `badges`.`name` = 'Supporter' AND `users`.`age` BETWEEN 19 AND 65
SELECT SUM(`views`) FROM `users` WHERE `id` IN (SELECT `userid` FROM `badges` WHERE `date` = '2010-07-19 19:39:08.0')
SELECT DISTINCT `b`.`name` FROM `badges` AS `b` INNER JOIN `users` AS `u` ON `b`.`userid` = `u`.`id` WHERE `u`.`reputation` = (SELECT MIN(`reputation`) FROM `users` WHERE `reputation` IS NOT NULL)
SELECT DISTINCT `b`.`name` FROM `badges` AS `b` INNER JOIN `users` AS `u` ON `b`.`userid` = `u`.`id` WHERE `u`.`displayname` = 'Sharpie'
SELECT COUNT(`badges`.`id`) FROM `badges` INNER JOIN `users` ON `badges`.`userid` = `users`.`id` WHERE `badges`.`name` = 'Supporter' AND `users`.`age` > 65
SELECT `displayname` FROM `users` WHERE `id` = 30
SELECT COUNT(*) FROM `users` WHERE `location` = 'New York, NY'
SELECT COUNT(`id`) FROM `votes` WHERE strftime('%Y', `creationdate`) = '2010';
SELECT COUNT(`id`) FROM `users` WHERE `age` BETWEEN 19 AND 65
SELECT `displayname` FROM `users` WHERE `views` = (SELECT MAX(`views`) FROM `users`);
SELECT CAST(COUNT(CASE WHEN strftime('%Y', `creationdate`) = '2010' THEN `id` ELSE NULL END) AS REAL) / COUNT(CASE WHEN strftime('%Y', `creationdate`) = '2011' THEN `id` ELSE NULL END) FROM `votes`
SELECT DISTINCT `tags`.`tagname` FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` INNER JOIN `tags` ON `posts`.`tags` LIKE '%' || `tags`.`tagname` || '%' WHERE `users`.`displayname` = 'John Salvatier'
SELECT COUNT(`posts`.`id`) FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` WHERE `users`.`displayname` = 'Daniel Vassallo'
SELECT COUNT(`votes`.`id`) FROM `votes` INNER JOIN `users` ON `votes`.`userid` = `users`.`id` WHERE `users`.`displayname` = 'Harlan'
SELECT `posts`.`id` FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` WHERE `users`.`displayname` = 'slashnick' ORDER BY `posts`.`answercount` DESC LIMIT 1
SELECT `u`.`displayname` FROM `users` AS `u` INNER JOIN `posts` AS `p` ON `u`.`id` = `p`.`owneruserid` WHERE `u`.`displayname` IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY `u`.`displayname` ORDER BY SUM(`p`.`viewcount`) DESC LIMIT 1
SELECT COUNT(p.`id`) FROM `posts` p JOIN `users` u ON p.`owneruserid` = u.`id` JOIN `votes` v ON p.`id` = v.`postid` WHERE u.`displayname` = 'Matt Parker' AND v.`postid` > 4
SELECT COUNT(`comments`.`id`) FROM `comments` INNER JOIN `posts` ON `comments`.`postid` = `posts`.`id` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` WHERE `comments`.`score` < 60 AND `users`.`displayname` = 'Neil McGuigan'
SELECT DISTINCT `tags`.`tagname` FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` INNER JOIN `tags` ON `posts`.`tags` LIKE '%' || `tags`.`tagname` || '%' WHERE `users`.`displayname` = 'Mark Meckes' AND `posts`.`commentcount` = 0
SELECT `u`.`displayname` FROM `users` AS `u` INNER JOIN `badges` AS `b` ON `u`.`id` = `b`.`userid` WHERE `b`.`name` = 'Organizer'
SELECT CAST(SUM(CASE WHEN `tags`.`tagname` = 'r' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`posts`.`id`) AS percentage FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` INNER JOIN `tags` ON `posts`.`id` = `tags`.`id` WHERE `users`.`displayname` = 'Community'
SELECT SUM(CASE WHEN `displayname` = 'Mornington' THEN `viewcount` ELSE 0 END) - SUM(CASE WHEN `displayname` = 'Amos' THEN `viewcount` ELSE 0 END) FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id`
SELECT COUNT(DISTINCT `userid`) FROM `badges` WHERE `name` = 'Commentator' AND strftime('%Y', `date`) = '2014';
SELECT COUNT(`id`) FROM `posts` WHERE `creaiondate` BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59'
SELECT `displayname`, `age` FROM `users` WHERE `views` = (SELECT MAX(`views`) FROM `users`)
SELECT `lasteditdate`, `lasteditoruserid` FROM `posts` WHERE `title` = 'Detecting a given face in a database of facial images'
SELECT COUNT(`id`) FROM `comments` WHERE `userid` = 13 AND `score` < 60
SELECT DISTINCT `posts`.`title`, `users`.`displayname` FROM `comments` INNER JOIN `posts` ON `comments`.`postid` = `posts`.`id` INNER JOIN `users` ON `comments`.`userid` = `users`.`id` WHERE `comments`.`score` > 60
SELECT DISTINCT `b`.`name` FROM `badges` AS `b` INNER JOIN `users` AS `u` ON `b`.`userid` = `u`.`id` WHERE `u`.`location` = 'North Pole' AND strftime('%Y', `b`.`date`) = '2011'
SELECT `users`.`displayname`, `users`.`websiteurl` FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` WHERE `posts`.`favoritecount` > 150
SELECT COUNT(`posthistory`.`id`) AS `history_count`, `posts`.`lasteditdate` FROM `posts` INNER JOIN `posthistory` ON `posts`.`id` = `posthistory`.`postid` WHERE `posts`.`title` = 'What is the best introductory Bayesian statistics textbook?'
SELECT `users`.`lastaccessdate`, `users`.`location` FROM `users` INNER JOIN `badges` ON `users`.`id` = `badges`.`userid` WHERE `badges`.`name` = 'Outliers'
SELECT `p2`.`title` FROM `posts` AS `p1` INNER JOIN `postlinks` AS `pl` ON `p1`.`id` = `pl`.`postid` INNER JOIN `posts` AS `p2` ON `pl`.`relatedpostid` = `p2`.`id` WHERE `p1`.`title` = 'How to tell if something happened in a data set which monitors a value over time'
SELECT DISTINCT `posts`.`id`, `badges`.`name` FROM `users` INNER JOIN `comments` ON `users`.`id` = `comments`.`userid` INNER JOIN `posts` ON `comments`.`postid` = `posts`.`id` INNER JOIN `badges` ON `users`.`id` = `badges`.`userid` WHERE `users`.`displayname` = 'Samuel' AND strftime('%Y', `comments`.`creationdate`) = '2013' AND strftime('%Y', `badges`.`date`) = '2013'
SELECT `users`.`displayname` FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` ORDER BY `posts`.`viewcount` DESC LIMIT 1
SELECT `users`.`displayname`, `users`.`location` FROM `tags` INNER JOIN `posts` ON `tags`.`excerptpostid` = `posts`.`id` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` WHERE `tags`.`tagname` = 'hypothesis-testing'
SELECT T2.title, T1.linktypeid FROM postlinks AS T1 INNER JOIN posts AS T2 ON T1.relatedpostid = T2.id WHERE T1.postid = (SELECT id FROM posts WHERE title = 'What are principal component scores?')
SELECT `u`.`displayname` FROM `posts` AS `p` INNER JOIN `users` AS `u` ON `p`.`parentid` = `u`.`id` WHERE `p`.`parentid` IS NOT NULL ORDER BY `p`.`score` DESC LIMIT 1
SELECT `u`.`displayname`, `u`.`websiteurl` FROM `votes` AS `v` INNER JOIN `users` AS `u` ON `v`.`userid` = `u`.`id` WHERE `v`.`votetypeid` = 8 ORDER BY `v`.`bountyamount` DESC LIMIT 1
SELECT `title` FROM `posts` ORDER BY `viewcount` DESC LIMIT 5
SELECT COUNT(*) FROM `tags` WHERE `count` BETWEEN 5000 AND 7000
SELECT `owneruserid` FROM `posts` ORDER BY `favoritecount` DESC LIMIT 1
SELECT `age` FROM `users` WHERE `reputation` = (SELECT MAX(`reputation`) FROM `users`)
SELECT COUNT(DISTINCT `votes`.`postid`) FROM `votes` WHERE strftime('%Y', `votes`.`creationdate`) = '2011' AND `votes`.`bountyamount` = 50
SELECT `id` FROM `users` WHERE `age` = (SELECT MIN(`age`) FROM `users` WHERE `age` IS NOT NULL)
SELECT SUM(`score`) FROM `posts` WHERE `lasactivitydate` LIKE '2010-07-19%';
SELECT COUNT(`postlinks`.`id`) / 12 FROM `postlinks` JOIN `posts` ON `postlinks`.`postid` = `posts`.`id` WHERE strftime('%Y', `postlinks`.`creationdate`) = '2010' AND `posts`.`answercount` <= 2
SELECT `p`.`id` FROM `posts` AS `p` JOIN `votes` AS `v` ON `p`.`id` = `v`.`postid` WHERE `v`.`userid` = 1465 ORDER BY `p`.`favoritecount` DESC LIMIT 1
SELECT `title` FROM `posts` WHERE `id` = (SELECT `postid` FROM `postlinks` ORDER BY `creationdate` ASC LIMIT 1)
SELECT `displayname` FROM `users` WHERE `id` = (SELECT `userid` FROM `badges` GROUP BY `userid` ORDER BY COUNT(`name`) DESC LIMIT 1)
SELECT MIN(`creationdate`) FROM `votes` WHERE `userid` = (SELECT `id` FROM `users` WHERE `displayname` = 'chl')
SELECT MIN(`posts`.`creaiondate`) FROM `users` INNER JOIN `posts` ON `users`.`id` = `posts`.`owneruserid` WHERE `users`.`age` = (SELECT MIN(`age`) FROM `users` WHERE `age` IS NOT NULL)
SELECT `u`.`displayname` FROM `users` AS `u` INNER JOIN `badges` AS `b` ON `u`.`id` = `b`.`userid` WHERE `b`.`name` = 'Autobiographer' ORDER BY `b`.`date` ASC LIMIT 1
SELECT COUNT(DISTINCT `u`.`id`) FROM `users` AS `u` INNER JOIN `posts` AS `p` ON `u`.`id` = `p`.`owneruserid` WHERE `u`.`location` = 'United Kingdom' AND `p`.`favoritecount` >= 4
SELECT AVG(`votes`.`postid`) FROM `votes` INNER JOIN `users` ON `votes`.`userid` = `users`.`id` WHERE `users`.`age` = (SELECT MAX(`age`) FROM `users` WHERE `age` IS NOT NULL)
SELECT `displayname` FROM `users` WHERE `reputation` = (SELECT MAX(`reputation`) FROM `users`)
SELECT COUNT(`id`) FROM `users` WHERE `reputation` > 2000 AND `views` > 1000
SELECT `displayname` FROM `users` WHERE `age` BETWEEN 19 AND 65
SELECT COUNT(*) FROM `posts` AS p INNER JOIN `users` AS u ON p.`owneruserid` = u.`id` WHERE u.`displayname` = 'Jay Stevens' AND strftime('%Y', p.`creaiondate`) = '2010'
SELECT `posts`.`id`, `posts`.`title` FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` WHERE `users`.`displayname` = 'Harvey Motulsky' ORDER BY `posts`.`viewcount` DESC LIMIT 1
SELECT `id`, `title` FROM `posts` ORDER BY `score` DESC LIMIT 1
SELECT AVG(`p`.`score`) FROM `posts` AS `p` INNER JOIN `users` AS `u` ON `p`.`owneruserid` = `u`.`id` WHERE `u`.`displayname` = 'Stephen Turner'
SELECT DISTINCT `u`.`displayname` FROM `users` AS `u` INNER JOIN `posts` AS `p` ON `u`.`id` = `p`.`owneruserid` WHERE `p`.`viewcount` > 20000 AND strftime('%Y', `p`.`creationdate`) = '2011'
SELECT `posts`.`id`, `users`.`displayname` FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` WHERE STRFTIME('%Y', `posts`.`creationdate`) = '2010' ORDER BY `posts`.`favoritecount` DESC LIMIT 1
SELECT CAST(SUM(CASE WHEN `users`.`reputation` > 1000 AND strftime('%Y', `users`.`creationdate`) = '2011' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`posts`.`id`) FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id`
SELECT (COUNT(`id`) FILTER (WHERE `age` BETWEEN 13 AND 18) * 1.0 / COUNT(`id`)) * 100 AS percentage FROM `users`
SELECT `posts`.`viewcount`, `users`.`displayname` FROM `posts` INNER JOIN `users` ON `posts`.`lasteditoruserid` = `users`.`id` WHERE `posts`.`title` = 'Computer Game Datasets'
SELECT COUNT(*) FROM `posts` WHERE `viewcount` > (SELECT AVG(`viewcount`) FROM `posts`)
SELECT `commentcount` FROM `posts` WHERE `score` = (SELECT MAX(`score`) FROM `posts`)
SELECT COUNT(`id`) FROM `posts` WHERE `viewcount` > 35000 AND `commentcount` = 0
SELECT `users`.`displayname`, `users`.`location` FROM `users` INNER JOIN `posts` ON `users`.`id` = `posts`.`lasteditoruserid` WHERE `posts`.`id` = 183 ORDER BY `posts`.`lasteditdate` DESC LIMIT 1
SELECT `b`.`name` FROM `badges` AS `b` INNER JOIN `users` AS `u` ON `b`.`userid` = `u`.`id` WHERE `u`.`displayname` = 'Emmett' ORDER BY `b`.`date` DESC LIMIT 1
SELECT COUNT(`id`) FROM `users` WHERE `age` BETWEEN 19 AND 65 AND `upvotes` > 5000
SELECT julianday(MIN(`b`.`date`)) - julianday(`u`.`creationdate`) AS days_to_badge FROM `users` AS `u` INNER JOIN `badges` AS `b` ON `u`.`id` = `b`.`userid` WHERE `u`.`displayname` = 'Zolomon'
SELECT (SELECT COUNT(*) FROM posts WHERE owneruserid = (SELECT id FROM users ORDER BY creationdate DESC LIMIT 1)) AS post_count, (SELECT COUNT(*) FROM comments WHERE userid = (SELECT id FROM users ORDER BY creationdate DESC LIMIT 1)) AS comment_count
SELECT `comments`.`text`, `users`.`displayname` FROM `comments` INNER JOIN `posts` ON `comments`.`postid` = `posts`.`id` INNER JOIN `users` ON `comments`.`userid` = `users`.`id` WHERE `posts`.`title` = 'Analysing wind data with R' ORDER BY `comments`.`creationdate` DESC LIMIT 10
SELECT COUNT(DISTINCT `userid`) FROM `badges` WHERE `name` = 'Citizen Patrol'
SELECT COUNT(*) FROM `posts` WHERE `tags` LIKE '%<careers>%'
SELECT `reputation`, `views` FROM `users` WHERE `displayname` = 'Jarrod Dixon'
SELECT (SELECT COUNT(*) FROM `comments` AS C INNER JOIN `posts` AS P ON C.`postid` = P.`id` WHERE P.`title` = 'Clustering 1D data') + (SELECT COUNT(*) FROM `posts` AS P WHERE P.`parentid` = (SELECT `id` FROM `posts` WHERE `title` = 'Clustering 1D data')) AS total_comments_and_answers
SELECT `creationdate` FROM `users` WHERE `displayname` = 'IrishStat'
SELECT COUNT(DISTINCT `postid`) FROM `votes` WHERE `bountyamount` >= 30
SELECT CAST(SUM(CASE WHEN `posts`.`score` > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`posts`.`id`) FROM `posts` WHERE `posts`.`owneruserid` = (SELECT `users`.`id` FROM `users` ORDER BY `users`.`reputation` DESC LIMIT 1)
SELECT COUNT(*) FROM `posts` WHERE `score` < 20
SELECT COUNT(`id`) FROM `tags` WHERE `id` < 15 AND `count` <= 20
SELECT `excerptpostid`, `wikipostid` FROM `tags` WHERE `tagname` = 'sample'
SELECT `users`.`reputation`, `users`.`upvotes` FROM `comments` INNER JOIN `users` ON `comments`.`userid` = `users`.`id` WHERE `comments`.`text` = 'fine, you win :)'
SELECT `text` FROM `comments` WHERE `postid` IN (SELECT `id` FROM `posts` WHERE `title` LIKE '%linear regression%')
SELECT `text` FROM `comments` WHERE `postid` IN (SELECT `id` FROM `posts` WHERE `viewcount` BETWEEN 100 AND 150) ORDER BY `score` DESC LIMIT 1
SELECT `users`.`creationdate`, `users`.`age` FROM `users` INNER JOIN `comments` ON `users`.`id` = `comments`.`userid` WHERE `comments`.`text` LIKE '%http://%';
SELECT COUNT(DISTINCT T2.id) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.postid = T2.id WHERE T1.score = 0 AND T2.viewcount < 5
SELECT COUNT(`comments`.`id`) FROM `posts` INNER JOIN `comments` ON `posts`.`id` = `comments`.`postid` WHERE `posts`.`commentcount` = 1 AND `comments`.`score` = 0
SELECT COUNT(DISTINCT `users`.`id`) FROM `comments` INNER JOIN `users` ON `comments`.`userid` = `users`.`id` WHERE `comments`.`score` = 0 AND `users`.`age` = 40
SELECT `comments`.`postid`, `comments`.`text` FROM `comments` INNER JOIN `posts` ON `comments`.`postid` = `posts`.`id` WHERE `posts`.`title` = 'Group differences on a five point Likert item'
SELECT `upvotes` FROM `users` WHERE `id` = (SELECT `userid` FROM `comments` WHERE `text` = 'R is also lazy evaluated.')
SELECT `text` FROM `comments` WHERE `userid` = (SELECT `id` FROM `users` WHERE `displayname` = 'Harvey Motulsky')
SELECT `users`.`displayname` FROM `comments` JOIN `users` ON `comments`.`userid` = `users`.`id` WHERE `comments`.`score` BETWEEN 1 AND 5 AND `users`.`downvotes` = 0
SELECT CAST(COUNT(DISTINCT C.userid) FILTER (WHERE U.upvotes = 0) AS REAL) * 100 / COUNT(DISTINCT C.userid) FROM comments AS C INNER JOIN users AS U ON C.userid = U.id WHERE C.score BETWEEN 5 AND 10;
SELECT `power_name` FROM `superpower` INNER JOIN `hero_power` ON `superpower`.`id` = `hero_power`.`power_id` INNER JOIN `superhero` ON `hero_power`.`hero_id` = `superhero`.`id` WHERE `superhero`.`superhero_name` = '3-D Man'
SELECT COUNT(DISTINCT T1.`hero_id`) FROM `hero_power` AS T1 INNER JOIN `superpower` AS T2 ON T1.`power_id` = T2.`id` WHERE T2.`power_name` = 'Super Strength'
SELECT COUNT(DISTINCT `hero_power`.`hero_id`) FROM `hero_power` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` INNER JOIN `superhero` ON `hero_power`.`hero_id` = `superhero`.`id` WHERE `superpower`.`power_name` = 'Super Strength' AND `superhero`.`height_cm` > 200
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` GROUP BY `superhero`.`id` HAVING COUNT(`hero_power`.`power_id`) > 15
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `colour` AS T2 ON T1.`eye_colour_id` = T2.`id` WHERE T2.`colour` = 'Blue'
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` WHERE `superhero`.`superhero_name` = 'Apocalypse'
SELECT COUNT(DISTINCT T1.`id`) FROM `superhero` AS T1 INNER JOIN `colour` AS T2 ON T1.`eye_colour_id` = T2.`id` INNER JOIN `hero_power` AS T3 ON T1.`id` = T3.`hero_id` INNER JOIN `superpower` AS T4 ON T3.`power_id` = T4.`id` WHERE T2.`colour` = 'Blue' AND T4.`power_name` = 'Agility'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `colour` AS `eye_colour` ON `superhero`.`eye_colour_id` = `eye_colour`.`id` INNER JOIN `colour` AS `hair_colour` ON `superhero`.`hair_colour_id` = `hair_colour`.`id` WHERE `eye_colour`.`colour` = 'Blue' AND `hair_colour`.`colour` = 'Blond'
SELECT COUNT(DISTINCT T1.id) FROM `superhero` AS T1 INNER JOIN `publisher` AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'
SELECT `superhero_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics' ORDER BY `superhero`.`height_cm` DESC
SELECT `T2`.`publisher_name` FROM `superhero` AS `T1` INNER JOIN `publisher` AS `T2` ON `T1`.`publisher_id` = `T2`.`id` WHERE `T1`.`superhero_name` = 'Sauron'
SELECT `c`.`colour`, COUNT(`s`.`id`) AS `count` FROM `superhero` AS `s` INNER JOIN `colour` AS `c` ON `s`.`eye_colour_id` = `c`.`id` INNER JOIN `publisher` AS `p` ON `s`.`publisher_id` = `p`.`id` WHERE `p`.`publisher_name` = 'Marvel Comics' GROUP BY `c`.`colour` ORDER BY `count` DESC
SELECT AVG(`height_cm`) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics';
SELECT T1.`superhero_name` FROM `superhero` AS T1 INNER JOIN `publisher` AS T2 ON T1.`publisher_id` = T2.`id` INNER JOIN `hero_power` AS T3 ON T1.`id` = T3.`hero_id` INNER JOIN `superpower` AS T4 ON T3.`power_id` = T4.`id` WHERE T2.`publisher_name` = 'Marvel Comics' AND T4.`power_name` = 'Super Strength'
SELECT COUNT(DISTINCT T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics'
SELECT `p`.`publisher_name` FROM `superhero` AS `s` INNER JOIN `publisher` AS `p` ON `s`.`publisher_id` = `p`.`id` INNER JOIN `hero_attribute` AS `ha` ON `s`.`id` = `ha`.`hero_id` INNER JOIN `attribute` AS `a` ON `ha`.`attribute_id` = `a`.`id` WHERE `a`.`attribute_name` = 'Speed' ORDER BY `ha`.`attribute_value` ASC LIMIT 1
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `colour` AS T2 ON T1.`eye_colour_id` = T2.`id` INNER JOIN `publisher` AS T3 ON T1.`publisher_id` = T3.`id` WHERE T2.`colour` = 'Gold' AND T3.`publisher_name` = 'Marvel Comics'
SELECT `publisher`.`publisher_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`superhero_name` = 'Blue Beetle II'
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `colour` AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blond'
SELECT `superhero_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Intelligence' ORDER BY `hero_attribute`.`attribute_value` ASC LIMIT 1
SELECT `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`superhero_name` = 'Copycat'
SELECT `superhero_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Durability' AND `hero_attribute`.`attribute_value` < 50
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Death Touch'
SELECT COUNT(DISTINCT `T1`.`id`) FROM `superhero` AS `T1` INNER JOIN `gender` AS `T2` ON `T1`.`gender_id` = `T2`.`id` INNER JOIN `hero_attribute` AS `T3` ON `T1`.`id` = `T3`.`hero_id` INNER JOIN `attribute` AS `T4` ON `T3`.`attribute_id` = `T4`.`id` WHERE `T2`.`gender` = 'Female' AND `T4`.`attribute_name` = 'Strength' AND `T3`.`attribute_value` = 100
SELECT `superhero_name` FROM `superhero` AS S INNER JOIN `hero_power` AS HP ON S.`id` = HP.`hero_id` GROUP BY S.`id` ORDER BY COUNT(HP.`power_id`) DESC LIMIT 1
SELECT COUNT(`id`) FROM `superhero` WHERE `race_id` = (SELECT `id` FROM `race` WHERE `race` = 'Vampire')
SELECT CAST(COUNT(CASE WHEN `A`.`alignment` = 'Bad' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(`S`.`id`) AS percentage, COUNT(CASE WHEN `A`.`alignment` = 'Bad' AND `P`.`publisher_name` = 'Marvel Comics' THEN 1 ELSE NULL END) AS marvel_count FROM `superhero` AS `S` INNER JOIN `alignment` AS `A` ON `S`.`alignment_id` = `A`.`id` INNER JOIN `publisher` AS `P` ON `S`.`publisher_id` = `P`.`id`
SELECT COUNT(CASE WHEN `publisher`.`publisher_name` = 'Marvel Comics' THEN `superhero`.`id` ELSE NULL END) - COUNT(CASE WHEN `publisher`.`publisher_name` = 'DC Comics' THEN `superhero`.`id` ELSE NULL END) AS difference FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id`
SELECT `id` FROM `publisher` WHERE `publisher_name` = 'Star Trek'
SELECT AVG(`attribute_value`) FROM `hero_attribute`
SELECT COUNT(*) FROM `superhero` WHERE `full_name` IS NULL
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`id` = 75
SELECT DISTINCT `T2`.`power_name` FROM `superhero` AS `T1` INNER JOIN `hero_power` AS `T3` ON `T1`.`id` = `T3`.`hero_id` INNER JOIN `superpower` AS `T2` ON `T3`.`power_id` = `T2`.`id` WHERE `T1`.`superhero_name` = 'Deathlok'
SELECT AVG(`weight_kg`) FROM `superhero` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `gender`.`gender` = 'Female'
SELECT DISTINCT `T2`.`power_name` FROM `superhero` AS `T1` INNER JOIN `hero_power` AS `T3` ON `T1`.`id` = `T3`.`hero_id` INNER JOIN `superpower` AS `T2` ON `T3`.`power_id` = `T2`.`id` INNER JOIN `gender` AS `T4` ON `T1`.`gender_id` = `T4`.`id` WHERE `T4`.`gender` = 'Male' LIMIT 5
SELECT `superhero_name` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Alien'
SELECT `superhero_name` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `height_cm` BETWEEN 170 AND 190 AND `colour` = 'No Colour'
SELECT T2.`power_name` FROM `hero_power` AS T1 INNER JOIN `superpower` AS T2 ON T1.`power_id` = T2.`id` WHERE T1.`hero_id` = 56
SELECT `full_name` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Demi-God' LIMIT 5
SELECT COUNT(*) FROM `superhero` WHERE `alignment_id` = (SELECT `id` FROM `alignment` WHERE `alignment` = 'Bad')
SELECT `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`weight_kg` = 169
SELECT C.colour FROM superhero AS S INNER JOIN race AS R ON S.race_id = R.id INNER JOIN colour AS C ON S.hair_colour_id = C.id WHERE S.height_cm = 185 AND R.race = 'human'
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` ORDER BY `superhero`.`weight_kg` DESC LIMIT 1
SELECT CAST(COUNT(CASE WHEN `publisher`.`publisher_name` = 'Marvel Comics' THEN `superhero`.`id` ELSE NULL END) AS REAL) * 100 / COUNT(`superhero`.`id`) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`height_cm` BETWEEN 150 AND 180;
SELECT `superhero_name` FROM `superhero` WHERE `gender_id` = (SELECT `id` FROM `gender` WHERE `gender` = 'Male') AND `weight_kg` > (SELECT AVG(`weight_kg`) * 0.79 FROM `superhero`)
SELECT `power_name` FROM `superpower` INNER JOIN `hero_power` ON `superpower`.`id` = `hero_power`.`power_id` GROUP BY `power_name` ORDER BY COUNT(`power_name`) DESC LIMIT 1
SELECT `ha`.`attribute_value` FROM `superhero` AS `s` INNER JOIN `hero_attribute` AS `ha` ON `s`.`id` = `ha`.`hero_id` WHERE `s`.`superhero_name` = 'Abomination'
SELECT T2.`power_name` FROM `hero_power` AS T1 INNER JOIN `superpower` AS T2 ON T1.`power_id` = T2.`id` WHERE T1.`hero_id` = 1
SELECT COUNT(DISTINCT T1.`hero_id`) FROM `hero_power` AS T1 INNER JOIN `superpower` AS T2 ON T1.`power_id` = T2.`id` WHERE T2.`power_name` = 'stealth'
SELECT S.`full_name` FROM `superhero` AS S INNER JOIN `hero_attribute` AS HA ON S.`id` = HA.`hero_id` INNER JOIN `attribute` AS A ON HA.`attribute_id` = A.`id` WHERE A.`attribute_name` = 'Strength' ORDER BY HA.`attribute_value` DESC LIMIT 1
SELECT COUNT(`superhero`.`id`) * 1.0 / SUM(`superhero`.`skin_colour_id` = 1) FROM `superhero` INNER JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` WHERE `colour`.`id` = 1
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `publisher` AS T2 ON T1.`publisher_id` = T2.`id` WHERE T2.`publisher_name` = 'Dark Horse Comics'
SELECT S.`superhero_name` FROM `superhero` AS S INNER JOIN `publisher` AS P ON S.`publisher_id` = P.`id` INNER JOIN `hero_attribute` AS HA ON S.`id` = HA.`hero_id` INNER JOIN `attribute` AS A ON HA.`attribute_id` = A.`id` WHERE P.`publisher_name` = 'Dark Horse Comics' AND A.`attribute_name` = 'durability' ORDER BY HA.`attribute_value` DESC LIMIT 1
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`full_name` = 'Abraham Sapien'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Flight'
SELECT `eye_colour`.`colour` AS `eyes`, `hair_colour`.`colour` AS `hair`, `skin_colour`.`colour` AS `skin` FROM `superhero` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` INNER JOIN `colour` AS `eye_colour` ON `superhero`.`eye_colour_id` = `eye_colour`.`id` INNER JOIN `colour` AS `hair_colour` ON `superhero`.`hair_colour_id` = `hair_colour`.`id` INNER JOIN `colour` AS `skin_colour` ON `superhero`.`skin_colour_id` = `skin_colour`.`id` WHERE `gender`.`gender` = 'Female' AND `publisher`.`publisher_name` = 'Dark Horse Comics'
SELECT T1.`superhero_name`, T4.`publisher_name` FROM `superhero` AS T1 INNER JOIN `colour` AS T2 ON T1.`eye_colour_id` = T2.`id` INNER JOIN `colour` AS T3 ON T1.`hair_colour_id` = T3.`id` INNER JOIN `publisher` AS T4 ON T1.`publisher_id` = T4.`id` WHERE T1.`eye_colour_id` = T1.`hair_colour_id` AND T1.`hair_colour_id` = T1.`skin_colour_id`
SELECT T2.`race` FROM `superhero` AS T1 INNER JOIN `race` AS T2 ON T1.`race_id` = T2.`id` WHERE T1.`superhero_name` = 'A-Bomb'
SELECT CAST(SUM(CASE WHEN C.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(S.gender_id) FROM superhero AS S INNER JOIN colour AS C ON S.skin_colour_id = C.id INNER JOIN gender AS G ON S.gender_id = G.id WHERE G.gender = 'Female'
SELECT `superhero`.`superhero_name`, `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`full_name` = 'Charles Chandler'
SELECT T2.gender FROM `superhero` AS T1 INNER JOIN `gender` AS T2 ON T1.gender_id = T2.id WHERE T1.superhero_name = 'Agent 13'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Adaptation';
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `hero_power` AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Amazo'
SELECT `power_name` FROM `superpower` INNER JOIN `hero_power` ON `superpower`.`id` = `hero_power`.`power_id` INNER JOIN `superhero` ON `hero_power`.`hero_id` = `superhero`.`id` WHERE `superhero`.`full_name` = 'Hunter Zolomon'
SELECT `height_cm` FROM `superhero` WHERE `eye_colour_id` = (SELECT `id` FROM `colour` WHERE `colour` = 'Amber')
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `colour` AS `eye_colour` ON `superhero`.`eye_colour_id` = `eye_colour`.`id` INNER JOIN `colour` AS `hair_colour` ON `superhero`.`hair_colour_id` = `hair_colour`.`id` WHERE `eye_colour`.`colour` = 'Black' AND `hair_colour`.`colour` = 'Black'
SELECT DISTINCT C.`colour` FROM `superhero` AS S INNER JOIN `colour` AS C ON S.`eye_colour_id` = C.`id` WHERE S.`skin_colour_id` = (SELECT `id` FROM `colour` WHERE `colour` = 'Gold')
SELECT `full_name` FROM `superhero` WHERE `race_id` = (SELECT `id` FROM `race` WHERE `race` = 'Vampire')
SELECT `superhero_name` FROM `superhero` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `alignment`.`alignment` = 'Neutral'
SELECT COUNT(DISTINCT `hero_id`) FROM `hero_attribute` WHERE `attribute_id` = (SELECT `id` FROM `attribute` WHERE `attribute_name` = 'Strength') AND `attribute_value` = (SELECT MAX(`attribute_value`) FROM `hero_attribute` WHERE `attribute_id` = (SELECT `id` FROM `attribute` WHERE `attribute_name` = 'Strength'))
SELECT `race`.`race`, `alignment`.`alignment` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `superhero`.`superhero_name` = 'Cameron Hicks'
SELECT (CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics') * 100) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Marvel Comics'
SELECT AVG(`superhero`.`weight_kg`) FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Alien'
SELECT (SELECT SUM(`weight_kg`) FROM `superhero` WHERE `full_name` = 'Emil Blonsky') - (SELECT SUM(`weight_kg`) FROM `superhero` WHERE `full_name` = 'Charles Chandler') AS `difference`
SELECT AVG(`height_cm`) FROM `superhero`
SELECT `power_name` FROM `superpower` JOIN `hero_power` ON `superpower`.`id` = `hero_power`.`power_id` JOIN `superhero` ON `hero_power`.`hero_id` = `superhero`.`id` WHERE `superhero_name` = 'Abomination'
SELECT COUNT(*) FROM `superhero` WHERE `race_id` = 21 AND `gender_id` = 1
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Speed' ORDER BY `hero_attribute`.`attribute_value` DESC LIMIT 1
SELECT COUNT(*) FROM `superhero` WHERE `alignment_id` = 3
SELECT `attribute`.`attribute_name`, `hero_attribute`.`attribute_value` FROM `hero_attribute` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` INNER JOIN `superhero` ON `hero_attribute`.`hero_id` = `superhero`.`id` WHERE `superhero`.`superhero_name` = '3-D Man'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `colour` AS `eye_colour` ON `superhero`.`eye_colour_id` = `eye_colour`.`id` INNER JOIN `colour` AS `hair_colour` ON `superhero`.`hair_colour_id` = `hair_colour`.`id` WHERE `eye_colour`.`colour` = 'Blue' AND `hair_colour`.`colour` = 'Brown'
SELECT DISTINCT T2.`publisher_name` FROM `superhero` AS T1 INNER JOIN `publisher` AS T2 ON T1.`publisher_id` = T2.`id` WHERE T1.`superhero_name` IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT COUNT(*) FROM `superhero` WHERE `publisher_id` = 1
SELECT CAST(SUM(CASE WHEN `colour`.`colour` = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`superhero`.`superhero_name`) FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `colour`.`colour` = 'Blue'
SELECT CAST(COUNT(CASE WHEN T2.gender = 'Female' THEN T1.id ELSE NULL END) AS REAL) / COUNT(CASE WHEN T2.gender = 'Male' THEN T1.id ELSE NULL END) AS ratio FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id
SELECT `superhero_name` FROM `superhero` ORDER BY `height_cm` DESC LIMIT 1
SELECT `id` FROM `superpower` WHERE `power_name` = 'cryokinesis'
SELECT `superhero_name` FROM `superhero` WHERE `id` = 294
SELECT `full_name` FROM `superhero` WHERE `weight_kg` = 0 OR `weight_kg` IS NULL
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`full_name` = 'Karen Beecher-Duncan'
SELECT T2.`power_name` FROM `superhero` AS T1 INNER JOIN `hero_power` AS T3 ON T1.`id` = T3.`hero_id` INNER JOIN `superpower` AS T2 ON T3.`power_id` = T2.`id` WHERE T1.`full_name` = 'Helen Parr'
SELECT `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`weight_kg` = 108 AND `superhero`.`height_cm` = 188
SELECT T2.`publisher_name` FROM `superhero` AS T1 INNER JOIN `publisher` AS T2 ON T1.`publisher_id` = T2.`id` WHERE T1.`id` = 38
SELECT `race`.`race` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` ORDER BY `hero_attribute`.`attribute_value` DESC LIMIT 1
SELECT `alignment`.`alignment`, `superpower`.`power_name` FROM `superhero` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`superhero_name` = 'Atom IV'
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `colour`.`colour` = 'Blue' LIMIT 5
SELECT AVG(`hero_attribute`.`attribute_value`) FROM `hero_attribute` INNER JOIN `superhero` ON `hero_attribute`.`hero_id` = `superhero`.`id` WHERE `superhero`.`alignment_id` = 3
SELECT DISTINCT `colour`.`colour` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` WHERE `hero_attribute`.`attribute_value` = 100
SELECT COUNT(*) FROM `superhero` WHERE `gender_id` = 2 AND `alignment_id` = 1
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` WHERE `hero_attribute`.`attribute_value` BETWEEN 75 AND 80
SELECT T3.`race` FROM `superhero` AS T1 INNER JOIN `colour` AS T2 ON T1.`hair_colour_id` = T2.`id` INNER JOIN `gender` AS T4 ON T1.`gender_id` = T4.`id` INNER JOIN `race` AS T3 ON T1.`race_id` = T3.`id` WHERE T2.`colour` = 'blue' AND T4.`gender` = 'Male'
SELECT (CAST(SUM(CASE WHEN `gender`.`id` = 2 THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100.0 AS percentage FROM `superhero` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `alignment`.`id` = 2
SELECT COUNT(CASE WHEN T1.eye_colour_id = 7 THEN 1 ELSE NULL END) - COUNT(CASE WHEN T1.eye_colour_id = 1 THEN 1 ELSE NULL END) FROM `superhero` AS T1 WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL
SELECT `ha`.`attribute_value` FROM `hero_attribute` AS `ha` INNER JOIN `superhero` AS `s` ON `ha`.`hero_id` = `s`.`id` INNER JOIN `attribute` AS `a` ON `ha`.`attribute_id` = `a`.`id` WHERE `s`.`superhero_name` = 'Hulk' AND `a`.`attribute_name` = 'Strength'
SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = 'Ajax'
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `colour` AS T2 ON T1.`skin_colour_id` = T2.`id` INNER JOIN `alignment` AS T3 ON T1.`alignment_id` = T3.`id` WHERE T2.`colour` = 'Green' AND T3.`alignment` = 'Bad'
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `gender` AS T2 ON T1.`gender_id` = T2.`id` INNER JOIN `publisher` AS T3 ON T1.`publisher_id` = T3.`id` WHERE T2.`gender` = 'Female' AND T3.`publisher_name` = 'Marvel Comics'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Wind Control' ORDER BY `superhero`.`superhero_name` ASC
SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T4.power_name = 'Phoenix Force'
SELECT `superhero_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'DC Comics' ORDER BY `superhero`.`weight_kg` DESC LIMIT 1
SELECT AVG(`superhero`.`height_cm`) FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `race`.`race` <> 'Human' AND `publisher`.`publisher_name` = 'Dark Horse Comics';
SELECT COUNT(*) FROM `superhero` AS S INNER JOIN `hero_attribute` AS HA ON S.`id` = HA.`hero_id` INNER JOIN `attribute` AS A ON HA.`attribute_id` = A.`id` WHERE A.`attribute_name` = 'Speed' AND HA.`attribute_value` = 100
SELECT COUNT(CASE WHEN `publisher`.`publisher_name` = 'DC Comics' THEN `superhero`.`id` ELSE NULL END) - COUNT(CASE WHEN `publisher`.`publisher_name` = 'Marvel Comics' THEN `superhero`.`id` ELSE NULL END) AS difference FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id`
SELECT `attribute`.`attribute_name` FROM `hero_attribute` INNER JOIN `superhero` ON `hero_attribute`.`hero_id` = `superhero`.`id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `superhero`.`superhero_name` = 'Black Panther' ORDER BY `hero_attribute`.`attribute_value` ASC LIMIT 1
SELECT `colour`.`colour` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`superhero_name` = 'Abomination'
SELECT `superhero_name` FROM `superhero` ORDER BY `height_cm` DESC LIMIT 1
SELECT `superhero_name` FROM `superhero` WHERE `full_name` = 'Charles Chandler'
SELECT CAST(COUNT(CASE WHEN `T2`.`gender` = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(`T2`.`gender`) FROM `superhero` AS `T1` INNER JOIN `gender` AS `T2` ON `T1`.`gender_id` = `T2`.`id` INNER JOIN `publisher` AS `T3` ON `T1`.`publisher_id` = `T3`.`id` WHERE `T3`.`publisher_name` = 'George Lucas'
SELECT CAST(SUM(CASE WHEN T2.alignment = 'Good' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T3.publisher_name = 'Marvel Comics'
SELECT COUNT(*) FROM `superhero` WHERE `full_name` LIKE 'John%';
SELECT `hero_id` FROM `hero_attribute` ORDER BY `attribute_value` ASC LIMIT 1
SELECT `full_name` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Alien'
SELECT `full_name` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `weight_kg` < 100 AND `colour`.`colour` = 'Brown'
SELECT `attribute_value` FROM `hero_attribute` WHERE `hero_id` = (SELECT `id` FROM `superhero` WHERE `superhero_name` = 'Aquababy')
SELECT `superhero`.`weight_kg`, `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`id` = 40
SELECT AVG(`height_cm`) FROM `superhero` WHERE `alignment_id` = (SELECT `id` FROM `alignment` WHERE `alignment` = 'Neutral')
SELECT `hero_id` FROM `hero_attribute` WHERE `attribute_id` = (SELECT `id` FROM `attribute` WHERE `attribute_name` = 'Intelligence')
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`superhero_name` = 'Blackwulf'
SELECT DISTINCT `sp`.`power_name` FROM `superpower` AS `sp` INNER JOIN `hero_power` AS `hp` ON `sp`.`id` = `hp`.`power_id` INNER JOIN `superhero` AS `sh` ON `hp`.`hero_id` = `sh`.`id` WHERE `sh`.`height_cm` > (SELECT AVG(`height_cm`) * 0.8 FROM `superhero`)
SELECT `d`.`driverref` FROM `qualifying` AS `q` INNER JOIN `drivers` AS `d` ON `q`.`driverid` = `d`.`driverid` WHERE `q`.`raceid` = 20 ORDER BY `q`.`q1` DESC LIMIT 5
SELECT `d`.`surname` FROM `qualifying` AS `q` INNER JOIN `drivers` AS `d` ON `q`.`driverid` = `d`.`driverid` WHERE `q`.`raceid` = 19 ORDER BY `q`.`q2` ASC LIMIT 1
SELECT DISTINCT `r`.`year` FROM `races` AS `r` INNER JOIN `circuits` AS `c` ON `r`.`circuitid` = `c`.`circuitid` WHERE `c`.`location` = 'Shanghai'
SELECT `races`.`url` FROM `races` INNER JOIN `circuits` ON `races`.`circuitid` = `circuits`.`circuitid` WHERE `circuits`.`name` = 'Circuit de Barcelona-Catalunya'
SELECT T2.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitid = T2.circuitid WHERE T1.country = 'Germany'
SELECT DISTINCT `position` FROM `results` WHERE `constructorid` = (SELECT `constructorid` FROM `constructors` WHERE `name` = 'Renault')
SELECT COUNT(*) FROM `races` AS R INNER JOIN `circuits` AS C ON R.`circuitid` = C.`circuitid` WHERE R.`year` = 2010 AND C.`country` NOT IN ('Asia', 'Europe')
SELECT T2.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitid = T2.circuitid WHERE T1.country = 'Spain'
SELECT `lat`, `lng` FROM `circuits` WHERE `circuitid` = (SELECT `circuitid` FROM `races` WHERE `name` = 'Australian Grand Prix')
SELECT `races`.`url` FROM `races` INNER JOIN `circuits` ON `races`.`circuitid` = `circuits`.`circuitid` WHERE `circuits`.`name` = 'Sepang International Circuit'
SELECT `races`.`time` FROM `races` JOIN `circuits` ON `races`.`circuitid` = `circuits`.`circuitid` WHERE `circuits`.`name` = 'Sepang International Circuit'
SELECT `circuits`.`lat`, `circuits`.`lng` FROM `races` INNER JOIN `circuits` ON `races`.`circuitid` = `circuits`.`circuitid` WHERE `races`.`name` = 'Abu Dhabi Grand Prix'
SELECT `c`.`nationality` FROM `constructorresults` AS `cr` INNER JOIN `constructors` AS `c` ON `cr`.`constructorid` = `c`.`constructorid` WHERE `cr`.`raceid` = 24 AND `cr`.`points` = 1
SELECT `q1` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverid` = `drivers`.`driverid` WHERE `drivers`.`forename` = 'Bruno' AND `drivers`.`surname` = 'Senna' AND `qualifying`.`raceid` = 354
SELECT `d`.`nationality` FROM `qualifying` AS `q` INNER JOIN `drivers` AS `d` ON `q`.`driverid` = `d`.`driverid` WHERE `q`.`raceid` = 355 AND `q`.`q2` = '0:01:40'
SELECT `number` FROM `qualifying` WHERE `raceid` = 903 AND `q3` LIKE '1:54%'
SELECT COUNT(DISTINCT `driverid`) FROM `races` INNER JOIN `results` ON `races`.`raceid` = `results`.`raceid` WHERE `races`.`name` = 'Bahrain Grand Prix' AND `races`.`year` = 2007 AND `results`.`time` IS NULL
SELECT `seasons`.`url` FROM `races` INNER JOIN `seasons` ON `races`.`year` = `seasons`.`year` WHERE `races`.`raceid` = 901
SELECT COUNT(DISTINCT `driverid`) FROM `results` INNER JOIN `races` ON `results`.`raceid` = `races`.`raceid` WHERE `races`.`date` = '2015-11-29' AND `results`.`statusid` = (SELECT `statusid` FROM `status` WHERE `status` = 'Finished')
SELECT `forename`, `surname` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverid` = `results`.`driverid` WHERE `results`.`raceid` = 592 AND `results`.`time` IS NOT NULL ORDER BY `drivers`.`dob` ASC LIMIT 1
SELECT `drivers`.`url` FROM `laptimes` INNER JOIN `drivers` ON `laptimes`.`driverid` = `drivers`.`driverid` WHERE `laptimes`.`raceid` = 161 AND `laptimes`.`time` LIKE '1:27%'
SELECT `d`.`nationality` FROM `results` AS `r` INNER JOIN `drivers` AS `d` ON `r`.`driverid` = `d`.`driverid` WHERE `r`.`raceid` = 933 ORDER BY `r`.`fastestlapspeed` DESC LIMIT 1
SELECT T2.lat, T2.lng FROM `races` AS T1 INNER JOIN `circuits` AS T2 ON T1.circuitid = T2.circuitid WHERE T1.name = 'Malaysian Grand Prix'
SELECT `constructors`.`url` FROM `constructorresults` INNER JOIN `constructors` ON `constructorresults`.`constructorid` = `constructors`.`constructorid` WHERE `constructorresults`.`raceid` = 9 ORDER BY `constructorresults`.`points` DESC LIMIT 1
SELECT `q1` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverid` = `drivers`.`driverid` WHERE `drivers`.`forename` = 'Lucas' AND `drivers`.`surname` = 'di Grassi' AND `qualifying`.`raceid` = 345
SELECT `d`.`nationality` FROM `qualifying` AS `q` INNER JOIN `drivers` AS `d` ON `q`.`driverid` = `d`.`driverid` WHERE `q`.`q2` = '0:01:15' AND `q`.`raceid` = 347
SELECT `d`.`code` FROM `qualifying` AS `q` INNER JOIN `drivers` AS `d` ON `q`.`driverid` = `d`.`driverid` WHERE `q`.`raceid` = 45 AND `q`.`q3` LIKE '1:33%'
SELECT T1.time FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverid = T2.driverid WHERE T2.forename = 'Bruce' AND T2.surname = 'McLaren' AND T1.raceid = 743
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `results` INNER JOIN `races` ON `results`.`raceid` = `races`.`raceid` INNER JOIN `drivers` ON `results`.`driverid` = `drivers`.`driverid` WHERE `races`.`name` = 'San Marino Grand Prix' AND `races`.`year` = 2006 AND `results`.`position` = 2
SELECT `seasons`.`url` FROM `seasons` INNER JOIN `races` ON `seasons`.`year` = `races`.`year` WHERE `races`.`raceid` = 901
SELECT COUNT(*) FROM `results` AS r INNER JOIN `races` AS ra ON r.`raceid` = ra.`raceid` INNER JOIN `status` AS s ON r.`statusid` = s.`statusid` WHERE ra.`date` = '2015-11-29' AND s.`status` != 'Finished'
SELECT `forename`, `surname` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverid` = `results`.`driverid` WHERE `results`.`raceid` = 872 AND `results`.`time` IS NOT NULL ORDER BY `drivers`.`dob` DESC LIMIT 1
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `laptimes` INNER JOIN `drivers` ON `laptimes`.`driverid` = `drivers`.`driverid` WHERE `laptimes`.`raceid` = 348 ORDER BY `laptimes`.`time` ASC LIMIT 1
SELECT `d`.`nationality` FROM `results` AS `r` INNER JOIN `drivers` AS `d` ON `r`.`driverid` = `d`.`driverid` ORDER BY `r`.`fastestlapspeed` DESC LIMIT 1
SELECT (MAX(CASE WHEN `raceid` = 853 THEN `fastestlapspeed` ELSE NULL END) - MAX(CASE WHEN `raceid` = 854 THEN `fastestlapspeed` ELSE NULL END)) * 100.0 / MAX(CASE WHEN `raceid` = 853 THEN `fastestlapspeed` ELSE NULL END) AS percentage FROM `results` INNER JOIN `drivers` ON `results`.`driverid` = `drivers`.`driverid` WHERE `drivers`.`forename` = 'Paul' AND `drivers`.`surname` = 'di Resta'
SELECT CAST(COUNT(`driverid`) AS REAL) / (SELECT COUNT(`driverid`) FROM `results` WHERE `raceid` IN (SELECT `raceid` FROM `races` WHERE `date` = '1983-07-16')) * 100 AS percentage FROM `results` WHERE `raceid` IN (SELECT `raceid` FROM `races` WHERE `date` = '1983-07-16') AND `time` IS NOT NULL
SELECT `year` FROM `races` WHERE `name` = 'Singapore Grand Prix' ORDER BY `year` ASC LIMIT 1
SELECT `name` FROM `races` WHERE `year` = 2005 ORDER BY `name` DESC
SELECT `name` FROM `races` WHERE strftime('%Y-%m', `date`) = (SELECT strftime('%Y-%m', MIN(`date`)) FROM `races`)
SELECT `name`, `date` FROM `races` WHERE `year` = 1999 AND `round` = (SELECT MAX(`round`) FROM `races` WHERE `year` = 1999)
SELECT `year` FROM `races` GROUP BY `year` ORDER BY COUNT(`round`) DESC LIMIT 1
SELECT `name` FROM `races` WHERE `year` = 2017 AND `name` NOT IN (SELECT `name` FROM `races` WHERE `year` = 2000)
SELECT C.`country`, C.`name`, C.`location` FROM `races` AS R INNER JOIN `circuits` AS C ON R.`circuitid` = C.`circuitid` WHERE R.`name` = 'European Grand Prix' ORDER BY R.`year` ASC LIMIT 1
SELECT MAX(`year`) FROM `races` AS R INNER JOIN `circuits` AS C ON R.`circuitid` = C.`circuitid` WHERE C.`name` = 'Brands Hatch' AND R.`name` = 'British Grand Prix'
SELECT COUNT(DISTINCT `year`) FROM `races` AS R INNER JOIN `circuits` AS C ON R.`circuitid` = C.`circuitid` WHERE C.`name` = 'Silverstone Circuit' AND R.`name` LIKE '%British Grand Prix%'
SELECT D.`forename`, D.`surname` FROM `drivers` D INNER JOIN `results` R ON D.`driverid` = R.`driverid` INNER JOIN `races` RA ON R.`raceid` = RA.`raceid` WHERE RA.`name` = 'Singapore Grand Prix' AND RA.`year` = 2010 ORDER BY R.`position`
SELECT `drivers`.`forename`, `drivers`.`surname`, MAX(`driverstandings`.`points`) FROM `driverstandings` INNER JOIN `drivers` ON `driverstandings`.`driverid` = `drivers`.`driverid` GROUP BY `drivers`.`forename`, `drivers`.`surname` ORDER BY MAX(`driverstandings`.`points`) DESC LIMIT 1
SELECT D.`forename`, D.`surname`, R.`points` FROM `results` AS R INNER JOIN `drivers` AS D ON R.`driverid` = D.`driverid` INNER JOIN `races` AS RA ON R.`raceid` = RA.`raceid` WHERE RA.`year` = 2017 AND RA.`name` = 'Chinese Grand Prix' ORDER BY R.`points` DESC LIMIT 3
SELECT `drivers`.`forename`, `drivers`.`surname`, `races`.`name`, `laptimes`.`time` FROM `laptimes` INNER JOIN `drivers` ON `laptimes`.`driverid` = `drivers`.`driverid` INNER JOIN `races` ON `laptimes`.`raceid` = `races`.`raceid` WHERE `laptimes`.`milliseconds` = (SELECT MIN(`milliseconds`) FROM `laptimes`)
SELECT AVG(`laptimes`.`milliseconds`) FROM `laptimes` INNER JOIN `drivers` ON `laptimes`.`driverid` = `drivers`.`driverid` INNER JOIN `races` ON `laptimes`.`raceid` = `races`.`raceid` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' AND `races`.`name` = 'Malaysian Grand Prix' AND `races`.`year` = 2009
SELECT CAST(SUM(CASE WHEN `position` > 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`raceid`) FROM `results` INNER JOIN `drivers` ON `results`.`driverid` = `drivers`.`driverid` INNER JOIN `races` ON `results`.`raceid` = `races`.`raceid` WHERE `drivers`.`surname` = 'Hamilton' AND `races`.`year` >= 2010
SELECT D.forename, D.surname, D.nationality, MAX(DS.points) FROM driverstandings AS DS INNER JOIN drivers AS D ON DS.driverid = D.driverid WHERE DS.wins = (SELECT MAX(wins) FROM driverstandings) GROUP BY D.driverid
SELECT `forename`, `surname`, (strftime('%Y', 'now') - strftime('%Y', `dob`)) AS `age` FROM `drivers` WHERE `nationality` = 'Japanese' ORDER BY `dob` DESC LIMIT 1
SELECT `c`.`name` FROM `circuits` AS `c` INNER JOIN `races` AS `r` ON `c`.`circuitid` = `r`.`circuitid` WHERE `r`.`year` BETWEEN 1990 AND 2000 GROUP BY `c`.`name` HAVING COUNT(`r`.`raceid`) = 4
SELECT T1.`name`, T1.`location`, T3.`name` FROM `circuits` AS T1 INNER JOIN `races` AS T3 ON T1.`circuitid` = T3.`circuitid` INNER JOIN `seasons` AS T2 ON T3.`year` = T2.`year` WHERE T1.`country` = 'USA' AND T3.`year` = 2006
SELECT T3.`name` AS race_name, T2.`name` AS circuit_name, T2.`location` FROM `races` AS T3 INNER JOIN `circuits` AS T2 ON T3.`circuitid` = T2.`circuitid` WHERE strftime('%m', T3.`date`) = '09' AND strftime('%Y', T3.`date`) = '2005'
SELECT `races`.`name` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverid` = `results`.`driverid` INNER JOIN `races` ON `results`.`raceid` = `races`.`raceid` WHERE `drivers`.`forename` = 'Alex' AND `drivers`.`surname` = 'Yoong' AND `results`.`position` < 20
SELECT COUNT(*) FROM (SELECT T1.`raceid`, MAX(T3.`points`) AS max_points FROM `races` AS T1 INNER JOIN `circuits` AS T2 ON T1.`circuitid` = T2.`circuitid` INNER JOIN `results` AS T3 ON T1.`raceid` = T3.`raceid` INNER JOIN `drivers` AS T4 ON T3.`driverid` = T4.`driverid` WHERE T2.`name` = 'Sepang International Circuit' AND T4.`forename` = 'Michael' AND T4.`surname` = 'Schumacher' GROUP BY T1.`raceid`) AS subquery WHERE subquery.max_points = (SELECT MAX(T3.`points`) FROM `results` AS T3 WHERE T3.`raceid` = subquery.`raceid`)
SELECT `races`.`name`, `races`.`year` FROM `laptimes` INNER JOIN `drivers` ON `laptimes`.`driverid` = `drivers`.`driverid` INNER JOIN `races` ON `laptimes`.`raceid` = `races`.`raceid` WHERE `drivers`.`forename` = 'Michael' AND `drivers`.`surname` = 'Schumacher' ORDER BY `laptimes`.`milliseconds` ASC LIMIT 1
SELECT AVG(`points`) FROM `results` AS R INNER JOIN `drivers` AS D ON R.`driverid` = D.`driverid` INNER JOIN `races` AS RA ON R.`raceid` = RA.`raceid` WHERE D.`forename` = 'Eddie' AND D.`surname` = 'Irvine' AND RA.`year` = 2000
SELECT `r`.`name`, `res`.`points` FROM `drivers` AS `d` INNER JOIN `results` AS `res` ON `d`.`driverid` = `res`.`driverid` INNER JOIN `races` AS `r` ON `res`.`raceid` = `r`.`raceid` WHERE `d`.`forename` = 'Lewis' AND `d`.`surname` = 'Hamilton' AND `r`.`year` = (SELECT MIN(`r2`.`year`) FROM `drivers` AS `d2` INNER JOIN `results` AS `res2` ON `d2`.`driverid` = `res2`.`driverid` INNER JOIN `races` AS `r2` ON `res2`.`raceid` = `r2`.`raceid` WHERE `d2`.`forename` = 'Lewis' AND `d2`.`surname` = 'Hamilton')
SELECT T1.name, T2.country FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T1.year = 2017 ORDER BY T1.date
SELECT `r`.`name`, `r`.`year`, `c`.`location` FROM `races` AS `r` INNER JOIN `results` AS `res` ON `r`.`raceid` = `res`.`raceid` INNER JOIN `circuits` AS `c` ON `r`.`circuitid` = `c`.`circuitid` ORDER BY `res`.`laps` DESC LIMIT 1
SELECT CAST(SUM(CASE WHEN `circuits`.`country` = 'Germany' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`races`.`raceid`) FROM `races` INNER JOIN `circuits` ON `races`.`circuitid` = `circuits`.`circuitid` WHERE `races`.`name` = 'European Grand Prix'
SELECT `lat`, `lng` FROM `circuits` WHERE `name` = 'Silverstone Circuit'
SELECT `name` FROM `circuits` WHERE `name` IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY `lat` DESC LIMIT 1
SELECT `circuitref` FROM `circuits` WHERE `name` = 'Marina Bay Street Circuit'
SELECT `country` FROM `circuits` ORDER BY `alt` DESC LIMIT 1
SELECT COUNT(`driverid`) FROM `drivers` WHERE `code` IS NULL
SELECT `nationality` FROM `drivers` ORDER BY `dob` LIMIT 1
SELECT `surname` FROM `drivers` WHERE `nationality` = 'Italian'
SELECT `url` FROM `drivers` WHERE `forename` = 'Anthony' AND `surname` = 'Davidson'
SELECT `driverref` FROM `drivers` WHERE `forename` = 'Lewis' AND `surname` = 'Hamilton'
SELECT `circuits`.`name` FROM `races` INNER JOIN `circuits` ON `races`.`circuitid` = `circuits`.`circuitid` WHERE `races`.`year` = 2009 AND `races`.`name` = 'Spanish Grand Prix'
SELECT DISTINCT `races`.`year` FROM `races` INNER JOIN `circuits` ON `races`.`circuitid` = `circuits`.`circuitid` WHERE `circuits`.`name` = 'Silverstone Circuit'
SELECT `races`.`name`, `races`.`date`, `races`.`time`, `races`.`url` FROM `races` INNER JOIN `circuits` ON `races`.`circuitid` = `circuits`.`circuitid` WHERE `circuits`.`name` = 'Silverstone Circuit'
SELECT `time` FROM `races` WHERE `year` = 2010 AND `circuitid` = (SELECT `circuitid` FROM `circuits` WHERE `name` = 'Abu Dhabi Circuit')
SELECT COUNT(*) FROM `races` AS r INNER JOIN `circuits` AS c ON r.`circuitid` = c.`circuitid` WHERE c.`country` = 'Italy'
SELECT `date` FROM `races` WHERE `circuitid` = (SELECT `circuitid` FROM `circuits` WHERE `name` = 'Circuit de Barcelona-Catalunya')
SELECT `circuits`.`url` FROM `races` INNER JOIN `circuits` ON `races`.`circuitid` = `circuits`.`circuitid` WHERE `races`.`name` = 'Spanish Grand Prix' AND `races`.`year` = 2009
SELECT MIN(`T2`.`fastestlaptime`) FROM `drivers` AS `T1` INNER JOIN `results` AS `T2` ON `T1`.`driverid` = `T2`.`driverid` WHERE `T1`.`forename` = 'Lewis' AND `T1`.`surname` = 'Hamilton'
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverid` = `results`.`driverid` ORDER BY `results`.`fastestlapspeed` DESC LIMIT 1
SELECT `D`.`driverref` FROM `results` AS `R` INNER JOIN `drivers` AS `D` ON `R`.`driverid` = `D`.`driverid` INNER JOIN `races` AS `RA` ON `R`.`raceid` = `RA`.`raceid` WHERE `RA`.`name` = 'Canadian Grand Prix' AND `RA`.`year` = 2007 AND `R`.`position` = 1
SELECT DISTINCT `r`.`name` FROM `drivers` AS `d` INNER JOIN `results` AS `res` ON `d`.`driverid` = `res`.`driverid` INNER JOIN `races` AS `r` ON `res`.`raceid` = `r`.`raceid` WHERE `d`.`forename` = 'Lewis' AND `d`.`surname` = 'Hamilton'
SELECT `races`.`name` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverid` = `results`.`driverid` INNER JOIN `races` ON `results`.`raceid` = `races`.`raceid` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' ORDER BY `results`.`rank` ASC LIMIT 1
SELECT MAX(`fastestlapspeed`) FROM `results` AS R INNER JOIN `races` AS RA ON R.`raceid` = RA.`raceid` WHERE RA.`year` = 2009 AND RA.`name` = 'Spanish Grand Prix'
SELECT DISTINCT `races`.`year` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverid` = `results`.`driverid` INNER JOIN `races` ON `results`.`raceid` = `races`.`raceid` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT `R`.`positionorder` FROM `drivers` AS `D` INNER JOIN `results` AS `R` ON `D`.`driverid` = `R`.`driverid` INNER JOIN `races` AS `RA` ON `R`.`raceid` = `RA`.`raceid` WHERE `D`.`forename` = 'Lewis' AND `D`.`surname` = 'Hamilton' AND `RA`.`name` = 'Chinese Grand Prix' AND `RA`.`year` = 2008
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `results` INNER JOIN `races` ON `results`.`raceid` = `races`.`raceid` INNER JOIN `drivers` ON `results`.`driverid` = `drivers`.`driverid` WHERE `races`.`year` = 1989 AND `races`.`name` = 'Australian Grand Prix' AND `results`.`grid` = 4
SELECT COUNT(DISTINCT `driverid`) FROM `results` WHERE `raceid` = (SELECT `raceid` FROM `races` WHERE `name` = 'Australian Grand Prix' AND `year` = 2008) AND `time` IS NOT NULL
SELECT MIN(`laptimes`.`time`) FROM `laptimes` INNER JOIN `drivers` ON `laptimes`.`driverid` = `drivers`.`driverid` INNER JOIN `races` ON `laptimes`.`raceid` = `races`.`raceid` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' AND `races`.`name` = 'Australian Grand Prix' AND `races`.`year` = 2008
SELECT `R`.`time` FROM `results` AS `R` INNER JOIN `races` AS `RA` ON `R`.`raceid` = `RA`.`raceid` WHERE `RA`.`year` = 2008 AND `RA`.`name` = 'Chinese Grand Prix' AND `R`.`position` = 2
SELECT `drivers`.`forename`, `drivers`.`surname`, `drivers`.`url` FROM `results` INNER JOIN `races` ON `results`.`raceid` = `races`.`raceid` INNER JOIN `drivers` ON `results`.`driverid` = `drivers`.`driverid` WHERE `races`.`year` = 2008 AND `races`.`name` = 'Australian Grand Prix' AND `results`.`position` = 1
SELECT COUNT(DISTINCT `T1`.`driverid`) FROM `drivers` AS `T1` INNER JOIN `results` AS `T2` ON `T1`.`driverid` = `T2`.`driverid` INNER JOIN `races` AS `T3` ON `T2`.`raceid` = `T3`.`raceid` WHERE `T1`.`nationality` = 'British' AND `T3`.`name` = 'Australian Grand Prix' AND `T3`.`year` = 2008
SELECT COUNT(DISTINCT `d`.`driverid`) FROM `drivers` AS `d` INNER JOIN `results` AS `r` ON `d`.`driverid` = `r`.`driverid` INNER JOIN `races` AS `ra` ON `r`.`raceid` = `ra`.`raceid` WHERE `ra`.`name` = 'Chinese Grand Prix' AND `ra`.`year` = 2008 AND `r`.`time` IS NOT NULL
SELECT SUM(`points`) FROM `results` JOIN `drivers` ON `results`.`driverid` = `drivers`.`driverid` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT AVG(strftime('%s', `fastestlaptime`) - strftime('%s', '00:00:00')) FROM `results` AS R INNER JOIN `drivers` AS D ON R.`driverid` = D.`driverid` WHERE D.`forename` = 'Lewis' AND D.`surname` = 'Hamilton'
SELECT CAST(SUM(CASE WHEN `time` IS NOT NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(`raceid`) FROM `results` WHERE `raceid` = (SELECT `raceid` FROM `races` WHERE `year` = 2008 AND `name` = 'Australian Grand Prix')
SELECT (CAST((julianday('2000-01-01 ' || (SELECT `time` FROM `results` WHERE `raceid` = (SELECT `raceid` FROM `races` WHERE `year` = 2008 AND `name` = 'Australian Grand Prix') AND `position` = 1)) - julianday('2000-01-01 ' || (SELECT `time` FROM `results` WHERE `raceid` = (SELECT `raceid` FROM `races` WHERE `year` = 2008 AND `name` = 'Australian Grand Prix') AND `position` = (SELECT MAX(`position`) FROM `results` WHERE `raceid` = (SELECT `raceid` FROM `races` WHERE `year` = 2008 AND `name` = 'Australian Grand Prix') AND `time` IS NOT NULL)))) AS REAL) / julianday('2000-01-01 ' || (SELECT `time` FROM `results` WHERE `raceid` = (SELECT `raceid` FROM `races` WHERE `year` = 2008 AND `name` = 'Australian Grand Prix') AND `position` = (SELECT MAX(`position`) FROM `results` WHERE `raceid` = (SELECT `raceid` FROM `races` WHERE `year` = 2008 AND `name` = 'Australian Grand Prix') AND `time` IS NOT NULL))) * 100 AS `percentage_faster`
SELECT COUNT(`circuitid`) FROM `circuits` WHERE `location` = 'Adelaide' AND `country` = 'Australia'
SELECT `lat`, `lng` FROM `circuits` WHERE `country` = 'USA'
SELECT COUNT(`driverid`) FROM `drivers` WHERE `nationality` = 'British' AND STRFTIME('%Y', `dob`) > '1980'
SELECT MAX(`points`) FROM `constructors` AS C INNER JOIN `constructorresults` AS CR ON C.`constructorid` = CR.`constructorid` WHERE C.`nationality` = 'British'
SELECT `name` FROM `constructors` WHERE `constructorid` = (SELECT `constructorid` FROM `constructorstandings` ORDER BY `points` DESC LIMIT 1)
SELECT `constructors`.`name` FROM `constructors` INNER JOIN `constructorresults` ON `constructors`.`constructorid` = `constructorresults`.`constructorid` WHERE `constructorresults`.`raceid` = 291 AND `constructorresults`.`points` = 0
SELECT COUNT(DISTINCT T1.constructorid) FROM constructors AS T1 INNER JOIN constructorresults AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = 'Japanese' GROUP BY T2.constructorid HAVING SUM(T2.points = 0) = 2
SELECT DISTINCT `name` FROM `constructors` AS c INNER JOIN `constructorstandings` AS cs ON c.`constructorid` = cs.`constructorid` WHERE cs.`position` = 1
SELECT COUNT(DISTINCT `T1`.`constructorid`) FROM `constructors` AS `T1` INNER JOIN `results` AS `T2` ON `T1`.`constructorid` = `T2`.`constructorid` WHERE `T1`.`nationality` = 'French' AND `T2`.`laps` > 50
SELECT CAST(SUM(CASE WHEN `D`.`nationality` = 'Japanese' AND `R`.`time` IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `results` AS `R` INNER JOIN `drivers` AS `D` ON `R`.`driverid` = `D`.`driverid` INNER JOIN `races` AS `RA` ON `R`.`raceid` = `RA`.`raceid` WHERE `RA`.`year` BETWEEN 2007 AND 2009
SELECT AVG(strftime('%s', `time`) - strftime('%s', '00:00:00')) AS avg_time_seconds, `year` FROM `races` WHERE `time` IS NOT NULL AND `year` < 1975 GROUP BY `year`
SELECT D.forename, D.surname FROM drivers AS D INNER JOIN driverstandings AS DS ON D.driverid = DS.driverid WHERE STRFTIME('%Y', D.dob) > '1975' AND DS.position = 2
SELECT COUNT(DISTINCT `d`.`driverid`) FROM `drivers` AS `d` INNER JOIN `results` AS `r` ON `d`.`driverid` = `r`.`driverid` WHERE `d`.`nationality` = 'Italian' AND `r`.`time` IS NULL
SELECT `d`.`forename`, `d`.`surname` FROM `drivers` AS `d` INNER JOIN `results` AS `r` ON `d`.`driverid` = `r`.`driverid` ORDER BY `r`.`fastestlaptime` ASC LIMIT 1
SELECT `fastestlap` FROM `results` AS R INNER JOIN `races` AS RA ON R.`raceid` = RA.`raceid` WHERE RA.`year` = 2009 AND R.`position` = 1 LIMIT 1
SELECT AVG(`fastestlapspeed`) FROM `results` AS R INNER JOIN `races` AS RA ON R.`raceid` = RA.`raceid` WHERE RA.`year` = 2009 AND RA.`name` = 'Spanish Grand Prix'
SELECT `races`.`name`, `races`.`year` FROM `races` INNER JOIN `results` ON `races`.`raceid` = `results`.`raceid` WHERE `results`.`milliseconds` IS NOT NULL ORDER BY `results`.`milliseconds` ASC LIMIT 1
SELECT CAST(COUNT(CASE WHEN strftime('%Y', `d`.`dob`) < '1985' AND `r`.`laps` > 50 THEN 1 END) AS REAL) * 100 / COUNT(`d`.`driverid`) FROM `drivers` AS `d` INNER JOIN `results` AS `r` ON `d`.`driverid` = `r`.`driverid` INNER JOIN `races` AS `ra` ON `r`.`raceid` = `ra`.`raceid` WHERE `ra`.`year` BETWEEN 2000 AND 2005;
SELECT COUNT(DISTINCT T1.`driverid`) FROM `drivers` AS T1 INNER JOIN `laptimes` AS T2 ON T1.`driverid` = T2.`driverid` WHERE T1.`nationality` = 'French' AND T2.`milliseconds` < 120000
SELECT `code` FROM `drivers` WHERE `nationality` = 'America'
SELECT `raceid` FROM `races` WHERE `year` = 2009
SELECT COUNT(DISTINCT `driverid`) FROM `results` WHERE `raceid` = 18
SELECT COUNT(*) FROM (SELECT `code` FROM `drivers` WHERE `nationality` = 'Dutch' ORDER BY `dob` DESC LIMIT 3) AS top3_youngest_dutch
SELECT `driverref` FROM `drivers` WHERE `forename` = 'Robert' AND `surname` = 'Kubica'
SELECT COUNT(`driverid`) FROM `drivers` WHERE `nationality` = 'British' AND SUBSTR(`dob`, 1, 4) = '1980'
SELECT `d`.`forename`, `d`.`surname`, MIN(`l`.`time`) AS `earliest_lap_time` FROM `drivers` AS `d` INNER JOIN `laptimes` AS `l` ON `d`.`driverid` = `l`.`driverid` WHERE `d`.`nationality` = 'German' AND `d`.`dob` BETWEEN '1980-01-01' AND '1990-12-31' GROUP BY `d`.`driverid` ORDER BY `earliest_lap_time` ASC LIMIT 3
SELECT `driverref` FROM `drivers` WHERE `nationality` = 'German' ORDER BY `dob` ASC LIMIT 1
SELECT `drivers`.`driverid`, `drivers`.`code` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverid` = `results`.`driverid` WHERE `drivers`.`dob` LIKE '1971%' AND `results`.`fastestlaptime` IS NOT NULL
SELECT `d`.`forename`, `d`.`surname`, MAX(`l`.`time`) AS `latest_lap_time` FROM `drivers` AS `d` INNER JOIN `laptimes` AS `l` ON `d`.`driverid` = `l`.`driverid` WHERE `d`.`dob` < '1982-01-01' AND `d`.`nationality` = 'Spanish' GROUP BY `d`.`driverid` ORDER BY `latest_lap_time` DESC LIMIT 10
SELECT `year` FROM `races` AS R INNER JOIN `results` AS RS ON R.`raceid` = RS.`raceid` ORDER BY RS.`fastestlaptime` ASC LIMIT 1
SELECT `year` FROM `races` AS R INNER JOIN `laptimes` AS L ON R.`raceid` = L.`raceid` GROUP BY `year` ORDER BY MAX(L.`time`) DESC LIMIT 1
SELECT `driverid` FROM `laptimes` WHERE `lap` = 1 ORDER BY `time` ASC LIMIT 5
SELECT COUNT(`R`.`resultid`) FROM `results` AS `R` INNER JOIN `status` AS `S` ON `R`.`statusid` = `S`.`statusid` WHERE `R`.`raceid` > 50 AND `R`.`raceid` < 100 AND `S`.`status` = 'Disqualified' AND `R`.`time` IS NOT NULL
SELECT COUNT(DISTINCT `c`.`circuitid`), `c`.`location`, `c`.`lat`, `c`.`lng` FROM `circuits` AS `c` WHERE `c`.`country` = 'Austria'
SELECT `raceid` FROM `results` WHERE `time` IS NOT NULL GROUP BY `raceid` ORDER BY COUNT(`driverid`) DESC LIMIT 1
SELECT `d`.`driverref`, `d`.`nationality`, `d`.`dob` FROM `qualifying` AS `q` INNER JOIN `drivers` AS `d` ON `q`.`driverid` = `d`.`driverid` WHERE `q`.`raceid` = 23 AND `q`.`q2` IS NOT NULL
SELECT `races`.`year`, `races`.`name`, `races`.`date`, `races`.`time` FROM `drivers` INNER JOIN `qualifying` ON `drivers`.`driverid` = `qualifying`.`driverid` INNER JOIN `races` ON `qualifying`.`raceid` = `races`.`raceid` WHERE `drivers`.`dob` = (SELECT MAX(`dob`) FROM `drivers`) ORDER BY `races`.`date` ASC LIMIT 1
SELECT COUNT(DISTINCT `drivers`.`driverid`) FROM `drivers` INNER JOIN `results` ON `drivers`.`driverid` = `results`.`driverid` INNER JOIN `status` ON `results`.`statusid` = `status`.`statusid` WHERE `drivers`.`nationality` = 'American' AND `status`.`status` = 'Puncture'
SELECT T1.name, T1.url FROM `constructors` AS T1 INNER JOIN `constructorstandings` AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = 'Italian' ORDER BY T2.points DESC LIMIT 1
SELECT `url` FROM `constructors` WHERE `constructorid` = (SELECT `constructorid` FROM `constructorstandings` ORDER BY `wins` DESC LIMIT 1)
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `laptimes` INNER JOIN `races` ON `laptimes`.`raceid` = `races`.`raceid` INNER JOIN `drivers` ON `laptimes`.`driverid` = `drivers`.`driverid` WHERE `races`.`name` = 'French Grand Prix' AND `laptimes`.`lap` = 3 ORDER BY `laptimes`.`time` DESC LIMIT 1
SELECT T1.`raceid`, T1.`milliseconds` FROM `laptimes` AS T1 WHERE T1.`lap` = 1 ORDER BY T1.`milliseconds` ASC LIMIT 1
SELECT AVG(`fastestlaptime`) FROM `results` AS R INNER JOIN `races` AS RA ON R.`raceid` = RA.`raceid` WHERE RA.`year` = 2006 AND RA.`name` = 'United States Grand Prix' AND R.`rank` < 11
SELECT `d`.`forename`, `d`.`surname`, AVG(`p`.`duration`) AS `avg_duration` FROM `drivers` AS `d` INNER JOIN `pitstops` AS `p` ON `d`.`driverid` = `p`.`driverid` WHERE `d`.`nationality` = 'German' AND `d`.`dob` > '1980-01-01' AND `d`.`dob` < '1985-12-31' GROUP BY `d`.`driverid` ORDER BY `avg_duration` ASC LIMIT 3
SELECT D.forename, D.surname, R.time FROM results AS R INNER JOIN races AS RA ON R.raceid = RA.raceid INNER JOIN drivers AS D ON R.driverid = D.driverid WHERE RA.name = 'Canadian Grand Prix' AND RA.year = 2008 AND R.position = 1
SELECT `constructors`.`constructorref`, `constructors`.`url` FROM `results` INNER JOIN `races` ON `results`.`raceid` = `races`.`raceid` INNER JOIN `constructors` ON `results`.`constructorid` = `constructors`.`constructorid` WHERE `races`.`year` = 2009 AND `races`.`name` = 'Singapore Grand Prix' AND `results`.`position` = 1
SELECT `forename`, `surname`, `dob` FROM `drivers` WHERE `nationality` = 'Austrian' AND strftime('%Y', `dob`) BETWEEN '1981' AND '1991'
SELECT `forename` || ' ' || `surname` AS full_name, `url`, `dob` FROM `drivers` WHERE `nationality` = 'German' AND strftime('%Y', `dob`) BETWEEN '1971' AND '1985' ORDER BY `dob` DESC
SELECT `location`, `country`, `lat`, `lng` FROM `circuits` WHERE `name` = 'Hungaroring'
SELECT SUM(`cr`.`points`) AS `total_points`, `c`.`name`, `c`.`nationality` FROM `constructorresults` AS `cr` INNER JOIN `races` AS `r` ON `cr`.`raceid` = `r`.`raceid` INNER JOIN `constructors` AS `c` ON `cr`.`constructorid` = `c`.`constructorid` WHERE `r`.`name` = 'Monaco Grand Prix' AND `r`.`year` BETWEEN 1980 AND 2010 GROUP BY `c`.`name`, `c`.`nationality` ORDER BY `total_points` DESC LIMIT 1
SELECT AVG(`R`.`points`) FROM `results` AS `R` INNER JOIN `drivers` AS `D` ON `R`.`driverid` = `D`.`driverid` INNER JOIN `races` AS `RA` ON `R`.`raceid` = `RA`.`raceid` WHERE `D`.`forename` = 'Lewis' AND `D`.`surname` = 'Hamilton' AND `RA`.`name` = 'Turkish Grand Prix'
SELECT AVG(race_count) FROM (SELECT COUNT(`raceid`) AS race_count FROM `races` WHERE `date` BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY `year`)
SELECT `nationality` FROM `drivers` GROUP BY `nationality` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `wins` FROM `driverstandings` WHERE `position` = 91
SELECT `races`.`name` FROM `results` INNER JOIN `races` ON `results`.`raceid` = `races`.`raceid` ORDER BY `results`.`fastestlaptime` ASC LIMIT 1
SELECT `circuits`.`location` || ', ' || `circuits`.`country` AS `full_location` FROM `races` INNER JOIN `circuits` ON `races`.`circuitid` = `circuits`.`circuitid` WHERE `races`.`date` = (SELECT MAX(`date`) FROM `races`)
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `qualifying` INNER JOIN `races` ON `qualifying`.`raceid` = `races`.`raceid` INNER JOIN `circuits` ON `races`.`circuitid` = `circuits`.`circuitid` INNER JOIN `drivers` ON `qualifying`.`driverid` = `drivers`.`driverid` WHERE `races`.`year` = 2008 AND `circuits`.`name` = 'Marina Bay Street Circuit' AND `qualifying`.`position` = 1 ORDER BY `qualifying`.`q3` LIMIT 1
SELECT `drivers`.`forename` || ' ' || `drivers`.`surname` AS `full_name`, `drivers`.`nationality`, `races`.`name` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverid` = `results`.`driverid` INNER JOIN `races` ON `results`.`raceid` = `races`.`raceid` WHERE `drivers`.`dob` = (SELECT MAX(`dob`) FROM `drivers`) ORDER BY `races`.`date` ASC LIMIT 1
SELECT COUNT(*) FROM results AS R INNER JOIN races AS RA ON R.raceid = RA.raceid WHERE RA.name = 'Canadian Grand Prix' AND R.statusid = 3 GROUP BY R.driverid ORDER BY COUNT(*) DESC LIMIT 1
SELECT `drivers`.`forename`, `drivers`.`surname`, `driverstandings`.`wins` FROM `drivers` INNER JOIN `driverstandings` ON `drivers`.`driverid` = `driverstandings`.`driverid` WHERE `drivers`.`dob` = (SELECT MIN(`dob`) FROM `drivers`)
SELECT MAX(`duration`) FROM `pitstops`
SELECT MIN(`milliseconds`) FROM `laptimes`
SELECT MAX(`duration`) FROM `pitstops` INNER JOIN `drivers` ON `pitstops`.`driverid` = `drivers`.`driverid` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT `lap` FROM `pitstops` AS p INNER JOIN `drivers` AS d ON p.driverid = d.driverid INNER JOIN `races` AS r ON p.raceid = r.raceid WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' AND r.year = 2011 AND r.name = 'Australian Grand Prix'
SELECT `drivers`.`driverid`, `drivers`.`forename`, `drivers`.`surname`, `pitstops`.`duration` FROM `pitstops` INNER JOIN `drivers` ON `pitstops`.`driverid` = `drivers`.`driverid` INNER JOIN `races` ON `pitstops`.`raceid` = `races`.`raceid` WHERE `races`.`name` = 'Australian Grand Prix' AND `races`.`year` = 2011
SELECT MIN(`T1`.`time`) FROM `laptimes` AS `T1` INNER JOIN `drivers` AS `T2` ON `T1`.`driverid` = `T2`.`driverid` WHERE `T2`.`forename` = 'Lewis' AND `T2`.`surname` = 'Hamilton'
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `laptimes` INNER JOIN `drivers` ON `laptimes`.`driverid` = `drivers`.`driverid` ORDER BY `laptimes`.`time` ASC LIMIT 1
SELECT `c`.`position` FROM `laptimes` AS `lt` INNER JOIN `drivers` AS `d` ON `lt`.`driverid` = `d`.`driverid` INNER JOIN `races` AS `r` ON `lt`.`raceid` = `r`.`raceid` INNER JOIN `circuits` AS `c` ON `r`.`circuitid` = `c`.`circuitid` WHERE `d`.`forename` = 'Lewis' AND `d`.`surname` = 'Hamilton' ORDER BY `lt`.`milliseconds` ASC LIMIT 1
SELECT MIN(`laptimes`.`time`) FROM `laptimes` INNER JOIN `races` ON `laptimes`.`raceid` = `races`.`raceid` WHERE `races`.`name` = 'Austrian Grand Prix'
SELECT `c`.`name`, MIN(`lt`.`time`) AS `lap_record` FROM `circuits` AS `c` INNER JOIN `races` AS `r` ON `c`.`circuitid` = `r`.`circuitid` INNER JOIN `laptimes` AS `lt` ON `r`.`raceid` = `lt`.`raceid` WHERE `c`.`country` = 'Italy' GROUP BY `c`.`name`
SELECT `races`.`name` FROM `races` INNER JOIN `laptimes` ON `races`.`raceid` = `laptimes`.`raceid` INNER JOIN `circuits` ON `races`.`circuitid` = `circuits`.`circuitid` WHERE `circuits`.`name` = 'Austrian Grand Prix Circuit' ORDER BY `laptimes`.`milliseconds` ASC LIMIT 1
SELECT `p`.`duration` FROM `pitstops` AS `p` INNER JOIN `laptimes` AS `l` ON `p`.`raceid` = `l`.`raceid` AND `p`.`driverid` = `l`.`driverid` INNER JOIN `races` AS `r` ON `l`.`raceid` = `r`.`raceid` WHERE `r`.`name` = 'Austrian Grand Prix' ORDER BY `l`.`time` ASC LIMIT 1
SELECT `c`.`lat`, `c`.`lng` FROM `circuits` AS `c` INNER JOIN `laptimes` AS `l` ON `c`.`circuitid` = `l`.`raceid` WHERE `l`.`time` = '1:29.488'
SELECT AVG(`milliseconds`) FROM `pitstops` AS ps INNER JOIN `drivers` AS d ON ps.`driverid` = d.`driverid` WHERE d.`forename` = 'Lewis' AND d.`surname` = 'Hamilton'
SELECT AVG(`T1`.`milliseconds`) FROM `laptimes` AS `T1` INNER JOIN `races` AS `T2` ON `T1`.`raceid` = `T2`.`raceid` INNER JOIN `circuits` AS `T3` ON `T2`.`circuitid` = `T3`.`circuitid` WHERE `T3`.`country` = 'Italy'
SELECT `player_api_id` FROM `player_attributes` WHERE `overall_rating` = (SELECT MAX(`overall_rating`) FROM `player_attributes`)
SELECT `player_name`, `height` FROM `player` ORDER BY `height` DESC LIMIT 1
SELECT `preferred_foot` FROM `player_attributes` WHERE `potential` = (SELECT MIN(`potential`) FROM `player_attributes`)
SELECT COUNT(`id`) FROM `player_attributes` WHERE `overall_rating` >= 60 AND `overall_rating` < 65 AND `defensive_work_rate` = 'low'
SELECT `player_api_id` FROM `player_attributes` ORDER BY `crossing` DESC LIMIT 5
SELECT `l`.`name` FROM `match` AS `m` INNER JOIN `league` AS `l` ON `m`.`league_id` = `l`.`id` WHERE `m`.`season` = '2015/2016' GROUP BY `l`.`id` ORDER BY SUM(`m`.`home_team_goal` + `m`.`away_team_goal`) DESC LIMIT 1
SELECT `T`.`team_long_name` FROM `match` AS `M` INNER JOIN `team` AS `T` ON `M`.`home_team_api_id` = `T`.`team_api_id` WHERE `M`.`season` = '2015/2016' AND (`M`.`home_team_goal` - `M`.`away_team_goal`) < 0 GROUP BY `T`.`team_long_name` ORDER BY COUNT(`M`.`id`) ASC LIMIT 1
SELECT `player`.`player_name` FROM `player_attributes` INNER JOIN `player` ON `player_attributes`.`player_api_id` = `player`.`player_api_id` ORDER BY `player_attributes`.`penalties` DESC LIMIT 10
SELECT `T`.`team_long_name` FROM `match` AS `M` INNER JOIN `league` AS `L` ON `M`.`league_id` = `L`.`id` INNER JOIN `team` AS `T` ON `M`.`away_team_api_id` = `T`.`team_api_id` WHERE `L`.`name` = 'Scotland Premier League' AND `M`.`season` = '2009/2010' AND `M`.`away_team_goal` > `M`.`home_team_goal` GROUP BY `T`.`team_long_name` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `team_long_name`, `buildupplayspeed` FROM `team` INNER JOIN `team_attributes` ON `team`.`team_api_id` = `team_attributes`.`team_api_id` ORDER BY `buildupplayspeed` DESC LIMIT 4
SELECT `league`.`name` FROM `match` INNER JOIN `league` ON `match`.`league_id` = `league`.`id` WHERE `match`.`season` = '2015/2016' GROUP BY `league`.`id` ORDER BY SUM(`home_team_goal` = `away_team_goal`) DESC LIMIT 1
SELECT `player`.`player_name`, STRFTIME('%Y', 'now') - STRFTIME('%Y', `player`.`birthday`) AS `age` FROM `player` INNER JOIN `player_attributes` ON `player`.`player_api_id` = `player_attributes`.`player_api_id` WHERE `player_attributes`.`sprint_speed` >= 97 AND STRFTIME('%Y', `player_attributes`.`date`) BETWEEN '2013' AND '2015'
SELECT L.`name`, COUNT(M.`league_id`) AS match_count FROM `match` AS M INNER JOIN `league` AS L ON M.`league_id` = L.`id` GROUP BY M.`league_id` ORDER BY match_count DESC LIMIT 1
SELECT AVG(`height`) FROM `player` WHERE `birthday` >= '1990-01-01 00:00:00' AND `birthday` < '1996-01-01 00:00:00'
SELECT `player_api_id` FROM `player_attributes` WHERE `overall_rating` = (SELECT MAX(`overall_rating`) FROM `player_attributes` WHERE substr(`date`, 1, 4) = '2010') AND substr(`date`, 1, 4) = '2010'
SELECT `team_fifa_api_id` FROM `team_attributes` WHERE `buildupplayspeed` > 50 AND `buildupplayspeed` < 60
SELECT `team`.`team_long_name` FROM `team` INNER JOIN `team_attributes` ON `team`.`team_api_id` = `team_attributes`.`team_api_id` WHERE strftime('%Y', `team_attributes`.`date`) = '2012' AND `team_attributes`.`buildupplaypassing` > (SELECT AVG(`buildupplaypassing`) FROM `team_attributes` WHERE strftime('%Y', `date`) = '2012' AND `buildupplaypassing` IS NOT NULL)
SELECT CAST(SUM(CASE WHEN `preferred_foot` = 'left' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`player_fifa_api_id`) FROM `player` AS P INNER JOIN `player_attributes` AS PA ON P.`player_fifa_api_id` = PA.`player_fifa_api_id` WHERE strftime('%Y', `birthday`) BETWEEN '1987' AND '1992'
SELECT `league`.`name` FROM `match` INNER JOIN `league` ON `match`.`league_id` = `league`.`id` GROUP BY `league`.`id`, `league`.`name` ORDER BY SUM(`home_team_goal` + `away_team_goal`) ASC LIMIT 5
SELECT CAST(SUM(`pa`.`long_shots`) AS REAL) / COUNT(`pa`.`player_fifa_api_id`) FROM `player_attributes` AS `pa` INNER JOIN `player` AS `p` ON `pa`.`player_fifa_api_id` = `p`.`player_fifa_api_id` WHERE `p`.`player_name` = 'Ahmed Samir Farag'
SELECT `p`.`player_name` FROM `player` AS `p` INNER JOIN `player_attributes` AS `pa` ON `p`.`player_fifa_api_id` = `pa`.`player_fifa_api_id` WHERE `p`.`height` > 180 GROUP BY `p`.`player_name` ORDER BY AVG(`pa`.`heading_accuracy`) DESC LIMIT 10
SELECT `team`.`team_long_name` FROM `team_attributes` INNER JOIN `team` ON `team_attributes`.`team_api_id` = `team`.`team_api_id` WHERE `team_attributes`.`buildupplaydribblingclass` = 'Normal' AND `team_attributes`.`date` >= '2014-01-01 00:00:00' AND `team_attributes`.`date` <= '2014-01-31 00:00:00' AND `team_attributes`.`chancecreationpassing` < (SELECT AVG(`chancecreationpassing`) FROM `team_attributes`) ORDER BY `team_attributes`.`chancecreationpassing` DESC
SELECT `league`.`name` FROM `match` INNER JOIN `league` ON `match`.`league_id` = `league`.`id` WHERE `match`.`season` = '2009/2010' GROUP BY `league`.`name` HAVING AVG(`match`.`home_team_goal`) > AVG(`match`.`away_team_goal`)
SELECT `team_short_name` FROM `team` WHERE `team_long_name` = 'Queens Park Rangers'
SELECT `player_name` FROM `player` WHERE substr(`birthday`, 1, 7) = '1970-10'
SELECT `pa`.`attacking_work_rate` FROM `player` AS `p` INNER JOIN `player_attributes` AS `pa` ON `p`.`player_api_id` = `pa`.`player_api_id` WHERE `p`.`player_name` = 'Franco Zennaro'
SELECT `buildupplaypositioningclass` FROM `team_attributes` AS ta INNER JOIN `team` AS t ON ta.team_api_id = t.team_api_id WHERE t.team_long_name = 'ADO Den Haag'
SELECT `heading_accuracy` FROM `player_attributes` INNER JOIN `player` ON `player_attributes`.`player_api_id` = `player`.`player_api_id` WHERE `player`.`player_name` = 'Francois Affolter' AND `player_attributes`.`date` = '2014-09-18 00:00:00'
SELECT `pa`.`overall_rating` FROM `player_attributes` AS `pa` INNER JOIN `player` AS `p` ON `pa`.`player_api_id` = `p`.`player_api_id` WHERE `p`.`player_name` = 'Gabriel Tamas' AND strftime('%Y', `pa`.`date`) = '2011'
SELECT COUNT(`id`) FROM `match` AS M INNER JOIN `league` AS L ON M.`league_id` = L.`id` WHERE M.`season` = '2015/2016' AND L.`name` = 'Scotland Premier League'
SELECT `preferred_foot` FROM `player_attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `player` ORDER BY `birthday` DESC LIMIT 1)
SELECT `player_name` FROM `player` WHERE `player_api_id` IN (SELECT `player_api_id` FROM `player_attributes` WHERE `potential` = (SELECT MAX(`potential`) FROM `player_attributes`))
SELECT COUNT(`p`.`id`) FROM `player` AS `p` INNER JOIN `player_attributes` AS `pa` ON `p`.`player_api_id` = `pa`.`player_api_id` WHERE `p`.`weight` < 130 AND `pa`.`preferred_foot` = 'left'
SELECT `team`.`team_short_name` FROM `team` INNER JOIN `team_attributes` ON `team`.`team_api_id` = `team_attributes`.`team_api_id` WHERE `team_attributes`.`chancecreationpassingclass` = 'Risky'
SELECT `pa`.`defensive_work_rate` FROM `player_attributes` AS `pa` INNER JOIN `player` AS `p` ON `pa`.`player_api_id` = `p`.`player_api_id` WHERE `p`.`player_name` = 'David Wilson'
SELECT `birthday` FROM `player` WHERE `player_api_id` = (SELECT `player_api_id` FROM `player_attributes` ORDER BY `overall_rating` DESC LIMIT 1)
SELECT `name` FROM `league` WHERE `country_id` = (SELECT `id` FROM `country` WHERE `name` = 'Netherlands')
SELECT AVG(`home_team_goal`) FROM `match` INNER JOIN `league` ON `match`.`country_id` = `league`.`country_id` INNER JOIN `country` ON `league`.`country_id` = `country`.`id` WHERE `country`.`name` = 'Poland' AND `match`.`season` = '2010/2011'
SELECT `p`.`player_name` FROM `player` AS `p` INNER JOIN `player_attributes` AS `pa` ON `p`.`player_api_id` = `pa`.`player_api_id` WHERE `p`.`height` = (SELECT MAX(`height`) FROM `player`) OR `p`.`height` = (SELECT MIN(`height`) FROM `player`) GROUP BY `p`.`player_api_id` ORDER BY AVG(`pa`.`finishing`) DESC LIMIT 1
SELECT `player_name` FROM `player` WHERE `height` > 180
SELECT COUNT(`id`) FROM `player` WHERE strftime('%Y', `birthday`) > '1990'
SELECT COUNT(`id`) FROM `player` WHERE `player_name` LIKE 'Adam %' AND `weight` > 170
SELECT DISTINCT `p`.`player_name` FROM `player_attributes` AS `pa` INNER JOIN `player` AS `p` ON `pa`.`player_api_id` = `p`.`player_api_id` WHERE `pa`.`overall_rating` > 80 AND strftime('%Y', `pa`.`date`) BETWEEN '2008' AND '2010'
SELECT `potential` FROM `player_attributes` INNER JOIN `player` ON `player_attributes`.`player_api_id` = `player`.`player_api_id` WHERE `player`.`player_name` = 'Aaron Doran'
SELECT `player_name` FROM `player` INNER JOIN `player_attributes` ON `player`.`player_api_id` = `player_attributes`.`player_api_id` WHERE `preferred_foot` = 'left'
SELECT `team`.`team_long_name` FROM `team` INNER JOIN `team_attributes` ON `team`.`team_api_id` = `team_attributes`.`team_api_id` WHERE `team_attributes`.`buildupplayspeedclass` = 'Fast'
SELECT `buildupplaypassingclass` FROM `team_attributes` INNER JOIN `team` ON `team_attributes`.`team_api_id` = `team`.`team_api_id` WHERE `team`.`team_short_name` = 'CLB'
SELECT `team`.`team_short_name` FROM `team` INNER JOIN `team_attributes` ON `team`.`team_api_id` = `team_attributes`.`team_api_id` WHERE `team_attributes`.`buildupplaypassing` > 70
SELECT SUM(t1.overall_rating) / COUNT(t1.id) FROM `player_attributes` AS t1 INNER JOIN `player` AS t2 ON t1.player_api_id = t2.player_api_id WHERE strftime('%Y', t1.date) >= '2010' AND strftime('%Y', t1.date) <= '2015' AND t2.height > 170
SELECT `player_name` FROM `player` ORDER BY `height` ASC LIMIT 1
SELECT `country`.`name` FROM `league` INNER JOIN `country` ON `league`.`country_id` = `country`.`id` WHERE `league`.`name` = 'Italy Serie A'
SELECT `team`.`team_short_name` FROM `team` INNER JOIN `team_attributes` ON `team`.`team_api_id` = `team_attributes`.`team_api_id` WHERE `team_attributes`.`buildupplayspeed` = 31 AND `team_attributes`.`buildupplaydribbling` = 53 AND `team_attributes`.`buildupplaypassing` = 32
SELECT AVG(`pa`.`overall_rating`) FROM `player_attributes` AS `pa` INNER JOIN `player` AS `p` ON `pa`.`player_api_id` = `p`.`player_api_id` WHERE `p`.`player_name` = 'Aaron Doran'
SELECT COUNT(`id`) FROM `match` INNER JOIN `league` ON `match`.`league_id` = `league`.`id` WHERE `league`.`name` = 'Germany 1. Bundesliga' AND strftime('%Y-%m', `match`.`date`) BETWEEN '2008-08' AND '2008-10'
SELECT `team`.`team_short_name` FROM `match` INNER JOIN `team` ON `match`.`home_team_api_id` = `team`.`team_api_id` WHERE `match`.`home_team_goal` = 10
SELECT `player`.`player_name` FROM `player_attributes` INNER JOIN `player` ON `player_attributes`.`player_api_id` = `player`.`player_api_id` WHERE `player_attributes`.`potential` = 61 AND `player_attributes`.`balance` = (SELECT MAX(`balance`) FROM `player_attributes` WHERE `potential` = 61)
SELECT (SUM(CASE WHEN `player`.`player_name` = 'Abdou Diallo' THEN `player_attributes`.`ball_control` ELSE 0 END) / COUNT(CASE WHEN `player`.`player_name` = 'Abdou Diallo' THEN `player_attributes`.`id` ELSE NULL END)) - (SUM(CASE WHEN `player`.`player_name` = 'Aaron Appindangoye' THEN `player_attributes`.`ball_control` ELSE 0 END) / COUNT(CASE WHEN `player`.`player_name` = 'Aaron Appindangoye' THEN `player_attributes`.`id` ELSE NULL END)) AS difference FROM `player_attributes` INNER JOIN `player` ON `player_attributes`.`player_api_id` = `player`.`player_api_id` WHERE `player`.`player_name` IN ('Abdou Diallo', 'Aaron Appindangoye')
SELECT `team_long_name` FROM `team` WHERE `team_short_name` = 'GEN'
SELECT `player_name` FROM `player` WHERE `player_name` IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY `birthday` ASC LIMIT 1
SELECT `player_name` FROM `player` ORDER BY `height` DESC LIMIT 1
SELECT COUNT(`pa`.`id`) FROM `player_attributes` AS `pa` WHERE `pa`.`preferred_foot` = 'left' AND `pa`.`attacking_work_rate` = 'low'
SELECT `name` FROM `country` WHERE `id` = (SELECT `country_id` FROM `league` WHERE `name` = 'Belgium Jupiler League')
SELECT `name` FROM `league` WHERE `country_id` = (SELECT `id` FROM `country` WHERE `name` = 'Germany')
SELECT `player_name` FROM `player` INNER JOIN `player_attributes` ON `player`.`player_api_id` = `player_attributes`.`player_api_id` ORDER BY `overall_rating` DESC LIMIT 1
SELECT COUNT(DISTINCT `player`.`player_api_id`) FROM `player` INNER JOIN `player_attributes` ON `player`.`player_api_id` = `player_attributes`.`player_api_id` WHERE strftime('%Y', `player`.`birthday`) < '1986' AND `player_attributes`.`defensive_work_rate` = 'high'
SELECT `player_name` FROM `player` INNER JOIN `player_attributes` ON `player`.`player_api_id` = `player_attributes`.`player_api_id` WHERE `player_name` IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY `crossing` DESC LIMIT 1
SELECT `heading_accuracy` FROM `player_attributes` AS pa INNER JOIN `player` AS p ON pa.`player_api_id` = p.`player_api_id` WHERE p.`player_name` = 'Ariel Borysiuk'
SELECT COUNT(DISTINCT `player`.`player_api_id`) FROM `player` INNER JOIN `player_attributes` ON `player`.`player_api_id` = `player_attributes`.`player_api_id` WHERE `player`.`height` > 180 AND `player_attributes`.`volleys` > 70
SELECT `p`.`player_name` FROM `player` AS `p` INNER JOIN `player_attributes` AS `pa` ON `p`.`player_api_id` = `pa`.`player_api_id` WHERE `pa`.`volleys` > 70 AND `pa`.`dribbling` > 70
SELECT COUNT(`id`) FROM `match` WHERE `season` = '2008/2009' AND `country_id` = (SELECT `id` FROM `country` WHERE `name` = 'Belgium')
SELECT `pa`.`long_passing` FROM `player_attributes` AS `pa` INNER JOIN `player` AS `p` ON `pa`.`player_api_id` = `p`.`player_api_id` ORDER BY `p`.`birthday` ASC LIMIT 1
SELECT COUNT(`id`) FROM `match` INNER JOIN `league` ON `match`.`league_id` = `league`.`id` WHERE `league`.`name` = 'Belgium Jupiler League' AND SUBSTR(`match`.`date`, 1, 7) = '2009-04'
SELECT `name` FROM `league` WHERE `id` = (SELECT `league_id` FROM `match` WHERE `season` = '2008/2009' GROUP BY `league_id` ORDER BY COUNT(`id`) DESC LIMIT 1)
SELECT AVG(`overall_rating`) FROM `player_attributes` AS pa INNER JOIN `player` AS p ON pa.`player_api_id` = p.`player_api_id` WHERE strftime('%Y', p.`birthday`) < '1986'
SELECT ((SELECT `overall_rating` FROM `player_attributes` AS pa INNER JOIN `player` AS p ON pa.`player_api_id` = p.`player_api_id` WHERE p.`player_name` = 'Ariel Borysiuk' ORDER BY pa.`date` DESC LIMIT 1) - (SELECT `overall_rating` FROM `player_attributes` AS pa INNER JOIN `player` AS p ON pa.`player_api_id` = p.`player_api_id` WHERE p.`player_name` = 'Paulin Puel' ORDER BY pa.`date` DESC LIMIT 1)) / (SELECT `overall_rating` FROM `player_attributes` AS pa INNER JOIN `player` AS p ON pa.`player_api_id` = p.`player_api_id` WHERE p.`player_name` = 'Paulin Puel' ORDER BY pa.`date` DESC LIMIT 1) * 100 AS percentage_difference
SELECT AVG(`buildupplayspeed`) FROM `team_attributes` INNER JOIN `team` ON `team_attributes`.`team_api_id` = `team`.`team_api_id` WHERE `team`.`team_long_name` = 'Heart of Midlothian'
SELECT AVG(T1.`overall_rating`) FROM `player_attributes` AS T1 INNER JOIN `player` AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Pietro Marino'
SELECT SUM(`crossing`) FROM `player_attributes` AS T1 INNER JOIN `player` AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Aaron Lennox'
SELECT MAX(`chancecreationpassing`), `chancecreationpassingclass` FROM `team_attributes` INNER JOIN `team` ON `team_attributes`.`team_api_id` = `team`.`team_api_id` WHERE `team_long_name` = 'Ajax'
SELECT `preferred_foot` FROM `player_attributes` INNER JOIN `player` ON `player_attributes`.`player_api_id` = `player`.`player_api_id` WHERE `player`.`player_name` = 'Abdou Diallo' LIMIT 1
SELECT MAX(T1.`overall_rating`) FROM `player_attributes` AS T1 INNER JOIN `player` AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Dorlan Pabon'
SELECT AVG(`away_team_goal`) FROM `match` INNER JOIN `team` ON `match`.`away_team_api_id` = `team`.`team_api_id` INNER JOIN `country` ON `match`.`country_id` = `country`.`id` WHERE `team`.`team_long_name` = 'Parma' AND `country`.`name` = 'Italy'
SELECT `player`.`player_name` FROM `player` INNER JOIN `player_attributes` ON `player`.`player_api_id` = `player_attributes`.`player_api_id` WHERE `player_attributes`.`overall_rating` = 77 AND `player_attributes`.`date` LIKE '2016-06-23%' ORDER BY `player`.`birthday` ASC LIMIT 1
SELECT `overall_rating` FROM `player_attributes` AS T1 INNER JOIN `player` AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Mooy' AND T1.date LIKE '2016-02-04%'
SELECT `potential` FROM `player_attributes` INNER JOIN `player` ON `player_attributes`.`player_api_id` = `player`.`player_api_id` WHERE `player`.`player_name` = 'Francesco Parravicini' AND `player_attributes`.`date` = '2010-08-30 00:00:00'
SELECT `attacking_work_rate` FROM `player_attributes` AS T1 INNER JOIN `player` AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Francesco Migliore' AND T1.`date` LIKE '2015-05-01%'
SELECT `defensive_work_rate` FROM `player_attributes` INNER JOIN `player` ON `player_attributes`.`player_api_id` = `player`.`player_api_id` WHERE `player`.`player_name` = 'Kevin Berigaud' AND `player_attributes`.`date` = '2013-02-22 00:00:00'
SELECT MIN(`date`) FROM `player_attributes` AS pa INNER JOIN `player` AS p ON pa.`player_api_id` = p.`player_api_id` WHERE p.`player_name` = 'Kevin Constant' AND pa.`crossing` = (SELECT MAX(`crossing`) FROM `player_attributes` AS pa2 INNER JOIN `player` AS p2 ON pa2.`player_api_id` = p2.`player_api_id` WHERE p2.`player_name` = 'Kevin Constant')
SELECT `buildupplayspeedclass` FROM `team_attributes` INNER JOIN `team` ON `team_attributes`.`team_api_id` = `team`.`team_api_id` WHERE `team`.`team_long_name` = 'Willem II' AND `team_attributes`.`date` = '2012-02-22'
SELECT `buildupplaydribblingclass` FROM `team_attributes` INNER JOIN `team` ON `team_attributes`.`team_api_id` = `team`.`team_api_id` WHERE `team`.`team_short_name` = 'LEI' AND `team_attributes`.`date` = '2015-09-10 00:00:00'
SELECT `buildupplaypassingclass` FROM `team_attributes` INNER JOIN `team` ON `team_attributes`.`team_api_id` = `team`.`team_api_id` WHERE `team`.`team_long_name` = 'FC Lorient' AND `team_attributes`.`date` LIKE '2010-02-22%'
SELECT `chancecreationpassingclass` FROM `team_attributes` WHERE `team_api_id` = (SELECT `team_api_id` FROM `team` WHERE `team_long_name` = 'PEC Zwolle') AND `date` = '2013-09-20 00:00:00'
SELECT `chancecreationcrossingclass` FROM `team_attributes` INNER JOIN `team` ON `team_attributes`.`team_api_id` = `team`.`team_api_id` WHERE `team`.`team_long_name` = 'Hull City' AND `team_attributes`.`date` = '2010-02-22 00:00:00'
SELECT `defenceaggressionclass` FROM `team_attributes` AS T1 INNER JOIN `team` AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Hannover 96' AND T1.date LIKE '2015-09-10%';
SELECT AVG(`overall_rating`) AS average_rating FROM `player_attributes` INNER JOIN `player` ON `player_attributes`.`player_api_id` = `player`.`player_api_id` WHERE `player`.`player_name` = 'Marko Arnautovic' AND SUBSTR(`player_attributes`.`date`, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'
SELECT (ld.overall_rating - jb.overall_rating) * 100.0 / ld.overall_rating AS percentage FROM (SELECT `overall_rating` FROM `player_attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `player` WHERE `player_name` = 'Landon Donovan') AND `date` = '2013-07-12') AS ld, (SELECT `overall_rating` FROM `player_attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `player` WHERE `player_name` = 'Jordan Bowery') AND `date` = '2013-07-12') AS jb
SELECT `player_name` FROM `player` WHERE `height` = (SELECT MAX(`height`) FROM `player`)
SELECT `player_api_id` FROM `player` ORDER BY `weight` DESC LIMIT 10
SELECT `player_name` FROM `player` WHERE (julianday('now') - julianday(`birthday`)) / 365.25 > 34
SELECT COUNT(`m`.`home_team_goal`) FROM `match` AS `m` INNER JOIN `player` AS `p` ON `m`.`home_player_1` = `p`.`player_api_id` OR `m`.`home_player_2` = `p`.`player_api_id` OR `m`.`home_player_3` = `p`.`player_api_id` OR `m`.`home_player_4` = `p`.`player_api_id` OR `m`.`home_player_5` = `p`.`player_api_id` OR `m`.`home_player_6` = `p`.`player_api_id` OR `m`.`home_player_7` = `p`.`player_api_id` OR `m`.`home_player_8` = `p`.`player_api_id` OR `m`.`home_player_9` = `p`.`player_api_id` OR `m`.`home_player_10` = `p`.`player_api_id` OR `m`.`home_player_11` = `p`.`player_api_id` WHERE `p`.`player_name` = 'Aaron Lennon'
SELECT SUM(`away_team_goal`) FROM `match` WHERE `away_player_1` IN (SELECT `player_api_id` FROM `player` WHERE `player_name` = 'Daan Smith' OR `player_name` = 'Filipe Ferreira') OR `away_player_2` IN (SELECT `player_api_id` FROM `player` WHERE `player_name` = 'Daan Smith' OR `player_name` = 'Filipe Ferreira') OR `away_player_3` IN (SELECT `player_api_id` FROM `player` WHERE `player_name` = 'Daan Smith' OR `player_name` = 'Filipe Ferreira') OR `away_player_4` IN (SELECT `player_api_id` FROM `player` WHERE `player_name` = 'Daan Smith' OR `player_name` = 'Filipe Ferreira') OR `away_player_5` IN (SELECT `player_api_id` FROM `player` WHERE `player_name` = 'Daan Smith' OR `player_name` = 'Filipe Ferreira') OR `away_player_6` IN (SELECT `player_api_id` FROM `player` WHERE `player_name` = 'Daan Smith' OR `player_name` = 'Filipe Ferreira') OR `away_player_7` IN (SELECT `player_api_id` FROM `player` WHERE `player_name` = 'Daan Smith' OR `player_name` = 'Filipe Ferreira') OR `away_player_8` IN (SELECT `player_api_id` FROM `player` WHERE `player_name` = 'Daan Smith' OR `player_name` = 'Filipe Ferreira') OR `away_player_9` IN (SELECT `player_api_id` FROM `player` WHERE `player_name` = 'Daan Smith' OR `player_name` = 'Filipe Ferreira') OR `away_player_10` IN (SELECT `player_api_id` FROM `player` WHERE `player_name` = 'Daan Smith' OR `player_name` = 'Filipe Ferreira') OR `away_player_11` IN (SELECT `player_api_id` FROM `player` WHERE `player_name` = 'Daan Smith' OR `player_name` = 'Filipe Ferreira')
SELECT SUM(`home_team_goal`) FROM `match` AS M INNER JOIN `player` AS P ON M.`home_player_1` = P.`player_api_id` OR M.`home_player_2` = P.`player_api_id` OR M.`home_player_3` = P.`player_api_id` OR M.`home_player_4` = P.`player_api_id` OR M.`home_player_5` = P.`player_api_id` OR M.`home_player_6` = P.`player_api_id` OR M.`home_player_7` = P.`player_api_id` OR M.`home_player_8` = P.`player_api_id` OR M.`home_player_9` = P.`player_api_id` OR M.`home_player_10` = P.`player_api_id` OR M.`home_player_11` = P.`player_api_id` WHERE (julianday('now') - julianday(P.`birthday`)) / 365.25 < 31
SELECT `player`.`player_name` FROM `player` INNER JOIN `player_attributes` ON `player`.`player_api_id` = `player_attributes`.`player_api_id` ORDER BY `player_attributes`.`overall_rating` DESC LIMIT 1
SELECT `player`.`player_name` FROM `player` INNER JOIN `player_attributes` ON `player`.`player_api_id` = `player_attributes`.`player_api_id` WHERE `player_attributes`.`potential` = (SELECT MAX(`potential`) FROM `player_attributes`)
SELECT `player_name` FROM `player` INNER JOIN `player_attributes` ON `player`.`player_api_id` = `player_attributes`.`player_api_id` WHERE `attacking_work_rate` = 'high'
SELECT `player`.`player_name` FROM `player` INNER JOIN `player_attributes` ON `player`.`player_api_id` = `player_attributes`.`player_api_id` WHERE `player_attributes`.`finishing` = 1 ORDER BY `player`.`birthday` LIMIT 1
SELECT `player`.`player_name` FROM `player` INNER JOIN `player_attributes` ON `player`.`player_api_id` = `player_attributes`.`player_api_id` INNER JOIN `match` ON `match`.`home_player_1` = `player`.`player_api_id` OR `match`.`home_player_2` = `player`.`player_api_id` OR `match`.`home_player_3` = `player`.`player_api_id` OR `match`.`home_player_4` = `player`.`player_api_id` OR `match`.`home_player_5` = `player`.`player_api_id` OR `match`.`home_player_6` = `player`.`player_api_id` OR `match`.`home_player_7` = `player`.`player_api_id` OR `match`.`home_player_8` = `player`.`player_api_id` OR `match`.`home_player_9` = `player`.`player_api_id` OR `match`.`home_player_10` = `player`.`player_api_id` OR `match`.`home_player_11` = `player`.`player_api_id` OR `match`.`away_player_1` = `player`.`player_api_id` OR `match`.`away_player_2` = `player`.`player_api_id` OR `match`.`away_player_3` = `player`.`player_api_id` OR `match`.`away_player_4` = `player`.`player_api_id` OR `match`.`away_player_5` = `player`.`player_api_id` OR `match`.`away_player_6` = `player`.`player_api_id` OR `match`.`away_player_7` = `player`.`player_api_id` OR `match`.`away_player_8` = `player`.`player_api_id` OR `match`.`away_player_9` = `player`.`player_api_id` OR `match`.`away_player_10` = `player`.`player_api_id` OR `match`.`away_player_11` = `player`.`player_api_id` INNER JOIN `league` ON `match`.`country_id` = `league`.`country_id` INNER JOIN `country` ON `league`.`country_id` = `country`.`id` WHERE `country`.`name` = 'Belgium'
SELECT DISTINCT `p`.`player_name`, `c`.`name` FROM `player_attributes` AS `pa` INNER JOIN `player` AS `p` ON `pa`.`player_api_id` = `p`.`player_api_id` INNER JOIN `match` AS `m` ON (`m`.`home_player_1` = `p`.`player_api_id` OR `m`.`home_player_2` = `p`.`player_api_id` OR `m`.`home_player_3` = `p`.`player_api_id` OR `m`.`home_player_4` = `p`.`player_api_id` OR `m`.`home_player_5` = `p`.`player_api_id` OR `m`.`home_player_6` = `p`.`player_api_id` OR `m`.`home_player_7` = `p`.`player_api_id` OR `m`.`home_player_8` = `p`.`player_api_id` OR `m`.`home_player_9` = `p`.`player_api_id` OR `m`.`home_player_10` = `p`.`player_api_id` OR `m`.`home_player_11` = `p`.`player_api_id` OR `m`.`away_player_1` = `p`.`player_api_id` OR `m`.`away_player_2` = `p`.`player_api_id` OR `m`.`away_player_3` = `p`.`player_api_id` OR `m`.`away_player_4` = `p`.`player_api_id` OR `m`.`away_player_5` = `p`.`player_api_id` OR `m`.`away_player_6` = `p`.`player_api_id` OR `m`.`away_player_7` = `p`.`player_api_id` OR `m`.`away_player_8` = `p`.`player_api_id` OR `m`.`away_player_9` = `p`.`player_api_id` OR `m`.`away_player_10` = `p`.`player_api_id` OR `m`.`away_player_11` = `p`.`player_api_id`) INNER JOIN `country` AS `c` ON `m`.`country_id` = `c`.`id` WHERE `pa`.`vision` > 89
SELECT `c`.`name` FROM `country` AS `c` INNER JOIN `league` AS `l` ON `c`.`id` = `l`.`country_id` INNER JOIN `match` AS `m` ON `l`.`id` = `m`.`country_id` INNER JOIN `player` AS `p` ON `m`.`home_player_1` = `p`.`player_api_id` OR `m`.`home_player_2` = `p`.`player_api_id` OR `m`.`home_player_3` = `p`.`player_api_id` OR `m`.`home_player_4` = `p`.`player_api_id` OR `m`.`home_player_5` = `p`.`player_api_id` OR `m`.`home_player_6` = `p`.`player_api_id` OR `m`.`home_player_7` = `p`.`player_api_id` OR `m`.`home_player_8` = `p`.`player_api_id` OR `m`.`home_player_9` = `p`.`player_api_id` OR `m`.`home_player_10` = `p`.`player_api_id` OR `m`.`home_player_11` = `p`.`player_api_id` OR `m`.`away_player_1` = `p`.`player_api_id` OR `m`.`away_player_2` = `p`.`player_api_id` OR `m`.`away_player_3` = `p`.`player_api_id` OR `m`.`away_player_4` = `p`.`player_api_id` OR `m`.`away_player_5` = `p`.`player_api_id` OR `m`.`away_player_6` = `p`.`player_api_id` OR `m`.`away_player_7` = `p`.`player_api_id` OR `m`.`away_player_8` = `p`.`player_api_id` OR `m`.`away_player_9` = `p`.`player_api_id` OR `m`.`away_player_10` = `p`.`player_api_id` OR `m`.`away_player_11` = `p`.`player_api_id` GROUP BY `c`.`name` ORDER BY AVG(`p`.`weight`) DESC LIMIT 1
SELECT `T`.`team_long_name` FROM `team` AS `T` INNER JOIN `team_attributes` AS `TA` ON `T`.`team_api_id` = `TA`.`team_api_id` WHERE `TA`.`buildupplayspeedclass` = 'Slow'
SELECT `team`.`team_short_name` FROM `team` INNER JOIN `team_attributes` ON `team`.`team_api_id` = `team_attributes`.`team_api_id` WHERE `team_attributes`.`chancecreationpassingclass` = 'Safe'
SELECT AVG(`height`) FROM `player` WHERE `id` IN (SELECT `id` FROM `match` WHERE `country_id` = (SELECT `id` FROM `country` WHERE `name` = 'Italy'))
SELECT `player_name` FROM `player` WHERE `height` > 180 ORDER BY `player_name` ASC LIMIT 3
SELECT COUNT(`player_name`) FROM `player` WHERE `player_name` LIKE 'Aaron%' AND `birthday` > '1999-12-31'
SELECT (SELECT `jumping` FROM `player_attributes` WHERE `id` = 6) - (SELECT `jumping` FROM `player_attributes` WHERE `id` = 23) AS `jumping_difference`
SELECT `player_api_id` FROM `player_attributes` WHERE `preferred_foot` = 'right' ORDER BY `potential` ASC LIMIT 5
SELECT COUNT(DISTINCT `pa`.`player_api_id`) FROM `player_attributes` AS `pa` INNER JOIN (SELECT `player_api_id`, MAX(`crossing`) AS `max_crossing` FROM `player_attributes` GROUP BY `player_api_id`) AS `max_pa` ON `pa`.`player_api_id` = `max_pa`.`player_api_id` AND `pa`.`crossing` = `max_pa`.`max_crossing` WHERE `pa`.`preferred_foot` = 'left'
SELECT CAST(SUM(CASE WHEN `stamina` > 80 AND `strength` > 80 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`player_api_id`) FROM `player_attributes`
SELECT `country`.`name` FROM `country` INNER JOIN `league` ON `country`.`id` = `league`.`country_id` WHERE `league`.`name` = 'Poland Ekstraklasa'
SELECT `home_team_goal`, `away_team_goal` FROM `match` INNER JOIN `league` ON `match`.`league_id` = `league`.`id` WHERE `match`.`date` LIKE '2008-09-24%' AND `league`.`name` = 'Belgium Jupiler League'
SELECT `acceleration`, `sprint_speed`, `agility` FROM `player_attributes` AS pa INNER JOIN `player` AS p ON pa.`player_api_id` = p.`player_api_id` WHERE p.`player_name` = 'Alexis Blin'
SELECT DISTINCT `T2`.`buildupplayspeedclass` FROM `team` AS `T1` INNER JOIN `team_attributes` AS `T2` ON `T1`.`team_api_id` = `T2`.`team_api_id` WHERE `T1`.`team_long_name` = 'KSV Cercle Brugge'
SELECT COUNT(`id`) FROM `match` AS M INNER JOIN `league` AS L ON M.`league_id` = L.`id` WHERE M.`season` = '2015/2016' AND L.`name` = 'Italian Serie A'
SELECT MAX(`home_team_goal`) FROM `match` INNER JOIN `league` ON `match`.`league_id` = `league`.`id` WHERE `league`.`name` = 'Netherlands Eredivisie'
SELECT `pa`.`finishing`, `pa`.`curve` FROM `player` AS `p` INNER JOIN `player_attributes` AS `pa` ON `p`.`player_api_id` = `pa`.`player_api_id` ORDER BY `p`.`weight` DESC LIMIT 1
SELECT `L`.`name` FROM `match` AS `M` INNER JOIN `league` AS `L` ON `M`.`league_id` = `L`.`id` WHERE `M`.`season` = '2015/2016' GROUP BY `L`.`name` ORDER BY COUNT(`M`.`id`) DESC LIMIT 4
SELECT `team`.`team_long_name` FROM `match` INNER JOIN `team` ON `match`.`away_team_api_id` = `team`.`team_api_id` ORDER BY `match`.`away_team_goal` DESC LIMIT 1
SELECT `player_name` FROM `player` WHERE `player_api_id` = (SELECT `player_api_id` FROM `player_attributes` ORDER BY `overall_rating` DESC LIMIT 1)
SELECT CAST(COUNT(CASE WHEN `player`.`height` < 180 AND `player_attributes`.`overall_rating` > 70 THEN 1 END) AS REAL) * 100 / COUNT(`player`.`id`) FROM `player` INNER JOIN `player_attributes` ON `player`.`player_api_id` = `player_attributes`.`player_api_id`
SELECT (CAST(SUM(CASE WHEN `sex` = 'M' AND `admission` = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / NULLIF(SUM(CASE WHEN `sex` = 'M' AND `admission` = '-' THEN 1 ELSE 0 END), 0)) - 100 AS deviation FROM `patient`
SELECT CAST(SUM(CASE WHEN strftime('%Y', `birthday`) > '1930' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`id`) AS percentage FROM `patient` WHERE `sex` = 'F'
SELECT CAST(SUM(CASE WHEN `admission` = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`id`) FROM `patient` WHERE `birthday` BETWEEN '1930-01-01' AND '1940-12-31';
SELECT CAST(COUNT(CASE WHEN `admission` = '-' THEN 1 END) AS REAL) / COUNT(CASE WHEN `admission` = '+' THEN 1 END) FROM `patient` WHERE `diagnosis` = 'SLE'
SELECT `patient`.`diagnosis`, `laboratory`.`date` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`id` = '30609'
SELECT `patient`.`sex`, `patient`.`birthday`, `examination`.`examination date`, `examination`.`symptoms` FROM `patient` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE `patient`.`id` = '163109'
SELECT `patient`.`id`, `patient`.`sex`, `patient`.`birthday` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`ldh` > 500
SELECT `patient`.`id`, (strftime('%Y', 'now') - strftime('%Y', `patient`.`birthday`)) AS age FROM `examination` INNER JOIN `patient` ON `examination`.`id` = `patient`.`id` WHERE `examination`.`rvvt` = '+'
SELECT `patient`.`id`, `patient`.`sex`, `patient`.`diagnosis` FROM `examination` INNER JOIN `patient` ON `examination`.`id` = `patient`.`id` WHERE `examination`.`thrombosis` = 2
SELECT DISTINCT `patient`.`id` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE strftime('%Y', `patient`.`birthday`) = '1937' AND `laboratory`.`t-cho` >= 250
SELECT DISTINCT `patient`.`id`, `patient`.`sex`, `patient`.`diagnosis` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`alb` < 3.5
SELECT CAST(SUM(CASE WHEN `patient`.`sex` = 'F' AND (`laboratory`.`tp` < 6.0 OR `laboratory`.`tp` > 8.5) THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id`
SELECT AVG(`acl igg`) AS average_aclg FROM `examination` INNER JOIN `patient` ON `examination`.`id` = `patient`.`id` WHERE `patient`.`admission` = '+' AND (strftime('%Y', 'now') - strftime('%Y', `patient`.`birthday`)) >= 50
SELECT COUNT(DISTINCT `id`) FROM `patient` WHERE `sex` = 'F' AND strftime('%Y', `description`) = '1997' AND `admission` = '-'
SELECT MIN(strftime('%Y', `first date`) - strftime('%Y', `birthday`)) AS age FROM `patient` WHERE `first date` IS NOT NULL
SELECT COUNT(DISTINCT `patient`.`id`) FROM `examination` INNER JOIN `patient` ON `examination`.`id` = `patient`.`id` WHERE `examination`.`thrombosis` = 1 AND `examination`.`examination date` LIKE '1997%' AND `patient`.`sex` = 'F'
SELECT MAX(strftime('%Y', `birthday`)) - MIN(strftime('%Y', `birthday`)) AS age_gap FROM `patient` WHERE `id` IN (SELECT `id` FROM `laboratory` WHERE `tg` >= 200)
SELECT `e`.`symptoms`, `e`.`diagnosis` FROM `examination` AS `e` INNER JOIN `patient` AS `p` ON `e`.`id` = `p`.`id` WHERE `e`.`symptoms` IS NOT NULL ORDER BY `p`.`birthday` DESC LIMIT 1
SELECT DIVIDE(COUNT(DISTINCT T1.id), 12) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.sex = 'M' AND T2.date BETWEEN '1998-01-01' AND '1998-12-31'
SELECT `laboratory`.`date`, strftime('%Y', `patient`.`first date`) - strftime('%Y', `patient`.`birthday`) AS age FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`diagnosis` = 'SJS' ORDER BY `patient`.`birthday` ASC LIMIT 1
SELECT CAST(SUM(CASE WHEN `p`.`sex` = 'M' AND `l`.`ua` <= 8.0 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN `p`.`sex` = 'F' AND `l`.`ua` <= 6.5 THEN 1 ELSE 0 END) FROM `patient` AS `p` INNER JOIN `laboratory` AS `l` ON `p`.`id` = `l`.`id`
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` LEFT JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE strftime('%Y', `examination`.`examination date`) - strftime('%Y', `patient`.`first date`) >= 1 OR `examination`.`examination date` IS NULL
SELECT COUNT(DISTINCT `examination`.`id`) FROM `examination` INNER JOIN `patient` ON `examination`.`id` = `patient`.`id` WHERE strftime('%Y', `examination`.`examination date`) BETWEEN '1990' AND '1993' AND (strftime('%Y', `examination`.`examination date`) - strftime('%Y', `patient`.`birthday`)) < 18
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`sex` = 'M' AND `laboratory`.`t-bil` >= 2.0
SELECT `diagnosis` FROM `examination` WHERE `examination date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY `diagnosis` ORDER BY COUNT(`diagnosis`) DESC LIMIT 1
SELECT AVG(1999 - strftime('%Y', `birthday`)) FROM `patient` WHERE `id` IN (SELECT `id` FROM `laboratory` WHERE `date` BETWEEN '1991-10-01' AND '1991-10-30')
SELECT strftime('%Y', `examination`.`examination date`) - strftime('%Y', `patient`.`birthday`) AS age, `examination`.`diagnosis` FROM `examination` INNER JOIN `laboratory` ON `examination`.`id` = `laboratory`.`id` INNER JOIN `patient` ON `examination`.`id` = `patient`.`id` WHERE `laboratory`.`hgb` = (SELECT MAX(`hgb`) FROM `laboratory`) LIMIT 1
SELECT `ana` FROM `examination` WHERE `id` = 3605340 AND `examination date` = '1996-12-02'
SELECT CASE WHEN `t-cho` < 250 THEN 'Normal' ELSE 'High' END AS `status` FROM `laboratory` WHERE `id` = 2927464 AND `date` = '1995-09-04'
SELECT `sex` FROM `patient` WHERE `diagnosis` = 'AORTITIS' ORDER BY `first date` ASC LIMIT 1
SELECT `acl igm` FROM `examination` WHERE `diagnosis` = 'SLE' AND `examination date` = '1993-11-12' AND `id` = (SELECT `id` FROM `patient` WHERE `description` = '1994-02-19' AND `diagnosis` = 'SLE')
SELECT `patient`.`sex` FROM `laboratory` INNER JOIN `patient` ON `laboratory`.`id` = `patient`.`id` WHERE `laboratory`.`got` = 9 AND `laboratory`.`date` = '1992-06-12'
SELECT strftime('%Y', '1991-10-21') - strftime('%Y', P.birthday) AS age FROM laboratory AS L INNER JOIN patient AS P ON L.id = P.id WHERE L.ua = 8.4 AND L.date = '1991-10-21'
SELECT COUNT(`laboratory`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`first date` = '1991-06-13' AND `patient`.`diagnosis` = 'SJS' AND strftime('%Y', `laboratory`.`date`) = '1995'
SELECT T2.`diagnosis` FROM examination AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id WHERE T1.`diagnosis` = 'SLE' AND T1.`examination date` = '1997-01-27'
SELECT T1.`symptoms` FROM `examination` AS T1 INNER JOIN `patient` AS T2 ON T1.`id` = T2.`id` WHERE T2.`birthday` = '1959-03-01' AND T1.`examination date` = '1993-09-27'
SELECT (SUM(CASE WHEN `date` LIKE '1981-11-%' THEN `t-cho` ELSE 0 END) - SUM(CASE WHEN `date` LIKE '1981-12-%' THEN `t-cho` ELSE 0 END)) / SUM(CASE WHEN `date` LIKE '1981-11-%' THEN `t-cho` ELSE 0 END) * 100 AS decrease_rate FROM laboratory WHERE `id` = (SELECT `id` FROM patient WHERE `birthday` = '1959-02-18')
SELECT DISTINCT `patient`.`id` FROM `patient` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE `patient`.`diagnosis` = 'Behcet' AND `examination`.`examination date` BETWEEN '1997-01-01' AND '1997-12-31'
SELECT DISTINCT `patient`.`id` FROM `laboratory` INNER JOIN `patient` ON `laboratory`.`id` = `patient`.`id` WHERE `laboratory`.`date` BETWEEN '1987-07-06' AND '1996-01-31' AND `laboratory`.`gpt` > 30 AND `laboratory`.`alb` < 4
SELECT `id` FROM `patient` WHERE `sex` = 'F' AND strftime('%Y', `birthday`) = '1964' AND `admission` = '+'
SELECT COUNT(DISTINCT `patient`.`id`) FROM `examination` INNER JOIN `patient` ON `examination`.`id` = `patient`.`id` WHERE `examination`.`thrombosis` = 2 AND `examination`.`ana pattern` = 'S' AND `examination`.`acl igm` > (SELECT AVG(`acl igm`) * 1.2 FROM `examination`)
SELECT CAST(SUM(CASE WHEN `ua` <= 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage FROM `laboratory` WHERE `u-pro` > 0 AND `u-pro` < 30
SELECT (SUM(CASE WHEN `diagnosis` = 'BEHCET' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM `patient` WHERE `sex` = 'M' AND strftime('%Y', `first date`) = '1981'
SELECT DISTINCT `patient`.`id` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`admission` = '-' AND `laboratory`.`date` LIKE '1991-10%' AND `laboratory`.`t-bil` < 2.0
SELECT COUNT(*) FROM `examination` AS E INNER JOIN `patient` AS P ON E.`id` = P.`id` WHERE E.`ana pattern` != 'P' AND P.`sex` = 'F' AND P.`birthday` BETWEEN '1980-01-01' AND '1989-12-31'
SELECT `patient`.`sex` FROM `patient` INNER JOIN `examination` ON `examination`.`id` = `patient`.`id` INNER JOIN `laboratory` ON `laboratory`.`id` = `patient`.`id` WHERE `examination`.`diagnosis` = 'PSS' AND `laboratory`.`crp` > 2 AND `laboratory`.`cre` = 1 AND `laboratory`.`ldh` = 123
SELECT AVG(`L`.`alb`) FROM `patient` AS `P` INNER JOIN `laboratory` AS `L` ON `P`.`id` = `L`.`id` WHERE `P`.`sex` = 'F' AND `L`.`plt` > 400 AND `P`.`diagnosis` = 'SLE'
SELECT `symptoms` FROM `examination` WHERE `diagnosis` = 'SLE' GROUP BY `symptoms` ORDER BY COUNT(`symptoms`) DESC LIMIT 1
SELECT `description`, `diagnosis` FROM `patient` WHERE `id` = 48473
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` WHERE `patient`.`sex` = 'F' AND `patient`.`diagnosis` = 'APS'
SELECT COUNT(DISTINCT `laboratory`.`id`) FROM `laboratory` WHERE strftime('%Y', `laboratory`.`date`) = '1997' AND (`laboratory`.`tp` <= 6 OR `laboratory`.`tp` >= 8.5')
SELECT (SUM(CASE WHEN `diagnosis` LIKE '%ITP%' THEN 1 ELSE 0 END) * 100.0 / SUM(CASE WHEN `diagnosis` LIKE '%SLE%' THEN 1 ELSE 0 END)) AS proportion FROM `patient` WHERE `id` IN (SELECT `id` FROM `examination` WHERE `symptoms` LIKE '%thrombocytopenia%')
SELECT CAST(SUM(CASE WHEN `sex` = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`sex`) AS percentage FROM `patient` WHERE strftime('%Y', `birthday`) = '1980' AND `diagnosis` = 'RA'
SELECT COUNT(DISTINCT `patient`.`id`) FROM `examination` INNER JOIN `patient` ON `examination`.`id` = `patient`.`id` WHERE `patient`.`sex` = 'M' AND `examination`.`examination date` BETWEEN '1995-01-01' AND '1997-12-31' AND `examination`.`diagnosis` = 'Behcet' AND `patient`.`admission` = '-'
SELECT COUNT(DISTINCT T1.`id`) FROM `patient` AS T1 INNER JOIN `laboratory` AS T2 ON T1.`id` = T2.`id` WHERE T1.`sex` = 'F' AND T2.`wbc` < 3.5
SELECT DATEDIFF(`examination`.`examination date`, `patient`.`first date`) FROM `patient` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE `patient`.`id` = 821298
SELECT CASE WHEN `ua` > 8.0 AND `sex` = 'M' OR `ua` > 6.5 AND `sex` = 'F' THEN 'Yes' ELSE 'No' END AS `Uric Acid Normal Range` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`id` = 57266
SELECT `date` FROM `laboratory` WHERE `id` = '48473' AND `got` >= 60
SELECT `patient`.`id`, `patient`.`sex`, `patient`.`birthday` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`got` < 60 AND strftime('%Y', `laboratory`.`date`) = '1994'
SELECT DISTINCT `patient`.`id` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`sex` = 'M' AND `laboratory`.`gpt` >= 60
SELECT `patient`.`diagnosis` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`gpt` > 60 ORDER BY `patient`.`birthday` ASC
SELECT AVG(`ldh`) FROM `laboratory` WHERE `ldh` < 500
SELECT `patient`.`id`, (strftime('%Y', 'now') - strftime('%Y', `patient`.`birthday`)) AS `age` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`ldh` BETWEEN 600 AND 800
SELECT DISTINCT CASE WHEN `patient`.`admission` = '+' THEN 'inpatient' ELSE 'outpatient' END AS `treatment_type` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`alp` < 300
SELECT `patient`.`id` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`birthday` = '1982-04-01' AND `laboratory`.`alp` < 300
SELECT `patient`.`id`, `patient`.`sex`, `patient`.`birthday` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`tp` < 6.0
SELECT `patient`.`id`, (`laboratory`.`tp` - 8.5) AS `tp_deviation` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`sex` = 'F' AND `laboratory`.`tp` > 8.5
SELECT `patient`.`id`, `patient`.`birthday` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`sex` = 'M' AND (`laboratory`.`alb` <= 3.5 OR `laboratory`.`alb` > 5.5) ORDER BY `patient`.`birthday` DESC
SELECT `patient`.`id`, CASE WHEN `laboratory`.`alb` BETWEEN 3.5 AND 5.5 THEN 'Normal' ELSE 'Not Normal' END AS albumin_status FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE strftime('%Y', `patient`.`birthday`) = '1982'
SELECT CAST(SUM(CASE WHEN `patient`.`sex` = 'F' AND `laboratory`.`ua` > 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`sex` = 'F'
SELECT AVG(`lab`.`ua`) AS `average_ua_index` FROM `laboratory` AS `lab` INNER JOIN `patient` AS `pat` ON `lab`.`id` = `pat`.`id` WHERE (`pat`.`sex` = 'M' AND `lab`.`ua` < 8.0) OR (`pat`.`sex` = 'F' AND `lab`.`ua` < 6.5) AND `lab`.`date` = (SELECT MAX(`date`) FROM `laboratory` WHERE `id` = `lab`.`id`)
SELECT `patient`.`id`, `patient`.`sex`, `patient`.`birthday` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`un` = 29
SELECT `patient`.`id`, `patient`.`sex`, `patient`.`birthday` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`diagnosis` = 'RA' AND `laboratory`.`un` < 30
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`sex` = 'M' AND `laboratory`.`cre` >= 1.5
SELECT (SUM(CASE WHEN `p`.`sex` = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN `p`.`sex` = 'F' THEN 1 ELSE 0 END)) AS result FROM `laboratory` AS `l` INNER JOIN `patient` AS `p` ON `l`.`id` = `p`.`id` WHERE `l`.`cre` >= 1.5
SELECT `patient`.`id`, `patient`.`sex`, `patient`.`birthday` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`t-bil` = (SELECT MAX(`t-bil`) FROM `laboratory`)
SELECT `patient`.`sex`, GROUP_CONCAT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`t-bil` >= 2.0 GROUP BY `patient`.`sex`
SELECT `patient`.`id`, `laboratory`.`t-cho` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`birthday` = (SELECT MIN(`birthday`) FROM `patient`) AND `laboratory`.`t-cho` = (SELECT MAX(`t-cho`) FROM `laboratory`)
SELECT SUM(strftime('%Y', 'now') - strftime('%Y', `birthday`)) / COUNT(`patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`sex` = 'M' AND `laboratory`.`t-cho` >= 250
SELECT `patient`.`id`, `patient`.`diagnosis` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`tg` > 300
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`tg` >= 200 AND (strftime('%Y', 'now') - strftime('%Y', `patient`.`birthday`)) > 50
SELECT DISTINCT `patient`.`id` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`admission` = '-' AND `laboratory`.`cpk` < 250
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`sex` = 'M' AND strftime('%Y', `patient`.`birthday`) BETWEEN '1936' AND '1956' AND `laboratory`.`cpk` >= 250
SELECT `patient`.`id`, `patient`.`sex`, (strftime('%Y', 'now') - strftime('%Y', `patient`.`birthday`)) AS age FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`glu` >= 180 AND `laboratory`.`t-cho` < 250
SELECT DISTINCT `patient`.`id`, `laboratory`.`glu` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`glu` < 180 AND strftime('%Y', `patient`.`description`) = '1991'
SELECT `patient`.`id`, `patient`.`sex`, `patient`.`birthday` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`wbc` <= 3.5 OR `laboratory`.`wbc` >= 9.0 ORDER BY `patient`.`sex`, `patient`.`birthday` ASC
SELECT `patient`.`id`, `patient`.`diagnosis`, (strftime('%Y', 'now') - strftime('%Y', `patient`.`birthday`)) AS `age` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`rbc` < 3.5
SELECT `p`.`id`, `p`.`admission` FROM `patient` AS `p` INNER JOIN `laboratory` AS `l` ON `p`.`id` = `l`.`id` WHERE `p`.`sex` = 'F' AND (strftime('%Y', 'now') - strftime('%Y', `p`.`birthday`)) >= 50 AND (`l`.`rbc` <= 3.5 OR `l`.`rbc` >= 6.0)
SELECT DISTINCT `patient`.`id`, `patient`.`sex` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`admission` = '-' AND `laboratory`.`hgb` < 10
SELECT `p`.`id`, `p`.`sex` FROM `patient` AS `p` INNER JOIN `laboratory` AS `l` ON `p`.`id` = `l`.`id` WHERE `p`.`diagnosis` = 'SLE' AND `l`.`hgb` > 10 AND `l`.`hgb` < 17 ORDER BY `p`.`birthday` LIMIT 1
SELECT `patient`.`id`, (strftime('%Y', 'now') - strftime('%Y', `patient`.`birthday`)) AS age FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`hct` >= 52 GROUP BY `patient`.`id` HAVING COUNT(`laboratory`.`id`) > 2
SELECT AVG(`hct`) FROM `laboratory` WHERE `date` LIKE '1991%' AND `hct` < 29
SELECT (SELECT COUNT(DISTINCT `id`) FROM `laboratory` WHERE `plt` < 100) AS lower_than_normal, (SELECT COUNT(DISTINCT `id`) FROM `laboratory` WHERE `plt` > 400) AS higher_than_normal
SELECT `patient`.`id`, `patient`.`sex`, `patient`.`birthday`, `patient`.`description`, `patient`.`first date`, `patient`.`admission`, `patient`.`diagnosis` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE strftime('%Y', `laboratory`.`date`) = '1984' AND (strftime('%Y', 'now') - strftime('%Y', `patient`.`birthday`)) < 50 AND `laboratory`.`plt` BETWEEN 100 AND 400
SELECT CAST(SUM(CASE WHEN `p`.`sex` = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage FROM `patient` AS `p` INNER JOIN `laboratory` AS `l` ON `p`.`id` = `l`.`id` WHERE (strftime('%Y', 'now') - strftime('%Y', `p`.`birthday`)) > 55 AND `l`.`pt` >= 14
SELECT `patient`.`id` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`first date` > '1992-12-31' AND `laboratory`.`pt` < 14
SELECT COUNT(T1.id) FROM `examination` AS T1 INNER JOIN `laboratory` AS T2 ON T1.id = T2.id WHERE T1.`examination date` > '1997-01-01' AND T2.`aptt` < 45
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE `laboratory`.`aptt` > 45 AND `examination`.`thrombosis` = 0
SELECT COUNT(DISTINCT `L`.`id`) FROM `laboratory` AS `L` INNER JOIN `patient` AS `P` ON `L`.`id` = `P`.`id` WHERE `P`.`sex` = 'M' AND `L`.`wbc` > 3.5 AND `L`.`wbc` < 9.0 AND (`L`.`fg` <= 150 OR `L`.`fg` >= 450)
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`birthday` > '1980-01-01' AND (`laboratory`.`fg` < 150 OR `laboratory`.`fg` > 450)
SELECT DISTINCT `patient`.`diagnosis` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`u-pro` >= 30
SELECT `patient`.`id` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`diagnosis` = 'SLE' AND `laboratory`.`u-pro` > 0 AND `laboratory`.`u-pro` < 30
SELECT COUNT(DISTINCT `id`) FROM `laboratory` WHERE `igg` >= 2000
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE `laboratory`.`igg` > 900 AND `laboratory`.`igg` < 2000 AND `examination`.`symptoms` IS NOT NULL
SELECT `patient`.`diagnosis` FROM `laboratory` INNER JOIN `patient` ON `laboratory`.`id` = `patient`.`id` WHERE `laboratory`.`iga` = (SELECT MAX(`iga`) FROM `laboratory` WHERE `iga` BETWEEN 80 AND 500)
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`iga` > 80 AND `laboratory`.`iga` < 500 AND strftime('%Y', `patient`.`first date`) >= '1990'
SELECT `p`.`diagnosis` FROM `patient` AS `p` INNER JOIN `laboratory` AS `l` ON `p`.`id` = `l`.`id` WHERE `l`.`igm` <= 40 OR `l`.`igm` >= 400 GROUP BY `p`.`diagnosis` ORDER BY COUNT(`p`.`diagnosis`) DESC LIMIT 1
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`crp` = '+' AND `patient`.`description` IS NULL
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`cre` >= 1.5 AND (strftime('%Y', 'now') - strftime('%Y', `patient`.`birthday`)) < 70
SELECT COUNT(DISTINCT `patient`.`id`) FROM `examination` INNER JOIN `laboratory` ON `examination`.`id` = `laboratory`.`id` WHERE `laboratory`.`ra` IN ('-', '+-') AND `examination`.`kct` = '+'
SELECT DISTINCT `patient`.`diagnosis` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE strftime('%Y', `patient`.`birthday`) >= '1985' AND `laboratory`.`ra` IN ('-', '+-')
SELECT DISTINCT `patient`.`id` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`rf` < 20 AND (strftime('%Y', 'now') - strftime('%Y', `patient`.`birthday`)) > 60
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`rf` < 20 AND `examination`.`thrombosis` = '0'
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`c3` > 35 AND `examination`.`ana pattern` = 'P'
SELECT `patient`.`id` FROM `patient` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE `examination`.`acl iga` = (SELECT MAX(`acl iga`) FROM `examination` INNER JOIN `laboratory` ON `examination`.`id` = `laboratory`.`id` WHERE `laboratory`.`hct` <= 29 OR `laboratory`.`hct` >= 52) LIMIT 1
SELECT COUNT(DISTINCT `patient`.`id`) FROM `examination` INNER JOIN `laboratory` ON `examination`.`id` = `laboratory`.`id` WHERE `examination`.`thrombosis` = 1 AND `laboratory`.`c4` > 10
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`admission` = '+' AND (`laboratory`.`rnp` = '-' OR `laboratory`.`rnp` = '+-')
SELECT `birthday` FROM `patient` AS P INNER JOIN `laboratory` AS L ON P.`id` = L.`id` WHERE L.`rnp` NOT IN ('-', '+-') ORDER BY P.`birthday` DESC LIMIT 1
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`sm` IN ('-', '0') AND `examination`.`thrombosis` = 0
SELECT `patient`.`id` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`sm` NOT IN ('negative', '0') ORDER BY `patient`.`birthday` DESC LIMIT 3
SELECT DISTINCT `patient`.`id` FROM `patient` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `examination`.`examination date` > '1997-01-01' AND `laboratory`.`sc170` IN ('negative', '0')
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` LEFT JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE `laboratory`.`sc170` IN ('negative', '0') AND `patient`.`sex` = 'F' AND `examination`.`symptoms` IS NULL
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`ssa` IN ('-', '+-') AND strftime('%Y', `patient`.`first date`) < '2000'
SELECT `id` FROM `patient` WHERE `first date` = (SELECT MIN(`first date`) FROM `patient` WHERE `id` IN (SELECT `id` FROM `laboratory` WHERE `ssa` NOT IN ('negative', '0')))
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`ssb` IN ('-', '+-') AND `examination`.`diagnosis` = 'SLE'
SELECT COUNT(DISTINCT E.`id`) FROM examination AS E INNER JOIN laboratory AS L ON E.`id` = L.`id` WHERE L.`ssb` IN ('negative', '0') AND E.`symptoms` IS NOT NULL
SELECT COUNT(DISTINCT T2.`id`) FROM laboratory AS T1 INNER JOIN patient AS T2 ON T1.`id` = T2.`id` WHERE T1.`centromea` IN ('-', '+-') AND T1.`ssb` IN ('-', '+-') AND T2.`sex` = 'M'
SELECT DISTINCT `patient`.`diagnosis` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`dna` >= 8
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`dna` < 8 AND `patient`.`description` IS NULL
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`igg` > 900 AND `laboratory`.`igg` < 2000 AND `patient`.`admission` = '+'
SELECT CAST(COUNT(`id`) FILTER(WHERE `got` >= 60 AND `diagnosis` = 'SLE') AS REAL) * 100 / COUNT(`id`) FILTER(WHERE `got` >= 60) FROM `laboratory` INNER JOIN `patient` ON `laboratory`.`id` = `patient`.`id`
SELECT COUNT(DISTINCT T2.id) FROM laboratory AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id WHERE T2.sex = 'M' AND T1.got < 60
SELECT `birthday` FROM `patient` WHERE `id` = (SELECT `id` FROM `laboratory` WHERE `got` >= 60 ORDER BY `birthday` DESC LIMIT 1)
SELECT `patient`.`birthday` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`gpt` < 60 ORDER BY `laboratory`.`gpt` DESC LIMIT 3
SELECT COUNT(DISTINCT T2.id) FROM laboratory AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id WHERE T1.got < 60 AND T2.sex = 'M'
SELECT `patient`.`first date` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`ldh` = (SELECT MAX(`ldh`) FROM `laboratory` WHERE `ldh` < 500) ORDER BY `patient`.`first date` ASC LIMIT 1
SELECT MAX(`laboratory`.`date`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`ldh` >= 500 AND `patient`.`first date` = (SELECT MAX(`first date`) FROM `patient` WHERE `first date` IS NOT NULL)
SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.alp >= 300 AND T1.admission = '+'
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`admission` = '-' AND `laboratory`.`alp` < 300
SELECT DISTINCT `patient`.`diagnosis` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`tp` < 6.0
SELECT COUNT(DISTINCT `laboratory`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`diagnosis` = 'SJS' AND `laboratory`.`tp` > 6.0 AND `laboratory`.`tp` < 8.5
SELECT `examination date` FROM `examination` WHERE `id` = (SELECT `id` FROM `laboratory` WHERE `alb` = (SELECT MAX(`alb`) FROM `laboratory` WHERE `alb` > 3.5 AND `alb` < 5.5))
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`sex` = 'M' AND `laboratory`.`alb` > 3.5 AND `laboratory`.`alb` < 5.5 AND `laboratory`.`tp` BETWEEN 6.0 AND 8.5
SELECT `examination`.`acl igg`, `examination`.`acl igm`, `examination`.`acl iga` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE `patient`.`sex` = 'F' AND `laboratory`.`ua` <= 6.50 ORDER BY `laboratory`.`ua` DESC LIMIT 1
SELECT MAX(`e`.`ana`) FROM `examination` AS `e` INNER JOIN `laboratory` AS `l` ON `e`.`id` = `l`.`id` WHERE `l`.`cre` < 1.5
SELECT `patient`.`id` FROM `patient` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`cre` < 1.5 AND `examination`.`acl iga` = (SELECT MAX(`acl iga`) FROM `examination`)
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE `laboratory`.`t-bil` >= 2.0 AND `examination`.`ana pattern` LIKE '%P%'
SELECT `e`.`ana` FROM `examination` AS `e` INNER JOIN `laboratory` AS `l` ON `e`.`id` = `l`.`id` WHERE `l`.`t-bil` < 2.0 ORDER BY `l`.`t-bil` DESC LIMIT 1
SELECT COUNT(DISTINCT T1.`id`) FROM examination AS T1 INNER JOIN laboratory AS T2 ON T1.`id` = T2.`id` WHERE T2.`t-cho` >= 250 AND T1.`kct` = '-'
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE `laboratory`.`t-cho` < 250 AND `examination`.`ana pattern` = 'P'
SELECT COUNT(DISTINCT E.`id`) FROM examination AS E INNER JOIN laboratory AS L ON E.`id` = L.`id` WHERE L.`tg` < 200 AND E.`symptoms` IS NOT NULL
SELECT `patient`.`diagnosis` FROM `laboratory` INNER JOIN `patient` ON `laboratory`.`id` = `patient`.`id` WHERE `laboratory`.`tg` < 200 ORDER BY `laboratory`.`tg` DESC LIMIT 1
SELECT `patient`.`id` FROM `patient` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `examination`.`thrombosis` = 0 AND `laboratory`.`cpk` < 250
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE `laboratory`.`cpk` < 250 AND (`examination`.`kct` = '+' OR `examination`.`rvvt` = '+' OR `examination`.`lac` = '+')
SELECT MIN(`birthday`) FROM `patient` WHERE `id` IN (SELECT `id` FROM `laboratory` WHERE `glu` > 180)
SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id INNER JOIN examination AS T3 ON T1.id = T3.id WHERE T2.glu < 180 AND T3.thrombosis = 0
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`admission` = '+' AND `laboratory`.`wbc` BETWEEN 3.5 AND 9.0
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`diagnosis` = 'SLE' AND `laboratory`.`wbc` BETWEEN 3.5 AND 9.0
SELECT DISTINCT `patient`.`id` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE (`laboratory`.`rbc` <= 3.5 OR `laboratory`.`rbc` >= 6.0) AND `patient`.`admission` = '-'
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE `laboratory`.`plt` > 100 AND `laboratory`.`plt` < 400 AND `examination`.`symptoms` IS NOT NULL
SELECT `laboratory`.`plt` FROM `laboratory` INNER JOIN `patient` ON `laboratory`.`id` = `patient`.`id` INNER JOIN `examination` ON `examination`.`id` = `patient`.`id` WHERE `laboratory`.`plt` > 100 AND `laboratory`.`plt` < 400 AND `examination`.`diagnosis` = 'MCTD'
SELECT AVG(`l`.`pt`) FROM `laboratory` AS `l` INNER JOIN `patient` AS `p` ON `l`.`id` = `p`.`id` WHERE `p`.`sex` = 'M' AND `l`.`pt` < 14
SELECT COUNT(DISTINCT `patient`.`id`) FROM `examination` INNER JOIN `laboratory` ON `examination`.`id` = `laboratory`.`id` WHERE `examination`.`thrombosis` IN (1, 2) AND `laboratory`.`pt` < 14
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Angela' AND `member`.`last_name` = 'Sanders'
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`college` = 'College of Engineering'
SELECT `first_name`, `last_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`department` = 'Art and Design Department'
SELECT COUNT(DISTINCT `link_to_member`) FROM `attendance` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Women's Soccer'
SELECT `member`.`phone` FROM `attendance` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `event`.`event_name` = 'Women''s Soccer'
SELECT COUNT(DISTINCT `attendance`.`link_to_member`) FROM `attendance` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `event`.`event_name` = 'Women''s Soccer' AND `member`.`t_shirt_size` = 'Medium'
SELECT `event_name` FROM `event` WHERE `event_id` = (SELECT `link_to_event` FROM `attendance` GROUP BY `link_to_event` ORDER BY COUNT(`link_to_member`) DESC LIMIT 1)
SELECT `college` FROM `major` WHERE `major_id` = (SELECT `link_to_major` FROM `member` WHERE `position` = 'Vice President')
SELECT DISTINCT `event`.`event_name` FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Maya' AND `member`.`last_name` = 'Mclean'
SELECT COUNT(DISTINCT `attendance`.`link_to_event`) FROM `attendance` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `member`.`first_name` = 'Sacha' AND `member`.`last_name` = 'Harrison' AND strftime('%Y', `event`.`event_date`) = '2019'
SELECT COUNT(DISTINCT `event`.`event_id`) FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` WHERE `event`.`type` = 'Meeting' GROUP BY `event`.`event_id` HAVING COUNT(`attendance`.`link_to_event`) > 10
SELECT `event`.`event_name` FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` WHERE `event`.`type` <> 'Fundraiser' GROUP BY `event`.`event_id` HAVING COUNT(`attendance`.`link_to_event`) > 20
SELECT CAST(COUNT(DISTINCT `link_to_member`) AS REAL) / COUNT(DISTINCT `event_name`) FROM `attendance` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`type` = 'Meeting' AND strftime('%Y', `event`.`event_date`) = '2020'
SELECT `expense_description` FROM `expense` WHERE `cost` = (SELECT MAX(`cost`) FROM `expense`)
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Environmental Engineering'
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Laugh Out Loud'
SELECT `last_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Law and Constitutional Studies'
SELECT `T2`.`county` FROM `member` AS `T1` INNER JOIN `zip_code` AS `T2` ON `T1`.`zip` = `T2`.`zip_code` WHERE `T1`.`first_name` = 'Sherri' AND `T1`.`last_name` = 'Ramsey'
SELECT `college` FROM `major` WHERE `major_id` = (SELECT `link_to_major` FROM `member` WHERE `first_name` = 'Tyler' AND `last_name` = 'Hewitt')
SELECT SUM(`amount`) FROM `income` INNER JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `member`.`position` = 'Vice President'
SELECT SUM(`spent`) FROM `budget` WHERE `category` = 'Food' AND `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'September Meeting')
SELECT `city`, `state` FROM `zip_code` INNER JOIN `member` ON `zip_code`.`zip_code` = `member`.`zip` WHERE `member`.`position` = 'President'
SELECT `first_name`, `last_name` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`state` = 'Illinois'
SELECT SUM(`spent`) FROM `budget` WHERE `category` = 'Advertisement' AND `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'September Meeting')
SELECT DISTINCT `major`.`department` FROM `major` INNER JOIN `member` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`last_name` IN ('Pierce', 'Guidi')
SELECT SUM(`amount`) FROM `budget` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'October Speaker')
SELECT `expense_description`, CASE WHEN `approved` = 'true' THEN 'Yes' ELSE 'No' END AS `approved_status` FROM `expense` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'October Meeting' AND `event`.`event_date` = '2019-10-08'
SELECT SUM(`cost`) / COUNT(DISTINCT `expense_id`) FROM `expense` AS T1 INNER JOIN `member` AS T2 ON T1.`link_to_member` = T2.`member_id` WHERE T2.`first_name` = 'Elijah' AND T2.`last_name` = 'Allen' AND (SUBSTR(T1.`expense_date`, 6, 2) = '09' OR SUBSTR(T1.`expense_date`, 6, 2) = '10')
SELECT SUM(CASE WHEN strftime('%Y', `event_date`) = '2019' THEN `spent` ELSE 0 END) - SUM(CASE WHEN strftime('%Y', `event_date`) = '2020' THEN `spent` ELSE 0 END) FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id`
SELECT `location` FROM `event` WHERE `event_name` = 'Spring Budget Review'
SELECT `cost` FROM `expense` WHERE `expense_description` = 'Posters' AND `expense_date` = '2019-09-04'
SELECT `remaining` FROM `budget` WHERE `category` = 'Food' ORDER BY `amount` DESC LIMIT 1
SELECT `notes` FROM `income` WHERE `source` = 'Fundraising' AND `date_received` = '2019-09-14'
SELECT COUNT(*) FROM `major` WHERE `college` = 'College of Humanities and Social Sciences'
SELECT `phone` FROM `member` WHERE `first_name` = 'Carlo' AND `last_name` = 'Jacobs'
SELECT `county` FROM `zip_code` AS ZC INNER JOIN `member` AS M ON ZC.`zip_code` = M.`zip` WHERE M.`first_name` = 'Adela' AND M.`last_name` = 'O''Gallagher'
SELECT COUNT(`budget`.`budget_id`) FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'November Meeting' AND `budget`.`remaining` < 0
SELECT SUM(`b`.`amount`) FROM `budget` AS `b` INNER JOIN `event` AS `e` ON `b`.`link_to_event` = `e`.`event_id` WHERE `e`.`event_name` = 'September Speaker'
SELECT `b`.`event_status` FROM `expense` AS `e` INNER JOIN `budget` AS `b` ON `e`.`link_to_budget` = `b`.`budget_id` WHERE `e`.`expense_description` = 'Post Cards, Posters' AND `e`.`expense_date` = '2019-08-20'
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Brent' AND `member`.`last_name` = 'Thomason'
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business' AND `member`.`t_shirt_size` = 'Medium'
SELECT t2.`type` FROM `member` AS t1 INNER JOIN `zip_code` AS t2 ON t1.`zip` = t2.`zip_code` WHERE t1.`first_name` = 'Christof' AND t1.`last_name` = 'Nielson'
SELECT `major`.`major_name` FROM `major` INNER JOIN `member` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'Vice President'
SELECT `state` FROM `zip_code` AS Z INNER JOIN `member` AS M ON M.`zip` = Z.`zip_code` WHERE M.`first_name` = 'Sacha' AND M.`last_name` = 'Harrison'
SELECT `major`.`department` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'President'
SELECT `date_received` FROM `income` INNER JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Connor' AND `member`.`last_name` = 'Hilton' AND `income`.`source` = 'Dues'
SELECT `m`.`first_name`, `m`.`last_name` FROM `member` AS `m` INNER JOIN `income` AS `i` ON `m`.`member_id` = `i`.`link_to_member` WHERE `i`.`source` = 'Dues' ORDER BY `i`.`date_received` LIMIT 1
SELECT SUM(CASE WHEN `event`.`event_name` = 'Yearly Kickoff' THEN `budget`.`amount` ELSE 0 END) / SUM(CASE WHEN `event`.`event_name` = 'October Meeting' THEN `budget`.`amount` ELSE 0 END) FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `budget`.`category` = 'Advertisement'
SELECT (SUM(`b`.`amount`) / (SELECT SUM(`amount`) FROM `budget` AS `b2` INNER JOIN `event` AS `e2` ON `b2`.`link_to_event` = `e2`.`event_id` WHERE `e2`.`event_name` = 'November Speaker')) * 100 AS `percentage` FROM `budget` AS `b` INNER JOIN `event` AS `e` ON `b`.`link_to_event` = `e`.`event_id` WHERE `b`.`category` = 'Parking' AND `e`.`event_name` = 'November Speaker'
SELECT SUM(`cost`) FROM `expense` WHERE `expense_description` = 'Pizza'
SELECT COUNT(DISTINCT `city`) FROM `zip_code` WHERE `county` = 'Orange County' AND `state` = 'Virginia'
SELECT DISTINCT `department` FROM `major` WHERE `college` = 'College of Humanities and Social Sciences'
SELECT `city`, `county`, `state` FROM `zip_code` AS Z INNER JOIN `member` AS M ON M.`zip` = Z.`zip_code` WHERE M.`first_name` = 'Amy' AND M.`last_name` = 'Firth'
SELECT `expense_description` FROM `expense` WHERE `link_to_budget` = (SELECT `budget_id` FROM `budget` ORDER BY `remaining` LIMIT 1)
SELECT `first_name`, `last_name` FROM `member` INNER JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'October Meeting'
SELECT `college` FROM `major` INNER JOIN `member` ON `major`.`major_id` = `member`.`link_to_major` GROUP BY `college` ORDER BY COUNT(`member`.`member_id`) DESC LIMIT 1
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`phone` = '809-555-3360'
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` ORDER BY `budget`.`amount` DESC LIMIT 1
SELECT `expense_description` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`position` = 'Vice President'
SELECT COUNT(DISTINCT `link_to_member`) FROM `attendance` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Women''s Soccer'
SELECT `date_received` FROM `income` INNER JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `first_name` = 'Casey' AND `last_name` = 'Mason'
SELECT COUNT(DISTINCT `member`.`member_id`) FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`state` = 'Maryland'
SELECT COUNT(DISTINCT `attendance`.`link_to_event`) FROM `attendance` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `member`.`phone` = '954-555-6240'
SELECT `first_name`, `last_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`department` = 'School of Applied Sciences, Technology and Education'
SELECT `event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `status` = 'Closed' ORDER BY (`spent` / `amount`) DESC LIMIT 1
SELECT COUNT(`member_id`) FROM `member` WHERE `position` = 'President'
SELECT MAX(`spent`) FROM `budget`
SELECT COUNT(`event_id`) FROM `event` WHERE `type` = 'Meeting' AND SUBSTR(`event_date`, 1, 4) = '2020'
SELECT SUM(`spent`) FROM `budget` WHERE `category` = 'Food'
SELECT `m`.`first_name`, `m`.`last_name` FROM `member` AS `m` INNER JOIN `attendance` AS `a` ON `m`.`member_id` = `a`.`link_to_member` GROUP BY `m`.`member_id` HAVING COUNT(`a`.`link_to_event`) > 7
SELECT `m`.`first_name`, `m`.`last_name` FROM `member` AS `m` INNER JOIN `major` AS `maj` ON `m`.`link_to_major` = `maj`.`major_id` INNER JOIN `attendance` AS `a` ON `m`.`member_id` = `a`.`link_to_member` INNER JOIN `event` AS `e` ON `a`.`link_to_event` = `e`.`event_id` WHERE `maj`.`major_name` = 'Interior Design' AND `e`.`event_name` = 'Community Theater'
SELECT `first_name`, `last_name` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`city` = 'Georgetown' AND `zip_code`.`state` = 'South Carolina'
SELECT COUNT(T1.`amount`) FROM `income` AS T1 INNER JOIN `member` AS T2 ON T1.`link_to_member` = T2.`member_id` WHERE T2.`first_name` = 'Grant' AND T2.`last_name` = 'Gilmour'
SELECT `first_name`, `last_name` FROM `member` INNER JOIN `income` ON `member`.`member_id` = `income`.`link_to_member` WHERE `income`.`amount` > 40
SELECT SUM(`expense`.`cost`) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `event`.`event_name` = 'Yearly Kickoff'
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Yearly Kickoff'
SELECT `m`.`first_name`, `m`.`last_name`, `i`.`source` FROM `income` AS `i` INNER JOIN `member` AS `m` ON `i`.`link_to_member` = `m`.`member_id` WHERE `i`.`amount` = (SELECT MAX(`amount`) FROM `income`)
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` ORDER BY `expense`.`cost` ASC LIMIT 1
SELECT CAST(SUM(CASE WHEN T1.event_name = 'Yearly Kickoff' THEN T4.cost ELSE 0 END) AS REAL) * 100 / SUM(T4.cost) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T4 ON T2.budget_id = T4.link_to_budget
SELECT CAST(SUM(CASE WHEN `major_name` = 'Finance' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN `major_name` = 'Physics' THEN 1 ELSE 0 END) FROM `major`
SELECT `source` FROM `income` WHERE `date_received` BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY `source` ORDER BY SUM(`amount`) DESC LIMIT 1
SELECT `first_name`, `last_name`, `email` FROM `member` WHERE `position` = 'Secretary'
SELECT COUNT(`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Physics Teaching'
SELECT COUNT(DISTINCT `link_to_member`) FROM `attendance` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Community Theater' AND SUBSTR(`event`.`event_date`, 1, 4) = '2019'
SELECT COUNT(DISTINCT `attendance`.`link_to_event`) AS `number_of_events`, `major`.`major_name` FROM `attendance` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Luisa' AND `member`.`last_name` = 'Guidi'
SELECT SUM(`spent`) / COUNT(`spent`) FROM `budget` WHERE `category` = 'Food' AND `event_status` = 'Closed'
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`category` = 'Advertisement' ORDER BY `budget`.`spent` DESC LIMIT 1
SELECT COUNT(*) > 0 FROM attendance AS A INNER JOIN member AS M ON A.link_to_member = M.member_id INNER JOIN event AS E ON A.link_to_event = E.event_id WHERE M.first_name = 'Maya' AND M.last_name = 'Mclean' AND E.event_name = 'Women''s Soccer'
SELECT CAST(SUM(CASE WHEN `type` = 'Community Service' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`event_id`) FROM `event` WHERE `event_date` BETWEEN '2019-01-01' AND '2019-12-31'
SELECT `e`.`cost` FROM `expense` AS `e` INNER JOIN `budget` AS `b` ON `e`.`link_to_budget` = `b`.`budget_id` INNER JOIN `event` AS `ev` ON `b`.`link_to_event` = `ev`.`event_id` WHERE `e`.`expense_description` = 'Posters' AND `ev`.`event_name` = 'September Speaker'
SELECT `t_shirt_size` FROM `member` GROUP BY `t_shirt_size` ORDER BY COUNT(`t_shirt_size`) DESC LIMIT 1
SELECT `event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `status` = 'Closed' AND `remaining` = (SELECT MIN(`remaining`) FROM `budget` WHERE `remaining` < 0)
SELECT `expense_description`, SUM(`cost`) FROM `expense` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'October Meeting' AND `expense`.`approved` = 'true' GROUP BY `expense_description`
SELECT `category`, SUM(`amount`) FROM `budget` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'April Speaker') GROUP BY `category` ORDER BY SUM(`amount`) ASC
SELECT MAX(`amount`) FROM `budget` WHERE `category` = 'Food'
SELECT `budget_id`, `amount` FROM `budget` WHERE `category` = 'Advertisement' ORDER BY `amount` DESC LIMIT 3
SELECT SUM(`cost`) FROM `expense` WHERE `expense_description` = 'Parking'
SELECT SUM(`cost`) FROM `expense` WHERE `expense_date` = '2019-08-20'
SELECT `m`.`first_name`, `m`.`last_name`, SUM(`e`.`cost`) AS `total_cost` FROM `member` AS `m` INNER JOIN `expense` AS `e` ON `m`.`member_id` = `e`.`link_to_member` WHERE `m`.`member_id` = 'rec4BLdZHS2Blfp4v' GROUP BY `m`.`member_id`
SELECT DISTINCT `T1`.`expense_description` FROM `expense` AS T1 INNER JOIN `member` AS T2 ON T1.`link_to_member` = T2.`member_id` WHERE T2.`first_name` = 'Sacha' AND T2.`last_name` = 'Harrison'
SELECT DISTINCT `expense`.`expense_description` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`t_shirt_size` = 'X-Large'
SELECT DISTINCT `zip_code`.`zip_code` FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `expense`.`cost` < 50
SELECT `major`.`major_name` FROM `major` INNER JOIN `member` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Phillip' AND `member`.`last_name` = 'Cullen'
SELECT `position` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business'
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business' AND `member`.`t_shirt_size` = 'Medium'
SELECT `type` FROM `event` WHERE `event_id` IN (SELECT `link_to_event` FROM `budget` WHERE `remaining` > 30)
SELECT DISTINCT `category` FROM `budget` WHERE `link_to_event` IN (SELECT `event_id` FROM `event` WHERE `location` = 'MU 215')
SELECT `category` FROM `budget` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_date` = '2020-03-24T12:00:00')
SELECT `major`.`major_name` FROM `major` INNER JOIN `member` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'Vice President'
SELECT CAST(SUM(CASE WHEN `position` = 'Member' AND `major_name` = 'Business' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id`
SELECT DISTINCT `category` FROM `budget` WHERE `link_to_event` IN (SELECT `event_id` FROM `event` WHERE `location` = 'MU 215')
SELECT COUNT(`income_id`) FROM `income` WHERE `amount` = 50
SELECT COUNT(`member_id`) FROM `member` WHERE `position` = 'Member' AND `t_shirt_size` = 'X-Large'
SELECT COUNT(*) FROM `major` WHERE `college` = 'College of Agriculture and Applied Sciences' AND `department` = 'School of Applied Sciences, Technology and Education'
SELECT `member`.`last_name`, `major`.`department`, `major`.`college` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Environmental Engineering'
SELECT DISTINCT `budget`.`category` FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`location` = 'MU 215' AND `event`.`type` = 'Guest Speaker' AND `budget`.`spent` = 0
SELECT DISTINCT `zip_code`.`city`, `zip_code`.`state` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `major`.`department` = 'Electrical and Computer Engineering Department' AND `member`.`position` = 'Member'
SELECT `e`.`event_name` FROM `event` AS `e` INNER JOIN `attendance` AS `a` ON `e`.`event_id` = `a`.`link_to_event` INNER JOIN `member` AS `m` ON `a`.`link_to_member` = `m`.`member_id` INNER JOIN `zip_code` AS `z` ON `m`.`zip` = `z`.`zip_code` WHERE `e`.`type` = 'Social' AND `m`.`position` = 'Vice President' AND `z`.`city` = '900 E. Washington St.'
SELECT `m`.`last_name`, `m`.`position` FROM `expense` AS `e` INNER JOIN `member` AS `m` ON `e`.`link_to_member` = `m`.`member_id` WHERE `e`.`expense_description` = 'Pizza' AND `e`.`expense_date` = '2019-09-10'
SELECT `m`.`last_name` FROM `member` AS `m` INNER JOIN `attendance` AS `a` ON `m`.`member_id` = `a`.`link_to_member` INNER JOIN `event` AS `e` ON `a`.`link_to_event` = `e`.`event_id` WHERE `m`.`position` = 'Member' AND `e`.`event_name` = 'Women''s Soccer'
SELECT CAST(SUM(IIF(`i`.`amount` = 50, 1, 0)) AS REAL) * 100 / COUNT(`m`.`member_id`) FROM `member` AS `m` JOIN `income` AS `i` ON `m`.`member_id` = `i`.`link_to_member` WHERE `m`.`t_shirt_size` = 'Medium' AND `m`.`position` = 'Member'
SELECT DISTINCT `county` FROM `zip_code` WHERE `type` = 'PO Box'
SELECT `zip_code` FROM `zip_code` WHERE `county` = 'San Juan Municipio' AND `state` = 'Puerto Rico' AND `type` = 'PO Box'
SELECT `event_name` FROM `event` WHERE `type` = 'Game' AND `status` = 'Closed' AND `event_date` BETWEEN '2019-03-15' AND '2020-03-20'
SELECT DISTINCT `attendance`.`link_to_event` FROM `attendance` INNER JOIN `expense` ON `attendance`.`link_to_member` = `expense`.`link_to_member` WHERE `expense`.`cost` > 50
SELECT DISTINCT `m`.`member_id`, `m`.`first_name`, `m`.`last_name`, `a`.`link_to_event` FROM `member` AS `m` INNER JOIN `expense` AS `e` ON `m`.`member_id` = `e`.`link_to_member` INNER JOIN `attendance` AS `a` ON `m`.`member_id` = `a`.`link_to_member` WHERE `e`.`approved` = 'true' AND `e`.`expense_date` BETWEEN '2019-01-10' AND '2019-11-19'
SELECT `college` FROM `major` WHERE `major_id` = 'rec1N0upiVLy5esTO' AND EXISTS (SELECT 1 FROM `member` WHERE `first_name` = 'Katy' AND `link_to_major` = `major`.`major_id`)
SELECT `phone` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business' AND `major`.`college` = 'College of Agriculture and Applied Sciences'
SELECT `m`.`email` FROM `expense` AS `e` INNER JOIN `member` AS `m` ON `e`.`link_to_member` = `m`.`member_id` WHERE `e`.`cost` > 20 AND `e`.`expense_date` BETWEEN '2019-09-10' AND '2019-11-19'
SELECT COUNT(T1.member_id) FROM `member` AS T1 INNER JOIN `major` AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'education' AND T2.college = 'College of Education & Human Services' AND T1.position = 'Member'
SELECT CAST(SUM(CASE WHEN `remaining` < 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`event_id`) FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id`
SELECT `event_id`, `location`, `status` FROM `event` WHERE `event_date` BETWEEN '2019-11-01' AND '2020-03-31'
SELECT `expense_description` FROM `expense` GROUP BY `expense_description` HAVING AVG(`cost`) > 50
SELECT `first_name`, `last_name` FROM `member` WHERE `t_shirt_size` = 'X-Large'
SELECT CAST(SUM(CASE WHEN `type` = 'PO Box' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`zip_code`) FROM `zip_code`
SELECT `event`.`event_name`, `event`.`location` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`remaining` > 0
SELECT `event`.`event_name`, `event`.`event_date` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`link_to_event` = `expense`.`link_to_budget` WHERE `expense`.`expense_description` = 'Pizza' AND `expense`.`cost` > 50 AND `expense`.`cost` < 100
SELECT `first_name`, `last_name`, `major_name` FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `expense`.`cost` > 100
SELECT DISTINCT `zip_code`.`city`, `zip_code`.`county` FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` INNER JOIN `income` ON `member`.`member_id` = `income`.`link_to_member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` GROUP BY `event`.`event_id` HAVING COUNT(DISTINCT `income`.`income_id`) > 40
SELECT `m`.`first_name`, `m`.`last_name` FROM `member` AS `m` INNER JOIN `expense` AS `e` ON `m`.`member_id` = `e`.`link_to_member` INNER JOIN `budget` AS `b` ON `e`.`link_to_budget` = `b`.`budget_id` GROUP BY `m`.`member_id` HAVING COUNT(DISTINCT `b`.`link_to_event`) > 1 ORDER BY SUM(`e`.`cost`) DESC LIMIT 1
SELECT AVG(`cost`) FROM `expense` AS E INNER JOIN `member` AS M ON E.`link_to_member` = M.`member_id` WHERE M.`position` != 'Member'
SELECT `e`.`event_name` FROM `event` AS `e` INNER JOIN `budget` AS `b` ON `e`.`event_id` = `b`.`link_to_event` INNER JOIN `expense` AS `ex` ON `b`.`budget_id` = `ex`.`link_to_budget` WHERE `b`.`category` = 'Parking' AND `ex`.`cost` < (SELECT AVG(`ex2`.`cost`) FROM `budget` AS `b2` INNER JOIN `expense` AS `ex2` ON `b2`.`budget_id` = `ex2`.`link_to_budget` WHERE `b2`.`category` = 'Parking')
SELECT CAST(SUM(`cost`) AS REAL) * 100 / COUNT(`event`.`event_id`) FROM `expense` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`type` = 'Meeting'
SELECT `b`.`budget_id` FROM `budget` AS `b` INNER JOIN `expense` AS `e` ON `b`.`budget_id` = `e`.`link_to_budget` WHERE `e`.`expense_description` IN ('Water', 'chips', 'cookies') ORDER BY `e`.`cost` DESC LIMIT 1
SELECT `m`.`first_name`, `m`.`last_name` FROM `member` AS `m` INNER JOIN `expense` AS `e` ON `m`.`member_id` = `e`.`link_to_member` GROUP BY `m`.`member_id` ORDER BY SUM(`e`.`cost`) DESC LIMIT 5
SELECT DISTINCT `m`.`first_name`, `m`.`last_name`, `m`.`phone` FROM `member` AS `m` INNER JOIN `expense` AS `e` ON `m`.`member_id` = `e`.`link_to_member` WHERE `e`.`cost` > (SELECT AVG(`cost`) FROM `expense`)
SELECT (CAST(SUM(CASE WHEN `state` = 'New Jersey' THEN 1 ELSE 0 END) AS REAL) / COUNT(`position` = 'Member')) - (CAST(SUM(CASE WHEN `state` = 'Vermont' THEN 1 ELSE 0 END) AS REAL) / COUNT(`position` = 'Member')) FROM `zip_code` INNER JOIN `member` ON `zip_code`.`zip_code` = `member`.`zip`
SELECT `major`.`major_name`, `major`.`department` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Garrett' AND `member`.`last_name` = 'Gerke'
SELECT `m`.`first_name`, `m`.`last_name`, `e`.`cost` FROM `member` AS `m` INNER JOIN `expense` AS `e` ON `m`.`member_id` = `e`.`link_to_member` WHERE `e`.`expense_description` IN ('Water', 'Veggie tray', 'supplies')
SELECT `member`.`last_name`, `member`.`phone` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Elementary Education'
SELECT `category`, `amount` FROM `budget` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'January Speaker')
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`category` = 'Food'
SELECT `member`.`first_name`, `member`.`last_name`, `income`.`amount` FROM `income` INNER JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `income`.`date_received` = '2019-09-09'
SELECT `category` FROM `budget` INNER JOIN `expense` ON `expense`.`link_to_budget` = `budget`.`budget_id` WHERE `expense`.`expense_description` = 'Posters'
SELECT `first_name`, `last_name`, `college` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `position` = 'Secretary'
SELECT SUM(`budget`.`spent`), `event`.`event_name` FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `budget`.`category` = 'Speaker Gifts' GROUP BY `event`.`event_name`
SELECT `city` FROM `zip_code` JOIN `member` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `first_name` = 'Garrett' AND `last_name` = 'Gerke'
SELECT `first_name`, `last_name`, `position` FROM `member` WHERE `zip` = 28092 AND `zip` IN (SELECT `zip_code` FROM `zip_code` WHERE `city` = 'Lincolnton' AND `state` = 'North Carolina')
SELECT COUNT(DISTINCT `gasstations`.`gasstationid`) FROM `gasstations` INNER JOIN `transactions_1k` ON `gasstations`.`gasstationid` = `transactions_1k`.`gasstationid` INNER JOIN `products` ON `transactions_1k`.`productid` = `products`.`productid` WHERE `gasstations`.`country` = 'CZE' AND `products`.`description` = 'Premium'
SELECT CAST(SUM(IIF(`currency` = 'EUR', 1, 0)) AS REAL) / SUM(IIF(`currency` = 'CZK', 1, 0)) FROM `customers`
SELECT `customerid` FROM `yearmonth` WHERE SUBSTR(`date`, 1, 4) = '2012' AND `customerid` IN (SELECT `customerid` FROM `customers` WHERE `segment` = 'LAM') ORDER BY `consumption` ASC LIMIT 1
SELECT AVG(`consumption`) / 12 FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`customerid` = `customers`.`customerid` WHERE `customers`.`segment` = 'SME' AND SUBSTR(`yearmonth`.`date`, 1, 4) BETWEEN '2013' AND '2013'
SELECT `customerid` FROM `customers` AS c INNER JOIN `yearmonth` AS ym ON c.`customerid` = ym.`customerid` WHERE c.`currency` = 'CZK' AND ym.`date` BETWEEN 201101 AND 201112 ORDER BY ym.`consumption` DESC LIMIT 1
SELECT COUNT(DISTINCT `customerid`) FROM `yearmonth` WHERE `customerid` IN (SELECT `customerid` FROM `customers` WHERE `segment` = 'KAM') AND `consumption` < 30000 AND `date` BETWEEN 201201 AND 201212
SELECT SUM(CASE WHEN c.currency = 'CZK' THEN y.consumption ELSE 0 END) - SUM(CASE WHEN c.currency = 'EUR' THEN y.consumption ELSE 0 END) AS consumption_difference FROM yearmonth AS y INNER JOIN customers AS c ON y.customerid = c.customerid WHERE y.date BETWEEN 201201 AND 201212
SELECT SUBSTR(`date`, 1, 4) AS `year` FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`customerid` = `customers`.`customerid` WHERE `customers`.`currency` = 'EUR' GROUP BY `year` ORDER BY SUM(`consumption`) DESC LIMIT 1
SELECT `segment` FROM `customers` INNER JOIN `yearmonth` ON `customers`.`customerid` = `yearmonth`.`customerid` GROUP BY `segment` ORDER BY SUM(`consumption`) ASC LIMIT 1
SELECT SUBSTR(`date`, 1, 4) AS `year` FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`customerid` = `customers`.`customerid` WHERE `customers`.`currency` = 'CZK' GROUP BY `year` ORDER BY SUM(`consumption`) DESC LIMIT 1
SELECT SUBSTR(`date`, 5, 2) AS `month`, SUM(`consumption`) AS `total_consumption` FROM `yearmonth` WHERE `customerid` IN (SELECT `customerid` FROM `customers` WHERE `segment` = 'SME') AND `date` BETWEEN 201301 AND 201312 GROUP BY `month` ORDER BY `total_consumption` DESC LIMIT 1
WITH MinConsumption AS (SELECT `segment`, MIN(`consumption`) AS `min_cons` FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`customerid` = `customers`.`customerid` WHERE `currency` = 'CZK' AND `date` BETWEEN 201301 AND 201312 GROUP BY `segment`), AnnualAverage AS (SELECT `segment`, SUM(`consumption`) / COUNT(DISTINCT `customerid`) AS `annual_avg` FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`customerid` = `customers`.`customerid` WHERE `currency` = 'CZK' AND `date` BETWEEN 201301 AND 201312 AND `consumption` IN (SELECT `min_cons` FROM MinConsumption WHERE `segment` = `customers`.`segment`) GROUP BY `segment`) SELECT (SELECT `annual_avg` FROM AnnualAverage WHERE `segment` = 'SME') - (SELECT `annual_avg` FROM AnnualAverage WHERE `segment` = 'LAM') AS `diff_SME_LAM`, (SELECT `annual_avg` FROM AnnualAverage WHERE `segment` = 'LAM') - (SELECT `annual_avg` FROM AnnualAverage WHERE `segment` = 'KAM') AS `diff_LAM_KAM`, (SELECT `annual_avg` FROM AnnualAverage WHERE `segment` = 'KAM') - (SELECT `annual_avg` FROM AnnualAverage WHERE `segment` = 'SME') AS `diff_KAM_SME`
SELECT `segment`, MAX(`percentage_increase`) AS `max_increase`, MIN(`percentage_increase`) AS `min_increase` FROM ( SELECT c.`segment`, ((y2013.`consumption` - y2012.`consumption`) / y2013.`consumption`) * 100 AS `percentage_increase` FROM `yearmonth` y2012 INNER JOIN `yearmonth` y2013 ON y2012.`customerid` = y2013.`customerid` INNER JOIN `customers` c ON y2012.`customerid` = c.`customerid` WHERE y2012.`date` LIKE '2012%' AND y2013.`date` LIKE '2013%' AND c.`currency` = 'EUR' AND c.`segment` IN ('SME', 'LAM', 'KAM') ) GROUP BY `segment`
SELECT SUM(`consumption`) FROM `yearmonth` WHERE `customerid` = 6 AND `date` BETWEEN 201308 AND 201311
SELECT (SELECT COUNT(*) FROM `gasstations` WHERE `country` = 'CZE' AND `segment` = 'Value for money') - (SELECT COUNT(*) FROM `gasstations` WHERE `country` = 'SVK' AND `segment` = 'Value for money') AS `more_discount_gas_stations`
SELECT (SELECT `consumption` FROM `yearmonth` WHERE `customerid` = 7 AND `date` = 201304) - (SELECT `consumption` FROM `yearmonth` WHERE `customerid` = 5 AND `date` = 201304) AS `consumption_difference`
SELECT (SELECT COUNT(*) FROM `customers` AS c INNER JOIN `transactions_1k` AS t ON c.`customerid` = t.`customerid` WHERE c.`segment` = 'SME' AND c.`currency` = 'CZK') - (SELECT COUNT(*) FROM `customers` AS c INNER JOIN `transactions_1k` AS t ON c.`customerid` = t.`customerid` WHERE c.`segment` = 'SME' AND c.`currency` = 'EUR') AS `Amount of more SMEs`
SELECT `c`.`customerid` FROM `customers` AS `c` INNER JOIN `yearmonth` AS `y` ON `c`.`customerid` = `y`.`customerid` WHERE `c`.`segment` = 'LAM' AND `c`.`currency` = 'EUR' AND `y`.`date` = 201310 ORDER BY `y`.`consumption` DESC LIMIT 1
SELECT T1.`customerid`, MAX(T1.`consumption`) AS `max_consumption` FROM `yearmonth` AS T1 INNER JOIN `customers` AS T2 ON T1.`customerid` = T2.`customerid` WHERE T2.`segment` = 'KAM' GROUP BY T1.`customerid` ORDER BY `max_consumption` DESC LIMIT 1
SELECT SUM(`consumption`) FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`customerid` = `customers`.`customerid` WHERE `customers`.`segment` = 'KAM' AND `yearmonth`.`date` = 201305
SELECT (COUNT(DISTINCT y.`customerid`) * 100.0 / (SELECT COUNT(DISTINCT `customerid`) FROM `customers` WHERE `segment` = 'LAM')) AS percentage FROM `yearmonth` y INNER JOIN `customers` c ON y.`customerid` = c.`customerid` WHERE c.`segment` = 'LAM' AND y.`consumption` > 46.73
SELECT `country`, COUNT(*) AS `total_value_for_money_stations` FROM `gasstations` WHERE `segment` = 'Value for money' GROUP BY `country`
SELECT CAST(SUM(IIF(`currency` = 'EUR', 1, 0)) AS REAL) * 100 / COUNT(`customerid`) FROM `customers` WHERE `segment` = 'KAM'
SELECT CAST(COUNT(DISTINCT `customerid`) AS REAL) * 100 / (SELECT COUNT(DISTINCT `customerid`) FROM `yearmonth` WHERE `date` = '201202') FROM `yearmonth` WHERE `date` = '201202' AND `consumption` > 528.3
SELECT CAST(SUM(CASE WHEN `segment` = 'Premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`gasstationid`) FROM `gasstations` WHERE `country` = 'SVK'
SELECT `customerid` FROM `yearmonth` WHERE `date` = '201309' GROUP BY `customerid` ORDER BY SUM(`consumption`) DESC LIMIT 1
SELECT `c`.`segment` FROM `customers` AS `c` INNER JOIN `yearmonth` AS `y` ON `c`.`customerid` = `y`.`customerid` WHERE `y`.`date` = '201309' GROUP BY `c`.`segment` ORDER BY SUM(`y`.`consumption`) ASC LIMIT 1
SELECT `customerid` FROM `yearmonth` WHERE `date` = '201206' AND `customerid` IN (SELECT `customerid` FROM `customers` WHERE `segment` = 'SME') ORDER BY `consumption` ASC LIMIT 1
SELECT MAX(`consumption`) FROM `yearmonth` WHERE SUBSTR(`date`, 1, 4) = '2012'
SELECT MAX(SUM(`consumption`) / 12) AS `biggest_monthly_consumption` FROM `yearmonth` WHERE `customerid` IN (SELECT `customerid` FROM `customers` WHERE `currency` = 'EUR')
SELECT DISTINCT `p`.`description` FROM `yearmonth` AS `y` INNER JOIN `transactions_1k` AS `t` ON `y`.`customerid` = `t`.`customerid` AND `y`.`date` = STRFTIME('%Y%m', `t`.`date`) INNER JOIN `products` AS `p` ON `t`.`productid` = `p`.`productid` WHERE `y`.`date` = '201309'
SELECT DISTINCT `g`.`country` FROM `gasstations` AS `g` INNER JOIN `transactions_1k` AS `t` ON `g`.`gasstationid` = `t`.`gasstationid` WHERE strftime('%Y%m', `t`.`date`) = '201306'
SELECT DISTINCT `g`.`chainid` FROM `transactions_1k` AS `t` INNER JOIN `customers` AS `c` ON `t`.`customerid` = `c`.`customerid` INNER JOIN `gasstations` AS `g` ON `t`.`gasstationid` = `g`.`gasstationid` WHERE `c`.`currency` = 'EUR'
SELECT DISTINCT `p`.`description` FROM `transactions_1k` AS `t` INNER JOIN `customers` AS `c` ON `t`.`customerid` = `c`.`customerid` INNER JOIN `products` AS `p` ON `t`.`productid` = `p`.`productid` WHERE `c`.`currency` = 'EUR'
SELECT AVG(`price`) FROM `transactions_1k` WHERE `date` LIKE '2012-01%'
SELECT COUNT(DISTINCT `yearmonth`.`customerid`) FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`customerid` = `customers`.`customerid` WHERE `customers`.`currency` = 'EUR' AND `yearmonth`.`consumption` > 1000
SELECT DISTINCT `p`.`description` FROM `transactions_1k` AS `t` INNER JOIN `gasstations` AS `g` ON `t`.`gasstationid` = `g`.`gasstationid` INNER JOIN `products` AS `p` ON `t`.`productid` = `p`.`productid` WHERE `g`.`country` = 'CZE'
SELECT DISTINCT `time` FROM `transactions_1k` AS T1 INNER JOIN `gasstations` AS T2 ON T1.`gasstationid` = T2.`gasstationid` WHERE T2.`chainid` = 11
SELECT COUNT(`transactionid`) FROM `transactions_1k` WHERE `gasstationid` IN (SELECT `gasstationid` FROM `gasstations` WHERE `country` = 'CZE') AND `price` > 1000
SELECT COUNT(T1.`transactionid`) FROM `transactions_1k` AS T1 INNER JOIN `gasstations` AS T2 ON T1.`gasstationid` = T2.`gasstationid` WHERE T2.`country` = 'CZE' AND T1.`date` > '2012-01-01'
SELECT AVG(`price`) FROM `transactions_1k` WHERE `gasstationid` IN (SELECT `gasstationid` FROM `gasstations` WHERE `country` = 'CZE')
SELECT AVG(T2.`price`) FROM `customers` AS T1 INNER JOIN `transactions_1k` AS T2 ON T1.`customerid` = T2.`customerid` WHERE T1.`currency` = 'EUR'
SELECT `customerid` FROM `transactions_1k` WHERE `date` = '2012-08-25' GROUP BY `customerid` ORDER BY SUM(`amount`) DESC LIMIT 1
SELECT `country` FROM `gasstations` WHERE `gasstationid` = (SELECT `gasstationid` FROM `transactions_1k` WHERE `date` = '2012-08-25' ORDER BY `time` ASC LIMIT 1)
SELECT `c`.`currency` FROM `customers` AS `c` INNER JOIN `transactions_1k` AS `t` ON `c`.`customerid` = `t`.`customerid` WHERE `t`.`date` = '2012-08-24' AND `t`.`time` = '16:25:00'
SELECT `c`.`segment` FROM `customers` AS `c` INNER JOIN `transactions_1k` AS `t` ON `c`.`customerid` = `t`.`customerid` WHERE `t`.`date` = '2012-08-23' AND `t`.`time` = '21:20:00'
SELECT COUNT(t1.`transactionid`) FROM `transactions_1k` t1 JOIN `customers` t2 ON t1.`customerid` = t2.`customerid` JOIN `gasstations` t3 ON t1.`gasstationid` = t3.`gasstationid` WHERE t1.`date` = '2012-08-26' AND t1.`time` < '13:00:00' AND t2.`currency` = 'CZK'
SELECT `segment` FROM `customers` WHERE `customerid` = (SELECT `customerid` FROM `yearmonth` ORDER BY `date` ASC LIMIT 1)
SELECT T2.`country` FROM `transactions_1k` AS T1 INNER JOIN `gasstations` AS T2 ON T1.`gasstationid` = T2.`gasstationid` WHERE T1.`date` = '2012-08-24' AND T1.`time` = '12:42:00'
SELECT `productid` FROM `transactions_1k` WHERE `date` = '2012-08-23' AND `time` = '21:20:00'
SELECT `date`, `consumption` FROM `yearmonth` WHERE `customerid` = (SELECT `customerid` FROM `transactions_1k` WHERE `price` = 124.05 AND `date` = '2012-08-24') AND `date` = 201201
SELECT COUNT(T1.`transactionid`) FROM `transactions_1k` AS T1 INNER JOIN `gasstations` AS T2 ON T1.`gasstationid` = T2.`gasstationid` WHERE T1.`date` = '2012-08-26' AND T1.`time` BETWEEN '08:00:00' AND '09:00:00' AND T2.`country` = 'CZE'
SELECT `c`.`currency` FROM `yearmonth` AS `y` INNER JOIN `customers` AS `c` ON `y`.`customerid` = `c`.`customerid` WHERE `y`.`date` = '201306' AND `y`.`consumption` = 214582.17
SELECT DISTINCT T2.`country` FROM `transactions_1k` AS T1 INNER JOIN `gasstations` AS T2 ON T1.`gasstationid` = T2.`gasstationid` WHERE T1.`cardid` = 667467
SELECT `gasstations`.`country` FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`gasstationid` = `gasstations`.`gasstationid` WHERE `transactions_1k`.`amount` = 548.4 AND `transactions_1k`.`date` = '2012-08-24'
SELECT CAST(SUM(CASE WHEN `currency` = 'EUR' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`customerid`) FROM `customers` WHERE `customerid` IN (SELECT DISTINCT `customerid` FROM `transactions_1k` WHERE `date` = '2012-08-25')
SELECT (y2012.consumption - y2013.consumption) / y2012.consumption AS decrease_rate FROM (SELECT `customerid`, `consumption` FROM `yearmonth` WHERE `date` = 201207) AS y2012 INNER JOIN (SELECT `customerid`, `consumption` FROM `yearmonth` WHERE `date` = 201303) AS y2013 ON y2012.customerid = y2013.customerid WHERE y2012.customerid = (SELECT `customerid` FROM `transactions_1k` WHERE `price` = 634.8 AND `date` = '2012-08-25')
SELECT `gasstationid` FROM `transactions_1k` GROUP BY `gasstationid` ORDER BY SUM(`amount` * `price`) DESC LIMIT 1
SELECT CAST(SUM(IIF(`segment` = 'Premium', 1, 0)) AS REAL) * 100 / COUNT(`segment`) FROM `gasstations` WHERE `country` = 'SVK'
SELECT SUM(T1.amount) AS total_gas_station_spent, (SELECT SUM(consumption) FROM yearmonth WHERE customerid = 38508 AND date = '201201') AS january_2012_spent FROM transactions_1k AS T1 WHERE T1.customerid = 38508
SELECT `p`.`description` FROM `products` AS `p` INNER JOIN `transactions_1k` AS `t` ON `p`.`productid` = `t`.`productid` GROUP BY `p`.`description` ORDER BY SUM(`t`.`amount`) DESC LIMIT 5
SELECT c.`customerid`, SUM(t.`price`) / SUM(t.`amount`) AS `average_price_per_item`, c.`currency` FROM `customers` c INNER JOIN `transactions_1k` t ON c.`customerid` = t.`customerid` GROUP BY c.`customerid` ORDER BY SUM(t.`price`) DESC LIMIT 1
SELECT `g`.`country` FROM `transactions_1k` AS `t` INNER JOIN `gasstations` AS `g` ON `t`.`gasstationid` = `g`.`gasstationid` WHERE `t`.`productid` = 2 ORDER BY `t`.`price` DESC LIMIT 1
SELECT `y`.`consumption` FROM `transactions_1k` AS `t` INNER JOIN `yearmonth` AS `y` ON `t`.`customerid` = `y`.`customerid` WHERE `t`.`productid` = 5 AND (`t`.`price` / `t`.`amount`) > 29.00 AND `y`.`date` = '201208'
