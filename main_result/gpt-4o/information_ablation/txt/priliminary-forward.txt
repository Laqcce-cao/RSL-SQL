SELECT MAX(`Free Meal Count (K-12)` / `Enrollment (K-12)`) AS highest_eligible_free_rate FROM `frpm` WHERE `County Name` = 'Alameda'
SELECT `School Name`, (`Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`) AS `Eligible Free Rate` FROM `frpm` WHERE `School Type` = 'Continuation Schools' ORDER BY `Eligible Free Rate` ASC LIMIT 3
SELECT DISTINCT `Zip` FROM `schools` WHERE `County` = 'Fresno' AND `CDSCode` IN (SELECT `CDSCode` FROM `frpm` WHERE `Charter School (Y/N)` = 1)
SELECT `MailStreet` FROM `schools` INNER JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` ORDER BY `frpm`.`FRPM Count (K-12)` DESC LIMIT 1
SELECT DISTINCT `Phone` FROM `schools` WHERE `CDSCode` IN (SELECT `CDSCode` FROM `frpm` WHERE `Charter School (Y/N)` = 1 AND `Charter Funding Type` = 'Directly funded') AND `OpenDate` > '2000-01-01'
SELECT COUNT(DISTINCT `s`.`CDSCode`) FROM `satscores` AS `s` INNER JOIN `schools` AS `sc` ON `s`.`cds` = `sc`.`CDSCode` WHERE `s`.`AvgScrMath` > 400 AND `sc`.`Virtual` = 'F'
SELECT `sname` FROM `satscores` AS `T1` INNER JOIN `schools` AS `T2` ON `T1`.`cds` = `T2`.`CDSCode` WHERE `T1`.`NumTstTakr` > 500 AND `T2`.`Magnet` = 1
SELECT `Phone` FROM `schools` AS S INNER JOIN `satscores` AS SS ON S.`CDSCode` = SS.`cds` WHERE SS.`NumGE1500` = (SELECT MAX(`NumGE1500`) FROM `satscores`)
SELECT `satscores`.`NumTstTakr` FROM `satscores` INNER JOIN `frpm` ON `satscores`.`cds` = `frpm`.`CDSCode` ORDER BY `frpm`.`FRPM Count (K-12)` DESC LIMIT 1
SELECT COUNT(DISTINCT `s`.`CDSCode`) FROM `satscores` AS `s` INNER JOIN `schools` AS `sc` ON `s`.`cds` = `sc`.`CDSCode` WHERE `s`.`AvgScrMath` > 560 AND `sc`.`FundingType` = 'Directly funded'
SELECT `frpm`.`FRPM Count (Ages 5-17)` FROM `satscores` INNER JOIN `frpm` ON `satscores`.`cds` = `frpm`.`CDSCode` ORDER BY `satscores`.`AvgScrRead` DESC LIMIT 1
SELECT DISTINCT `CDSCode` FROM `frpm` WHERE `Enrollment (K-12)` + `Enrollment (Ages 5-17)` > 500
SELECT MAX(`frpm`.`Free Meal Count (Ages 5-17)` / `frpm`.`Enrollment (Ages 5-17)`) AS highest_eligible_free_rate FROM `satscores` INNER JOIN `frpm` ON `satscores`.`cds` = `frpm`.`CDSCode` WHERE (`satscores`.`NumGE1500` / `satscores`.`NumTstTakr`) > 0.3
SELECT `Phone` FROM `schools` INNER JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` ORDER BY (`NumGE1500` * 1.0 / `NumTstTakr`) DESC LIMIT 3
SELECT `NCESSchool` FROM `schools` INNER JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` ORDER BY `frpm`.`Enrollment (Ages 5-17)` DESC LIMIT 5
SELECT `dname` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`StatusType` = 'Active' GROUP BY `dname` ORDER BY AVG(`AvgScrRead`) DESC LIMIT 1
SELECT COUNT(DISTINCT `satscores`.`cds`) FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`County` = 'Alameda' AND `satscores`.`NumTstTakr` < 100
SELECT `s`.`School`, `s`.`CharterNum`, `ss`.`AvgScrWrite` FROM `satscores` AS `ss` INNER JOIN `schools` AS `s` ON `ss`.`cds` = `s`.`CDSCode` WHERE `ss`.`AvgScrWrite` > 499 AND `s`.`CharterNum` IS NOT NULL ORDER BY `ss`.`AvgScrWrite` DESC
SELECT COUNT(DISTINCT `schools`.`CDSCode`) FROM `schools` INNER JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` WHERE `schools`.`County` = 'Fresno' AND `schools`.`FundingType` = 'Directly funded' AND `satscores`.`NumTstTakr` <= 250
SELECT `Phone` FROM `schools` WHERE `CDSCode` = (SELECT `cds` FROM `satscores` ORDER BY `AvgScrMath` DESC LIMIT 1)
SELECT COUNT(`School Name`) FROM `frpm` WHERE `County Name` = 'Amador' AND `Low Grade` = '9' AND `High Grade` = '12'
SELECT COUNT(`frpm`.`CDSCode`) FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`City` = 'Los Angeles' AND `frpm`.`Free Meal Count (K-12)` > 500 AND `frpm`.`FRPM Count (K-12)` < 700
SELECT `sname` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`County` = 'Contra Costa' ORDER BY `satscores`.`NumTstTakr` DESC LIMIT 1
SELECT `frpm`.`School Name`, `schools`.`Street` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE (`frpm`.`Enrollment (K-12)` - `frpm`.`Enrollment (Ages 5-17)`) > 30
SELECT DISTINCT `s`.`School Name` FROM `frpm` AS `f` INNER JOIN `satscores` AS `s` ON `f`.`CDSCode` = `s`.`cds` WHERE (`f`.`Free Meal Count (K-12)` / `f`.`Enrollment (K-12)`) > 0.1 AND `s`.`NumGE1500` > 0
SELECT `s`.`School`, `s`.`FundingType` FROM `schools` AS `s` INNER JOIN `satscores` AS `ss` ON `s`.`CDSCode` = `ss`.`cds` WHERE `s`.`County` = 'Riverside' GROUP BY `s`.`School` HAVING AVG(`ss`.`AvgScrMath`) > 400
SELECT `s`.`School Name`, `s`.`Street` || ', ' || `s`.`City` || ', ' || `s`.`State` || ' ' || `s`.`Zip` AS `Full Address` FROM `frpm` AS `f` INNER JOIN `schools` AS `s` ON `f`.`CDSCode` = `s`.`CDSCode` WHERE `s`.`County` = 'Monterey' AND `f`.`School Type` LIKE '%High Schools%' AND `f`.`FRPM Count (Ages 5-17)` > 800
SELECT `s`.`School`, `ss`.`AvgScrWrite`, `s`.`Phone` FROM `schools` AS `s` INNER JOIN `satscores` AS `ss` ON `s`.`CDSCode` = `ss`.`cds` WHERE (`s`.`OpenDate` > '1991-12-31' OR `s`.`ClosedDate` < '2000-01-01')
SELECT `s`.`School`, `s`.`DOCType` FROM `frpm` AS `f` INNER JOIN `schools` AS `s` ON `f`.`CDSCode` = `s`.`CDSCode` WHERE `s`.`FundingType` = 'Locally funded' AND (`f`.`Enrollment (K-12)` - `f`.`Enrollment (Ages 5-17)`) > (SELECT AVG(`f2`.`Enrollment (K-12)` - `f2`.`Enrollment (Ages 5-17)`) FROM `frpm` AS `f2` INNER JOIN `schools` AS `s2` ON `f2`.`CDSCode` = `s2`.`CDSCode` WHERE `s2`.`FundingType` = 'Locally funded')
SELECT `OpenDate` FROM `schools` WHERE `CDSCode` = (SELECT `CDSCode` FROM `frpm` WHERE `Low Grade` = 'K' AND `High Grade` = '12' ORDER BY `Enrollment (K-12)` DESC LIMIT 1)
SELECT `City` FROM `schools` INNER JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` ORDER BY `frpm`.`Enrollment (K-12)` ASC LIMIT 5
SELECT `CDSCode`, `Free Meal Count (K-12)` / `Enrollment (K-12)` AS eligible_free_rate FROM frpm WHERE `Enrollment (K-12)` IS NOT NULL ORDER BY `Enrollment (K-12)` DESC LIMIT 2 OFFSET 9
SELECT `School Name`, (`FRPM Count (K-12)` / `Enrollment (K-12)`) AS `Eligible FRPM Rate` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `SOC` = 66 ORDER BY `FRPM Count (K-12)` DESC LIMIT 5
SELECT `schools`.`School`, `schools`.`Website` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000
SELECT (`Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`) AS free_rate FROM frpm WHERE `CDSCode` = (SELECT `CDSCode` FROM schools WHERE `AdmFName1` = 'Kacey' AND `AdmLName1` = 'Gibson')
SELECT `AdmEmail1` FROM `schools` WHERE `CDSCode` = (SELECT `CDSCode` FROM `frpm` WHERE `Charter School (Y/N)` = 1 ORDER BY `Enrollment (K-12)` ASC LIMIT 1)
SELECT `schools`.`AdmFName1`, `schools`.`AdmLName1`, `schools`.`AdmFName2`, `schools`.`AdmLName2`, `schools`.`AdmFName3`, `schools`.`AdmLName3` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `satscores`.`NumGE1500` DESC LIMIT 1
SELECT `Street`, `City`, `Zip`, `State` FROM `schools` INNER JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` WHERE `satscores`.`NumTstTakr` > 0 ORDER BY (`satscores`.`NumGE1500` * 1.0 / `satscores`.`NumTstTakr`) ASC LIMIT 1
SELECT `schools`.`Website` FROM `schools` INNER JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` WHERE `schools`.`County` = 'Los Angeles' AND `satscores`.`NumTstTakr` BETWEEN 2000 AND 3000
SELECT AVG(`NumTstTakr`) FROM `satscores` AS T1 INNER JOIN `schools` AS T2 ON T1.cds = T2.CDSCode WHERE T2.County = 'Fresno' AND T2.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'
SELECT `Phone` FROM `schools` INNER JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` WHERE `schools`.`District` = 'Fresno Unified' ORDER BY `satscores`.`AvgScrRead` ASC LIMIT 1
SELECT `s`.`School` FROM `schools` AS `s` INNER JOIN `satscores` AS `ss` ON `s`.`CDSCode` = `ss`.`cds` WHERE `s`.`Virtual` = 'Y' AND `ss`.`rtype` = 'S' AND `ss`.`AvgScrRead` IS NOT NULL GROUP BY `s`.`County`, `s`.`School` ORDER BY `ss`.`AvgScrRead` DESC LIMIT 5
SELECT `EdOpsName` FROM `schools` WHERE `CDSCode` = (SELECT `cds` FROM `satscores` ORDER BY `AvgScrMath` DESC LIMIT 1)
SELECT T2.AvgScrMath, T2.cname FROM (SELECT cds, (AvgScrMath + AvgScrRead + AvgScrWrite) AS total_avg_score FROM satscores) AS T1 INNER JOIN satscores AS T2 ON T1.cds = T2.cds ORDER BY T1.total_avg_score ASC LIMIT 1
SELECT `s`.`City`, `sat`.`AvgScrWrite` FROM `satscores` AS `sat` INNER JOIN `schools` AS `s` ON `sat`.`cds` = `s`.`CDSCode` WHERE `sat`.`NumGE1500` = (SELECT MAX(`NumGE1500`) FROM `satscores`)
SELECT `s`.`School`, AVG(`ss`.`AvgScrWrite`) AS `AverageWritingScore` FROM `schools` AS `s` INNER JOIN `satscores` AS `ss` ON `s`.`CDSCode` = `ss`.`cds` WHERE `s`.`AdmFName1` = 'Ricci' AND `s`.`AdmLName1` = 'Ulrich' GROUP BY `s`.`School`
SELECT `s`.`School`, `f`.`Enrollment (K-12)` FROM `schools` AS `s` INNER JOIN `frpm` AS `f` ON `s`.`CDSCode` = `f`.`CDSCode` WHERE `s`.`DOC` = 31 ORDER BY `f`.`Enrollment (K-12)` DESC LIMIT 1
SELECT COUNT(`CDSCode`) / 12 FROM `schools` WHERE `County` = 'Alameda' AND `DOC` = 52 AND `OpenDate` LIKE '1980%'
SELECT (SELECT COUNT(*) FROM `schools` WHERE `County` = 'Orange' AND `DOC` = 54) * 1.0 / (SELECT COUNT(*) FROM `schools` WHERE `County` = 'Orange' AND `DOC` = 52) AS ratio
SELECT `s`.`County`, `s`.`School`, `s`.`ClosedDate` FROM `schools` AS `s` WHERE `s`.`StatusType` = 'Closed' GROUP BY `s`.`County` ORDER BY COUNT(`s`.`School`) DESC
SELECT `s`.`School`, `s`.`Street` FROM `satscores` AS `ss` INNER JOIN `schools` AS `s` ON `ss`.`cds` = `s`.`CDSCode` ORDER BY `ss`.`AvgScrMath` DESC LIMIT 1 OFFSET 6
SELECT `schools`.`MailStreet`, `schools`.`School` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `satscores`.`AvgScrRead` ASC LIMIT 1
SELECT COUNT(DISTINCT `s`.`CDSCode`) FROM `satscores` AS `s` INNER JOIN `schools` AS `sc` ON `s`.`cds` = `sc`.`CDSCode` WHERE (`s`.`AvgScrRead` + `s`.`AvgScrMath` + `s`.`AvgScrWrite`) >= 1500 AND `sc`.`MailCity` = 'Lakeport'
SELECT SUM(`NumTstTakr`) FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`MailCity` = 'Fresno'
SELECT `schools`.`School`, `schools`.`MailZip` FROM `schools` WHERE `schools`.`AdmFName1` = 'Avetik' AND `schools`.`AdmLName1` = 'Atoian'
SELECT CAST(COUNT(CASE WHEN `County` = 'Colusa' THEN `CDSCode` ELSE NULL END) AS REAL) / COUNT(CASE WHEN `County` = 'Humboldt' THEN `CDSCode` ELSE NULL END) FROM `schools` WHERE `MailState` = 'CA'
SELECT COUNT(`CDSCode`) FROM `schools` WHERE `MailState` = 'CA' AND `City` = 'San Joaquin' AND `StatusType` = 'Active'
SELECT `Phone`, `Ext` FROM `schools` WHERE `CDSCode` = (SELECT `cds` FROM `satscores` ORDER BY `AvgScrWrite` DESC LIMIT 1 OFFSET 332)
SELECT `School`, `Phone`, `Ext` FROM `schools` WHERE `Zip` = '95203-3704'
SELECT DISTINCT `Website` FROM `schools` WHERE (`AdmFName1` = 'Mike' AND `AdmLName1` = 'Larson') OR (`AdmFName1` = 'Dante' AND `AdmLName1` = 'Alvarez')
SELECT `Website` FROM `schools` WHERE `Virtual` = 'P' AND `Charter` = 1 AND `County` = 'San Joaquin'
SELECT COUNT(*) FROM schools WHERE `Charter` = 1 AND `City` = 'Hickman' AND `DOC` = 52
SELECT COUNT(DISTINCT `frpm`.`CDSCode`) FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`County` = 'Los Angeles' AND `schools`.`Charter` = 0 AND (`frpm`.`Free Meal Count (K-12)` * 100 / `frpm`.`Enrollment (K-12)`) < 0.18
SELECT `schools`.`School`, `schools`.`City`, `schools`.`AdmFName1`, `schools`.`AdmLName1`, `schools`.`AdmFName2`, `schools`.`AdmLName2`, `schools`.`AdmFName3`, `schools`.`AdmLName3` FROM `schools` WHERE `schools`.`Charter` = 1 AND `schools`.`CharterNum` = '00D2'
SELECT COUNT(*) FROM `schools` WHERE `MailCity` = 'Hickman' AND `CharterNum` = '00D4'
SELECT CAST(SUM(CASE WHEN `FundingType` = 'Locally funded' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`CDSCode`) FROM `schools` WHERE `County` = 'Santa Clara'
SELECT COUNT(`CDSCode`) FROM `schools` WHERE `FundingType` = 'Directly funded' AND `County` = 'Stanislaus' AND `OpenDate` BETWEEN '2000-01-01' AND '2005-12-31'
SELECT COUNT(*) FROM `schools` WHERE `StatusType` = 'Closed' AND `ClosedDate` LIKE '1989%' AND `City` = 'San Francisco' AND `District` LIKE '%Community College District%'
SELECT `County`, COUNT(`ClosedDate`) AS closure_count FROM `schools` WHERE strftime('%Y', `ClosedDate`) BETWEEN '1980' AND '1989' AND `SOC` = '11' GROUP BY `County` ORDER BY closure_count DESC LIMIT 1
SELECT DISTINCT `NCESDist` FROM `schools` WHERE `SOC` = 31
SELECT COUNT(`CDSCode`) FROM `schools` WHERE `County` = 'Alpine' AND `StatusType` IN ('Active', 'Closed') AND `SOCType` = 'District Community Day Schools'
SELECT `District Code` FROM `frpm` AS F INNER JOIN `schools` AS S ON F.`CDSCode` = S.`CDSCode` WHERE S.`City` = 'Fresno' AND S.`Magnet` = 0
SELECT SUM(`Enrollment (Ages 5-17)`) FROM `frpm` AS F INNER JOIN `schools` AS S ON F.`CDSCode` = S.`CDSCode` WHERE S.`City` = 'Fremont' AND F.`Academic Year` = '2014-2015' AND S.`EdOpsCode` = 'SSS'
SELECT `FRPM Count (Ages 5-17)` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`MailStreet` = 'PO Box 1040' AND `schools`.`School Type` = 'Youth Authority School'
SELECT MIN(`Low Grade`) FROM `schools` WHERE `NCESDist` = '0613360' AND `EdOpsCode` = 'SPECON'
SELECT `schools`.`School`, `schools`.`EILName` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`NSLP Provision Status` = 'Provision 2' AND `frpm`.`County Code` = '37'
SELECT `City` FROM `schools` INNER JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `frpm`.`Low Grade` = '9' AND `frpm`.`High Grade` = '12' AND `frpm`.`NSLP Provision Status` = '2' AND `schools`.`County` = 'Merced' AND `schools`.`EILCode` = 'HS'
SELECT `s`.`School`, (`f`.`FRPM Count (Ages 5-17)` / `f`.`Enrollment (Ages 5-17)`) * 100 AS `Percent (%) Eligible FRPM (Ages 5-17)` FROM `schools` AS `s` JOIN `frpm` AS `f` ON `s`.`CDSCode` = `f`.`CDSCode` WHERE `s`.`County` = 'Los Angeles' AND `s`.`GSserved` = 'K-9'
SELECT `GSserved`, COUNT(`GSserved`) AS `count` FROM `schools` WHERE `City` = 'Adelanto' GROUP BY `GSserved` ORDER BY `count` DESC LIMIT 1
SELECT `County`, COUNT(`CDSCode`) AS `NumberOfSchools` FROM `schools` WHERE `County` IN ('San Diego', 'Santa Barbara') AND `Virtual` = 'F' GROUP BY `County` ORDER BY `NumberOfSchools` DESC LIMIT 1
SELECT `s`.`School Name`, `s`.`Latitude`, `f`.`School Type` FROM `schools` AS `s` INNER JOIN `frpm` AS `f` ON `s`.`CDSCode` = `f`.`CDSCode` WHERE `s`.`Latitude` = (SELECT MAX(`Latitude`) FROM `schools`)
SELECT `schools`.`City`, `schools`.`Low Grade`, `schools`.`School` FROM `schools` WHERE `schools`.`State` = 'CA' ORDER BY `schools`.`Latitude` ASC LIMIT 1
SELECT `GSoffered` FROM `schools` ORDER BY ABS(`Longitude`) DESC LIMIT 1
SELECT `s`.`City`, COUNT(`s`.`CDSCode`) AS `Number_of_Schools` FROM `schools` AS `s` INNER JOIN `frpm` AS `f` ON `s`.`CDSCode` = `f`.`CDSCode` WHERE `s`.`Magnet` = 1 AND `s`.`GSoffered` = 'K-8' AND `f`.`NSLP Provision Status` = 'Multiple Provision Types' GROUP BY `s`.`City`
SELECT `AdmFName1`, `District`, COUNT(`AdmFName1`) as `Count` FROM `schools` WHERE `AdmFName1` IS NOT NULL GROUP BY `AdmFName1`, `District` ORDER BY `Count` DESC LIMIT 2
SELECT T1.`Percent (%) Eligible Free (K-12)`, T1.`District Code` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.AdmFName1 = 'Alusine'
SELECT `T3`.`AdmLName1`, `T3`.`District`, `T3`.`County`, `T3`.`School` FROM `schools` AS `T3` WHERE `T3`.`CharterNum` = '40'
SELECT `AdmEmail1` FROM `schools` WHERE `County` = 'San Bernardino' AND `City` = 'San Bernardino City Unified' AND `OpenDate` BETWEEN '2009-01-01' AND '2010-12-31' AND (`SOC` = 62 OR `DOC` = 54) AND `StatusType` = 'Active' AND `AdmEmail1` IS NOT NULL
SELECT `s`.`School`, `s`.`AdmEmail1` FROM `satscores` AS `ss` INNER JOIN `schools` AS `s` ON `ss`.`cds` = `s`.`CDSCode` ORDER BY `ss`.`NumGE1500` DESC LIMIT 1
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `account`.`frequency` = 'POPLATEK PO OBRATU' AND `district`.`A3` = 'East Bohemia'
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `district`.`A3` = 'Prague'
SELECT CASE WHEN AVG(`A12`) > AVG(`A13`) THEN '1995' ELSE '1996' END AS higher_unemployment_year FROM `district`
SELECT COUNT(`district_id`) FROM `district` WHERE `A11` > 6000 AND `A11` < 10000
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'M' AND `district`.`A3` = 'North Bohemia' AND `district`.`A11` > 8000
SELECT `account`.`account_id`, (MAX(`district`.`A11`) - MIN(`district`.`A11`)) AS `salary_gap` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' AND `client`.`birth_date` = (SELECT MIN(`birth_date`) FROM `client` WHERE `gender` = 'F') GROUP BY `account`.`account_id`
SELECT `account`.`account_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`birth_date` = (SELECT MIN(`birth_date`) FROM `client`) ORDER BY `district`.`A11` DESC LIMIT 1
SELECT COUNT(DISTINCT `disp`.`client_id`) FROM `disp` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` WHERE `account`.`frequency` = 'POPLATEK TYDNE' AND `disp`.`type` = 'OWNER'
SELECT DISTINCT `client`.`client_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` WHERE `account`.`frequency` = 'POPLATEK PO OBRATU' AND `disp`.`type` = 'DISPONENT'
SELECT `account`.`account_id` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE STRFTIME('%Y', `loan`.`date`) = '1997' AND `loan`.`amount` = (SELECT MIN(`amount`) FROM `loan` WHERE STRFTIME('%Y', `date`) = '1997') AND `account`.`frequency` = 'POPLATEK TYDNE'
SELECT `account`.`account_id` FROM `account` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `loan`.`duration` > 12 AND STRFTIME('%Y', `account`.`date`) = '1993' ORDER BY `loan`.`amount` DESC LIMIT 1
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' AND `client`.`birth_date` < '1950-01-01' AND `district`.`A2` = 'Sokolov'
SELECT `account_id` FROM `trans` WHERE STRFTIME('%Y', `date`) = '1995' ORDER BY `date` ASC LIMIT 1
SELECT DISTINCT `account`.`account_id` FROM `account` INNER JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `account`.`date` < '1997-01-01' AND `trans`.`amount` > 3000
SELECT `client`.`client_id` FROM `card` INNER JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `card`.`issued` = '1994-03-03'
SELECT `account`.`date` FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` WHERE `trans`.`amount` = 840 AND `trans`.`date` = '1998-10-14'
SELECT `account`.`district_id` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `loan`.`date` = '1994-08-25' AND `loan`.`status` = 'A'
SELECT MAX(`T2`.`amount`) FROM `card` AS `T1` INNER JOIN `disp` AS `T3` ON `T1`.`disp_id` = `T3`.`disp_id` INNER JOIN `trans` AS `T2` ON `T3`.`account_id` = `T2`.`account_id` WHERE `T1`.`issued` = '1996-10-21'
SELECT `client`.`gender` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `district`.`A11` = (SELECT MAX(`A11`) FROM `district`) ORDER BY `client`.`birth_date` ASC LIMIT 1
SELECT t.amount FROM trans t JOIN account a ON t.account_id = a.account_id WHERE a.account_id = (SELECT l.account_id FROM loan l ORDER BY l.amount DESC LIMIT 1) ORDER BY t.date ASC LIMIT 1
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Jesenik' AND `client`.`gender` = 'F'
SELECT T2.`disp_id` FROM `trans` AS T1 INNER JOIN `disp` AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`amount` = 5100 AND T1.`date` = '1998-09-02'
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Litomerice' AND STRFTIME('%Y', `account`.`date`) = '1996'
SELECT `district`.`A2` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' AND `client`.`birth_date` = '1976-01-29'
SELECT `client`.`birth_date` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `loan`.`amount` = 98832 AND `loan`.`date` = '1996-01-03'
SELECT `account`.`account_id` FROM `account` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `district`.`A3` = 'Prague' ORDER BY `account`.`date` ASC LIMIT 1
SELECT CAST(SUM(CASE WHEN `client`.`gender` = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`client`.`client_id`) FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `district`.`A3` = 'south Bohemia' AND `district`.`A4` = (SELECT MAX(`A4`) FROM `district` WHERE `A3` = 'south Bohemia')
SELECT ((balance_end.balance - balance_start.balance) / balance_start.balance) * 100 AS increase_rate FROM (SELECT `account_id`, `balance` FROM `trans` WHERE `date` = '1993-03-22') AS balance_start JOIN (SELECT `account_id`, `balance` FROM `trans` WHERE `date` = '1998-12-27') AS balance_end ON balance_start.account_id = balance_end.account_id WHERE balance_start.account_id = (SELECT `account_id` FROM `loan` WHERE `date` = '1993-07-05' ORDER BY `date` ASC LIMIT 1)
SELECT SUM(CASE WHEN `status` = 'A' THEN `amount` ELSE 0 END) * 100.0 / SUM(`amount`) FROM `loan`
SELECT CAST(SUM(CASE WHEN `status` = 'C' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`loan_id`) FROM `loan` WHERE `amount` < 100000
SELECT `account`.`account_id`, `district`.`A2` AS `district_name`, `district`.`A3` AS `district_region` FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `account`.`date` LIKE '1993%' AND `account`.`frequency` = 'POPLATEK PO OBRATU'
SELECT DISTINCT `client`.`client_id`, `disp`.`account_id`, `account`.`frequency` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `district`.`A3` = 'east Bohemia' AND `account`.`date` BETWEEN '1995-01-01' AND '2000-12-31'
SELECT `account`.`account_id`, `account`.`date` FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Prachatice'
SELECT `district`.`A2`, `district`.`A3` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`loan_id` = 4990
SELECT `account`.`account_id`, `district`.`A2` AS `district`, `district`.`A3` AS `region` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`amount` > 300000
SELECT T1.`loan_id`, T3.`A3`, T3.`A11` FROM `loan` AS T1 INNER JOIN `account` AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN `district` AS T3 ON T2.`district_id` = T3.`district_id` WHERE T1.`duration` = 60
SELECT `district`.`A3`, ((`district`.`A13` - `district`.`A12`) / `district`.`A12`) * 100 AS `unemployment_increment` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `loan`.`status` = 'D'
SELECT CAST(SUM(IIF(D.`A2` = 'Decin' AND strftime('%Y', A.`date`) = '1993', 1, 0)) AS REAL) * 100 / COUNT(A.`account_id`) FROM `account` AS A INNER JOIN `district` AS D ON A.`district_id` = D.`district_id`
SELECT `account_id` FROM `account` WHERE `frequency` = 'POPLATEK MESICNE'
SELECT `district`.`A2`, COUNT(`client`.`client_id`) AS `female_count` FROM `client` INNER JOIN `account` ON `client`.`district_id` = `account`.`district_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' GROUP BY `district`.`A2` ORDER BY `female_count` DESC LIMIT 9
SELECT `district`.`A2`, `trans`.`amount` FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `trans`.`type` = 'VYDAJ' AND `trans`.`date` LIKE '1996-01%' ORDER BY `trans`.`amount` DESC LIMIT 10
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` LEFT JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` LEFT JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `district`.`A3` = 'South Bohemia' AND `card`.`card_id` IS NULL
SELECT `district`.`A3` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`status` IN ('C', 'D') GROUP BY `district`.`A3` ORDER BY COUNT(`loan`.`loan_id`) DESC LIMIT 1
SELECT AVG(`loan`.`amount`) FROM `loan` INNER JOIN `disp` ON `loan`.`account_id` = `disp`.`account_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `client`.`gender` = 'M'
SELECT `district`.`A2`, `district`.`A3` FROM `district` WHERE `district`.`A13` = (SELECT MAX(`A13`) FROM `district`)
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A16` = (SELECT MAX(`A16`) FROM `district`)
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `trans`.`operation` = 'VYBER KARTOU' AND `account`.`frequency` = 'POPLATEK MESICNE' AND `trans`.`balance` < 0
SELECT COUNT(DISTINCT `loan`.`account_id`) FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `loan`.`amount` >= 250000 AND `account`.`frequency` = 'POPLATEK MESICNE' AND `loan`.`date` BETWEEN '1995-01-01' AND '1997-12-31' AND `loan`.`status` = 'A'
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `loan`.`status` IN ('C', 'D') AND `account`.`district_id` = 1
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `district`.`A15` = (SELECT DISTINCT `A15` FROM `district` ORDER BY `A15` DESC LIMIT 1 OFFSET 1) AND `client`.`gender` = 'M'
SELECT COUNT(`card`.`card_id`) FROM `card` INNER JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` WHERE `card`.`type` = 'gold' AND `disp`.`type` = 'OWNER'
SELECT COUNT(*) FROM `account` AS A INNER JOIN `district` AS D ON A.`district_id` = D.`district_id` WHERE D.`A2` = 'Pisek'
SELECT DISTINCT `district`.`A3` FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `trans`.`amount` > 10000 AND strftime('%Y', `trans`.`date`) = '1997'
SELECT DISTINCT `order`.`account_id` FROM `order` INNER JOIN `account` ON `order`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `order`.`k_symbol` = 'SIPO' AND `district`.`A3` = 'Pisek'
SELECT DISTINCT `account`.`account_id` FROM `account` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`type` = 'gold'
SELECT AVG(`amount`) FROM `trans` WHERE `operation` = 'VYBER KARTOU' AND STRFTIME('%Y', `date`) = '2021' GROUP BY STRFTIME('%m', `date`)
SELECT DISTINCT `disp`.`client_id` FROM `trans` INNER JOIN `disp` ON `trans`.`account_id` = `disp`.`account_id` WHERE `trans`.`operation` = 'VYBER KARTOU' AND `trans`.`amount` < (SELECT AVG(`amount`) FROM `trans` WHERE `operation` = 'VYBER KARTOU' AND STRFTIME('%Y', `date`) = '1998') AND STRFTIME('%Y', `trans`.`date`) = '1998'
SELECT DISTINCT `client`.`client_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` INNER JOIN `loan` ON `disp`.`account_id` = `loan`.`account_id` WHERE `client`.`gender` = 'F'
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' AND `district`.`A3` = 'south Bohemia'
SELECT `account`.`account_id` FROM `account` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Tabor' AND `disp`.`type` = 'OWNER'
SELECT DISTINCT `disp`.`type` FROM `disp` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `disp`.`type` != 'OWNER' AND `district`.`A11` > 8000 AND `district`.`A11` <= 9000
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` INNER JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `district`.`A3` = 'North Bohemia' AND `trans`.`bank` = 'AB'
SELECT DISTINCT `district`.`A2` FROM `district` INNER JOIN `account` ON `district`.`district_id` = `account`.`district_id` INNER JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `trans`.`type` = 'VYDAJ'
SELECT AVG(`district`.`A15`) FROM `district` INNER JOIN `account` ON `district`.`district_id` = `account`.`district_id` WHERE `district`.`A15` > 4000 AND `account`.`date` >= '1997-01-01'
SELECT COUNT(`card`.`card_id`) FROM `card` JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` WHERE `card`.`type` = 'classic' AND `disp`.`type` = 'OWNER'
SELECT COUNT(`T1`.`gender`) FROM `client` AS `T1` INNER JOIN `district` AS `T2` ON `T1`.`district_id` = `T2`.`district_id` WHERE `T2`.`A2` = 'Hl.m. Praha' AND `T1`.`gender` = 'M'
SELECT (COUNT(CASE WHEN `type` = 'gold' AND `issued` < '1998-01-01' THEN 1 END) * 100.0 / COUNT(*)) AS percent_gold FROM `card`
SELECT `client`.`client_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `loan` ON `disp`.`account_id` = `loan`.`account_id` WHERE `disp`.`type` = 'OWNER' ORDER BY `loan`.`amount` DESC LIMIT 1
SELECT `d`.`A15` FROM `account` AS `a` INNER JOIN `district` AS `d` ON `a`.`district_id` = `d`.`district_id` WHERE `a`.`account_id` = 532
SELECT `account`.`district_id` FROM `order` INNER JOIN `account` ON `order`.`account_id` = `account`.`account_id` WHERE `order`.`order_id` = 33333
SELECT `trans_id`, `date`, `amount`, `balance` FROM `trans` INNER JOIN `disp` ON `trans`.`account_id` = `disp`.`account_id` WHERE `disp`.`client_id` = 3356 AND `trans`.`operation` = 'VYBER'
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `account`.`frequency` = 'POPLATEK TYDNE' AND `loan`.`amount` < 200000
SELECT DISTINCT `card`.`type` FROM `card` INNER JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` WHERE `disp`.`client_id` = 13539
SELECT `district`.`A3` FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`client_id` = 3541
SELECT `district`.`A3` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`status` = 'A' GROUP BY `district`.`A3` ORDER BY COUNT(`loan`.`loan_id`) DESC LIMIT 1
SELECT `client`.`client_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `order` ON `disp`.`account_id` = `order`.`account_id` WHERE `order`.`order_id` = 32423
SELECT `trans`.* FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` WHERE `account`.`district_id` = 5
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Jesenik'
SELECT DISTINCT `client`.`client_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`type` = 'junior' AND `card`.`issued` >= '1997-01-01'
SELECT CAST(SUM(CASE WHEN `client`.`gender` = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`client`.`gender`) FROM `client` INNER JOIN `account` ON `client`.`district_id` = `account`.`district_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A11` > 10000
SELECT (SUM(CASE WHEN STRFTIME('%Y', L.date) = '1997' THEN L.amount ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', L.date) = '1996' THEN L.amount ELSE 0 END)) * 100.0 / SUM(CASE WHEN STRFTIME('%Y', L.date) = '1996' THEN L.amount ELSE 0 END) AS growth_rate FROM loan AS L INNER JOIN account AS A ON L.account_id = A.account_id INNER JOIN disp AS D ON A.account_id = D.account_id INNER JOIN client AS C ON D.client_id = C.client_id WHERE C.gender = 'M'
SELECT COUNT(`trans_id`) FROM `trans` WHERE `operation` = 'VYBER KARTOU' AND `date` > '1995-12-31'
SELECT (SELECT `A16` FROM `district` WHERE `A3` = 'north Bohemia') - (SELECT `A16` FROM `district` WHERE `A3` = 'east Bohemia') AS crime_difference
SELECT COUNT(*) FROM `disp` WHERE `account_id` BETWEEN 1 AND 10 AND `type` IN ('OWNER', 'DISPONENT')
SELECT COUNT(*) AS statement_requests, o.k_symbol FROM `order` AS o WHERE o.account_id = 3 AND o.amount = 3539 GROUP BY o.k_symbol
SELECT STRFTIME('%Y', `client`.`birth_date`) AS `birth_year` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` WHERE `disp`.`account_id` = 130 AND `disp`.`type` = 'OWNER'
SELECT COUNT(*) FROM `account` AS A INNER JOIN `disp` AS D ON A.`account_id` = D.`account_id` WHERE D.`type` = 'OWNER' AND A.`frequency` = 'POPLATEK PO OBRATU'
SELECT l.amount, l.status FROM loan l JOIN disp d ON l.account_id = d.account_id WHERE d.client_id = 992
SELECT `trans`.`balance`, `client`.`gender` FROM `trans` INNER JOIN `disp` ON `trans`.`account_id` = `disp`.`account_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `trans`.`trans_id` = 851 AND `client`.`client_id` = 4
SELECT DISTINCT `card`.`type` FROM `card` INNER JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` WHERE `disp`.`client_id` = 9
SELECT SUM(t.amount) FROM `trans` t INNER JOIN `disp` d ON t.account_id = d.account_id WHERE d.client_id = 617 AND SUBSTR(t.date, 1, 4) = '1998'
SELECT `client`.`client_id`, `client`.`birth_date` FROM `client` JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`birth_date` BETWEEN '1983-01-01' AND '1987-12-31' AND `district`.`A3` = 'East Bohemia'
SELECT `client`.`client_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `loan` ON `disp`.`account_id` = `loan`.`account_id` WHERE `client`.`gender` = 'F' ORDER BY `loan`.`amount` DESC LIMIT 3
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `order` ON `disp`.`account_id` = `order`.`account_id` WHERE `client`.`gender` = 'M' AND `client`.`birth_date` BETWEEN '1974-01-01' AND '1976-12-31' AND `order`.`k_symbol` = 'SIPO' AND `order`.`amount` > 4000
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Beroun' AND `account`.`date` > '1996-12-31'
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `client`.`gender` = 'F' AND `card`.`type` = 'junior'
SELECT CAST(COUNT(CASE WHEN `client`.`gender` = 'F' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(`client`.`client_id`) FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A3` = 'Prague'
SELECT CAST(SUM(CASE WHEN T3.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.gender) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.frequency = 'POPLATEK TYDNE'
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` WHERE `account`.`frequency` = 'POPLATEK TYDNE' AND `disp`.`type` = 'OWNER'
SELECT `account_id` FROM `loan` WHERE `duration` > 24 AND `amount` = (SELECT MIN(`amount`) FROM `loan` WHERE `duration` > 24 AND `account_id` IN (SELECT `account_id` FROM `account` WHERE `date` < '1997-01-01')) AND `account_id` IN (SELECT `account_id` FROM `account` WHERE `date` < '1997-01-01')
SELECT `account`.`account_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' ORDER BY `client`.`birth_date` ASC, `district`.`A11` ASC LIMIT 1
SELECT COUNT(*) FROM client AS c INNER JOIN district AS d ON c.district_id = d.district_id WHERE c.birth_date LIKE '1920%' AND d.A3 = 'east Bohemia'
SELECT COUNT(`loan`.`loan_id`) FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `loan`.`duration` = 24 AND `account`.`frequency` = 'POPLATEK TYDNE'
SELECT AVG(`amount`) FROM `loan` WHERE `status` IN ('C', 'D') AND `account_id` IN (SELECT `account_id` FROM `account` WHERE `frequency` = 'POPLATEK PO OBRATU')
SELECT DISTINCT `client`.`client_id`, `client`.`district_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` WHERE `disp`.`type` = 'OWNER'
SELECT T3.client_id, (strftime('%Y', 'now') - strftime('%Y', T3.birth_date)) AS age FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.type = 'gold' AND T2.type = 'OWNER'
SELECT `bond_type` FROM `bond` GROUP BY `bond_type` ORDER BY COUNT(`bond_type`) DESC LIMIT 1
SELECT COUNT(DISTINCT `a`.`molecule_id`) FROM `atom` AS `a` INNER JOIN `molecule` AS `m` ON `a`.`molecule_id` = `m`.`molecule_id` WHERE `m`.`label` = '-' AND `a`.`element` = 'cl'
SELECT AVG(CASE WHEN `element` = 'o' THEN 1 ELSE 0 END) FROM `atom` JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '-'
SELECT AVG(single_bond_count) FROM (SELECT COUNT(DISTINCT `b`.`bond_id`) AS single_bond_count FROM `molecule` AS `m` INNER JOIN `bond` AS `b` ON `m`.`molecule_id` = `b`.`molecule_id` WHERE `m`.`label` = '+' AND `b`.`bond_type` = '-' GROUP BY `m`.`molecule_id`)
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'na' AND `molecule`.`label` = '-'
SELECT DISTINCT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '#' AND `molecule`.`label` = '+'
SELECT SUM(CASE WHEN `a`.`element` = 'c' THEN 1 ELSE 0 END) * 1.0 / COUNT(`a`.`atom_id`) AS percentage FROM `atom` AS `a` INNER JOIN `bond` AS `b` ON `a`.`molecule_id` = `b`.`molecule_id` WHERE `b`.`bond_type` = '='
SELECT COUNT(`bond_id`) FROM `bond` WHERE `bond_type` = '#'
SELECT COUNT(`atom_id`) FROM `atom` WHERE `element` != 'br'
SELECT COUNT(`molecule_id`) FROM `molecule` WHERE `molecule_id` BETWEEN 'TR000' AND 'TR099' AND `label` = '+'
SELECT DISTINCT `molecule_id` FROM `atom` WHERE `element` = 'c'
SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR004_8_9'
SELECT DISTINCT a.element FROM atom AS a INNER JOIN connected AS c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 INNER JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.bond_type = '='
SELECT `m`.`label` FROM `molecule` AS `m` INNER JOIN `atom` AS `a` ON `m`.`molecule_id` = `a`.`molecule_id` WHERE `a`.`element` = 'h' GROUP BY `m`.`label` ORDER BY COUNT(`a`.`atom_id`) DESC LIMIT 1
SELECT DISTINCT `b`.`bond_type` FROM `atom` AS `a` INNER JOIN `connected` AS `c` ON `a`.`atom_id` = `c`.`atom_id` INNER JOIN `bond` AS `b` ON `c`.`bond_id` = `b`.`bond_id` WHERE `a`.`element` = 'cl'
SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '-'
SELECT DISTINCT T1.`atom_id`, T1.`atom_id2` FROM `connected` AS T1 INNER JOIN `bond` AS T2 ON T1.`bond_id` = T2.`bond_id` INNER JOIN `molecule` AS T3 ON T2.`molecule_id` = T3.`molecule_id` WHERE T3.`label` = '-'
SELECT `a`.`element` FROM `atom` AS `a` INNER JOIN `molecule` AS `m` ON `a`.`molecule_id` = `m`.`molecule_id` WHERE `m`.`label` = '-' GROUP BY `a`.`element` ORDER BY COUNT(`a`.`element`) ASC LIMIT 1
SELECT T2.`bond_type` FROM `connected` AS T1 INNER JOIN `bond` AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE (T1.`atom_id` = 'TR004_8' AND T1.`atom_id2` = 'TR004_20') OR (T1.`atom_id` = 'TR004_20' AND T1.`atom_id2` = 'TR004_8')
SELECT DISTINCT `m`.`label` FROM `molecule` AS `m` WHERE `m`.`label` NOT IN (SELECT DISTINCT `m2`.`label` FROM `atom` AS `a` INNER JOIN `molecule` AS `m2` ON `a`.`molecule_id` = `m2`.`molecule_id` WHERE `a`.`element` != 'sn')
SELECT COUNT(DISTINCT a.atom_id) FROM atom AS a INNER JOIN connected AS c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 INNER JOIN bond AS b ON c.bond_id = b.bond_id WHERE (a.element = 'i' OR a.element = 's') AND b.bond_type = '-'
SELECT DISTINCT A1.`atom_id`, A2.`atom_id` FROM `connected` AS C INNER JOIN `bond` AS B ON C.`bond_id` = B.`bond_id` INNER JOIN `atom` AS A1 ON C.`atom_id` = A1.`atom_id` INNER JOIN `atom` AS A2 ON C.`atom_id2` = A2.`atom_id` WHERE B.`bond_type` = '#'
SELECT DISTINCT `atom`.`atom_id2` FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` WHERE `atom`.`molecule_id` = 'TR181'
SELECT 100 - (COUNT(DISTINCT CASE WHEN `a`.`element` = 'f' THEN `a`.`atom_id` END) * 100.0 / COUNT(DISTINCT `a`.`atom_id`)) AS percentage FROM `molecule` AS `m` INNER JOIN `atom` AS `a` ON `m`.`molecule_id` = `a`.`molecule_id` WHERE `m`.`label` = '+'
SELECT CAST(SUM(CASE WHEN `bond`.`bond_type` = '#' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`bond`.`bond_id`) AS `percent` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT `element` FROM `atom` WHERE `molecule_id` = 'TR000' ORDER BY `element` ASC LIMIT 3
SELECT T1.`atom_id`, T1.`atom_id2` FROM `connected` AS T1 INNER JOIN `bond` AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T2.`molecule_id` = 'TR001' AND T1.`bond_id` = 'TR001_2_6'
SELECT (SUM(CASE WHEN `label` = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN `label` = '-' THEN 1 ELSE 0 END)) AS difference FROM `molecule`
SELECT `atom_id`, `atom_id2` FROM `connected` WHERE `bond_id` = 'TR000_2_5'
SELECT `bond_id` FROM `connected` WHERE `atom_id2` = 'TR000_2'
SELECT `molecule`.`label` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '=' GROUP BY `molecule`.`label` ORDER BY `molecule`.`label` ASC LIMIT 5
SELECT CAST(SUM(CASE WHEN `bond_type` = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`bond_id`) AS percent FROM `bond` WHERE `molecule_id` = 'TR008'
SELECT CAST(SUM(CASE WHEN `label` = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`molecule_id`) AS percent FROM `molecule`
SELECT CAST(SUM(CASE WHEN `element` = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`atom_id`) AS percent FROM `atom` WHERE `molecule_id` = 'TR206'
SELECT DISTINCT `bond`.`bond_type` FROM `bond` WHERE `bond`.`molecule_id` = 'TR000'
SELECT `a`.`element`, `m`.`label` FROM `atom` AS `a` INNER JOIN `molecule` AS `m` ON `a`.`molecule_id` = `m`.`molecule_id` WHERE `m`.`molecule_id` = 'TR060'
SELECT T1.bond_type, T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR010' GROUP BY T1.bond_type ORDER BY COUNT(T1.bond_type) DESC LIMIT 1
SELECT DISTINCT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` WHERE `molecule`.`label` = '-' AND `bond`.`bond_type` = '-' ORDER BY `molecule`.`molecule_id` ASC LIMIT 3
SELECT `bond_id` FROM `bond` WHERE `molecule_id` = 'TR006' ORDER BY `bond_id` ASC LIMIT 2
SELECT COUNT(`bond`.`bond_id`) FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` WHERE `bond`.`molecule_id` = 'TR009' AND (`connected`.`atom_id` = 'TR009_12' OR `connected`.`atom_id2` = 'TR009_12')
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+' AND `atom`.`element` = 'br'
SELECT `bond`.`bond_type`, `connected`.`atom_id`, `connected`.`atom_id2` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` WHERE `bond`.`bond_id` = 'TR001_6_9'
SELECT `m`.`molecule_id`, CASE WHEN `m`.`label` = '+' THEN 'carcinogenic' ELSE 'not carcinogenic' END AS `carcinogenic_status` FROM `atom` AS `a` INNER JOIN `molecule` AS `m` ON `a`.`molecule_id` = `m`.`molecule_id` WHERE `a`.`atom_id` = 'TR001_10'
SELECT COUNT(DISTINCT `molecule_id`) FROM `bond` WHERE `bond_type` = '#';
SELECT COUNT(`bond_id`) FROM `connected` WHERE `atom_id` LIKE 'TR%_19' OR `atom_id2` LIKE 'TR%_19'
SELECT `element` FROM `atom` WHERE `molecule_id` = 'TR004'
SELECT COUNT(`molecule_id`) FROM `molecule` WHERE `label` = '-'
SELECT DISTINCT `molecule`.`molecule_id` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE SUBSTR(`atom`.`atom_id`, 7, 2) BETWEEN '21' AND '25' AND `molecule`.`label` = '+'
SELECT DISTINCT `b`.`bond_id` FROM `bond` AS `b` INNER JOIN `connected` AS `c` ON `b`.`bond_id` = `c`.`bond_id` INNER JOIN `atom` AS `a1` ON `c`.`atom_id` = `a1`.`atom_id` INNER JOIN `atom` AS `a2` ON `c`.`atom_id2` = `a2`.`atom_id` WHERE (`a1`.`element` = 'p' AND `a2`.`element` = 'n') OR (`a1`.`element` = 'n' AND `a2`.`element` = 'p')
SELECT `m`.`label` FROM `molecule` AS `m` INNER JOIN `bond` AS `b` ON `m`.`molecule_id` = `b`.`molecule_id` WHERE `b`.`bond_type` = '=' GROUP BY `m`.`molecule_id` ORDER BY COUNT(`b`.`bond_id`) DESC LIMIT 1
SELECT CAST(COUNT(DISTINCT `connected`.`bond_id`) AS REAL) / COUNT(DISTINCT `atom`.`atom_id`) FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` WHERE `atom`.`element` = 'i'
SELECT `bond`.`bond_type`, `bond`.`bond_id` FROM `connected` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE SUBSTR(`connected`.`atom_id`, 7, 2) + 0 = 45 OR SUBSTR(`connected`.`atom_id2`, 7, 2) + 0 = 45
SELECT `element` FROM `atom` WHERE `atom_id` NOT IN (SELECT `atom_id` FROM `connected` UNION SELECT `atom_id2` FROM `connected`)
SELECT T1.`atom_id`, T1.`element` FROM `atom` AS T1 INNER JOIN `connected` AS T2 ON T1.`atom_id` = T2.`atom_id` OR T1.`atom_id` = T2.`atom_id2` INNER JOIN `bond` AS T3 ON T2.`bond_id` = T3.`bond_id` WHERE T3.`bond_type` = '#' AND T3.`molecule_id` = 'TR041'
SELECT DISTINCT `a`.`element` FROM `connected` AS `c` INNER JOIN `atom` AS `a` ON `c`.`atom_id` = `a`.`atom_id` OR `c`.`atom_id2` = `a`.`atom_id` WHERE `c`.`bond_id` = 'TR144_8_19'
SELECT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `molecule`.`label` = '+' AND `bond`.`bond_type` = '=' GROUP BY `molecule`.`molecule_id` ORDER BY COUNT(`bond`.`bond_id`) DESC LIMIT 1
SELECT `element` FROM `atom` WHERE `molecule_id` IN (SELECT `molecule_id` FROM `molecule` WHERE `label` = '+') GROUP BY `element` ORDER BY COUNT(`atom_id`) ASC LIMIT 1
SELECT DISTINCT `a2`.`atom_id` FROM `atom` AS `a1` INNER JOIN `connected` AS `c` ON `a1`.`atom_id` = `c`.`atom_id` INNER JOIN `atom` AS `a2` ON `c`.`atom_id2` = `a2`.`atom_id` WHERE `a1`.`element` = 'pb'
SELECT DISTINCT `a`.`element` FROM `atom` AS `a` INNER JOIN `connected` AS `c` ON `a`.`atom_id` = `c`.`atom_id` OR `a`.`atom_id` = `c`.`atom_id2` INNER JOIN `bond` AS `b` ON `c`.`bond_id` = `b`.`bond_id` WHERE `b`.`bond_type` = '#'
SELECT CAST(COUNT(`b`.`bond_id`) AS FLOAT) * 100 / (SELECT COUNT(`b2`.`bond_id`) FROM `bond` AS `b2`) AS `percentage` FROM `bond` AS `b` INNER JOIN `connected` AS `c` ON `b`.`bond_id` = `c`.`bond_id` INNER JOIN `atom` AS `a1` ON `c`.`atom_id` = `a1`.`atom_id` INNER JOIN `atom` AS `a2` ON `c`.`atom_id2` = `a2`.`atom_id` WHERE (`a1`.`element`, `a2`.`element`) IN (SELECT `a1`.`element`, `a2`.`element` FROM `connected` AS `c` INNER JOIN `atom` AS `a1` ON `c`.`atom_id` = `a1`.`atom_id` INNER JOIN `atom` AS `a2` ON `c`.`atom_id2` = `a2`.`atom_id` GROUP BY `a1`.`element`, `a2`.`element` ORDER BY COUNT(*) DESC LIMIT 1)
SELECT ROUND(CAST(SUM(CASE WHEN M.`label` = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(B.`bond_id`), 5) FROM `bond` AS B INNER JOIN `molecule` AS M ON B.`molecule_id` = M.`molecule_id` WHERE B.`bond_type` = '-'
SELECT COUNT(*) FROM `atom` WHERE `element` IN ('c', 'h')
SELECT `atom_id2` FROM `connected` WHERE `atom_id` IN (SELECT `atom_id` FROM `atom` WHERE `element` = 's')
SELECT DISTINCT `b`.`bond_type` FROM `atom` AS `a` INNER JOIN `connected` AS `c` ON `a`.`atom_id` = `c`.`atom_id` OR `a`.`atom_id` = `c`.`atom_id2` INNER JOIN `bond` AS `b` ON `c`.`bond_id` = `b`.`bond_id` WHERE `a`.`element` = 'sn'
SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-'
SELECT COUNT(DISTINCT `atom`.`atom_id`) FROM `atom` INNER JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '#' AND (`atom`.`element` = 'p' OR `atom`.`element` = 'br')
SELECT DISTINCT `bond`.`bond_id` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT DISTINCT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '-' AND `molecule`.`label` = '-'
SELECT CAST(SUM(CASE WHEN `element` = 'cl' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(`atom_id`) AS `percent` FROM `atom` WHERE `molecule_id` IN (SELECT `molecule_id` FROM `bond` WHERE `bond_type` = '-')
SELECT `molecule_id`, `label` FROM `molecule` WHERE `molecule_id` IN ('TR000', 'TR001', 'TR002')
SELECT `molecule_id` FROM `molecule` WHERE `label` = '-'
SELECT COUNT(DISTINCT `molecule_id`) FROM `molecule` WHERE `label` = '+' AND `molecule_id` BETWEEN 'TR000' AND 'TR030'
SELECT DISTINCT `bond_type` FROM `bond` WHERE `molecule_id` BETWEEN 'TR000' AND 'TR050'
SELECT DISTINCT a.`element` FROM `connected` AS c INNER JOIN `atom` AS a ON c.`atom_id` = a.`atom_id` OR c.`atom_id2` = a.`atom_id` WHERE c.`bond_id` = 'TR001_10_11'
SELECT COUNT(DISTINCT `b`.`bond_id`) FROM `bond` AS `b` INNER JOIN `connected` AS `c` ON `b`.`bond_id` = `c`.`bond_id` INNER JOIN `atom` AS `a` ON `c`.`atom_id` = `a`.`atom_id` OR `c`.`atom_id2` = `a`.`atom_id` WHERE `a`.`element` = 'i'
SELECT CASE WHEN COUNT(CASE WHEN M.label = '+' THEN 1 END) > COUNT(CASE WHEN M.label = '-' THEN 1 END) THEN 'Carcinogenic' ELSE 'Non-Carcinogenic' END AS Majority FROM molecule AS M INNER JOIN atom AS A ON M.molecule_id = A.molecule_id WHERE A.element = 'ca'
SELECT COUNT(DISTINCT `a`.`element`) = 2 AS has_both_elements FROM `connected` AS `c` INNER JOIN `atom` AS `a` ON `c`.`atom_id` = `a`.`atom_id` OR `c`.`atom_id2` = `a`.`atom_id` WHERE `c`.`bond_id` = 'TR001_1_8' AND `a`.`element` IN ('cl', 'c')
SELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.element = 'c' AND T2.bond_type = '#' AND T3.label = '-' LIMIT 2
SELECT CAST(SUM(CASE WHEN `a`.`element` = 'cl' THEN 1 ELSE 0 END) AS REAL) / COUNT(`m`.`molecule_id`) * 100 AS `percentage` FROM `molecule` AS `m` INNER JOIN `atom` AS `a` ON `m`.`molecule_id` = `a`.`molecule_id` WHERE `m`.`label` = '+'
SELECT DISTINCT `element` FROM `atom` WHERE `molecule_id` = 'TR001'
SELECT DISTINCT `molecule_id` FROM `bond` WHERE `bond_type` = ' = '
SELECT `c`.`atom_id`, `c`.`atom_id2` FROM `connected` AS `c` INNER JOIN `bond` AS `b` ON `c`.`bond_id` = `b`.`bond_id` WHERE `b`.`bond_type` = '#'
SELECT DISTINCT `element` FROM `atom` WHERE `atom_id` IN (SELECT `atom_id` FROM `connected` WHERE `bond_id` = 'TR000_1_2' UNION SELECT `atom_id2` FROM `connected` WHERE `bond_id` = 'TR000_1_2')
SELECT COUNT(DISTINCT `b`.`molecule_id`) FROM `bond` AS `b` INNER JOIN `molecule` AS `m` ON `b`.`molecule_id` = `m`.`molecule_id` WHERE `b`.`bond_type` = '-' AND `m`.`label` = '-'
SELECT `label` FROM `molecule` WHERE `molecule_id` = (SELECT `molecule_id` FROM `bond` WHERE `bond_id` = 'TR001_10_11')
SELECT `b`.`bond_id`, `m`.`label` FROM `bond` AS `b` INNER JOIN `molecule` AS `m` ON `b`.`molecule_id` = `m`.`molecule_id` WHERE `b`.`bond_type` = '#'
SELECT `element`, COUNT(*) AS `count` FROM `atom` WHERE `atom_id` LIKE '%_4' AND `molecule_id` IN (SELECT `molecule_id` FROM `molecule` WHERE `label` = '+') GROUP BY `element`
SELECT CAST(SUM(CASE WHEN `element` = 'h' THEN 1 ELSE 0 END) AS REAL) / COUNT(`element`) AS ratio, `label` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`molecule_id` = 'TR006'
SELECT DISTINCT `molecule`.`label` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'ca'
SELECT DISTINCT `bond`.`bond_type` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `atom`.`element` = 'c'
SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR001_10_11'
SELECT CAST(COUNT(DISTINCT T1.molecule_id) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#';
SELECT CAST(SUM(CASE WHEN `bond_type` = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`bond_id`) AS `percent` FROM `bond` WHERE `molecule_id` = 'TR047'
SELECT `m`.`label` FROM `molecule` AS `m` INNER JOIN `atom` AS `a` ON `m`.`molecule_id` = `a`.`molecule_id` WHERE `a`.`atom_id` = 'TR001_1'
SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR151'
SELECT DISTINCT `element` FROM `atom` WHERE `molecule_id` = 'TR151' AND `element` IN ('cl', 'br', 'f', 'i', 'sn', 'pb', 'te')
SELECT COUNT(DISTINCT `molecule_id`) FROM `molecule` WHERE `label` = '+'
SELECT `atom_id` FROM `atom` WHERE `element` = 'c' AND substr(`molecule_id`, 3, 3) >= 10 AND substr(`molecule_id`, 3, 3) <= 50
SELECT COUNT(`atom`.`atom_id`) FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT `b`.`bond_id` FROM `bond` AS `b` INNER JOIN `molecule` AS `m` ON `b`.`molecule_id` = `m`.`molecule_id` WHERE `b`.`bond_type` = '=' AND `m`.`label` = '+'
SELECT COUNT(`atom`.`atom_id`) FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'h' AND `molecule`.`label` = '+'
SELECT `b`.`molecule_id` FROM `bond` AS `b` INNER JOIN `connected` AS `c` ON `b`.`bond_id` = `c`.`bond_id` WHERE `c`.`atom_id` = 'TR000_1' AND `b`.`bond_id` = 'TR000_1_2'
SELECT `atom`.`atom_id` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'c' AND `molecule`.`label` = '-'
SELECT CAST(SUM(CASE WHEN `molecule`.`label` = '+' AND `atom`.`element` = 'h' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id`
SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR124'
SELECT `atom`.`atom_id` FROM `atom` WHERE `atom`.`molecule_id` = 'TR186'
SELECT `bond_type` FROM `bond` WHERE `bond_id` = 'TR007_4_19'
SELECT DISTINCT `element` FROM `atom` WHERE `atom_id` IN (SELECT `atom_id` FROM `connected` WHERE `bond_id` = 'TR001_2_4' UNION SELECT `atom_id2` FROM `connected` WHERE `bond_id` = 'TR001_2_4')
SELECT COUNT(`bond`.`bond_id`) AS double_bonds, `molecule`.`label` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`molecule_id` = 'TR006' AND `bond`.`bond_type` = '=' GROUP BY `molecule`.`label`
SELECT DISTINCT `molecule`.`molecule_id`, `atom`.`element` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT `b`.`bond_id`, `a1`.`atom_id` AS `atom1`, `a2`.`atom_id` AS `atom2` FROM `bond` AS `b` INNER JOIN `connected` AS `c` ON `b`.`bond_id` = `c`.`bond_id` INNER JOIN `atom` AS `a1` ON `c`.`atom_id` = `a1`.`atom_id` INNER JOIN `atom` AS `a2` ON `c`.`atom_id2` = `a2`.`atom_id` WHERE `b`.`bond_type` = '-'
SELECT DISTINCT m.`molecule_id`, a.`element` FROM `molecule` AS m INNER JOIN `bond` AS b ON m.`molecule_id` = b.`molecule_id` INNER JOIN `connected` AS c ON b.`bond_id` = c.`bond_id` INNER JOIN `atom` AS a ON c.`atom_id` = a.`atom_id` WHERE b.`bond_type` = '#'
SELECT DISTINCT `element` FROM `atom` WHERE `atom_id` IN (SELECT `atom_id` FROM `connected` WHERE `bond_id` = 'TR000_2_3' UNION SELECT `atom_id2` FROM `connected` WHERE `bond_id` = 'TR000_2_3')
SELECT COUNT(DISTINCT `bond`.`bond_id`) FROM `connected` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` OR `connected`.`atom_id2` = `atom`.`atom_id` WHERE `atom`.`element` = 'cl'
SELECT `atom`.`atom_id`, COUNT(DISTINCT `bond`.`bond_type`) AS `bond_type_count` FROM `atom` INNER JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`molecule_id` = 'TR346' GROUP BY `atom`.`atom_id`
SELECT COUNT(DISTINCT T1.molecule_id), COUNT(DISTINCT CASE WHEN T2.label = '+' THEN T1.molecule_id END) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '='
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` LEFT JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` LEFT JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`element` != 's' AND `bond`.`bond_type` != '='
SELECT `m`.`label` FROM `bond` AS `b` INNER JOIN `molecule` AS `m` ON `b`.`molecule_id` = `m`.`molecule_id` WHERE `b`.`bond_id` = 'TR001_2_4'
SELECT COUNT(`atom_id`) FROM `atom` WHERE `molecule_id` = 'TR001'
SELECT COUNT(*) FROM `bond` WHERE `bond_type` = '-'
SELECT DISTINCT `m`.`molecule_id` FROM `molecule` AS `m` INNER JOIN `atom` AS `a` ON `m`.`molecule_id` = `a`.`molecule_id` WHERE `a`.`element` = 'cl' AND `m`.`label` = '+'
SELECT DISTINCT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'c' AND `molecule`.`label` = '-'
SELECT CAST(SUM(CASE WHEN M.`label` = '+' AND A.`element` = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT M.`molecule_id`) AS percentage FROM `molecule` AS M INNER JOIN `atom` AS A ON M.`molecule_id` = A.`molecule_id` WHERE M.`label` = '+'
SELECT `molecule_id` FROM `bond` WHERE `bond_id` = 'TR001_1_7'
SELECT COUNT(DISTINCT `element`) FROM `atom` AS A INNER JOIN `connected` AS C ON A.`atom_id` = C.`atom_id` OR A.`atom_id` = C.`atom_id2` WHERE C.`bond_id` = 'TR001_3_4'
SELECT `bond_type` FROM `bond` WHERE `bond_id` = (SELECT `bond_id` FROM `connected` WHERE `atom_id` = 'TR000_1' AND `atom_id2` = 'TR000_2')
SELECT `m`.`label` FROM `atom` AS `a1` INNER JOIN `atom` AS `a2` ON `a1`.`molecule_id` = `a2`.`molecule_id` INNER JOIN `molecule` AS `m` ON `a1`.`molecule_id` = `m`.`molecule_id` WHERE `a1`.`atom_id` = 'TR000_2' AND `a2`.`atom_id` = 'TR000_4'
SELECT `element` FROM `atom` WHERE `atom_id` = 'TR000_1'
SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR000'
SELECT CAST(SUM(CASE WHEN `bond`.`bond_type` = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`bond`.`bond_id`) AS percentage FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id`
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+' AND `atom`.`element` = 'n'
SELECT DISTINCT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` OR `atom`.`atom_id` = `connected`.`atom_id2` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `atom`.`element` = 's' AND `bond`.`bond_type` = '='
SELECT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '-' GROUP BY `molecule`.`molecule_id` HAVING COUNT(`atom`.`atom_id`) > 5
SELECT DISTINCT `a`.`element` FROM `atom` AS `a` INNER JOIN `connected` AS `c` ON `a`.`atom_id` = `c`.`atom_id` OR `a`.`atom_id` = `c`.`atom_id2` INNER JOIN `bond` AS `b` ON `c`.`bond_id` = `b`.`bond_id` WHERE `b`.`bond_type` = '=' AND `b`.`molecule_id` = 'TR024'
SELECT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+' GROUP BY `molecule`.`molecule_id` ORDER BY COUNT(`atom`.`atom_id`) DESC LIMIT 1
SELECT CAST(SUM(CASE WHEN m.`label` = '+' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(DISTINCT m.`molecule_id`) FROM molecule AS m INNER JOIN atom AS a ON m.`molecule_id` = a.`molecule_id` INNER JOIN connected AS c ON a.`atom_id` = c.`atom_id` INNER JOIN bond AS b ON c.`bond_id` = b.`bond_id` WHERE a.`element` = 'h' AND b.`bond_type` = '#'
SELECT COUNT(`molecule_id`) FROM `molecule` WHERE `label` = '+'
SELECT COUNT(DISTINCT `b`.`molecule_id`) FROM `bond` AS `b` WHERE `b`.`bond_type` = '-' AND `b`.`molecule_id` BETWEEN 'TR004' AND 'TR010'
SELECT COUNT(`atom`.`atom_id`) FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`molecule_id` = 'TR008' AND `atom`.`element` = 'c'
SELECT `element` FROM `atom` WHERE `atom_id` = 'TR004_7' AND `molecule_id` IN (SELECT `molecule_id` FROM `molecule` WHERE `label` = '-')
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `atom`.`element` = 'o' AND `bond`.`bond_type` = '='
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '#' AND `molecule`.`label` = '-'
SELECT DISTINCT `atom`.`element`, `bond`.`bond_type` FROM `atom` INNER JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`molecule_id` = 'TR002'
SELECT `atom`.`atom_id` FROM `atom` JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` WHERE `atom`.`element` = 'c' AND `bond`.`bond_type` = '=' AND `atom`.`molecule_id` = 'TR012'
SELECT `atom`.`atom_id` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+' AND `atom`.`element` = 'o'
SELECT `name` FROM `cards` WHERE `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL
SELECT `name` FROM `cards` WHERE `borderColor` = 'borderless' AND `cardKingdomFoilId` IS NULL AND `cardKingdomId` IS NOT NULL
SELECT `name` FROM `cards` WHERE `faceConvertedManaCost` = (SELECT MAX(`faceConvertedManaCost`) FROM `cards`)
SELECT `name` FROM `cards` WHERE `frameVersion` = 2015 AND `edhrecRank` < 100
SELECT `cards`.`name` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`rarity` = 'mythic' AND `legalities`.`status` = 'Banned' AND `legalities`.`format` = 'gladiator'
SELECT `c`.`name`, `l`.`status` FROM `cards` AS `c` INNER JOIN `legalities` AS `l` ON `c`.`uuid` = `l`.`uuid` WHERE `c`.`types` = 'Artifact' AND `c`.`side` IS NULL AND `l`.`format` = 'vintage'
SELECT `cards`.`id`, `cards`.`artist` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE (`cards`.`power` = '*' OR `cards`.`power` IS NULL) AND `legalities`.`format` = 'commander' AND `legalities`.`status` = 'Legal'
SELECT `cards`.`id`, `rulings`.`text`, `cards`.`hasContentWarning` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`artist` = 'Stephen Daniele'
SELECT T2.text FROM `cards` AS T1 INNER JOIN `rulings` AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Sublime Epiphany' AND T1.number = '74s'
SELECT `c`.`name`, `c`.`artist`, `c`.`isPromo` FROM `cards` AS `c` INNER JOIN `rulings` AS `r` ON `c`.`uuid` = `r`.`uuid` GROUP BY `c`.`uuid` ORDER BY COUNT(`r`.`uuid`) DESC LIMIT 1
SELECT `language` FROM `foreign_data` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Annul' AND `number` = '29')
SELECT `cards`.`name` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Japanese'
SELECT CAST(SUM(CASE WHEN `language` = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`id`) FROM `foreign_data`
SELECT `sets`.`name`, `sets`.`totalSetSize` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Italian'
SELECT COUNT(DISTINCT `type`) FROM `cards` WHERE `artist` = 'Aaron Boyd'
SELECT `keywords` FROM `cards` WHERE `name` = 'Angel of Mercy'
SELECT COUNT(*) FROM `cards` WHERE `power` = '*';
SELECT `promoTypes` FROM `cards` WHERE `name` = 'Duress'
SELECT `borderColor` FROM `cards` WHERE `name` = 'Ancestor''s Chosen'
SELECT `originalType` FROM `cards` WHERE `name` = 'Ancestor''s Chosen'
SELECT `language` FROM `set_translations` WHERE `setCode` = (SELECT `setCode` FROM `cards` WHERE `name` = 'Angel of Mercy')
SELECT COUNT(`cards`.`id`) FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`status` = 'restricted' AND `cards`.`isTextless` = 0
SELECT `text` FROM `rulings` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Condemn')
SELECT COUNT(`cards`.`id`) FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`status` = 'restricted' AND `cards`.`isStarter` = 1
SELECT `status` FROM `legalities` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Cloudchaser Eagle')
SELECT `type` FROM `cards` WHERE `name` = 'Benalish Knight'
SELECT `format` FROM `legalities` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Benalish Knight')
SELECT DISTINCT `artist` FROM `cards` WHERE `uuid` IN (SELECT `uuid` FROM `foreign_data` WHERE `language` = 'Phyrexian')
SELECT CAST(COUNT(CASE WHEN `borderColor` = 'borderless' THEN `id` ELSE NULL END) AS REAL) * 100 / COUNT(`id`) FROM `cards`
SELECT COUNT(*) FROM `foreign_data` AS T1 INNER JOIN `cards` AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`language` = 'German' AND T2.`isReprint` = 1
SELECT COUNT(*) FROM `cards` AS C INNER JOIN `foreign_data` AS F ON C.`uuid` = F.`uuid` WHERE C.`borderColor` = 'borderless' AND F.`language` = 'Russian'
SELECT CAST(SUM(CASE WHEN `foreign_data`.`language` = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`cards`.`id`) FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`isStorySpotlight` = 1
SELECT COUNT(`id`) FROM `cards` WHERE `toughness` = 99
SELECT `name` FROM `cards` WHERE `artist` = 'Aaron Boyd'
SELECT COUNT(`id`) FROM `cards` WHERE `borderColor` = 'black' AND `availability` = 'mtgo'
SELECT `id` FROM `cards` WHERE `convertedManaCost` = 0
SELECT DISTINCT `layout` FROM `cards` WHERE `keywords` LIKE '%Flying%'
SELECT COUNT(*) FROM `cards` WHERE `originalType` = 'Summon - Angel' AND `subtypes` NOT LIKE '%Angel%'
SELECT `id` FROM `cards` WHERE `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL AND `hasFoil` = 1 AND `hasNonFoil` = 1
SELECT `id` FROM `cards` WHERE `duelDeck` = 'a'
SELECT `edhrecRank` FROM `cards` WHERE `frameVersion` = 2015
SELECT DISTINCT `cards`.`artist` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Chinese Simplified'
SELECT `cards`.`name` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`availability` = 'paper' AND `foreign_data`.`language` = 'Japanese'
SELECT COUNT(`cards`.`id`) FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`status` = 'Banned' AND `cards`.`borderColor` = 'white'
SELECT `cards`.`uuid`, `foreign_data`.`language` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `legalities`.`format` = 'legacy'
SELECT `text` FROM `rulings` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Beacon of Immortality')
SELECT COUNT(`cards`.`id`), `legalities`.`status` FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`frameVersion` = 'future' GROUP BY `legalities`.`status`
SELECT `name`, `colors` FROM `cards` WHERE `setCode` = 'OGW'
SELECT DISTINCT `foreign_data`.`name`, `foreign_data`.`language` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`setCode` = '10E' AND `cards`.`convertedManaCost` = 5
SELECT `cards`.`name`, `rulings`.`date` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`originalType` = 'Creature - Elf'
SELECT `colors`, `format` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`id` BETWEEN 1 AND 20
SELECT `cards`.`name` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`originalType` = 'Artifact' AND `cards`.`colors` = 'B'
SELECT `cards`.`name` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`rarity` = 'uncommon' GROUP BY `cards`.`name` ORDER BY MIN(`rulings`.`date`) ASC LIMIT 3
SELECT COUNT(*) FROM `cards` WHERE `artist` = 'John Avon' AND `cardKingdomFoilId` IS NULL
SELECT COUNT(*) FROM `cards` WHERE `borderColor` = 'white' AND `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL
SELECT COUNT(`id`) FROM `cards` WHERE `artist` = 'UDON' AND `availability` LIKE '%mtgo%' AND `hand` = -1
SELECT COUNT(`id`) FROM `cards` WHERE `frameVersion` = 1993 AND `availability` LIKE '%paper%' AND `hasContentWarning` = 1
SELECT `manaCost` FROM `cards` WHERE `layout` = 'normal' AND `frameVersion` = 2003 AND `borderColor` = 'black' AND `availability` = 'mtgo,paper'
SELECT SUM(`convertedManaCost`) FROM `cards` WHERE `artist` = 'Rob Alexander'
SELECT DISTINCT `types` FROM `cards` WHERE `availability` LIKE '%arena%'
SELECT DISTINCT `setCode` FROM `set_translations` WHERE `language` = 'Spanish'
SELECT 100.0 * SUM(`isOnlineOnly` = 1) / COUNT(`id`) AS percentage FROM `cards` WHERE `frameEffects` = 'legendary'
SELECT `id`, CAST(SUM(CASE WHEN `isStorySpotlight` = 1 AND `isTextless` = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`id`) AS percentage FROM `cards`
SELECT `name`, CAST(COUNT(CASE WHEN `language` = 'Spanish' THEN `id` ELSE NULL END) AS REAL) * 100 / COUNT(`id`) AS percentage FROM `foreign_data` GROUP BY `name`
SELECT `language` FROM `set_translations` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `baseSetSize` = 309)
SELECT COUNT(DISTINCT `sets`.`code`) FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`block` = 'Commander' AND `set_translations`.`language` = 'Portuguese (Brasil)'
SELECT `cards`.`id` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`types` = 'Creature' AND `legalities`.`status` = 'Legal'
SELECT DISTINCT `foreign_data`.`type` FROM `foreign_data` INNER JOIN `cards` ON `foreign_data`.`uuid` = `cards`.`uuid` WHERE `foreign_data`.`language` = 'German' AND `cards`.`subtypes` IS NOT NULL AND `cards`.`supertypes` IS NOT NULL
SELECT COUNT(`id`) FROM `cards` WHERE (`power` IS NULL OR `power` = '*') AND `text` LIKE '%triggered ability%'
SELECT COUNT(*) FROM `cards` AS c INNER JOIN `legalities` AS l ON c.`uuid` = l.`uuid` INNER JOIN `rulings` AS r ON c.`uuid` = r.`uuid` WHERE l.`format` = 'premodern' AND r.`text` = 'This is a triggered mana ability.' AND c.`side` IS NULL
SELECT `cards`.`id` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`artist` = 'Erica Yang' AND `legalities`.`format` = 'pauper' AND `legalities`.`status` = 'Legal' AND `cards`.`availability` LIKE '%paper%'
SELECT `artist` FROM `cards` WHERE `uuid` = (SELECT `uuid` FROM `foreign_data` WHERE `text` = 'Das perfekte Gegenmittel zu einer dichten Formation')
SELECT `foreign_data`.`name` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'French' AND `cards`.`type` LIKE '%Creature%' AND `cards`.`layout` = 'normal' AND `cards`.`borderColor` = 'black' AND `cards`.`artist` = 'Matthew D. Wilson'
SELECT COUNT(DISTINCT `cards`.`id`) FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`rarity` = 'rare' AND `rulings`.`date` = '2007-02-01'
SELECT `set_translations`.`language` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`baseSetSize` = 180 AND `sets`.`block` = 'Ravnica'
SELECT CAST(SUM(CASE WHEN `c`.`hasContentWarning` = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`c`.`id`) FROM `cards` AS `c` INNER JOIN `legalities` AS `l` ON `c`.`uuid` = `l`.`uuid` WHERE `l`.`format` = 'commander' AND `l`.`status` = 'Legal'
SELECT CAST(SUM(CASE WHEN `foreign_data`.`language` = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `cards` LEFT JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`power` IS NULL OR `cards`.`power` = '*'
SELECT CAST(SUM(CASE WHEN `sets`.`type` = 'expansion' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`set_translations`.`language`) FROM `set_translations` INNER JOIN `sets` ON `set_translations`.`setCode` = `sets`.`code` WHERE `set_translations`.`language` = 'Japanese'
SELECT DISTINCT `availability` FROM `cards` WHERE `artist` = 'Daren Bader'
SELECT COUNT(`id`) FROM `cards` WHERE `borderColor` = 'borderless' AND `edhrecRank` > 12000
SELECT COUNT(`id`) FROM `cards` WHERE `isOversized` = 1 AND `isReprint` = 1 AND `isPromo` = 1
SELECT `name` FROM `cards` WHERE (`power` IS NULL OR `power` = '*') AND `promoTypes` = 'arenaleague' ORDER BY `name` ASC LIMIT 3
SELECT `language` FROM `foreign_data` WHERE `multiverseid` = 149934
SELECT `id` FROM `cards` WHERE `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL ORDER BY `cardKingdomFoilId` ASC LIMIT 3
SELECT CAST(SUM(CASE WHEN `isTextless` = 1 AND `layout` = 'normal' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `cards`
SELECT `number` FROM `cards` WHERE `side` IS NULL AND `subtypes` LIKE '%Angel%' AND `subtypes` LIKE '%Wizard%'
SELECT `name` FROM `sets` WHERE `mtgoCode` IS NULL OR `mtgoCode` = '' ORDER BY `name` ASC LIMIT 3
SELECT DISTINCT `language` FROM `set_translations` WHERE `setCode` = 'ARC' AND EXISTS (SELECT 1 FROM `sets` WHERE `mcmName` = 'Archenemy' AND `code` = 'ARC')
SELECT `sets`.`name`, `set_translations`.`translation` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`id` = 5
SELECT `language`, `type` FROM `sets` AS S INNER JOIN `set_translations` AS ST ON S.`code` = ST.`setCode` WHERE S.`id` = 206
SELECT `sets`.`id`, `sets`.`name` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Italian' AND `sets`.`block` = 'Shadowmoor' ORDER BY `sets`.`name` ASC LIMIT 2
SELECT `sets`.`id`, `sets`.`name` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`isForeignOnly` = 0 AND `sets`.`isFoilOnly` = 1 AND `set_translations`.`language` = 'Japanese'
SELECT `name` FROM `sets` WHERE `baseSetSize` = (SELECT MAX(`baseSetSize`) FROM `sets` WHERE `code` IN (SELECT `setCode` FROM `set_translations` WHERE `language` = 'Russian'))
SELECT CAST(SUM(CASE WHEN `sets`.`isOnlineOnly` = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`sets`.`isOnlineOnly`) FROM `set_translations` INNER JOIN `sets` ON `set_translations`.`setCode` = `sets`.`code` WHERE `set_translations`.`language` = 'Chinese Simplified'
SELECT COUNT(*) FROM `sets` AS T1 INNER JOIN `set_translations` AS T2 ON T1.`code` = T2.`setCode` WHERE T2.`language` = 'Japanese' AND (T1.`mtgoCode` IS NULL OR T1.`mtgoCode` = '')
SELECT `id` FROM `cards` WHERE `borderColor` = 'black'
SELECT `id` FROM `cards` WHERE `frameEffects` = 'extendedart'
SELECT `name` FROM `cards` WHERE `borderColor` = 'black' AND `isFullArt` = 1
SELECT `language` FROM `set_translations` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `id` = 174)
SELECT `name` FROM `sets` WHERE `code` = 'ALL'
SELECT `language` FROM `foreign_data` WHERE `name` = 'A Pedra Fellwar'
SELECT `code` FROM `sets` WHERE `releaseDate` = '2007-07-13'
SELECT `baseSetSize`, `code` FROM `sets` WHERE `block` IN ('Masques', 'Mirage')
SELECT `code` FROM `sets` WHERE `type` = 'expansion'
SELECT `foreign_data`.`name`, `foreign_data`.`type` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'boros'
SELECT `foreign_data`.`language`, `foreign_data`.`flavorText`, `cards`.`type` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'colorpie'
SELECT CAST(SUM(CASE WHEN `convertedManaCost` = 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`convertedManaCost`) FROM `cards` WHERE `name` = 'Abyssal Horror'
SELECT `code` FROM `sets` WHERE `type` = 'expansion' AND `name` LIKE '%commander%'
SELECT `foreign_data`.`name`, `foreign_data`.`type` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'abzan'
SELECT `foreign_data`.`language`, `cards`.`type` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'azorius'
SELECT COUNT(*) FROM `cards` WHERE `artist` = 'Aaron Miller' AND `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL
SELECT COUNT(`id`) FROM `cards` WHERE `availability` LIKE '%paper%' AND `hand` = '3'
SELECT `name` FROM `cards` WHERE `isTextless` = 0
SELECT `manaCost` FROM `cards` WHERE `name` = 'Ancestor''s Chosen'
SELECT COUNT(`id`) FROM `cards` WHERE `borderColor` = 'white' AND (`power` = '*' OR `power` IS NULL)
SELECT `name` FROM `cards` WHERE `isPromo` = 1 AND `side` IS NOT NULL
SELECT `subtypes`, `supertypes` FROM `cards` WHERE `name` = 'Molimo, Maro-Sorcerer'
SELECT `purchaseUrls` FROM `cards` WHERE `promoTypes` = 'bundle'
SELECT COUNT(DISTINCT `artist`) FROM `cards` WHERE `borderColor` = 'black' AND `availability` LIKE '%arena%' AND `availability` LIKE '%mtgo%'
SELECT `name` FROM `cards` WHERE `name` IN ('Serra Angel', 'Shrine Keeper') ORDER BY `convertedManaCost` DESC LIMIT 1
SELECT `artist` FROM `cards` WHERE `flavorName` = 'Battra, Dark Destroyer'
SELECT `name` FROM `cards` WHERE `frameVersion` = '2003' ORDER BY `convertedManaCost` DESC LIMIT 3
SELECT `translation` FROM `set_translations` WHERE `setCode` = (SELECT `setCode` FROM `cards` WHERE `name` = 'Ancestor''s Chosen') AND `language` = 'Italian'
SELECT COUNT(*) FROM `set_translations` WHERE `setCode` IN (SELECT `setCode` FROM `cards` WHERE `name` = 'Angel of Mercy')
SELECT `name` FROM `cards` WHERE `setCode` = (SELECT `setCode` FROM `set_translations` WHERE `translation` = 'Hauptset Zehnte Edition')
SELECT COUNT(*) > 0 AS has_korean_version FROM `foreign_data` WHERE `name` = 'Ancestor''s Chosen' AND `language` = 'Korean'
SELECT COUNT(*) FROM `cards` INNER JOIN `set_translations` ON `cards`.`setCode` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = 'Hauptset Zehnte Edition' AND `cards`.`artist` = 'Adam Rex'
SELECT `baseSetSize` FROM `sets` WHERE `name` = 'Tenth Edition'
SELECT `translation` FROM `set_translations` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Eighth Edition') AND `language` = 'Chinese Simplified'
SELECT COUNT(*) > 0 AS appeared_on_mtgo FROM `cards` WHERE `name` = 'Angel of Mercy' AND `mtgoId` IS NOT NULL
SELECT `releaseDate` FROM `sets` WHERE `code` = (SELECT `setCode` FROM `cards` WHERE `name` = 'Ancestor''s Chosen')
SELECT `type` FROM `sets` WHERE `code` = (SELECT `setCode` FROM `set_translations` WHERE `translation` = 'Hauptset Zehnte Edition')
SELECT COUNT(DISTINCT `sets`.`id`) FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`block` = 'Ice Age' AND `set_translations`.`language` = 'Italian' AND `set_translations`.`translation` IS NOT NULL
SELECT `isForeignOnly` FROM `cards` WHERE `name` = 'Adarkar Valkyrie'
SELECT COUNT(DISTINCT `sets`.`id`) FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Italian' AND `sets`.`baseSetSize` < 100
SELECT COUNT(`id`) FROM `cards` WHERE `setCode` = 'CSP' AND `borderColor` = 'black'
SELECT `name` FROM `cards` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Coldsnap') ORDER BY `convertedManaCost` DESC LIMIT 1
SELECT DISTINCT `artist` FROM `cards` WHERE `artist` IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Coldsnap')
SELECT `name` FROM `cards` WHERE `setCode` = 'CSP' AND `number` = 4
SELECT COUNT(*) FROM `cards` WHERE `setCode` = 'CSP' AND `convertedManaCost` > 5 AND (`power` = '*' OR `power` IS NULL)
SELECT `flavorText` FROM `foreign_data` WHERE `language` = 'Italian' AND `name` = 'Ancestor''s Chosen'
SELECT `language` FROM `foreign_data` WHERE `name` = 'Ausgewählter der Ahnfrau' AND `flavorText` IS NOT NULL
SELECT `type` FROM `foreign_data` WHERE `language` = 'German' AND `name` = 'Ausgewählter der Ahnfrau'
SELECT T2.text FROM rulings AS T1 INNER JOIN cards AS T3 ON T1.uuid = T3.uuid INNER JOIN foreign_data AS T2 ON T3.uuid = T2.uuid INNER JOIN sets AS T4 ON T3.setCode = T4.code WHERE T4.name = 'Coldsnap' AND T2.language = 'Italian'
SELECT T2.name FROM `cards` AS T1 INNER JOIN `foreign_data` AS T2 ON T1.uuid = T2.uuid INNER JOIN `sets` AS T3 ON T1.setCode = T3.code WHERE T3.name = 'Coldsnap' AND T2.language = 'Italian' AND T1.convertedManaCost = (SELECT MAX(convertedManaCost) FROM `cards` AS T1 INNER JOIN `sets` AS T3 ON T1.setCode = T3.code WHERE T3.name = 'Coldsnap')
SELECT `date` FROM `rulings` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Reminisce')
SELECT CAST(SUM(CASE WHEN `convertedManaCost` = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `cards` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Coldsnap')
SELECT CAST(SUM(CASE WHEN `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `cards` WHERE `name` = 'Coldsnap'
SELECT `code` FROM `sets` WHERE `releaseDate` = '2017-07-14'
SELECT `keyruneCode` FROM `sets` WHERE `code` = 'PKHC'
SELECT `mcmId` FROM `sets` WHERE `code` = 'SS2'
SELECT `mcmName` FROM `sets` WHERE `releaseDate` = '2017-06-09'
SELECT `type` FROM `sets` WHERE `name` = 'From the Vault: Lore'
SELECT `parentCode` FROM `sets` WHERE `name` = 'Commander 2014 Oversized'
SELECT `c`.`name`, `r`.`text`, `c`.`hasContentWarning` FROM `cards` AS `c` INNER JOIN `rulings` AS `r` ON `c`.`uuid` = `r`.`uuid` WHERE `c`.`artist` = 'Jim Pavelec'
SELECT `sets`.`releaseDate` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `cards`.`name` = 'Evacuation'
SELECT `baseSetSize` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = 'Rinascita di Alara'
SELECT `type` FROM `sets` WHERE `code` = (SELECT `setCode` FROM `set_translations` WHERE `translation` = 'Huitième édition')
SELECT `set_translations`.`translation` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `foreign_data`.`name` = 'Tendo Ice Bridge' AND `set_translations`.`language` = 'French'
SELECT COUNT(*) FROM `set_translations` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Tenth Edition') AND `translation` IS NOT NULL
SELECT `set_translations`.`translation` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` INNER JOIN `set_translations` ON `cards`.`setCode` = `set_translations`.`setCode` WHERE `cards`.`name` = 'Fellwar Stone' AND `set_translations`.`language` = 'Japanese'
SELECT `name` FROM `cards` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Journey into Nyx Hero''s Path') ORDER BY `convertedManaCost` DESC LIMIT 1
SELECT `releaseDate` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = 'Ola de frío'
SELECT DISTINCT `sets`.`type` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `cards`.`name` = 'Samite Pilgrim'
SELECT COUNT(`cards`.`id`) FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'World Championship Decks 2004' AND `cards`.`convertedManaCost` = 3
SELECT `translation` FROM `set_translations` WHERE `language` = 'Chinese Simplified' AND `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Mirrodin')
SELECT CAST(SUM(CASE WHEN `sets`.`isNonFoilOnly` = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Japanese'
SELECT CAST(SUM(CASE WHEN `sets`.`isOnlineOnly` = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`sets`.`id`) FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Portuguese (Brazil)'
SELECT DISTINCT `availability` FROM `cards` WHERE `artist` = 'Aleksi Briclot' AND `isTextless` = 1
SELECT `id` FROM `sets` ORDER BY `baseSetSize` DESC LIMIT 1
SELECT `artist` FROM `cards` WHERE `side` IS NULL ORDER BY `convertedManaCost` DESC LIMIT 1
SELECT `frameEffects` FROM `cards` WHERE `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL GROUP BY `frameEffects` ORDER BY COUNT(`frameEffects`) DESC LIMIT 1
SELECT COUNT(`id`) FROM `cards` WHERE (`power` IS NULL OR `power` = '*') AND `hasFoil` = 0 AND `duelDeck` = 'a'
SELECT `id` FROM `sets` WHERE `type` = 'commander' ORDER BY `totalSetSize` DESC LIMIT 1
SELECT `name`, `manaCost` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`format` = 'duel' ORDER BY `cards`.`convertedManaCost` DESC LIMIT 10
SELECT `c`.`originalReleaseDate`, `l`.`format` FROM `cards` AS `c` INNER JOIN `legalities` AS `l` ON `c`.`uuid` = `l`.`uuid` WHERE `c`.`rarity` = 'mythic' AND `l`.`status` = 'Legal' ORDER BY `c`.`originalReleaseDate` ASC LIMIT 1
SELECT COUNT(*) FROM `cards` AS T1 INNER JOIN `foreign_data` AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`artist` = 'Volkan Baǵa' AND T2.`language` = 'French'
SELECT COUNT(`cards`.`id`) FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`rarity` = 'rare' AND `cards`.`types` = 'Enchantment' AND `cards`.`name` = 'Abundance' AND `legalities`.`status` = 'Legal'
SELECT `T1`.`format`, `T2`.`name` FROM `legalities` AS `T1` INNER JOIN `cards` AS `T2` ON `T1`.`uuid` = `T2`.`uuid` WHERE `T1`.`status` = 'Banned' GROUP BY `T1`.`format` HAVING COUNT(`T1`.`status` = 'Banned') = (SELECT MAX(banned_count) FROM (SELECT COUNT(`status` = 'Banned') AS banned_count FROM `legalities` WHERE `status` = 'Banned' GROUP BY `format`))
SELECT `language` FROM `set_translations` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Battlebond')
SELECT `c`.`artist`, `l`.`format` FROM `cards` AS `c` INNER JOIN `legalities` AS `l` ON `c`.`uuid` = `l`.`uuid` GROUP BY `c`.`artist` ORDER BY COUNT(`c`.`id`) ASC LIMIT 1
SELECT L.`status` FROM `cards` AS C INNER JOIN `legalities` AS L ON C.`uuid` = L.`uuid` WHERE C.`frameVersion` = '1997' AND C.`artist` = 'D. Alexander Gregory' AND (C.`hasContentWarning` = 1 OR C.`artist` = 'Wizards of the Coast') AND L.`format` = 'legacy'
SELECT `cards`.`name`, `legalities`.`format` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`edhrecRank` = 1 AND `legalities`.`status` = 'Banned'
SELECT AVG(`annual_count`), `language` FROM (SELECT COUNT(`id`) AS `annual_count`, `language` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `releaseDate` BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY strftime('%Y', `releaseDate`), `language`) GROUP BY `language` ORDER BY MAX(COUNT(`language`)) DESC LIMIT 1
SELECT DISTINCT `artist` FROM `cards` WHERE `borderColor` = 'black' AND `availability` = 'arena'
SELECT `uuid` FROM `legalities` WHERE `format` = 'oldschool' AND (`status` = 'banned' OR `status` = 'restricted')
SELECT COUNT(*) FROM `cards` WHERE `artist` = 'Matthew D. Wilson' AND `availability` = 'paper'
SELECT `rulings`.`text` FROM `rulings` INNER JOIN `cards` ON `rulings`.`uuid` = `cards`.`uuid` WHERE `cards`.`artist` = 'Kev Walker' ORDER BY `rulings`.`date` DESC
SELECT DISTINCT `cards`.`name`, `legalities`.`format` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `sets`.`name` = 'Hour of Devastation' AND `legalities`.`status` = 'Legal'
SELECT `sets`.`name` FROM `sets` WHERE `sets`.`code` IN (SELECT `setCode` FROM `set_translations` WHERE `language` = 'Korean') AND `sets`.`code` NOT IN (SELECT `setCode` FROM `set_translations` WHERE `language` LIKE '%Japanese%')
SELECT DISTINCT `cards`.`frameVersion`, `cards`.`name` FROM `cards` LEFT JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`artist` = 'Allen Williams' OR `legalities`.`status` = 'Banned'
SELECT `DisplayName` FROM `users` WHERE `DisplayName` IN ('Harlan', 'Jarrod Dixon') ORDER BY `Reputation` DESC LIMIT 1
SELECT `DisplayName` FROM `users` WHERE strftime('%Y', `CreationDate`) = '2011'
SELECT COUNT(`Id`) FROM `users` WHERE `LastAccessDate` > '2014-09-01'
SELECT `DisplayName` FROM `users` ORDER BY `Views` DESC LIMIT 1
SELECT COUNT(*) FROM `users` WHERE `UpVotes` > 100 AND `DownVotes` > 1;
SELECT COUNT(`Id`) FROM `users` WHERE `Views` > 10 AND strftime('%Y', `CreationDate`) > '2013'
SELECT COUNT(*) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie'
SELECT `Title` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie'
SELECT `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Eliciting priors from experts'
SELECT `Title` FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'csgillespie') ORDER BY `ViewCount` DESC LIMIT 1
SELECT `users`.`DisplayName` FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` ORDER BY `posts`.`FavoriteCount` DESC LIMIT 1
SELECT SUM(`CommentCount`) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie'
SELECT MAX(`AnswerCount`) FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'csgillespie')
SELECT `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Examples for teaching: Correlation does not mean causation'
SELECT COUNT(`Id`) FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'csgillespie') AND `ParentId` IS NULL
SELECT DISTINCT `users`.`DisplayName` FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `posts`.`ClosedDate` IS NOT NULL
SELECT COUNT(`posts`.`Id`) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`Age` > 65 AND `posts`.`Score` >= 20
SELECT `Location` FROM `users` WHERE `Id` = (SELECT `OwnerUserId` FROM `posts` WHERE `Title` = 'Eliciting priors from experts')
SELECT `posts`.`Body` FROM `posts` INNER JOIN `tags` ON `posts`.`Id` = `tags`.`ExcerptPostId` WHERE `tags`.`TagName` = 'bayesian'
SELECT `posts`.`Body` FROM `tags` INNER JOIN `posts` ON `tags`.`ExcerptPostId` = `posts`.`Id` ORDER BY `tags`.`Count` DESC LIMIT 1
SELECT COUNT(`badges`.`Id`) FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie'
SELECT DISTINCT `b`.`Name` FROM `badges` AS `b` INNER JOIN `users` AS `u` ON `b`.`UserId` = `u`.`Id` WHERE `u`.`DisplayName` = 'csgillespie';
SELECT COUNT(`b`.`Id`) FROM `badges` AS `b` INNER JOIN `users` AS `u` ON `b`.`UserId` = `u`.`Id` WHERE `u`.`DisplayName` = 'csgillespie' AND strftime('%Y', `b`.`Date`) = '2011'
SELECT `DisplayName` FROM `users` WHERE `Id` = (SELECT `UserId` FROM `badges` GROUP BY `UserId` ORDER BY COUNT(`Id`) DESC LIMIT 1)
SELECT AVG(`Score`) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie'
SELECT AVG(badge_count) FROM (SELECT COUNT(`badges`.`Id`) AS badge_count FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`Views` > 200 GROUP BY `users`.`Id`)
SELECT (SUM(CASE WHEN `users`.`Age` > 65 THEN 1 ELSE 0 END) * 100.0 / COUNT(`posts`.`Id`)) AS percentage FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Score` > 5
SELECT COUNT(`Id`) FROM `votes` WHERE `UserId` = 58 AND `CreationDate` = '2010-07-19'
SELECT `CreationDate` FROM `votes` GROUP BY `CreationDate` ORDER BY COUNT(`Id`) DESC LIMIT 1;
SELECT COUNT(*) FROM `badges` WHERE `Name` = 'Revival'
SELECT `posts`.`Title` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` ORDER BY `comments`.`Score` DESC LIMIT 1
SELECT `CommentCount` FROM `posts` WHERE `ViewCount` = 1910
SELECT `FavoriteCount` FROM `posts` WHERE `Id` = (SELECT `PostId` FROM `comments` WHERE `UserId` = '3025' AND `CreationDate` = '2014-04-23 20:29:39.0')
SELECT `Text` FROM `comments` WHERE `PostId` = (SELECT `Id` FROM `posts` WHERE `ParentId` = 107829 AND `CommentCount` = 1)
SELECT CASE WHEN `ClosedDate` IS NULL THEN 'not well-finished' ELSE 'well-finished' END FROM `posts` WHERE `Id` = (SELECT `PostId` FROM `comments` WHERE `UserId` = 23853 AND `CreationDate` = '2013-07-12 09:08:18.0')
SELECT `Reputation` FROM `users` WHERE `Id` = (SELECT `OwnerUserId` FROM `posts` WHERE `Id` = 65041)
SELECT COUNT(`Id`) FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'Tiago Pasqualini')
SELECT `DisplayName` FROM `users` WHERE `Id` = (SELECT `UserId` FROM `votes` WHERE `Id` = 6347)
SELECT COUNT(*) FROM `votes` WHERE `PostId` IN (SELECT `Id` FROM `posts` WHERE `Title` LIKE '%data visualization%')
SELECT `b`.`Name` FROM `badges` AS `b` INNER JOIN `users` AS `u` ON `b`.`UserId` = `u`.`Id` WHERE `u`.`DisplayName` = 'DatEpicCoderGuyWhoPrograms'
SELECT CAST(COUNT(`posts`.`Id`) AS FLOAT) / COUNT(`votes`.`Id`) FROM `posts` LEFT JOIN `votes` ON `posts`.`OwnerUserId` = `votes`.`UserId` WHERE `posts`.`OwnerUserId` = 24
SELECT `ViewCount` FROM `posts` WHERE `Title` = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'
SELECT `Text` FROM `comments` WHERE `Score` = 17
SELECT `DisplayName` FROM `users` WHERE `WebsiteUrl` = 'http://stackoverflow.com'
SELECT DISTINCT `b`.`Name` FROM `badges` AS `b` INNER JOIN `users` AS `u` ON `b`.`UserId` = `u`.`Id` WHERE `u`.`DisplayName` = 'SilentGhost'
SELECT `UserDisplayName` FROM `comments` WHERE `Text` = 'thank you user93!'
SELECT `Text` FROM `comments` WHERE `UserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'A Lion')
SELECT `users`.`DisplayName`, `users`.`Reputation` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Understanding what Dassault iSight is doing?'
SELECT `Text` FROM `comments` WHERE `PostId` = (SELECT `Id` FROM `posts` WHERE `Title` = 'How does gentle boosting differ from AdaBoost?')
SELECT DISTINCT `users`.`DisplayName` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Necromancer' LIMIT 10
SELECT `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Open source tools for visualizing multi-dimensional data'
SELECT `Title` FROM `posts` WHERE `LastEditorUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'Vebjorn Ljosa')
SELECT SUM(p.`Score`), u.`WebsiteUrl` FROM `posts` p INNER JOIN `users` u ON p.`LastEditorUserId` = u.`Id` WHERE u.`DisplayName` = 'Yevgeny'
SELECT `c`.`Text` FROM `comments` AS `c` INNER JOIN `posts` AS `p` ON `c`.`PostId` = `p`.`Id` INNER JOIN `postHistory` AS `ph` ON `ph`.`PostId` = `p`.`Id` WHERE `p`.`Title` = 'Why square the difference instead of taking the absolute value in standard deviation?' AND `c`.`UserId` = `ph`.`UserId`
SELECT SUM(`v`.`BountyAmount`) FROM `votes` AS `v` INNER JOIN `posts` AS `p` ON `v`.`PostId` = `p`.`Id` WHERE `p`.`Title` LIKE '%data%'
SELECT `u`.`DisplayName` FROM `votes` AS `v` INNER JOIN `posts` AS `p` ON `v`.`PostId` = `p`.`Id` INNER JOIN `users` AS `u` ON `v`.`UserId` = `u`.`Id` WHERE `v`.`BountyAmount` = 50 AND `p`.`Title` LIKE '%variance%'
SELECT AVG(`p`.`ViewCount`) AS `average_view_count`, `p`.`Title`, `c`.`Text` FROM `posts` AS `p` LEFT JOIN `comments` AS `c` ON `p`.`Id` = `c`.`PostId` WHERE `p`.`Tags` LIKE '%<humor>%' GROUP BY `p`.`Id`
SELECT COUNT(`Id`) FROM `comments` WHERE `UserId` = 13
SELECT `Id` FROM `users` ORDER BY `Reputation` DESC LIMIT 1
SELECT `Id` FROM `users` ORDER BY `Views` ASC LIMIT 1
SELECT COUNT(DISTINCT `UserId`) FROM `badges` WHERE `Name` = 'Supporter' AND strftime('%Y', `Date`) = '2011'
SELECT COUNT(`UserId`) FROM (SELECT `UserId` FROM `badges` GROUP BY `UserId` HAVING COUNT(`Name`) > 5)
SELECT COUNT(DISTINCT `users`.`Id`) FROM `users` INNER JOIN `badges` AS `b1` ON `users`.`Id` = `b1`.`UserId` INNER JOIN `badges` AS `b2` ON `users`.`Id` = `b2`.`UserId` WHERE `users`.`Location` LIKE '%New York%' AND `b1`.`Name` = 'Teacher' AND `b2`.`Name` = 'Supporter'
SELECT `users`.`DisplayName`, `users`.`Reputation` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Id` = 1
SELECT `users`.`Id` FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` INNER JOIN `postHistory` ON `posts`.`Id` = `postHistory`.`PostId` WHERE `posts`.`ViewCount` >= 1000 GROUP BY `users`.`Id`, `postHistory`.`PostId` HAVING COUNT(`postHistory`.`Id`) = 1
SELECT `badges`.`Name` FROM `badges` INNER JOIN (SELECT `UserId`, COUNT(`Id`) AS `CommentCount` FROM `comments` GROUP BY `UserId` ORDER BY `CommentCount` DESC LIMIT 1) AS `TopCommenter` ON `badges`.`UserId` = `TopCommenter`.`UserId`
SELECT COUNT(*) FROM `users` AS U INNER JOIN `badges` AS B ON U.`Id` = B.`UserId` WHERE U.`Location` = 'India' AND B.`Name` = 'Teacher'
SELECT (CAST(SUM(CASE WHEN strftime('%Y', `Date`) = '2010' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) * 100) - (CAST(SUM(CASE WHEN strftime('%Y', `Date`) = '2011' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) * 100) AS percentage_difference FROM `badges` WHERE `Name` = 'Student'
SELECT `PostHistoryTypeId` FROM `postHistory` WHERE `PostId` = 3720; SELECT COUNT(DISTINCT `UserId`) FROM `comments` WHERE `PostId` = 3720;
SELECT `p`.`Id`, `p`.`Title`, `p`.`ViewCount` FROM `posts` AS `p` INNER JOIN `postLinks` AS `pl` ON `p`.`Id` = `pl`.`PostId` WHERE `pl`.`RelatedPostId` = 61217
SELECT `posts`.`Score`, `postLinks`.`LinkTypeId` FROM `posts` INNER JOIN `postLinks` ON `posts`.`Id` = `postLinks`.`PostId` WHERE `posts`.`Id` = 395
SELECT `posts`.`Id`, `posts`.`OwnerUserId` FROM `posts` WHERE `posts`.`Score` > 60
SELECT SUM(`FavoriteCount`) FROM `posts` WHERE `OwnerUserId` = 686 AND strftime('%Y', `CreaionDate`) = '2011'
SELECT AVG(`users`.`UpVotes`) AS `average_up_votes`, AVG(`users`.`Age`) AS `average_age` FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` GROUP BY `users`.`Id` HAVING COUNT(`posts`.`Id`) > 10
SELECT COUNT(DISTINCT `UserId`) FROM `badges` WHERE `Name` = 'Announcer'
SELECT DISTINCT `Name` FROM `badges` WHERE `Date` = '2010-07-19 19:39:08.0'
SELECT COUNT(`Id`) FROM `comments` WHERE `Score` > 60
SELECT `Text` FROM `comments` WHERE `CreationDate` = '2010-07-19 19:25:47.0'
SELECT COUNT(*) FROM `posts` WHERE `Score` = 10;
SELECT DISTINCT `b`.`Name` FROM `badges` AS `b` INNER JOIN `users` AS `u` ON `b`.`UserId` = `u`.`Id` WHERE `u`.`Reputation` = (SELECT MAX(`Reputation`) FROM `users`)
SELECT `users`.`Reputation` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Date` = '2010-07-19 19:39:08.0'
SELECT DISTINCT `b`.`Name` FROM `badges` AS `b` INNER JOIN `users` AS `u` ON `b`.`UserId` = `u`.`Id` WHERE `u`.`DisplayName` = 'Pierre'
SELECT `b`.`Date` FROM `badges` b INNER JOIN `users` u ON `b`.`UserId` = `u`.`Id` WHERE `u`.`Location` = 'Rochester, NY'
SELECT CAST(SUM(CASE WHEN `Name` = 'Teacher' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`UserId`) AS percentage FROM `badges`
SELECT CAST(COUNT(CASE WHEN `users`.`Age` BETWEEN 13 AND 18 THEN 1 END) AS REAL) * 100 / COUNT(`users`.`Id`) AS `teenager_percentage` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Organizer'
SELECT `comments`.`Score` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`CreaionDate` = '2010-07-19 19:19:56.0'
SELECT `Text` FROM `comments` WHERE `PostId` IN (SELECT `Id` FROM `posts` WHERE `CreaionDate` = '2010-07-19 19:37:33.0')
SELECT DISTINCT `users`.`Age` FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `users`.`Location` = 'Vienna, Austria' AND `users`.`Age` IS NOT NULL
SELECT COUNT(DISTINCT `badges`.`UserId`) FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Supporter' AND `users`.`Age` BETWEEN 19 AND 65
SELECT SUM(`users`.`Views`) FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `badges`.`Date` = '2010-07-19 19:39:08.0'
SELECT DISTINCT `b`.`Name` FROM `badges` AS `b` INNER JOIN `users` AS `u` ON `b`.`UserId` = `u`.`Id` WHERE `u`.`Reputation` = (SELECT MIN(`Reputation`) FROM `users`)
SELECT DISTINCT `b`.`Name` FROM `badges` AS `b` INNER JOIN `users` AS `u` ON `b`.`UserId` = `u`.`Id` WHERE `u`.`DisplayName` = 'Sharpie'
SELECT COUNT(DISTINCT `badges`.`UserId`) FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Supporter' AND `users`.`Age` > 65
SELECT `DisplayName` FROM `users` WHERE `Id` = 30
SELECT COUNT(*) FROM `users` WHERE `Location` LIKE '%New York%'
SELECT COUNT(*) FROM `votes` WHERE strftime('%Y', `CreationDate`) = '2010';
SELECT COUNT(*) FROM `users` WHERE `Age` BETWEEN 19 AND 65
SELECT `DisplayName` FROM `users` ORDER BY `Views` DESC LIMIT 1
SELECT CAST(COUNT(CASE WHEN strftime('%Y', `CreationDate`) = '2010' THEN `Id` ELSE NULL END) AS REAL) / COUNT(CASE WHEN strftime('%Y', `CreationDate`) = '2011' THEN `Id` ELSE NULL END) FROM `votes`
SELECT DISTINCT `tags`.`TagName` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` INNER JOIN `tags` ON `posts`.`Tags` LIKE '%' || `tags`.`TagName` || '%' WHERE `users`.`DisplayName` = 'John Salvatier'
SELECT COUNT(`Id`) FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'Daniel Vassallo')
SELECT COUNT(*) FROM `votes` AS V INNER JOIN `users` AS U ON V.`UserId` = U.`Id` WHERE U.`DisplayName` = 'Harlan'
SELECT `Id` FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'slashnick') ORDER BY `AnswerCount` DESC LIMIT 1
SELECT `u`.`DisplayName`, SUM(`p`.`ViewCount`) AS `TotalViews` FROM `posts` AS `p` INNER JOIN `users` AS `u` ON `p`.`OwnerUserId` = `u`.`Id` WHERE `u`.`DisplayName` IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY `u`.`DisplayName` ORDER BY `TotalViews` DESC LIMIT 1
SELECT COUNT(`posts`.`Id`) FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` JOIN `votes` ON `posts`.`Id` = `votes`.`PostId` WHERE `users`.`DisplayName` = 'Matt Parker' AND `votes`.`PostId` > 4
SELECT COUNT(`comments`.`Id`) FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `comments`.`Score` < 60 AND `users`.`DisplayName` = 'Neil McGuigan'
SELECT DISTINCT `Tags` FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'Mark Meckes') AND `CommentCount` = 0
SELECT DISTINCT `users`.`DisplayName` FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `badges`.`Name` = 'Organizer'
SELECT (CAST(SUM(CASE WHEN `tags`.`TagName` = 'r' THEN 1 ELSE 0 END) AS REAL) / COUNT(`posts`.`Id`)) * 100 AS percentage FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` INNER JOIN `tags` ON `posts`.`Id` = `tags`.`ExcerptPostId` WHERE `users`.`DisplayName` = 'Community'
SELECT SUM(CASE WHEN `DisplayName` = 'Mornington' THEN `ViewCount` ELSE 0 END) - SUM(CASE WHEN `DisplayName` = 'Amos' THEN `ViewCount` ELSE 0 END) AS difference FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id`
SELECT COUNT(DISTINCT `UserId`) FROM `badges` WHERE `Name` = 'Commentator' AND strftime('%Y', `Date`) = '2014';
SELECT COUNT(`Id`) FROM `posts` WHERE `CreaionDate` BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59'
SELECT `DisplayName`, `Age` FROM `users` WHERE `Views` = (SELECT MAX(`Views`) FROM `users`)
SELECT `LastEditDate`, `LastEditorUserId` FROM `posts` WHERE `Title` = 'Detecting a given face in a database of facial images'
SELECT COUNT(`Id`) FROM `comments` WHERE `UserId` = 13 AND `Score` < 60
SELECT DISTINCT `posts`.`Title`, `comments`.`UserDisplayName` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `comments`.`Score` > 60
SELECT DISTINCT `b`.`Name` FROM `badges` AS `b` INNER JOIN `users` AS `u` ON `b`.`UserId` = `u`.`Id` WHERE `u`.`Location` = 'North Pole' AND strftime('%Y', `b`.`Date`) = '2011'
SELECT `users`.`DisplayName`, `users`.`WebsiteUrl` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`FavoriteCount` > 150
SELECT COUNT(`postHistory`.`Id`) AS `PostHistoryCount`, MAX(`postHistory`.`CreationDate`) AS `LastEditDate` FROM `postHistory` INNER JOIN `posts` ON `postHistory`.`PostId` = `posts`.`Id` WHERE `posts`.`Title` = 'What is the best introductory Bayesian statistics textbook?'
SELECT `users`.`LastAccessDate`, `users`.`Location` FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `badges`.`Name` = 'Outliers'
SELECT `posts`.`Title` FROM `posts` INNER JOIN `postLinks` ON `posts`.`Id` = `postLinks`.`RelatedPostId` WHERE `postLinks`.`PostId` = (SELECT `Id` FROM `posts` WHERE `Title` = 'How to tell if something happened in a data set which monitors a value over time')
SELECT DISTINCT `posts`.`Id`, `badges`.`Name` FROM `users` INNER JOIN `comments` ON `users`.`Id` = `comments`.`UserId` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `users`.`UserDisplayName` = 'Samuel' AND strftime('%Y', `posts`.`CreaionDate`) = '2013' AND strftime('%Y', `badges`.`Date`) = '2013'
SELECT `OwnerDisplayName` FROM `posts` ORDER BY `ViewCount` DESC LIMIT 1
SELECT `users`.`DisplayName`, `users`.`Location` FROM `tags` INNER JOIN `posts` ON `tags`.`ExcerptPostId` = `posts`.`Id` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `tags`.`TagName` = 'hypothesis-testing'
SELECT `p2`.`Title`, `pl`.`LinkTypeId` FROM `posts` AS `p1` INNER JOIN `postLinks` AS `pl` ON `p1`.`Id` = `pl`.`PostId` INNER JOIN `posts` AS `p2` ON `pl`.`RelatedPostId` = `p2`.`Id` WHERE `p1`.`Title` = 'What are principal component scores?'
SELECT `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Id` = (SELECT `ParentId` FROM `posts` WHERE `ParentId` IS NOT NULL ORDER BY `Score` DESC LIMIT 1)
SELECT `users`.`DisplayName`, `users`.`WebsiteUrl` FROM `votes` INNER JOIN `users` ON `votes`.`UserId` = `users`.`Id` WHERE `votes`.`VoteTypeId` = 8 ORDER BY `votes`.`BountyAmount` DESC LIMIT 1
SELECT `Title` FROM `posts` ORDER BY `ViewCount` DESC LIMIT 5
SELECT COUNT(`Id`) FROM `tags` WHERE `Count` BETWEEN 5000 AND 7000
SELECT `OwnerUserId` FROM `posts` ORDER BY `FavoriteCount` DESC LIMIT 1
SELECT `Age` FROM `users` WHERE `Reputation` = (SELECT MAX(`Reputation`) FROM `users`)
SELECT COUNT(DISTINCT `posts`.`Id`) FROM `posts` INNER JOIN `votes` ON `posts`.`Id` = `votes`.`PostId` WHERE strftime('%Y', `votes`.`CreationDate`) = '2011' AND `votes`.`BountyAmount` = 50
SELECT `Id` FROM `users` WHERE `Age` = (SELECT MIN(`Age`) FROM `users` WHERE `Age` IS NOT NULL)
SELECT SUM(`Score`) FROM `posts` WHERE `LasActivityDate` LIKE '2010-07-19%'
SELECT COUNT(`postLinks`.`Id`) / 12 FROM `postLinks` JOIN `posts` ON `postLinks`.`PostId` = `posts`.`Id` WHERE strftime('%Y', `postLinks`.`CreationDate`) = '2010' AND `posts`.`AnswerCount` <= 2
SELECT `Id` FROM `posts` WHERE `Id` IN (SELECT `PostId` FROM `votes` WHERE `UserId` = 1465) ORDER BY `FavoriteCount` DESC LIMIT 1
SELECT `posts`.`Title` FROM `postLinks` INNER JOIN `posts` ON `postLinks`.`PostId` = `posts`.`Id` ORDER BY `postLinks`.`CreationDate` ASC LIMIT 1
SELECT `DisplayName` FROM `users` WHERE `Id` = (SELECT `UserId` FROM `badges` GROUP BY `UserId` ORDER BY COUNT(`Name`) DESC LIMIT 1)
SELECT MIN(`votes`.`CreationDate`) FROM `votes` INNER JOIN `users` ON `votes`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'chl'
SELECT MIN(p.`CreaionDate`) FROM `posts` p JOIN `users` u ON p.`OwnerUserId` = u.`Id` WHERE u.`Age` = (SELECT MIN(`Age`) FROM `users` WHERE `Age` IS NOT NULL)
SELECT `users`.`DisplayName` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Autobiographer' ORDER BY `badges`.`Date` ASC LIMIT 1
SELECT COUNT(DISTINCT `u`.`Id`) FROM `users` AS `u` INNER JOIN `posts` AS `p` ON `u`.`Id` = `p`.`OwnerUserId` WHERE `u`.`Location` = 'United Kingdom' GROUP BY `u`.`Id` HAVING SUM(`p`.`FavoriteCount`) >= 4
SELECT AVG(`v`.`PostId`) FROM `votes` AS `v` INNER JOIN `users` AS `u` ON `v`.`UserId` = `u`.`Id` WHERE `u`.`Age` = (SELECT MAX(`Age`) FROM `users` WHERE `Age` IS NOT NULL)
SELECT `DisplayName` FROM `users` WHERE `Reputation` = (SELECT MAX(`Reputation`) FROM `users`)
SELECT COUNT(`Id`) FROM `users` WHERE `Reputation` > 2000 AND `Views` > 1000
SELECT `DisplayName` FROM `users` WHERE `Age` BETWEEN 19 AND 65
SELECT COUNT(*) FROM `posts` AS p INNER JOIN `users` AS u ON p.`OwnerUserId` = u.`Id` WHERE u.`DisplayName` = 'Jay Stevens' AND strftime('%Y', p.`CreaionDate`) = '2010'
SELECT `posts`.`Id`, `posts`.`Title` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Harvey Motulsky' ORDER BY `posts`.`ViewCount` DESC LIMIT 1
SELECT `Id`, `Title` FROM `posts` ORDER BY `Score` DESC LIMIT 1
SELECT AVG(`Score`) FROM `posts` AS T1 INNER JOIN `users` AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE T2.`DisplayName` = 'Stephen Turner'
SELECT DISTINCT `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`ViewCount` > 20000 AND strftime('%Y', `posts`.`CreaionDate`) = '2011'
SELECT `posts`.`Id`, `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE STRFTIME('%Y', `posts`.`CreaionDate`) = '2010' ORDER BY `posts`.`FavoriteCount` DESC LIMIT 1
SELECT CAST(SUM(CASE WHEN `users`.`Reputation` > 1000 AND strftime('%Y', `posts`.`CreaionDate`) = '2011' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`posts`.`Id`) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id`
SELECT (COUNT(`Id`) FILTER (WHERE `Age` BETWEEN 13 AND 18) * 1.0 / COUNT(`Id`)) * 100 AS percentage FROM `users`
SELECT `posts`.`ViewCount`, `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `posts`.`Body` LIKE '%Computer Game Datasets%' ORDER BY `posts`.`LastEditDate` DESC LIMIT 1
SELECT COUNT(*) FROM `posts` WHERE `ViewCount` > (SELECT AVG(`ViewCount`) FROM `posts`)
SELECT COUNT(`comments`.`Id`) FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`Score` = (SELECT MAX(`Score`) FROM `posts`)
SELECT COUNT(`Id`) FROM `posts` WHERE `ViewCount` > 35000 AND `CommentCount` = 0
SELECT `users`.`DisplayName`, `users`.`Location` FROM `posts` INNER JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `posts`.`Id` = 183 ORDER BY `posts`.`LastEditDate` DESC LIMIT 1
SELECT `Name` FROM `badges` WHERE `UserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'Emmett') ORDER BY `Date` DESC LIMIT 1
SELECT COUNT(`Id`) FROM `users` WHERE `Age` BETWEEN 19 AND 65 AND `UpVotes` > 5000
SELECT julianday(MIN(`b`.`Date`)) - julianday(`u`.`CreationDate`) AS `DaysToBadge` FROM `users` AS `u` INNER JOIN `badges` AS `b` ON `u`.`Id` = `b`.`UserId` WHERE `u`.`DisplayName` = 'Zolomon'
SELECT (SELECT COUNT(*) FROM `posts` WHERE `OwnerUserId` = u.`Id`) AS post_count, (SELECT COUNT(*) FROM `comments` WHERE `UserId` = u.`Id`) AS comment_count FROM `users` u WHERE `CreationDate` = (SELECT MAX(`CreationDate`) FROM `users`)
SELECT `comments`.`Text`, `users`.`DisplayName` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `posts`.`Title` = 'Analysing wind data with R' ORDER BY `comments`.`CreationDate` DESC LIMIT 10
SELECT COUNT(DISTINCT `UserId`) FROM `badges` WHERE `Name` = 'Citizen Patrol'
SELECT COUNT(DISTINCT `posts`.`Id`) FROM `posts` INNER JOIN `tags` ON `posts`.`Tags` LIKE '%' || `tags`.`TagName` || '%' WHERE `tags`.`TagName` = 'careers'
SELECT `Reputation`, `Views` FROM `users` WHERE `DisplayName` = 'Jarrod Dixon'
SELECT (SELECT COUNT(`Id`) FROM `comments` WHERE `PostId` = (SELECT `Id` FROM `posts` WHERE `Title` = 'Clustering 1D data')) + (SELECT COUNT(`Id`) FROM `posts` WHERE `ParentId` = (SELECT `Id` FROM `posts` WHERE `Title` = 'Clustering 1D data')) AS TotalCommentsAndAnswers
SELECT `CreationDate` FROM `users` WHERE `DisplayName` = 'IrishStat'
SELECT COUNT(DISTINCT `PostId`) FROM `votes` WHERE `BountyAmount` >= 30
SELECT CAST(SUM(CASE WHEN `posts`.`Score` > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`posts`.`Id`) FROM `posts` WHERE `posts`.`OwnerUserId` = (SELECT `users`.`Id` FROM `users` ORDER BY `users`.`Reputation` DESC LIMIT 1)
SELECT COUNT(*) FROM `posts` WHERE `Score` < 20
SELECT COUNT(`Id`) FROM `tags` WHERE `Id` < 15 AND `Count` <= 20
SELECT `ExcerptPostId`, `WikiPostId` FROM `tags` WHERE `TagName` = 'sample'
SELECT `users`.`Reputation`, `users`.`UpVotes` FROM `comments` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Text` = 'fine, you win :)'
SELECT `c`.`Text` FROM `comments` AS `c` INNER JOIN `posts` AS `p` ON `c`.`PostId` = `p`.`Id` WHERE `p`.`Title` LIKE '%linear regression%'
SELECT `Text` FROM `comments` WHERE `PostId` IN (SELECT `Id` FROM `posts` WHERE `ViewCount` BETWEEN 100 AND 150) ORDER BY `Score` DESC LIMIT 1
SELECT `users`.`CreationDate`, `users`.`Age` FROM `users` INNER JOIN `comments` ON `users`.`Id` = `comments`.`UserId` WHERE `users`.`WebsiteUrl` LIKE 'http://%'
SELECT COUNT(DISTINCT `c`.`PostId`) FROM `comments` AS `c` INNER JOIN `posts` AS `p` ON `c`.`PostId` = `p`.`Id` WHERE `c`.`Score` = 0 AND `p`.`ViewCount` < 5
SELECT COUNT(`comments`.`Id`) FROM `posts` INNER JOIN `comments` ON `posts`.`Id` = `comments`.`PostId` WHERE `posts`.`CommentCount` = 1 AND `comments`.`Score` = 0
SELECT COUNT(DISTINCT `users`.`Id`) FROM `comments` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Score` = 0 AND `users`.`Age` = 40
SELECT `posts`.`Id`, `comments`.`Text` FROM `posts` INNER JOIN `comments` ON `posts`.`Id` = `comments`.`PostId` WHERE `posts`.`Title` = 'Group differences on a five point Likert item'
SELECT `u`.`UpVotes` FROM `comments` AS `c` INNER JOIN `users` AS `u` ON `c`.`UserId` = `u`.`Id` WHERE `c`.`Text` LIKE '%R is also lazy evaluated.%'
SELECT `Text` FROM `comments` WHERE `UserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'Harvey Motulsky')
SELECT DISTINCT `users`.`DisplayName` FROM `comments` JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Score` BETWEEN 1 AND 5 AND `users`.`DownVotes` = 0
SELECT CAST(COUNT(DISTINCT C.`UserId`) FILTER (WHERE U.`UpVotes` = 0) AS REAL) * 100 / COUNT(DISTINCT C.`UserId`) FROM `comments` AS C INNER JOIN `users` AS U ON C.`UserId` = U.`Id` WHERE C.`Score` BETWEEN 5 AND 10;
SELECT `power_name` FROM `superpower` INNER JOIN `hero_power` ON `superpower`.`id` = `hero_power`.`power_id` INNER JOIN `superhero` ON `hero_power`.`hero_id` = `superhero`.`id` WHERE `superhero`.`superhero_name` = '3-D Man'
SELECT COUNT(DISTINCT T1.`hero_id`) FROM `hero_power` AS T1 INNER JOIN `superpower` AS T2 ON T1.`power_id` = T2.`id` WHERE T2.`power_name` = 'Super Strength'
SELECT COUNT(DISTINCT T1.hero_id) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T2.power_name = 'Super Strength' AND T3.height_cm > 200
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` GROUP BY `superhero`.`full_name` HAVING COUNT(`hero_power`.`power_id`) > 15
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `colour` AS T2 ON T1.`eye_colour_id` = T2.`id` WHERE T2.`colour` = 'Blue'
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` WHERE `superhero`.`superhero_name` = 'Apocalypse'
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `colour` AS T2 ON T1.`eye_colour_id` = T2.`id` INNER JOIN `hero_power` AS T3 ON T1.`id` = T3.`hero_id` INNER JOIN `superpower` AS T4 ON T3.`power_id` = T4.`id` WHERE T2.`colour` = 'Blue' AND T4.`power_name` = 'Agility'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `colour` AS `eye_colour` ON `superhero`.`eye_colour_id` = `eye_colour`.`id` INNER JOIN `colour` AS `hair_colour` ON `superhero`.`hair_colour_id` = `hair_colour`.`id` WHERE `eye_colour`.`colour` = 'Blue' AND `hair_colour`.`colour` = 'Blond'
SELECT COUNT(DISTINCT `superhero`.`id`) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics'
SELECT T1.`superhero_name` FROM `superhero` AS T1 INNER JOIN `publisher` AS T2 ON T1.`publisher_id` = T2.`id` WHERE T2.`publisher_name` = 'Marvel Comics' ORDER BY T1.`height_cm` DESC
SELECT `publisher`.`publisher_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`superhero_name` = 'Sauron'
SELECT `colour`.`colour`, COUNT(`superhero`.`id`) AS `count` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics' GROUP BY `colour`.`colour` ORDER BY `count` DESC
SELECT AVG(`height_cm`) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics';
SELECT `s`.`superhero_name` FROM `superhero` AS `s` INNER JOIN `publisher` AS `p` ON `s`.`publisher_id` = `p`.`id` INNER JOIN `hero_power` AS `hp` ON `s`.`id` = `hp`.`hero_id` INNER JOIN `superpower` AS `sp` ON `hp`.`power_id` = `sp`.`id` WHERE `p`.`publisher_name` = 'Marvel Comics' AND `sp`.`power_name` = 'Super Strength'
SELECT COUNT(DISTINCT `superhero`.`id`) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'DC Comics'
SELECT `publisher`.`publisher_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `attribute`.`attribute_name` = 'Speed' ORDER BY `hero_attribute`.`attribute_value` ASC LIMIT 1
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `colour` AS T2 ON T1.eye_colour_id = T2.id INNER JOIN `publisher` AS T3 ON T1.publisher_id = T3.id WHERE T2.colour = 'Gold' AND T3.publisher_name = 'Marvel Comics'
SELECT `publisher`.`publisher_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`superhero_name` = 'Blue Beetle II'
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `colour` AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blond'
SELECT `superhero_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Intelligence' ORDER BY `hero_attribute`.`attribute_value` ASC LIMIT 1
SELECT `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`superhero_name` = 'Copycat'
SELECT `superhero_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Durability' AND `hero_attribute`.`attribute_value` < 50
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Death Touch'
SELECT COUNT(DISTINCT T1.id) FROM `superhero` AS T1 INNER JOIN `gender` AS T2 ON T1.gender_id = T2.id INNER JOIN `hero_attribute` AS T3 ON T1.id = T3.hero_id INNER JOIN `attribute` AS T4 ON T3.attribute_id = T4.id WHERE T2.gender = 'Female' AND T4.attribute_name = 'Strength' AND T3.attribute_value = 100
SELECT `superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` GROUP BY `superhero_name` ORDER BY COUNT(`power_id`) DESC LIMIT 1
SELECT COUNT(`id`) FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Vampire'
SELECT CAST(COUNT(CASE WHEN T2.alignment = 'Bad' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) AS percentage, COUNT(CASE WHEN T2.alignment = 'Bad' AND T3.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS marvel_count FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id
SELECT COUNT(CASE WHEN `publisher_name` = 'Marvel Comics' THEN `superhero_name` ELSE NULL END) - COUNT(CASE WHEN `publisher_name` = 'DC Comics' THEN `superhero_name` ELSE NULL END) AS difference FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id`
SELECT `id` FROM `publisher` WHERE `publisher_name` = 'Star Trek'
SELECT AVG(`attribute_value`) FROM `hero_attribute`
SELECT COUNT(*) FROM `superhero` WHERE `full_name` IS NULL
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`id` = 75
SELECT DISTINCT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T3.superhero_name = 'Deathlok'
SELECT AVG(`weight_kg`) FROM `superhero` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `gender`.`gender` = 'Female'
SELECT DISTINCT `T3`.`power_name` FROM `superhero` AS `T1` INNER JOIN `hero_power` AS `T2` ON `T1`.`id` = `T2`.`hero_id` INNER JOIN `superpower` AS `T3` ON `T2`.`power_id` = `T3`.`id` INNER JOIN `gender` AS `T4` ON `T1`.`gender_id` = `T4`.`id` WHERE `T4`.`gender` = 'Male' LIMIT 5
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Alien'
SELECT `superhero_name` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `height_cm` BETWEEN 170 AND 190 AND `colour` = 'No Colour'
SELECT T2.`power_name` FROM `hero_power` AS T1 INNER JOIN `superpower` AS T2 ON T1.`power_id` = T2.`id` WHERE T1.`hero_id` = 56
SELECT `full_name` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Demi-God' LIMIT 5
SELECT COUNT(*) FROM `superhero` WHERE `alignment_id` = (SELECT `id` FROM `alignment` WHERE `alignment` = 'Bad')
SELECT `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`weight_kg` = 169
SELECT C.colour FROM superhero AS S INNER JOIN race AS R ON S.race_id = R.id INNER JOIN colour AS C ON S.hair_colour_id = C.id WHERE S.height_cm = 185 AND R.race = 'human'
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` ORDER BY `superhero`.`weight_kg` DESC LIMIT 1
SELECT CAST(COUNT(CASE WHEN `publisher`.`publisher_name` = 'Marvel Comics' THEN `superhero`.`id` ELSE NULL END) AS REAL) * 100 / COUNT(`superhero`.`id`) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`height_cm` BETWEEN 150 AND 180;
SELECT `T1`.`superhero_name` FROM `superhero` AS `T1` INNER JOIN `gender` AS `T2` ON `T1`.`gender_id` = `T2`.`id` WHERE `T2`.`gender` = 'Male' AND `T1`.`weight_kg` > (SELECT AVG(`weight_kg`) * 0.79 FROM `superhero`)
SELECT `power_name` FROM `superpower` INNER JOIN `hero_power` ON `superpower`.`id` = `hero_power`.`power_id` GROUP BY `power_name` ORDER BY COUNT(`power_name`) DESC LIMIT 1
SELECT `ha`.`attribute_value` FROM `superhero` AS `s` INNER JOIN `hero_attribute` AS `ha` ON `s`.`id` = `ha`.`hero_id` WHERE `s`.`superhero_name` = 'Abomination'
SELECT T2.`power_name` FROM `hero_power` AS T1 INNER JOIN `superpower` AS T2 ON T1.`power_id` = T2.`id` WHERE T1.`hero_id` = 1
SELECT COUNT(DISTINCT T1.`hero_id`) FROM `hero_power` AS T1 INNER JOIN `superpower` AS T2 ON T1.`power_id` = T2.`id` WHERE T2.`power_name` = 'stealth'
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Strength' ORDER BY `hero_attribute`.`attribute_value` DESC LIMIT 1
SELECT COUNT(`superhero`.`id`) * 1.0 / SUM(`superhero`.`skin_colour_id` = 1) FROM `superhero` WHERE `superhero`.`skin_colour_id` = 1
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `publisher` AS T2 ON T1.`publisher_id` = T2.`id` WHERE T2.`publisher_name` = 'Dark Horse Comics'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `publisher`.`publisher_name` = 'Dark Horse Comics' AND `attribute`.`attribute_name` = 'durability' ORDER BY `hero_attribute`.`attribute_value` DESC LIMIT 1
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`full_name` = 'Abraham Sapien'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Flight'
SELECT `C1`.`colour` AS `eye_colour`, `C2`.`colour` AS `hair_colour`, `C3`.`colour` AS `skin_colour` FROM `superhero` AS `S` INNER JOIN `gender` AS `G` ON `S`.`gender_id` = `G`.`id` INNER JOIN `publisher` AS `P` ON `S`.`publisher_id` = `P`.`id` INNER JOIN `colour` AS `C1` ON `S`.`eye_colour_id` = `C1`.`id` INNER JOIN `colour` AS `C2` ON `S`.`hair_colour_id` = `C2`.`id` INNER JOIN `colour` AS `C3` ON `S`.`skin_colour_id` = `C3`.`id` WHERE `G`.`gender` = 'Female' AND `P`.`publisher_name` = 'Dark Horse Comics'
SELECT T1.`superhero_name`, T5.`publisher_name` FROM `superhero` AS T1 INNER JOIN `colour` AS T2 ON T1.`eye_colour_id` = T2.`id` INNER JOIN `colour` AS T3 ON T1.`hair_colour_id` = T3.`id` INNER JOIN `colour` AS T4 ON T1.`skin_colour_id` = T4.`id` INNER JOIN `publisher` AS T5 ON T1.`publisher_id` = T5.`id` WHERE T1.`eye_colour_id` = T1.`hair_colour_id` AND T1.`hair_colour_id` = T1.`skin_colour_id`
SELECT `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`superhero_name` = 'A-Bomb'
SELECT CAST(SUM(`colour`.`colour` = 'Blue') AS REAL) * 100 / COUNT(`gender`.`gender`) FROM `superhero` INNER JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `gender`.`gender` = 'Female'
SELECT `superhero`.`superhero_name`, `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`full_name` = 'Charles Chandler'
SELECT `gender`.`gender` FROM `superhero` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `superhero`.`superhero_name` = 'Agent 13'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Adaptation';
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `hero_power` AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Amazo'
SELECT `power_name` FROM `superpower` INNER JOIN `hero_power` ON `superpower`.`id` = `hero_power`.`power_id` INNER JOIN `superhero` ON `hero_power`.`hero_id` = `superhero`.`id` WHERE `superhero`.`full_name` = 'Hunter Zolomon'
SELECT `height_cm` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `colour`.`colour` = 'Amber'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `colour` AS `eye_colour` ON `superhero`.`eye_colour_id` = `eye_colour`.`id` INNER JOIN `colour` AS `hair_colour` ON `superhero`.`hair_colour_id` = `hair_colour`.`id` WHERE `eye_colour`.`colour` = 'Black' AND `hair_colour`.`colour` = 'Black'
SELECT DISTINCT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`skin_colour_id` = (SELECT `id` FROM `colour` WHERE `colour` = 'Gold')
SELECT `full_name` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Vampire'
SELECT `superhero_name` FROM `superhero` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `alignment`.`alignment` = 'Neutral'
SELECT COUNT(DISTINCT `hero_id`) FROM `hero_attribute` WHERE `attribute_id` = (SELECT `id` FROM `attribute` WHERE `attribute_name` = 'Strength') AND `attribute_value` = (SELECT MAX(`attribute_value`) FROM `hero_attribute` WHERE `attribute_id` = (SELECT `id` FROM `attribute` WHERE `attribute_name` = 'Strength'))
SELECT `race`.`race`, `alignment`.`alignment` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `superhero`.`superhero_name` = 'Cameron Hicks'
SELECT (COUNT(CASE WHEN T3.gender = 'Female' THEN T1.id ELSE NULL END) * 100.0 / COUNT(T1.id)) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'Marvel Comics'
SELECT AVG(`T1`.`weight_kg`) FROM `superhero` AS `T1` INNER JOIN `race` AS `T2` ON `T1`.`race_id` = `T2`.`id` WHERE `T2`.`race` = 'Alien'
SELECT (SELECT SUM(`weight_kg`) FROM `superhero` WHERE `full_name` = 'Emil Blonsky') - (SELECT SUM(`weight_kg`) FROM `superhero` WHERE `full_name` = 'Charles Chandler') AS difference
SELECT `superhero_name`, AVG(`height_cm`) FROM `superhero` GROUP BY `superhero_name`
SELECT `power_name` FROM `superpower` INNER JOIN `hero_power` ON `superpower`.`id` = `hero_power`.`power_id` INNER JOIN `superhero` ON `hero_power`.`hero_id` = `superhero`.`id` WHERE `superhero`.`superhero_name` = 'Abomination'
SELECT COUNT(*) FROM `superhero` WHERE `race_id` = 21 AND `gender_id` = 1
SELECT `s`.`superhero_name` FROM `superhero` AS `s` INNER JOIN `hero_attribute` AS `ha` ON `s`.`id` = `ha`.`hero_id` INNER JOIN `attribute` AS `a` ON `ha`.`attribute_id` = `a`.`id` WHERE `a`.`attribute_name` = 'Speed' ORDER BY `ha`.`attribute_value` DESC LIMIT 1
SELECT COUNT(*) FROM `superhero` WHERE `alignment_id` = 3
SELECT `attribute`.`attribute_name`, `hero_attribute`.`attribute_value` FROM `hero_attribute` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` INNER JOIN `superhero` ON `hero_attribute`.`hero_id` = `superhero`.`id` WHERE `superhero`.`superhero_name` = '3-D Man'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `colour` AS `eye_colour` ON `superhero`.`eye_colour_id` = `eye_colour`.`id` INNER JOIN `colour` AS `hair_colour` ON `superhero`.`hair_colour_id` = `hair_colour`.`id` WHERE `eye_colour`.`colour` = 'Blue' AND `hair_colour`.`colour` = 'Brown'
SELECT DISTINCT T3.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT COUNT(*) FROM `superhero` WHERE `publisher_id` = 1
SELECT CAST(SUM(CASE WHEN `eye_colour_id` = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`superhero_name`) FROM `superhero`
SELECT CAST(COUNT(CASE WHEN `gender`.`gender` = 'Female' THEN `superhero`.`id` ELSE NULL END) AS REAL) / COUNT(CASE WHEN `gender`.`gender` = 'Male' THEN `superhero`.`id` ELSE NULL END) AS ratio FROM `superhero` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id`
SELECT `superhero_name` FROM `superhero` ORDER BY `height_cm` DESC LIMIT 1
SELECT `id` FROM `superpower` WHERE `power_name` = 'cryokinesis'
SELECT `superhero_name` FROM `superhero` WHERE `id` = 294
SELECT `full_name` FROM `superhero` WHERE `weight_kg` = 0 OR `weight_kg` IS NULL
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`full_name` = 'Karen Beecher-Duncan'
SELECT SP.`power_name` FROM `superhero` AS SH INNER JOIN `hero_power` AS HP ON SH.`id` = HP.`hero_id` INNER JOIN `superpower` AS SP ON HP.`power_id` = SP.`id` WHERE SH.`full_name` = 'Helen Parr'
SELECT `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`weight_kg` = 108 AND `superhero`.`height_cm` = 188
SELECT `publisher`.`publisher_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`id` = 38
SELECT `race`.`race` FROM `hero_attribute` INNER JOIN `superhero` ON `hero_attribute`.`hero_id` = `superhero`.`id` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` ORDER BY `hero_attribute`.`attribute_value` DESC LIMIT 1
SELECT `alignment`.`alignment`, `superpower`.`power_name` FROM `superhero` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`superhero_name` = 'Atom IV'
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `colour`.`colour` = 'Blue' LIMIT 5
SELECT AVG(`hero_attribute`.`attribute_value`) FROM `hero_attribute` INNER JOIN `superhero` ON `hero_attribute`.`hero_id` = `superhero`.`id` WHERE `superhero`.`alignment_id` = 3
SELECT DISTINCT `colour`.`colour` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` WHERE `hero_attribute`.`attribute_value` = 100
SELECT COUNT(*) FROM `superhero` WHERE `alignment_id` = 1 AND `gender_id` = 2
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` WHERE `hero_attribute`.`attribute_value` BETWEEN 75 AND 80
SELECT `race`.`race` FROM `superhero` INNER JOIN `colour` ON `superhero`.`hair_colour_id` = `colour`.`id` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `colour`.`colour` = 'blue' AND `gender`.`gender` = 'Male'
SELECT (CAST(SUM(CASE WHEN `gender`.`id` = 2 THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100.0 AS female_percentage FROM `superhero` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `superhero`.`alignment_id` = 2
SELECT COUNT(CASE WHEN T1.eye_colour_id = 7 THEN 1 ELSE NULL END) - COUNT(CASE WHEN T1.eye_colour_id = 1 THEN 1 ELSE NULL END) FROM `superhero` AS T1 WHERE (T1.weight_kg = 0 OR T1.weight_kg IS NULL)
SELECT `ha`.`attribute_value` FROM `hero_attribute` AS `ha` INNER JOIN `superhero` AS `s` ON `ha`.`hero_id` = `s`.`id` INNER JOIN `attribute` AS `a` ON `ha`.`attribute_id` = `a`.`id` WHERE `s`.`superhero_name` = 'Hulk' AND `a`.`attribute_name` = 'Strength'
SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = 'Ajax'
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `colour` AS T2 ON T1.`skin_colour_id` = T2.`id` INNER JOIN `alignment` AS T3 ON T1.`alignment_id` = T3.`id` WHERE T2.`colour` = 'Green' AND T3.`alignment` = 'Bad'
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `gender` AS T2 ON T1.`gender_id` = T2.`id` INNER JOIN `publisher` AS T3 ON T1.`publisher_id` = T3.`id` WHERE T2.`gender` = 'Female' AND T3.`publisher_name` = 'Marvel Comics'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Wind Control' ORDER BY `superhero`.`superhero_name` ASC
SELECT `gender`.`gender` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `superpower`.`power_name` = 'Phoenix Force'
SELECT `superhero_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'DC Comics' ORDER BY `superhero`.`weight_kg` DESC LIMIT 1
SELECT AVG(`s`.`height_cm`) FROM `superhero` AS `s` INNER JOIN `race` AS `r` ON `s`.`race_id` = `r`.`id` INNER JOIN `publisher` AS `p` ON `s`.`publisher_id` = `p`.`id` WHERE `r`.`race` <> 'Human' AND `p`.`publisher_name` = 'Dark Horse Comics';
SELECT COUNT(*) FROM `superhero` AS S INNER JOIN `hero_attribute` AS HA ON S.`id` = HA.`hero_id` INNER JOIN `attribute` AS A ON HA.`attribute_id` = A.`id` WHERE A.`attribute_name` = 'Speed' AND HA.`attribute_value` = 100
SELECT COUNT(CASE WHEN `publisher_name` = 'DC Comics' THEN `superhero`.`id` ELSE NULL END) - COUNT(CASE WHEN `publisher_name` = 'Marvel Comics' THEN `superhero`.`id` ELSE NULL END) AS difference FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id`
SELECT `attribute_name` FROM `attribute` INNER JOIN `hero_attribute` ON `attribute`.`id` = `hero_attribute`.`attribute_id` INNER JOIN `superhero` ON `hero_attribute`.`hero_id` = `superhero`.`id` WHERE `superhero`.`superhero_name` = 'Black Panther' ORDER BY `hero_attribute`.`attribute_value` ASC LIMIT 1
SELECT `colour`.`colour` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`superhero_name` = 'Abomination'
SELECT `superhero_name` FROM `superhero` ORDER BY `height_cm` DESC LIMIT 1
SELECT `superhero_name` FROM `superhero` WHERE `full_name` = 'Charles Chandler'
SELECT CAST(COUNT(CASE WHEN `T2`.`gender` = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(`T2`.`gender`) FROM `superhero` AS `T1` INNER JOIN `gender` AS `T2` ON `T1`.`gender_id` = `T2`.`id` INNER JOIN `publisher` AS `T3` ON `T1`.`publisher_id` = `T3`.`id` WHERE `T3`.`publisher_name` = 'George Lucas'
SELECT CAST(SUM(CASE WHEN `T2`.`alignment` = 'Good' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `superhero` AS `T1` INNER JOIN `alignment` AS `T2` ON `T1`.`alignment_id` = `T2`.`id` INNER JOIN `publisher` AS `T3` ON `T1`.`publisher_id` = `T3`.`id` WHERE `T3`.`publisher_name` = 'Marvel Comics'
SELECT COUNT(*) FROM `superhero` WHERE `full_name` LIKE 'John%';
SELECT `hero_id` FROM `hero_attribute` ORDER BY `attribute_value` ASC LIMIT 1
SELECT `full_name` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Alien'
SELECT `full_name` FROM `superhero` WHERE `weight_kg` < 100 AND `eye_colour_id` = (SELECT `id` FROM `colour` WHERE `colour` = 'Brown')
SELECT T2.`attribute_value` FROM `superhero` AS T1 INNER JOIN `hero_attribute` AS T2 ON T1.`id` = T2.`hero_id` WHERE T1.`superhero_name` = 'Aquababy'
SELECT `S`.`weight_kg`, `R`.`race` FROM `superhero` AS `S` INNER JOIN `race` AS `R` ON `S`.`race_id` = `R`.`id` WHERE `S`.`id` = 40
SELECT AVG(`height_cm`) FROM `superhero` WHERE `alignment_id` = (SELECT `id` FROM `alignment` WHERE `alignment` = 'Neutral')
SELECT `hero_power`.`hero_id` FROM `hero_power` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Intelligence'
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`superhero_name` = 'Blackwulf'
SELECT DISTINCT `sp`.`power_name` FROM `superhero` AS `sh` INNER JOIN `hero_power` AS `hp` ON `sh`.`id` = `hp`.`hero_id` INNER JOIN `superpower` AS `sp` ON `hp`.`power_id` = `sp`.`id` WHERE `sh`.`height_cm` > (SELECT AVG(`height_cm`) * 0.8 FROM `superhero`)
SELECT `drivers`.`driverRef` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `qualifying`.`raceId` = 20 ORDER BY `qualifying`.`q1` DESC LIMIT 5
SELECT `d`.`surname` FROM `qualifying` AS `q` INNER JOIN `drivers` AS `d` ON `q`.`driverId` = `d`.`driverId` WHERE `q`.`raceId` = 19 ORDER BY `q`.`q2` ASC LIMIT 1
SELECT DISTINCT `races`.`year` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`location` = 'Shanghai'
SELECT `races`.`url` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Circuit de Barcelona-Catalunya'
SELECT DISTINCT `races`.`name` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'Germany'
SELECT DISTINCT `circuits`.`location` FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` INNER JOIN `constructors` ON `results`.`constructorId` = `constructors`.`constructorId` WHERE `constructors`.`name` = 'Renault'
SELECT COUNT(*) FROM `races` AS r INNER JOIN `circuits` AS c ON r.`circuitId` = c.`circuitId` WHERE r.`year` = 2010 AND c.`country` NOT IN ('Asia', 'Europe')
SELECT `races`.`name` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'Spain'
SELECT `lat`, `lng` FROM `circuits` WHERE `circuitId` = (SELECT `circuitId` FROM `races` WHERE `name` = 'Australian Grand Prix')
SELECT `races`.`url` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Sepang International Circuit'
SELECT `time` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Sepang International Circuit'
SELECT `circuits`.`lat`, `circuits`.`lng` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`name` = 'Abu Dhabi Grand Prix'
SELECT `c`.`nationality` FROM `constructorResults` AS `cr` INNER JOIN `constructors` AS `c` ON `cr`.`constructorId` = `c`.`constructorId` WHERE `cr`.`raceId` = 24 AND `cr`.`points` = 1
SELECT `q1` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Bruno' AND `drivers`.`surname` = 'Senna' AND `qualifying`.`raceId` = 354
SELECT `d`.`nationality` FROM `qualifying` AS `q` INNER JOIN `drivers` AS `d` ON `q`.`driverId` = `d`.`driverId` WHERE `q`.`raceId` = 355 AND `q`.`q2` = '0:01:40'
SELECT `drivers`.`number` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `qualifying`.`raceId` = 903 AND `qualifying`.`q3` LIKE '0:01:54%'
SELECT COUNT(*) FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`name` = 'Bahrain Grand Prix' AND `races`.`year` = 2007 AND `results`.`time` IS NULL
SELECT `url` FROM `seasons` WHERE `year` = (SELECT `year` FROM `races` WHERE `raceId` = 901)
SELECT COUNT(DISTINCT `driverId`) FROM `results` WHERE `raceId` = (SELECT `raceId` FROM `races` WHERE `date` = '2015-11-29') AND `statusId` = (SELECT `statusId` FROM `status` WHERE `status` = 'Finished')
SELECT `forename`, `surname`, `dob` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` WHERE `results`.`raceId` = 592 AND `results`.`time` IS NOT NULL ORDER BY `drivers`.`dob` ASC LIMIT 1
SELECT D.`url` FROM `lapTimes` AS L INNER JOIN `drivers` AS D ON L.`driverId` = D.`driverId` WHERE L.`raceId` = 161 AND L.`time` LIKE '1:27%'
SELECT `drivers`.`nationality` FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `results`.`raceId` = 933 ORDER BY `results`.`fastestLapSpeed` DESC LIMIT 1
SELECT T2.lat, T2.lng FROM `races` AS T1 INNER JOIN `circuits` AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Malaysian Grand Prix'
SELECT `constructors`.`url` FROM `constructorResults` INNER JOIN `constructors` ON `constructorResults`.`constructorId` = `constructors`.`constructorId` WHERE `constructorResults`.`raceId` = 9 ORDER BY `constructorResults`.`points` DESC LIMIT 1
SELECT `q1` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Lucas' AND `drivers`.`surname` = 'di Grassi' AND `qualifying`.`raceId` = 345
SELECT `drivers`.`nationality` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `qualifying`.`q2` = '0:01:15' AND `qualifying`.`raceId` = 347
SELECT `D`.`code` FROM `qualifying` AS `Q` INNER JOIN `drivers` AS `D` ON `Q`.`driverId` = `D`.`driverId` WHERE `Q`.`raceId` = 45 AND `Q`.`q3` LIKE '1:33%'
SELECT T1.time FROM `results` AS T1 INNER JOIN `drivers` AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Bruce' AND T2.surname = 'McLaren' AND T1.raceId = 743
SELECT `d`.`forename`, `d`.`surname` FROM `results` AS `r` INNER JOIN `races` AS `ra` ON `r`.`raceId` = `ra`.`raceId` INNER JOIN `drivers` AS `d` ON `r`.`driverId` = `d`.`driverId` WHERE `ra`.`name` = 'San Marino Grand Prix' AND `ra`.`year` = 2006 AND `r`.`position` = 2
SELECT S.url FROM seasons AS S INNER JOIN races AS R ON S.year = R.year WHERE R.raceId = 901
SELECT COUNT(*) FROM `results` AS r INNER JOIN `races` AS ra ON r.`raceId` = ra.`raceId` INNER JOIN `status` AS s ON r.`statusId` = s.`statusId` WHERE ra.`date` = '2015-11-29' AND s.`status` != 'Finished'
SELECT `forename`, `surname` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` WHERE `results`.`raceId` = 872 AND `results`.`time` IS NOT NULL ORDER BY `drivers`.`dob` DESC LIMIT 1
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `lapTimes` INNER JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` WHERE `lapTimes`.`raceId` = 348 ORDER BY `lapTimes`.`milliseconds` ASC LIMIT 1
SELECT `d`.`nationality` FROM `results` AS `r` INNER JOIN `drivers` AS `d` ON `r`.`driverId` = `d`.`driverId` WHERE `r`.`fastestLapSpeed` = (SELECT MAX(`fastestLapSpeed`) FROM `results`)
SELECT (T1.fastestLapSpeed - T2.fastestLapSpeed) * 100.0 / T1.fastestLapSpeed AS percentage FROM (SELECT `fastestLapSpeed` FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Paul' AND `drivers`.`surname` = 'di Resta' AND `results`.`raceId` = 853) AS T1, (SELECT `fastestLapSpeed` FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Paul' AND `drivers`.`surname` = 'di Resta' AND `results`.`raceId` = 854) AS T2
SELECT CAST(SUM(CASE WHEN `time` IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`driverId`) AS percentage FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`date` = '1983-07-16'
SELECT MIN(`year`) FROM `races` WHERE `name` = 'Singapore Grand Prix'
SELECT `name` FROM `races` WHERE `year` = 2005 ORDER BY `name` DESC
SELECT `name` FROM `races` WHERE strftime('%Y-%m', `date`) = (SELECT strftime('%Y-%m', MIN(`date`)) FROM `races`)
SELECT `name`, `date` FROM `races` WHERE `year` = 1999 AND `round` = (SELECT MAX(`round`) FROM `races` WHERE `year` = 1999)
SELECT `year` FROM `races` GROUP BY `year` ORDER BY COUNT(`round`) DESC LIMIT 1
SELECT DISTINCT `r1`.`name` FROM `races` AS `r1` WHERE `r1`.`year` = 2017 AND `r1`.`name` NOT IN (SELECT `r2`.`name` FROM `races` AS `r2` WHERE `r2`.`year` = 2000)
SELECT `c`.`name`, `c`.`location` FROM `races` AS `r` INNER JOIN `circuits` AS `c` ON `r`.`circuitId` = `c`.`circuitId` WHERE `r`.`name` = 'European Grand Prix' AND `r`.`year` = (SELECT MIN(`year`) FROM `races` WHERE `name` = 'European Grand Prix')
SELECT MAX(`year`) FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Brands Hatch' AND `races`.`name` = 'British Grand Prix'
SELECT COUNT(DISTINCT `year`) FROM `races` AS R INNER JOIN `circuits` AS C ON R.`circuitId` = C.`circuitId` WHERE C.`name` = 'Silverstone Circuit' AND R.`name` LIKE '%British Grand Prix%'
SELECT `d`.`forename`, `d`.`surname` FROM `results` AS `r` INNER JOIN `races` AS `ra` ON `r`.`raceId` = `ra`.`raceId` INNER JOIN `drivers` AS `d` ON `r`.`driverId` = `d`.`driverId` WHERE `ra`.`year` = 2010 AND `ra`.`name` = 'Singapore Grand Prix' ORDER BY `r`.`positionOrder`
SELECT `drivers`.`forename`, `drivers`.`surname`, MAX(`driverStandings`.`points`) FROM `driverStandings` INNER JOIN `drivers` ON `driverStandings`.`driverId` = `drivers`.`driverId` GROUP BY `drivers`.`forename`, `drivers`.`surname` ORDER BY MAX(`driverStandings`.`points`) DESC LIMIT 1
SELECT D.`forename`, D.`surname`, R.`points` FROM `results` AS R INNER JOIN `drivers` AS D ON R.`driverId` = D.`driverId` INNER JOIN `races` AS RA ON R.`raceId` = RA.`raceId` WHERE RA.`year` = 2017 AND RA.`name` = 'Chinese Grand Prix' ORDER BY R.`points` DESC LIMIT 3
SELECT `drivers`.`forename`, `drivers`.`surname`, `races`.`name`, `lapTimes`.`time` FROM `lapTimes` INNER JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `lapTimes`.`milliseconds` = (SELECT MIN(`milliseconds`) FROM `lapTimes`)
SELECT AVG(`lapTimes`.`milliseconds`) FROM `lapTimes` INNER JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' AND `races`.`name` = 'Malaysian Grand Prix' AND `races`.`year` = 2009
SELECT CAST(SUM(CASE WHEN `position` > 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`raceId`) FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`surname` = 'Hamilton' AND `races`.`year` >= 2010
SELECT `d`.`forename`, `d`.`surname`, `d`.`nationality`, MAX(`ds`.`points`) FROM `drivers` AS `d` INNER JOIN `driverStandings` AS `ds` ON `d`.`driverId` = `ds`.`driverId` GROUP BY `d`.`driverId` ORDER BY SUM(`ds`.`wins`) DESC LIMIT 1
SELECT `forename`, `surname`, (strftime('%Y', 'now') - strftime('%Y', `dob`)) AS `age` FROM `drivers` WHERE `nationality` = 'Japanese' ORDER BY `dob` DESC LIMIT 1
SELECT `c`.`name` FROM `circuits` AS `c` INNER JOIN `races` AS `r` ON `c`.`circuitId` = `r`.`circuitId` WHERE `r`.`year` BETWEEN 1990 AND 2000 GROUP BY `c`.`circuitId` HAVING COUNT(`r`.`raceId`) = 4
SELECT `circuits`.`name` AS `circuit_name`, `circuits`.`location`, `races`.`name` AS `race_name` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'USA' AND `races`.`year` = 2006
SELECT r.`name` AS race_name, c.`name` AS circuit_name, c.`location` FROM `races` AS r INNER JOIN `circuits` AS c ON r.`circuitId` = c.`circuitId` WHERE strftime('%m', r.`date`) = '09' AND strftime('%Y', r.`date`) = '2005'
SELECT `races`.`name` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Alex' AND `drivers`.`surname` = 'Yoong' AND `results`.`position` < 20
SELECT COUNT(*) FROM `results` AS R INNER JOIN `races` AS RA ON R.`raceId` = RA.`raceId` INNER JOIN `circuits` AS C ON RA.`circuitId` = C.`circuitId` INNER JOIN `drivers` AS D ON R.`driverId` = D.`driverId` WHERE D.`forename` = 'Michael' AND D.`surname` = 'Schumacher' AND C.`name` = 'Sepang International Circuit' AND R.`positionOrder` = 1
SELECT `races`.`name`, `races`.`year` FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Michael' AND `drivers`.`surname` = 'Schumacher' ORDER BY `results`.`milliseconds` ASC LIMIT 1
SELECT AVG(`points`) FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Eddie' AND `drivers`.`surname` = 'Irvine' AND `races`.`year` = 2000
SELECT `races`.`name`, `results`.`points` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' ORDER BY `races`.`year` ASC, `races`.`round` ASC LIMIT 1
SELECT `races`.`name`, `circuits`.`country`, `races`.`date` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`year` = 2017 ORDER BY `races`.`date`
SELECT r.`name`, r.`year`, c.`location` FROM `races` AS r INNER JOIN `results` AS res ON r.`raceId` = res.`raceId` INNER JOIN `circuits` AS c ON r.`circuitId` = c.`circuitId` GROUP BY r.`raceId` ORDER BY MAX(res.`laps`) DESC LIMIT 1
SELECT CAST(SUM(CASE WHEN `circuits`.`country` = 'Germany' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`races`.`raceId`) FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`name` = 'European Grand Prix'
SELECT `lat`, `lng` FROM `circuits` WHERE `name` = 'Silverstone Circuit'
SELECT `name` FROM `circuits` WHERE `name` IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY `lat` DESC LIMIT 1
SELECT `circuitRef` FROM `circuits` WHERE `name` = 'Marina Bay Street Circuit'
SELECT `country` FROM `circuits` ORDER BY `alt` DESC LIMIT 1
SELECT COUNT(`driverId`) FROM `drivers` WHERE `code` IS NULL
SELECT `nationality` FROM `drivers` WHERE `dob` IS NOT NULL ORDER BY `dob` ASC LIMIT 1
SELECT `surname` FROM `drivers` WHERE `nationality` = 'Italian'
SELECT `url` FROM `drivers` WHERE `forename` = 'Anthony' AND `surname` = 'Davidson'
SELECT `driverRef` FROM `drivers` WHERE `forename` = 'Lewis' AND `surname` = 'Hamilton'
SELECT `circuits`.`name` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`year` = 2009 AND `races`.`name` = 'Spanish Grand Prix'
SELECT DISTINCT `races`.`year` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Silverstone Circuit'
SELECT `races`.`raceId`, `races`.`year`, `races`.`round`, `races`.`name`, `races`.`date`, `races`.`time`, `races`.`url` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Silverstone Circuit'
SELECT `races`.`time` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`year` = 2010 AND `circuits`.`name` = 'Yas Marina Circuit'
SELECT COUNT(*) FROM `races` AS r INNER JOIN `circuits` AS c ON r.`circuitId` = c.`circuitId` WHERE c.`country` = 'Italy'
SELECT `races`.`date` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Circuit de Barcelona-Catalunya'
SELECT `circuits`.`url` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`name` = 'Spanish Grand Prix' AND `races`.`year` = 2009
SELECT MIN(`fastestLapTime`) FROM `results` AS R INNER JOIN `drivers` AS D ON R.`driverId` = D.`driverId` WHERE D.`forename` = 'Lewis' AND D.`surname` = 'Hamilton'
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` ORDER BY `results`.`fastestLapSpeed` DESC LIMIT 1
SELECT `D`.`driverRef` FROM `results` AS `R` INNER JOIN `drivers` AS `D` ON `R`.`driverId` = `D`.`driverId` INNER JOIN `races` AS `RA` ON `R`.`raceId` = `RA`.`raceId` WHERE `RA`.`name` = 'Canadian Grand Prix' AND `RA`.`year` = 2007 AND `R`.`positionOrder` = 1
SELECT DISTINCT `races`.`name` FROM `races` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT `races`.`name` FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' ORDER BY `results`.`rank` ASC LIMIT 1
SELECT MAX(`fastestLapSpeed`) FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`name` = 'Spanish Grand Prix' AND `races`.`year` = 2009
SELECT DISTINCT `races`.`year` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT `R`.`positionOrder` FROM `results` AS `R` INNER JOIN `drivers` AS `D` ON `R`.`driverId` = `D`.`driverId` INNER JOIN `races` AS `RA` ON `R`.`raceId` = `RA`.`raceId` WHERE `D`.`forename` = 'Lewis' AND `D`.`surname` = 'Hamilton' AND `RA`.`name` = 'Chinese Grand Prix' AND `RA`.`year` = 2008
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `races`.`year` = 1989 AND `races`.`name` = 'Australian Grand Prix' AND `results`.`grid` = 4
SELECT COUNT(DISTINCT `driverId`) FROM `results` WHERE `raceId` = (SELECT `raceId` FROM `races` WHERE `name` = 'Australian Grand Prix' AND `year` = 2008) AND `time` IS NOT NULL
SELECT MIN(`lapTimes`.`milliseconds`) FROM `lapTimes` INNER JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' AND `races`.`name` = 'Australian Grand Prix' AND `races`.`year` = 2008
SELECT `R`.`time` FROM `results` AS `R` INNER JOIN `races` AS `RA` ON `R`.`raceId` = `RA`.`raceId` WHERE `RA`.`year` = 2008 AND `RA`.`name` = 'Chinese Grand Prix' AND `R`.`positionOrder` = 2
SELECT `drivers`.`forename`, `drivers`.`surname`, `drivers`.`url` FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `races`.`year` = 2008 AND `races`.`name` = 'Australian Grand Prix' AND `results`.`positionOrder` = 1
SELECT COUNT(DISTINCT `drivers`.`driverId`) FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`nationality` = 'British' AND `races`.`name` = 'Australian Grand Prix' AND `races`.`year` = 2008
SELECT COUNT(DISTINCT `drivers`.`driverId`) FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `races`.`name` = 'Chinese Grand Prix' AND `races`.`year` = 2008 AND `results`.`statusId` = (SELECT `statusId` FROM `status` WHERE `status` = 'Finished') AND EXISTS (SELECT 1 FROM `results` AS `r` INNER JOIN `races` AS `ra` ON `r`.`raceId` = `ra`.`raceId` WHERE `r`.`driverId` = `drivers`.`driverId` AND `ra`.`year` = 2008)
SELECT SUM(`points`) FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT AVG((CAST(SUBSTR(`fastestLapTime`, 1, 2) AS INTEGER) * 60 + CAST(SUBSTR(`fastestLapTime`, 4, 2) AS INTEGER) + CAST(SUBSTR(`fastestLapTime`, 7, 3) AS REAL) / 1000)) AS average_fastest_lap_time FROM `results` AS R INNER JOIN `drivers` AS D ON R.`driverId` = D.`driverId` WHERE D.`forename` = 'Lewis' AND D.`surname` = 'Hamilton'
SELECT CAST(SUM(CASE WHEN `time` IS NOT NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(`raceId`) FROM `results` WHERE `raceId` = (SELECT `raceId` FROM `races` WHERE `year` = 2008 AND `name` = 'Australian Grand Prix')
SELECT (CAST((last_driver_time - champion_time) AS REAL) / last_driver_time) * 100 AS faster_percentage FROM (SELECT MIN(`milliseconds`) AS champion_time, MAX(`milliseconds`) AS last_driver_time FROM `results` AS R INNER JOIN `races` AS RA ON R.`raceId` = RA.`raceId` WHERE RA.`name` = 'Australian Grand Prix' AND RA.`year` = 2008 AND R.`time` IS NOT NULL)
SELECT COUNT(`circuitId`) FROM `circuits` WHERE `location` = 'Adelaide' AND `country` = 'Australia'
SELECT `lat`, `lng` FROM `circuits` WHERE `country` = 'USA'
SELECT COUNT(`driverId`) FROM `drivers` WHERE `nationality` = 'British' AND STRFTIME('%Y', `dob`) > '1980'
SELECT MAX(`points`) FROM `constructorResults` AS cr INNER JOIN `constructors` AS c ON cr.`constructorId` = c.`constructorId` WHERE c.`nationality` = 'British'
SELECT `name` FROM `constructors` WHERE `constructorId` = (SELECT `constructorId` FROM `constructorStandings` ORDER BY `points` DESC LIMIT 1)
SELECT `constructors`.`name` FROM `constructorResults` INNER JOIN `constructors` ON `constructorResults`.`constructorId` = `constructors`.`constructorId` WHERE `constructorResults`.`raceId` = 291 AND `constructorResults`.`points` = 0
SELECT COUNT(DISTINCT `T1`.`constructorId`) FROM `constructorResults` AS `T1` INNER JOIN `constructors` AS `T2` ON `T1`.`constructorId` = `T2`.`constructorId` WHERE `T2`.`nationality` = 'Japanese' AND `T1`.`points` = 0 GROUP BY `T1`.`constructorId` HAVING COUNT(DISTINCT `T1`.`raceId`) = 2
SELECT DISTINCT `name` FROM `constructors` WHERE `constructorId` IN (SELECT `constructorId` FROM `constructorStandings` WHERE `position` = 1)
SELECT COUNT(DISTINCT `T1`.`constructorId`) FROM `constructors` AS `T1` INNER JOIN `results` AS `T2` ON `T1`.`constructorId` = `T2`.`constructorId` WHERE `T1`.`nationality` = 'French' AND `T2`.`laps` > 50
SELECT CAST(SUM(CASE WHEN `r`.`time` IS NOT NULL AND `d`.`nationality` = 'Japanese' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `results` AS `r` INNER JOIN `races` AS `ra` ON `r`.`raceId` = `ra`.`raceId` INNER JOIN `drivers` AS `d` ON `r`.`driverId` = `d`.`driverId` WHERE `ra`.`year` BETWEEN 2007 AND 2009
SELECT `r`.`year`, AVG(CAST(SUBSTR(`res`.`time`, 1, 2) AS INTEGER) * 3600 + CAST(SUBSTR(`res`.`time`, 4, 2) AS INTEGER) * 60 + CAST(SUBSTR(`res`.`time`, 7) AS REAL)) AS `average_time_seconds` FROM `results` AS `res` INNER JOIN `races` AS `r` ON `res`.`raceId` = `r`.`raceId` WHERE `res`.`positionOrder` = 1 AND `res`.`time` IS NOT NULL AND `r`.`year` < 1975 GROUP BY `r`.`year`
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `drivers` INNER JOIN `driverStandings` ON `drivers`.`driverId` = `driverStandings`.`driverId` WHERE `drivers`.`dob` > '1975-12-31' AND `driverStandings`.`position` = 2
SELECT COUNT(DISTINCT `drivers`.`driverId`) FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` WHERE `drivers`.`nationality` = 'Italian' AND `results`.`time` IS NULL
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `lapTimes` INNER JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` ORDER BY `lapTimes`.`milliseconds` ASC LIMIT 1
SELECT `fastestLap` FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`year` = 2009 AND `results`.`positionOrder` = 1 ORDER BY `results`.`fastestLapTime` ASC LIMIT 1
SELECT AVG(`fastestLapSpeed`) FROM `results` AS R INNER JOIN `races` AS RA ON R.`raceId` = RA.`raceId` WHERE RA.`year` = 2009 AND RA.`name` = 'Spanish Grand Prix'
SELECT `races`.`name`, `races`.`year` FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `results`.`milliseconds` IS NOT NULL ORDER BY `results`.`milliseconds` ASC LIMIT 1
SELECT CAST(COUNT(CASE WHEN strftime('%Y', `d`.`dob`) < '1985' AND `r`.`laps` > 50 THEN 1 END) AS REAL) * 100 / COUNT(`d`.`driverId`) FROM `drivers` AS `d` INNER JOIN `results` AS `r` ON `d`.`driverId` = `r`.`driverId` INNER JOIN `races` AS `ra` ON `r`.`raceId` = `ra`.`raceId` WHERE `ra`.`year` BETWEEN 2000 AND 2005;
SELECT COUNT(DISTINCT `drivers`.`driverId`) FROM `lapTimes` INNER JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`nationality` = 'French' AND `lapTimes`.`milliseconds` < 120000
SELECT DISTINCT `code` FROM `drivers` WHERE `nationality` = 'American'
SELECT `raceId` FROM `races` WHERE `year` = 2009
SELECT COUNT(DISTINCT `driverId`) FROM `results` WHERE `raceId` = 18
SELECT `code` FROM `drivers` ORDER BY `dob` DESC LIMIT 3; SELECT COUNT(*) FROM (SELECT `nationality` FROM `drivers` ORDER BY `dob` DESC LIMIT 3) AS top3 WHERE `nationality` = 'Dutch';
SELECT `driverRef` FROM `drivers` WHERE `forename` = 'Robert' AND `surname` = 'Kubica'
SELECT COUNT(`driverId`) FROM `drivers` WHERE `nationality` = 'British' AND SUBSTR(`dob`, 1, 4) = '1980'
SELECT `d`.`forename`, `d`.`surname`, MIN(`lt`.`time`) AS `earliest_lap_time` FROM `drivers` AS `d` INNER JOIN `lapTimes` AS `lt` ON `d`.`driverId` = `lt`.`driverId` WHERE `d`.`nationality` = 'German' AND `d`.`dob` BETWEEN '1980-01-01' AND '1990-12-31' GROUP BY `d`.`driverId` ORDER BY `earliest_lap_time` ASC LIMIT 3
SELECT `driverRef` FROM `drivers` WHERE `nationality` = 'German' ORDER BY `dob` ASC LIMIT 1
SELECT DISTINCT `drivers`.`driverId`, `drivers`.`code` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` WHERE `drivers`.`dob` LIKE '1971%' AND `results`.`fastestLapTime` IS NOT NULL
SELECT `d`.`forename`, `d`.`surname`, MAX(`lt`.`time`) AS `latest_lap_time` FROM `drivers` AS `d` INNER JOIN `lapTimes` AS `lt` ON `d`.`driverId` = `lt`.`driverId` WHERE `d`.`nationality` = 'Spanish' AND strftime('%Y', `d`.`dob`) < '1982' GROUP BY `d`.`driverId` ORDER BY `latest_lap_time` DESC LIMIT 10
SELECT `r`.`year` FROM `results` AS `r` INNER JOIN `races` AS `ra` ON `r`.`raceId` = `ra`.`raceId` ORDER BY `r`.`fastestLapTime` ASC LIMIT 1
SELECT `races`.`year` FROM `lapTimes` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` ORDER BY `lapTimes`.`milliseconds` DESC LIMIT 1
SELECT `driverId` FROM `lapTimes` WHERE `lap` = 1 ORDER BY `milliseconds` ASC LIMIT 5
SELECT COUNT(*) FROM `results` WHERE `statusId` = 2 AND `time` IS NOT NULL AND `raceId` > 50 AND `raceId` < 100
SELECT COUNT(`c`.`circuitId`), `c`.`location`, `c`.`lat`, `c`.`lng` FROM `circuits` AS `c` WHERE `c`.`country` = 'Austria'
SELECT `raceId` FROM `results` WHERE `time` IS NOT NULL GROUP BY `raceId` ORDER BY COUNT(`resultId`) DESC LIMIT 1
SELECT D.`driverRef`, D.`nationality`, D.`dob` FROM `qualifying` Q INNER JOIN `drivers` D ON Q.`driverId` = D.`driverId` WHERE Q.`raceId` = 23 AND Q.`q2` IS NOT NULL
SELECT `races`.`year`, `races`.`name`, `races`.`date`, `races`.`time` FROM `drivers` INNER JOIN `qualifying` ON `drivers`.`driverId` = `qualifying`.`driverId` INNER JOIN `races` ON `qualifying`.`raceId` = `races`.`raceId` WHERE `drivers`.`dob` = (SELECT MAX(`dob`) FROM `drivers`) ORDER BY `races`.`date` LIMIT 1
SELECT COUNT(DISTINCT `drivers`.`driverId`) FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `status` ON `results`.`statusId` = `status`.`statusId` WHERE `drivers`.`nationality` = 'American' AND `status`.`status` = 'Puncture'
SELECT `T1`.`name`, `T1`.`url` FROM `constructors` AS `T1` INNER JOIN `constructorStandings` AS `T2` ON `T1`.`constructorId` = `T2`.`constructorId` WHERE `T1`.`nationality` = 'Italian' ORDER BY `T2`.`points` DESC LIMIT 1
SELECT `url` FROM `constructors` WHERE `constructorId` = (SELECT `constructorId` FROM `constructorStandings` GROUP BY `constructorId` ORDER BY SUM(`wins`) DESC LIMIT 1)
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `lapTimes` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` INNER JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` WHERE `races`.`name` = 'French Grand Prix' AND `lapTimes`.`lap` = 3 ORDER BY `lapTimes`.`milliseconds` DESC LIMIT 1
SELECT `races`.`name`, MIN(`lapTimes`.`milliseconds`) AS `fastest_time` FROM `lapTimes` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `lapTimes`.`lap` = 1 GROUP BY `races`.`name` ORDER BY `fastest_time` ASC LIMIT 1
SELECT AVG(`fastestLapTime`) FROM `results` AS R INNER JOIN `races` AS Ra ON R.`raceId` = Ra.`raceId` WHERE Ra.`name` = 'United States Grand Prix' AND Ra.`year` = 2006 AND R.`positionOrder` < 11
SELECT `d`.`forename`, `d`.`surname`, AVG(`p`.`duration`) AS `avg_duration` FROM `drivers` AS `d` INNER JOIN `pitStops` AS `p` ON `d`.`driverId` = `p`.`driverId` WHERE `d`.`nationality` = 'German' AND `d`.`dob` > '1980-01-01' AND `d`.`dob` < '1985-12-31' GROUP BY `d`.`driverId` ORDER BY `avg_duration` ASC LIMIT 3
SELECT D.`forename`, D.`surname`, R.`time` FROM `results` AS R INNER JOIN `races` AS RA ON R.`raceId` = RA.`raceId` INNER JOIN `drivers` AS D ON R.`driverId` = D.`driverId` WHERE RA.`name` = 'Canadian Grand Prix' AND RA.`year` = 2008 AND R.`positionOrder` = 1
SELECT `constructors`.`constructorRef`, `constructors`.`url` FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` INNER JOIN `constructors` ON `results`.`constructorId` = `constructors`.`constructorId` WHERE `races`.`year` = 2009 AND `races`.`name` = 'Singapore Grand Prix' AND `results`.`positionOrder` = 1
SELECT `forename`, `surname`, `dob` FROM `drivers` WHERE `nationality` = 'Austrian' AND strftime('%Y', `dob`) BETWEEN '1981' AND '1991'
SELECT `forename` || ' ' || `surname` AS `full_name`, `url`, `dob` FROM `drivers` WHERE `nationality` = 'German' AND strftime('%Y', `dob`) BETWEEN '1971' AND '1985' ORDER BY `dob` DESC
SELECT `location`, `country`, `lat`, `lng` FROM `circuits` WHERE `name` = 'Hungaroring'
SELECT SUM(`cr`.`points`) AS `total_points`, `c`.`name`, `c`.`nationality` FROM `constructorResults` AS `cr` INNER JOIN `races` AS `r` ON `cr`.`raceId` = `r`.`raceId` INNER JOIN `constructors` AS `c` ON `cr`.`constructorId` = `c`.`constructorId` WHERE `r`.`name` = 'Monaco Grand Prix' AND `r`.`year` BETWEEN 1980 AND 2010 GROUP BY `c`.`constructorId` ORDER BY `total_points` DESC LIMIT 1
SELECT AVG(`points`) FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' AND `races`.`name` = 'Turkish Grand Prix'
SELECT AVG(race_count) FROM (SELECT COUNT(`raceId`) AS race_count FROM `races` WHERE `date` BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY `year`)
SELECT `nationality` FROM `drivers` GROUP BY `nationality` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `wins` FROM `driverStandings` WHERE `position` = 91
SELECT T3.name FROM `results` AS T1 INNER JOIN `races` AS T3 ON T1.raceId = T3.raceId ORDER BY T1.fastestLapTime ASC LIMIT 1
SELECT `circuits`.`location`, `circuits`.`country` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`date` = (SELECT MAX(`date`) FROM `races`)
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `qualifying` INNER JOIN `races` ON `qualifying`.`raceId` = `races`.`raceId` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `races`.`year` = 2008 AND `circuits`.`name` = 'Marina Bay Street Circuit' AND `qualifying`.`position` = 1 AND `qualifying`.`q3` = (SELECT MIN(`q3`) FROM `qualifying` WHERE `raceId` = `races`.`raceId`)
SELECT `drivers`.`forename` || ' ' || `drivers`.`surname` AS `full_name`, `drivers`.`nationality`, `races`.`name` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`dob` = (SELECT MAX(`dob`) FROM `drivers`) ORDER BY `races`.`date` ASC LIMIT 1
SELECT COUNT(*) FROM `results` AS R INNER JOIN `races` AS Ra ON R.`raceId` = Ra.`raceId` WHERE Ra.`name` = 'Canadian Grand Prix' AND R.`statusId` = 3 AND R.`driverId` = (SELECT `driverId` FROM `results` AS R2 INNER JOIN `races` AS Ra2 ON R2.`raceId` = Ra2.`raceId` WHERE Ra2.`name` = 'Canadian Grand Prix' AND R2.`statusId` = 3 GROUP BY R2.`driverId` ORDER BY COUNT(*) DESC LIMIT 1)
SELECT `drivers`.`forename`, `drivers`.`surname`, SUM(`driverStandings`.`wins`) AS `total_wins` FROM `drivers` INNER JOIN `driverStandings` ON `drivers`.`driverId` = `driverStandings`.`driverId` WHERE `drivers`.`dob` = (SELECT MIN(`dob`) FROM `drivers`) GROUP BY `drivers`.`driverId`
SELECT MAX(`duration`) FROM `pitStops`
SELECT MIN(`milliseconds`) FROM `lapTimes`
SELECT MAX(`duration`) FROM `pitStops` INNER JOIN `drivers` ON `pitStops`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT `lap` FROM `pitStops` AS ps INNER JOIN `drivers` AS d ON ps.`driverId` = d.`driverId` INNER JOIN `races` AS r ON ps.`raceId` = r.`raceId` WHERE d.`forename` = 'Lewis' AND d.`surname` = 'Hamilton' AND r.`name` = 'Australian Grand Prix' AND r.`year` = 2011
SELECT `drivers`.`driverId`, `drivers`.`forename`, `drivers`.`surname`, `pitStops`.`duration` FROM `pitStops` INNER JOIN `races` ON `pitStops`.`raceId` = `races`.`raceId` INNER JOIN `drivers` ON `pitStops`.`driverId` = `drivers`.`driverId` WHERE `races`.`name` = 'Australian Grand Prix' AND `races`.`year` = 2011
SELECT MIN(`T2`.`time`) FROM `drivers` AS `T1` INNER JOIN `lapTimes` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` WHERE `T1`.`forename` = 'Lewis' AND `T1`.`surname` = 'Hamilton'
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `lapTimes` INNER JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` ORDER BY `lapTimes`.`milliseconds` ASC LIMIT 1
SELECT `c`.`name`, `lt`.`position` FROM `lapTimes` AS `lt` INNER JOIN `races` AS `r` ON `lt`.`raceId` = `r`.`raceId` INNER JOIN `circuits` AS `c` ON `r`.`circuitId` = `c`.`circuitId` INNER JOIN `drivers` AS `d` ON `lt`.`driverId` = `d`.`driverId` WHERE `d`.`forename` = 'Lewis' AND `d`.`surname` = 'Hamilton' AND `lt`.`time` = (SELECT MIN(`time`) FROM `lapTimes` WHERE `driverId` = `d`.`driverId`)
SELECT MIN(`time`) FROM `lapTimes` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Austrian Grand Prix Circuit'
SELECT `c`.`name`, MIN(`lt`.`time`) AS `lap_record` FROM `lapTimes` AS `lt` INNER JOIN `races` AS `r` ON `lt`.`raceId` = `r`.`raceId` INNER JOIN `circuits` AS `c` ON `r`.`circuitId` = `c`.`circuitId` WHERE `c`.`country` = 'Italy' GROUP BY `c`.`name`
SELECT `races`.`name` FROM `races` INNER JOIN `lapTimes` ON `races`.`raceId` = `lapTimes`.`raceId` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Austrian Grand Prix Circuit' ORDER BY `lapTimes`.`milliseconds` ASC LIMIT 1
SELECT `P`.`duration` FROM `pitStops` AS `P` INNER JOIN `lapTimes` AS `L` ON `P`.`raceId` = `L`.`raceId` AND `P`.`driverId` = `L`.`driverId` INNER JOIN `races` AS `R` ON `L`.`raceId` = `R`.`raceId` INNER JOIN `circuits` AS `C` ON `R`.`circuitId` = `C`.`circuitId` WHERE `C`.`name` = 'Austrian Grand Prix Circuit' AND `L`.`time` = (SELECT MIN(`time`) FROM `lapTimes` WHERE `raceId` = `R`.`raceId`)
SELECT `c`.`lat`, `c`.`lng` FROM `circuits` AS `c` INNER JOIN `lapTimes` AS `lt` ON `c`.`circuitId` = `lt`.`raceId` WHERE `lt`.`time` = '1:29.488'
SELECT AVG(`milliseconds`) FROM `pitStops` AS ps INNER JOIN `drivers` AS d ON ps.`driverId` = d.`driverId` WHERE d.`forename` = 'Lewis' AND d.`surname` = 'Hamilton'
SELECT AVG(`milliseconds`) FROM `lapTimes` AS LT INNER JOIN `races` AS R ON LT.`raceId` = R.`raceId` INNER JOIN `circuits` AS C ON R.`circuitId` = C.`circuitId` WHERE C.`country` = 'Italy'
SELECT `player_api_id` FROM `Player_Attributes` ORDER BY `overall_rating` DESC LIMIT 1
SELECT `player_name`, `height` FROM `Player` ORDER BY `height` DESC LIMIT 1
SELECT `preferred_foot` FROM `Player_Attributes` WHERE `potential` = (SELECT MIN(`potential`) FROM `Player_Attributes`)
SELECT COUNT(`id`) FROM `Player_Attributes` WHERE `overall_rating` >= 60 AND `overall_rating` < 65 AND `defensive_work_rate` = 'low'
SELECT `player_api_id` FROM `Player_Attributes` ORDER BY `crossing` DESC LIMIT 5
SELECT `L`.`name` FROM `Match` AS `M` INNER JOIN `League` AS `L` ON `M`.`league_id` = `L`.`id` WHERE `M`.`season` = '2015/2016' GROUP BY `L`.`name` ORDER BY SUM(`M`.`home_team_goal` + `M`.`away_team_goal`) DESC LIMIT 1
SELECT `T`.`team_long_name` FROM `Match` AS `M` INNER JOIN `Team` AS `T` ON `M`.`home_team_api_id` = `T`.`team_api_id` WHERE `M`.`season` = '2015/2016' AND `M`.`home_team_goal` < `M`.`away_team_goal` GROUP BY `M`.`home_team_api_id` ORDER BY COUNT(`M`.`id`) ASC LIMIT 1
SELECT `player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` ORDER BY `penalties` DESC LIMIT 10
SELECT `T`.`team_long_name` FROM `Match` AS `M` INNER JOIN `League` AS `L` ON `M`.`league_id` = `L`.`id` INNER JOIN `Team` AS `T` ON `M`.`away_team_api_id` = `T`.`team_api_id` WHERE `L`.`name` = 'Scotland Premier League' AND `M`.`season` = '2009/2010' AND `M`.`away_team_goal` > `M`.`home_team_goal` GROUP BY `T`.`team_long_name` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `team_long_name`, `buildUpPlaySpeed` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` ORDER BY `buildUpPlaySpeed` DESC LIMIT 4
SELECT `L`.`name` FROM `Match` AS `M` INNER JOIN `League` AS `L` ON `M`.`league_id` = `L`.`id` WHERE `M`.`season` = '2015/2016' AND `M`.`home_team_goal` = `M`.`away_team_goal` GROUP BY `L`.`id` ORDER BY COUNT(*) DESC LIMIT 1
SELECT STRFTIME('%Y', 'now') - STRFTIME('%Y', `birthday`) AS age FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `sprint_speed` >= 97 AND STRFTIME('%Y', `date`) BETWEEN '2013' AND '2015'
SELECT `L`.`name`, COUNT(`M`.`league_id`) AS `match_count` FROM `Match` AS `M` INNER JOIN `League` AS `L` ON `M`.`league_id` = `L`.`id` GROUP BY `M`.`league_id` ORDER BY `match_count` DESC LIMIT 1
SELECT AVG(`height`) FROM `Player` WHERE `birthday` >= '1990-01-01 00:00:00' AND `birthday` < '1996-01-01 00:00:00'
SELECT `player_api_id` FROM `Player_Attributes` WHERE `overall_rating` = (SELECT MAX(`overall_rating`) FROM `Player_Attributes` WHERE substr(`date`, 1, 4) = '2010') AND substr(`date`, 1, 4) = '2010'
SELECT `team_fifa_api_id` FROM `Team_Attributes` WHERE `buildUpPlaySpeed` > 50 AND `buildUpPlaySpeed` < 60
SELECT `team_long_name` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE strftime('%Y', `Team_Attributes`.`date`) = '2012' AND `Team_Attributes`.`buildUpPlayPassing` > (SELECT AVG(`buildUpPlayPassing`) FROM `Team_Attributes` WHERE strftime('%Y', `date`) = '2012' AND `buildUpPlayPassing` IS NOT NULL)
SELECT CAST(SUM(CASE WHEN `preferred_foot` = 'left' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`player_fifa_api_id`) FROM `Player` WHERE strftime('%Y', `birthday`) BETWEEN '1987' AND '1992'
SELECT `L`.`name` FROM `Match` AS `M` INNER JOIN `League` AS `L` ON `M`.`league_id` = `L`.`id` GROUP BY `L`.`name` ORDER BY SUM(`M`.`home_team_goal` + `M`.`away_team_goal`) ASC LIMIT 5
SELECT CAST(SUM(`T1`.`long_shots`) AS REAL) / COUNT(`T1`.`player_fifa_api_id`) FROM `Player_Attributes` AS `T1` INNER JOIN `Player` AS `T2` ON `T1`.`player_fifa_api_id` = `T2`.`player_fifa_api_id` WHERE `T2`.`player_name` = 'Ahmed Samir Farag'
SELECT `P`.`player_name` FROM `Player` AS `P` INNER JOIN `Player_Attributes` AS `PA` ON `P`.`player_api_id` = `PA`.`player_api_id` WHERE `P`.`height` > 180 GROUP BY `P`.`player_name` ORDER BY AVG(`PA`.`heading_accuracy`) DESC LIMIT 10
SELECT `T`.`team_long_name` FROM `Team_Attributes` AS `TA` INNER JOIN `Team` AS `T` ON `TA`.`team_api_id` = `T`.`team_api_id` WHERE `TA`.`buildUpPlayDribblingClass` = 'Normal' AND `TA`.`date` >= '2014-01-01 00:00:00' AND `TA`.`date` <= '2014-01-31 00:00:00' AND `TA`.`chanceCreationPassing` < (SELECT AVG(`chanceCreationPassing`) FROM `Team_Attributes`) ORDER BY `TA`.`chanceCreationPassing` DESC
SELECT `L`.`name` FROM `Match` AS `M` INNER JOIN `League` AS `L` ON `M`.`league_id` = `L`.`id` WHERE `M`.`season` = '2009/2010' GROUP BY `L`.`name` HAVING AVG(`M`.`home_team_goal`) > AVG(`M`.`away_team_goal`)
SELECT `team_short_name` FROM `Team` WHERE `team_long_name` = 'Queens Park Rangers'
SELECT `player_name` FROM `Player` WHERE substr(`birthday`, 1, 7) = '1970-10'
SELECT `attacking_work_rate` FROM `Player_Attributes` AS PA INNER JOIN `Player` AS P ON PA.`player_api_id` = P.`player_api_id` WHERE P.`player_name` = 'Franco Zennaro'
SELECT `buildUpPlayPositioningClass` FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'ADO Den Haag'
SELECT `heading_accuracy` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Francois Affolter' AND `Player_Attributes`.`date` = '2014-09-18 00:00:00'
SELECT `overall_rating` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Gabriel Tamas' AND strftime('%Y', `Player_Attributes`.`date`) = '2011'
SELECT COUNT(`id`) FROM `Match` AS M INNER JOIN `League` AS L ON M.`league_id` = L.`id` WHERE M.`season` = '2015/2016' AND L.`name` = 'Scotland Premier League'
SELECT `preferred_foot` FROM `Player` WHERE `birthday` = (SELECT MAX(`birthday`) FROM `Player`)
SELECT `player_name` FROM `Player` WHERE `player_api_id` IN (SELECT `player_api_id` FROM `Player_Attributes` WHERE `potential` = (SELECT MAX(`potential`) FROM `Player_Attributes`))
SELECT COUNT(`Player`.`id`) FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`weight` < 130 AND `Player_Attributes`.`preferred_foot` = 'left'
SELECT `team_short_name` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team_Attributes`.`chanceCreationPassingClass` = 'Risky'
SELECT `T1`.`defensive_work_rate` FROM `Player_Attributes` AS `T1` INNER JOIN `Player` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T2`.`player_name` = 'David Wilson'
SELECT `birthday` FROM `Player` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player_Attributes` ORDER BY `overall_rating` DESC LIMIT 1)
SELECT `name` FROM `League` WHERE `country_id` = (SELECT `id` FROM `Country` WHERE `name` = 'Netherlands')
SELECT AVG(`home_team_goal`) FROM `Match` INNER JOIN `Country` ON `Match`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Poland' AND `Match`.`season` = '2010/2011'
SELECT `player_name` FROM `Player` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player_Attributes` WHERE `player_api_id` IN (SELECT `player_api_id` FROM `Player` WHERE `height` = (SELECT MAX(`height`) FROM `Player`) OR `height` = (SELECT MIN(`height`) FROM `Player`)) GROUP BY `player_api_id` ORDER BY AVG(`finishing`) DESC LIMIT 1)
SELECT `player_name` FROM `Player` WHERE `height` > 180
SELECT COUNT(`id`) FROM `Player` WHERE strftime('%Y', `birthday`) > '1990'
SELECT COUNT(`Player`.`id`) FROM `Player` WHERE `Player`.`player_name` LIKE 'Adam %' AND `Player`.`weight` > 170
SELECT DISTINCT `P`.`player_name` FROM `Player_Attributes` AS `PA` INNER JOIN `Player` AS `P` ON `PA`.`player_api_id` = `P`.`player_api_id` WHERE `PA`.`overall_rating` > 80 AND strftime('%Y', `PA`.`date`) BETWEEN '2008' AND '2010'
SELECT `potential` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Aaron Doran'
SELECT `player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`preferred_foot` = 'left'
SELECT `team_long_name` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `buildUpPlaySpeedClass` = 'Fast'
SELECT `buildUpPlayPassingClass` FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_short_name` = 'CLB'
SELECT `team_short_name` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team_Attributes`.`buildUpPlayPassing` > 70
SELECT AVG(t2.`overall_rating`) FROM `Player` AS t1 INNER JOIN `Player_Attributes` AS t2 ON t1.`player_api_id` = t2.`player_api_id` WHERE strftime('%Y', t2.`date`) BETWEEN '2010' AND '2015' AND t1.`height` > 170
SELECT `player_name` FROM `Player` ORDER BY `height` ASC LIMIT 1
SELECT `name` FROM `Country` WHERE `id` = (SELECT `country_id` FROM `League` WHERE `name` = 'Italy Serie A')
SELECT `T`.`team_short_name` FROM `Team` AS `T` INNER JOIN `Team_Attributes` AS `TA` ON `T`.`team_api_id` = `TA`.`team_api_id` WHERE `TA`.`buildUpPlaySpeed` = 31 AND `TA`.`buildUpPlayDribbling` = 53 AND `TA`.`buildUpPlayPassing` = 32
SELECT AVG(`overall_rating`) FROM `Player_Attributes` AS PA INNER JOIN `Player` AS P ON PA.`player_api_id` = P.`player_api_id` WHERE P.`player_name` = 'Aaron Doran'
SELECT COUNT(`id`) FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `League`.`name` = 'Germany 1. Bundesliga' AND strftime('%Y-%m', `date`) BETWEEN '2008-08' AND '2008-10'
SELECT `team_short_name` FROM `Team` INNER JOIN `Match` ON `Team`.`team_api_id` = `Match`.`home_team_api_id` WHERE `home_team_goal` = 10
SELECT `player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`potential` = 61 AND `Player_Attributes`.`balance` = (SELECT MAX(`balance`) FROM `Player_Attributes` WHERE `potential` = 61)
SELECT (SUM(CASE WHEN P.player_name = 'Abdou Diallo' THEN PA.ball_control ELSE 0 END) / COUNT(CASE WHEN P.player_name = 'Abdou Diallo' THEN PA.id ELSE NULL END)) - (SUM(CASE WHEN P.player_name = 'Aaron Appindangoye' THEN PA.ball_control ELSE 0 END) / COUNT(CASE WHEN P.player_name = 'Aaron Appindangoye' THEN PA.id ELSE NULL END)) AS difference FROM `Player_Attributes` AS PA INNER JOIN `Player` AS P ON PA.player_api_id = P.player_api_id
SELECT `team_long_name` FROM `Team` WHERE `team_short_name` = 'GEN'
SELECT `player_name` FROM `Player` WHERE `player_name` IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY `birthday` ASC LIMIT 1
SELECT `player_name` FROM `Player` ORDER BY `height` DESC LIMIT 1
SELECT COUNT(`T1`.`player_api_id`) FROM `Player_Attributes` AS `T1` WHERE `T1`.`preferred_foot` = 'left' AND `T1`.`attacking_work_rate` = 'low'
SELECT `name` FROM `Country` WHERE `id` = (SELECT `country_id` FROM `League` WHERE `name` = 'Belgium Jupiler League')
SELECT `name` FROM `League` WHERE `country_id` = (SELECT `id` FROM `Country` WHERE `name` = 'Germany')
SELECT `player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` ORDER BY `Player_Attributes`.`overall_rating` DESC LIMIT 1
SELECT COUNT(DISTINCT `Player`.`player_api_id`) FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE strftime('%Y', `Player`.`birthday`) < '1986' AND `Player_Attributes`.`defensive_work_rate` = 'high'
SELECT `player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `player_name` IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY `crossing` DESC LIMIT 1
SELECT `T1`.`heading_accuracy` FROM `Player_Attributes` AS `T1` INNER JOIN `Player` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T2`.`player_name` = 'Ariel Borysiuk'
SELECT COUNT(DISTINCT `Player`.`player_api_id`) FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`height` > 180 AND `Player_Attributes`.`volleys` > 70
SELECT `player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`volleys` > 70 AND `Player_Attributes`.`dribbling` > 70
SELECT COUNT(`id`) FROM `Match` INNER JOIN `Country` ON `Match`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Belgium' AND `Match`.`season` = '2008/2009'
SELECT `pa`.`long_passing` FROM `Player_Attributes` AS `pa` INNER JOIN `Player` AS `p` ON `pa`.`player_api_id` = `p`.`player_api_id` WHERE `p`.`birthday` = (SELECT MIN(`birthday`) FROM `Player`) LIMIT 1
SELECT COUNT(`id`) FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `League`.`name` = 'Belgium Jupiler League' AND SUBSTR(`date`, 1, 7) = '2009-04'
SELECT `L`.`name` FROM `Match` AS `M` INNER JOIN `League` AS `L` ON `M`.`league_id` = `L`.`id` WHERE `M`.`season` = '2008/2009' GROUP BY `L`.`name` ORDER BY COUNT(`M`.`id`) DESC LIMIT 1
SELECT AVG(`overall_rating`) FROM `Player_Attributes` AS pa INNER JOIN `Player` AS p ON pa.`player_api_id` = p.`player_api_id` WHERE strftime('%Y', p.`birthday`) < '1986'
SELECT ((SELECT `overall_rating` FROM `Player_Attributes` AS PA INNER JOIN `Player` AS P ON PA.`player_api_id` = P.`player_api_id` WHERE P.`player_name` = 'Ariel Borysiuk' ORDER BY PA.`date` DESC LIMIT 1) - (SELECT `overall_rating` FROM `Player_Attributes` AS PA INNER JOIN `Player` AS P ON PA.`player_api_id` = P.`player_api_id` WHERE P.`player_name` = 'Paulin Puel' ORDER BY PA.`date` DESC LIMIT 1)) / (SELECT `overall_rating` FROM `Player_Attributes` AS PA INNER JOIN `Player` AS P ON PA.`player_api_id` = P.`player_api_id` WHERE P.`player_name` = 'Paulin Puel' ORDER BY PA.`date` DESC LIMIT 1) * 100 AS percentage_difference
SELECT AVG(`buildUpPlaySpeed`) FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'Heart of Midlothian'
SELECT AVG(T1.`overall_rating`) FROM `Player_Attributes` AS T1 INNER JOIN `Player` AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Pietro Marino'
SELECT SUM(`crossing`) FROM `Player_Attributes` AS T1 INNER JOIN `Player` AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Aaron Lennox'
SELECT MAX(`chanceCreationPassing`), `chanceCreationPassingClass` FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'Ajax'
SELECT `preferred_foot` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Abdou Diallo' LIMIT 1
SELECT MAX(T1.`overall_rating`) FROM `Player_Attributes` AS T1 INNER JOIN `Player` AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Dorlan Pabon'
SELECT AVG(`away_team_goal`) FROM `Match` INNER JOIN `Team` ON `Match`.`away_team_api_id` = `Team`.`team_api_id` INNER JOIN `Country` ON `Match`.`country_id` = `Country`.`id` WHERE `Team`.`team_long_name` = 'Parma' AND `Country`.`name` = 'Italy'
SELECT `player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`overall_rating` = 77 AND `Player_Attributes`.`date` LIKE '2016-06-23%' ORDER BY `Player`.`birthday` ASC LIMIT 1
SELECT `T1`.`overall_rating` FROM `Player_Attributes` AS `T1` INNER JOIN `Player` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T2`.`player_name` = 'Aaron Mooy' AND `T1`.`date` LIKE '2016-02-04%'
SELECT `potential` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Francesco Parravicini' AND `Player_Attributes`.`date` = '2010-08-30 00:00:00'
SELECT `attacking_work_rate` FROM `Player_Attributes` AS PA INNER JOIN `Player` AS P ON PA.player_api_id = P.player_api_id WHERE P.player_name = 'Francesco Migliore' AND PA.date LIKE '2015-05-01%'
SELECT `defensive_work_rate` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Kevin Berigaud' AND `Player_Attributes`.`date` = '2013-02-22 00:00:00'
SELECT MIN(`date`) FROM `Player_Attributes` AS PA INNER JOIN `Player` AS P ON PA.`player_api_id` = P.`player_api_id` WHERE P.`player_name` = 'Kevin Constant' AND PA.`crossing` = (SELECT MAX(`crossing`) FROM `Player_Attributes` AS PA2 INNER JOIN `Player` AS P2 ON PA2.`player_api_id` = P2.`player_api_id` WHERE P2.`player_name` = 'Kevin Constant')
SELECT `buildUpPlaySpeedClass` FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'Willem II' AND `Team_Attributes`.`date` = '2012-02-22'
SELECT `buildUpPlayDribblingClass` FROM `Team_Attributes` AS T1 INNER JOIN `Team` AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T2.`team_short_name` = 'LEI' AND T1.`date` = '2015-09-10 00:00:00'
SELECT `buildUpPlayPassingClass` FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'FC Lorient' AND `Team_Attributes`.`date` LIKE '2010-02-22%'
SELECT `chanceCreationPassingClass` FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'PEC Zwolle' AND `Team_Attributes`.`date` = '2013-09-20 00:00:00'
SELECT `chanceCreationCrossingClass` FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'Hull City' AND `Team_Attributes`.`date` = '2010-02-22 00:00:00'
SELECT `defenceAggressionClass` FROM `Team_Attributes` AS T1 INNER JOIN `Team` AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Hannover 96' AND T1.date LIKE '2015-09-10%'
SELECT AVG(`overall_rating`) FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Marko Arnautovic' AND substr(`Player_Attributes`.`date`, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'
SELECT (ld.overall_rating - jb.overall_rating) * 100.0 / ld.overall_rating AS percentage FROM (SELECT `overall_rating` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Landon Donovan') AND `date` <= '2013-07-12' ORDER BY `date` DESC LIMIT 1) AS ld, (SELECT `overall_rating` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Jordan Bowery') AND `date` <= '2013-07-12' ORDER BY `date` DESC LIMIT 1) AS jb
SELECT `player_name` FROM `Player` WHERE `height` = (SELECT MAX(`height`) FROM `Player`)
SELECT `player_api_id` FROM `Player` ORDER BY `weight` DESC LIMIT 10
SELECT `player_name` FROM `Player` WHERE (julianday('now') - julianday(`birthday`)) / 365.25 > 34
SELECT SUM(`home_team_goal`) FROM `Match` AS M INNER JOIN `Player` AS P ON M.`home_player_1` = P.`player_api_id` OR M.`home_player_2` = P.`player_api_id` OR M.`home_player_3` = P.`player_api_id` OR M.`home_player_4` = P.`player_api_id` OR M.`home_player_5` = P.`player_api_id` OR M.`home_player_6` = P.`player_api_id` OR M.`home_player_7` = P.`player_api_id` OR M.`home_player_8` = P.`player_api_id` OR M.`home_player_9` = P.`player_api_id` OR M.`home_player_10` = P.`player_api_id` OR M.`home_player_11` = P.`player_api_id` WHERE P.`player_name` = 'Aaron Lennon'
SELECT SUM(M.`away_team_goal`) FROM `Match` AS M INNER JOIN `Player` AS P ON (M.`away_player_1` = P.`player_api_id` OR M.`away_player_2` = P.`player_api_id` OR M.`away_player_3` = P.`player_api_id` OR M.`away_player_4` = P.`player_api_id` OR M.`away_player_5` = P.`player_api_id` OR M.`away_player_6` = P.`player_api_id` OR M.`away_player_7` = P.`player_api_id` OR M.`away_player_8` = P.`player_api_id` OR M.`away_player_9` = P.`player_api_id` OR M.`away_player_10` = P.`player_api_id` OR M.`away_player_11` = P.`player_api_id`) WHERE P.`player_name` IN ('Daan Smith', 'Filipe Ferreira')
SELECT SUM(`home_team_goal`) FROM `Match` AS M INNER JOIN `Player` AS P ON M.`home_player_1` = P.`player_api_id` OR M.`home_player_2` = P.`player_api_id` OR M.`home_player_3` = P.`player_api_id` OR M.`home_player_4` = P.`player_api_id` OR M.`home_player_5` = P.`player_api_id` OR M.`home_player_6` = P.`player_api_id` OR M.`home_player_7` = P.`player_api_id` OR M.`home_player_8` = P.`player_api_id` OR M.`home_player_9` = P.`player_api_id` OR M.`home_player_10` = P.`player_api_id` OR M.`home_player_11` = P.`player_api_id` WHERE (julianday('now') - julianday(P.`birthday`)) / 365.25 < 31
SELECT `player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` ORDER BY `overall_rating` DESC LIMIT 1
SELECT `player_name` FROM `Player` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player_Attributes` ORDER BY `potential` DESC LIMIT 1)
SELECT `player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`attacking_work_rate` = 'high'
SELECT `player_name` FROM `Player` WHERE `player_api_id` IN (SELECT `player_api_id` FROM `Player_Attributes` WHERE `finishing` = 1) ORDER BY `birthday` LIMIT 1
SELECT `player_name` FROM `Player` INNER JOIN `Country` ON `Country`.`id` = `Player`.`player_api_id` WHERE `Country`.`name` = 'Belgium'
SELECT DISTINCT `P`.`player_name`, `C`.`name` FROM `Player_Attributes` AS `PA` INNER JOIN `Player` AS `P` ON `PA`.`player_api_id` = `P`.`player_api_id` INNER JOIN `Country` AS `C` ON `P`.`player_api_id` = `C`.`id` WHERE `PA`.`vision` > 89
SELECT `C`.`name` FROM `Country` AS `C` INNER JOIN `Player` AS `P` ON `C`.`id` = `P`.`id` GROUP BY `C`.`name` ORDER BY AVG(`P`.`weight`) DESC LIMIT 1
SELECT `T1`.`team_long_name` FROM `Team` AS `T1` INNER JOIN `Team_Attributes` AS `T2` ON `T1`.`team_api_id` = `T2`.`team_api_id` WHERE `T2`.`buildUpPlaySpeedClass` = 'Slow'
SELECT `T`.`team_short_name` FROM `Team` AS `T` INNER JOIN `Team_Attributes` AS `TA` ON `T`.`team_api_id` = `TA`.`team_api_id` WHERE `TA`.`chanceCreationPassingClass` = 'Safe'
SELECT AVG(`height`) FROM `Player` WHERE `player_api_id` IN (SELECT `player_api_id` FROM `Player_Attributes` WHERE `player_fifa_api_id` IN (SELECT `player_fifa_api_id` FROM `Player` WHERE `player_api_id` IN (SELECT `player_api_id` FROM `Match` WHERE `country_id` = (SELECT `id` FROM `Country` WHERE `name` = 'Italy'))))
SELECT `player_name` FROM `Player` WHERE `height` > 180 ORDER BY `player_name` ASC LIMIT 3
SELECT COUNT(`player_name`) FROM `Player` WHERE `player_name` LIKE 'Aaron%' AND `birthday` > '1990-12-31'
SELECT (SELECT `jumping` FROM `Player_Attributes` WHERE `id` = 6) - (SELECT `jumping` FROM `Player_Attributes` WHERE `id` = 23) AS `jumping_difference`
SELECT `player_api_id` FROM `Player_Attributes` WHERE `preferred_foot` = 'right' AND `potential` = (SELECT MIN(`potential`) FROM `Player_Attributes` WHERE `preferred_foot` = 'right') LIMIT 5
SELECT COUNT(DISTINCT `player_api_id`) FROM `Player_Attributes` WHERE `crossing` = (SELECT MAX(`crossing`) FROM `Player_Attributes`) AND `preferred_foot` = 'left'
SELECT CAST(COUNT(CASE WHEN `stamina` > 80 AND `strength` > 80 THEN 1 END) AS REAL) * 100 / COUNT(`id`) FROM `Player_Attributes`
SELECT `C`.`name` FROM `Country` AS `C` INNER JOIN `League` AS `L` ON `C`.`id` = `L`.`country_id` WHERE `L`.`name` = 'Poland Ekstraklasa'
SELECT `home_team_goal`, `away_team_goal` FROM `Match` WHERE `date` LIKE '2008-09-24%' AND `league_id` = (SELECT `id` FROM `League` WHERE `name` = 'Belgium Jupiler League')
SELECT `sprint_speed`, `agility`, `acceleration` FROM `Player_Attributes` AS PA INNER JOIN `Player` AS P ON PA.`player_api_id` = P.`player_api_id` WHERE P.`player_name` = 'Alexis Blin'
SELECT DISTINCT `T2`.`buildUpPlaySpeedClass` FROM `Team` AS `T1` INNER JOIN `Team_Attributes` AS `T2` ON `T1`.`team_api_id` = `T2`.`team_api_id` WHERE `T1`.`team_long_name` = 'KSV Cercle Brugge'
SELECT COUNT(`M`.`id`) FROM `Match` AS `M` INNER JOIN `League` AS `L` ON `M`.`league_id` = `L`.`id` WHERE `M`.`season` = '2015/2016' AND `L`.`name` = 'Italian Serie A'
SELECT MAX(`home_team_goal`) FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `League`.`name` = 'Netherlands Eredivisie'
SELECT `T1`.`finishing`, `T1`.`curve` FROM `Player_Attributes` AS `T1` INNER JOIN `Player` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` ORDER BY `T2`.`weight` DESC LIMIT 1
SELECT `L`.`name` FROM `Match` AS `M` INNER JOIN `League` AS `L` ON `M`.`league_id` = `L`.`id` WHERE `M`.`season` = '2015/2016' GROUP BY `L`.`name` ORDER BY COUNT(`M`.`id`) DESC LIMIT 4
SELECT `T`.`team_long_name` FROM `Match` AS `M` INNER JOIN `Team` AS `T` ON `M`.`away_team_api_id` = `T`.`team_api_id` ORDER BY `M`.`away_team_goal` DESC LIMIT 1
SELECT `player_name` FROM `Player` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player_Attributes` ORDER BY `overall_rating` DESC LIMIT 1)
SELECT CAST(COUNT(CASE WHEN `height` < 180 AND `overall_rating` > 70 THEN 1 END) AS REAL) * 100 / COUNT(`id`) FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id`
SELECT (CAST(SUM(CASE WHEN `Admission` = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`ID`)) - (CAST(SUM(CASE WHEN `Admission` = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`ID`)) AS deviation FROM `Patient` WHERE `SEX` = 'M'
SELECT CAST(SUM(CASE WHEN strftime('%Y', `Birthday`) > '1930' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`ID`) AS percentage FROM `Patient` WHERE `SEX` = 'F'
SELECT CAST(SUM(CASE WHEN `Admission` = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`ID`) FROM `Patient` WHERE `Birthday` BETWEEN '1930-01-01' AND '1940-12-31';
SELECT CAST(COUNT(CASE WHEN `Admission` = '-' THEN `ID` END) AS REAL) / COUNT(CASE WHEN `Admission` = '+' THEN `ID` END) FROM `Patient` WHERE `Diagnosis` = 'SLE'
SELECT `Patient`.`Diagnosis`, `Laboratory`.`Date` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`ID` = '30609'
SELECT `Patient`.`SEX`, `Patient`.`Birthday`, `Examination`.`Examination Date`, `Examination`.`Symptoms` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`ID` = '163109'
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`LDH` > 500
SELECT `Patient`.`ID`, (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) AS age FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Examination`.`RVVT` = '+'
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Examination`.`Diagnosis` FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Examination`.`Thrombosis` = 2
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE strftime('%Y', `Patient`.`Birthday`) = '1937' AND `Laboratory`.`T-CHO` >= 250
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`ALB` < 3.5
SELECT CAST(SUM(CASE WHEN `P`.`SEX` = 'F' AND (`L`.`TP` < 6.0 OR `L`.`TP` > 8.5) THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`P`.`ID`) FROM `Patient` AS `P` INNER JOIN `Laboratory` AS `L` ON `P`.`ID` = `L`.`ID`
SELECT AVG(`aCL IgG`) FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Patient`.`Admission` = '+' AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) >= 50
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` WHERE `Patient`.`SEX` = 'F' AND strftime('%Y', `Patient`.`Description`) = '1997' AND `Patient`.`Admission` = '-'
SELECT MIN(strftime('%Y', `First Date`) - strftime('%Y', `Birthday`)) AS age FROM `Patient` WHERE `First Date` IS NOT NULL
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Examination`.`Thrombosis` = '1' AND `Examination`.`Examination Date` LIKE '1997%' AND `Patient`.`SEX` = 'F'
SELECT MAX(strftime('%Y', `Birthday`)) - MIN(strftime('%Y', `Birthday`)) AS age_gap FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Laboratory` WHERE `TG` >= 200)
SELECT `E`.`Symptoms`, `E`.`Diagnosis` FROM `Examination` AS `E` INNER JOIN `Patient` AS `P` ON `E`.`ID` = `P`.`ID` WHERE `E`.`Symptoms` IS NOT NULL ORDER BY `P`.`Birthday` DESC LIMIT 1
SELECT DIVIDE(COUNT(DISTINCT T1.ID), 12) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.Date BETWEEN '1998-01-01' AND '1998-12-31'
SELECT `Laboratory`.`Date`, strftime('%Y', `Patient`.`First Date`) - strftime('%Y', `Patient`.`Birthday`) AS `Initial_Age` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'SJS' ORDER BY `Patient`.`Birthday` ASC LIMIT 1
SELECT CAST(SUM(CASE WHEN `P`.`SEX` = 'M' AND `L`.`UA` <= 8.0 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN `P`.`SEX` = 'F' AND `L`.`UA` <= 6.5 THEN 1 ELSE 0 END) FROM `Patient` AS `P` INNER JOIN `Laboratory` AS `L` ON `P`.`ID` = `L`.`ID`
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` LEFT JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE (strftime('%Y', `Examination`.`Examination Date`) - strftime('%Y', `Patient`.`First Date`)) >= 1
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE strftime('%Y', `Patient`.`Birthday`) > '1975' AND strftime('%Y', `Examination`.`Examination Date`) BETWEEN '1990' AND '1993'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`T-BIL` >= 2.0
SELECT `Diagnosis` FROM `Examination` WHERE `Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY `Diagnosis` ORDER BY COUNT(`Diagnosis`) DESC LIMIT 1
SELECT AVG(1999 - CAST(strftime('%Y', `Birthday`) AS INTEGER)) FROM `Patient` WHERE `ID` IN (SELECT DISTINCT `ID` FROM `Laboratory` WHERE `Date` BETWEEN '1991-10-01' AND '1991-10-30')
SELECT (strftime('%Y', `Examination`.`Examination Date`) - strftime('%Y', `Patient`.`Birthday`)) AS age, `Examination`.`Diagnosis` FROM `Examination` INNER JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`HGB` = (SELECT MAX(`HGB`) FROM `Laboratory`) LIMIT 1
SELECT `ANA` FROM `Examination` WHERE `ID` = 3605340 AND `Examination Date` = '1996-12-02'
SELECT CASE WHEN `T-CHO` < 250 THEN 'Normal' ELSE 'High' END AS `Total Cholesterol Status` FROM `Laboratory` WHERE `ID` = 2927464 AND `Date` = '1995-09-04'
SELECT `SEX` FROM `Patient` WHERE `Diagnosis` = 'AORTITIS' ORDER BY `First Date` ASC LIMIT 1
SELECT `aCL IgM` FROM `Examination` WHERE `Diagnosis` = 'SLE' AND `Examination Date` = '1993-11-12' AND `ID` = (SELECT `ID` FROM `Patient` WHERE `Description` = '1994-02-19')
SELECT `SEX` FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Laboratory` WHERE `GPT` = 9 AND `Date` = '1992-06-12')
SELECT strftime('%Y', L.`Date`) - strftime('%Y', P.`Birthday`) AS age FROM Laboratory AS L INNER JOIN Patient AS P ON L.`ID` = P.`ID` WHERE L.`UA` = '8.4' AND L.`Date` = '1991-10-21'
SELECT COUNT(`Laboratory`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`First Date` = '1991-06-13' AND `Patient`.`Diagnosis` = 'SJS' AND strftime('%Y', `Laboratory`.`Date`) = '1995'
SELECT `p`.`Diagnosis` FROM `Patient` AS `p` INNER JOIN `Examination` AS `e` ON `p`.`ID` = `e`.`ID` WHERE `e`.`Diagnosis` = 'SLE' AND `e`.`Examination Date` = '1997-01-27'
SELECT `Examination`.`Symptoms` FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Patient`.`Birthday` = '1959-03-01' AND `Examination`.`Examination Date` = '1993-09-27'
SELECT (SUM(CASE WHEN strftime('%Y-%m', L.`Date`) = '1981-11' THEN L.`T-CHO` ELSE 0 END) - SUM(CASE WHEN strftime('%Y-%m', L.`Date`) = '1981-12' THEN L.`T-CHO` ELSE 0 END)) / SUM(CASE WHEN strftime('%Y-%m', L.`Date`) = '1981-11' THEN L.`T-CHO` ELSE 0 END) * 100 AS decrease_rate FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.Birthday = '1959-02-18'
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`Diagnosis` = 'Behcet' AND `Examination`.`Examination Date` BETWEEN '1997-01-01' AND '1997-12-31'
SELECT DISTINCT `Patient`.`ID` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`Date` BETWEEN '1987-07-06' AND '1996-01-31' AND `Laboratory`.`GPT` > 30 AND `Laboratory`.`ALB` < 4
SELECT `ID` FROM `Patient` WHERE `SEX` = 'F' AND strftime('%Y', `Birthday`) = '1964' AND `Admission` = '+'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Examination`.`Thrombosis` = 2 AND `Examination`.`ANA` = 'S' AND `Examination`.`aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM `Examination`)
SELECT CAST(SUM(CASE WHEN `UA` <= 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage FROM `Laboratory` WHERE `U-PRO` > 0 AND `U-PRO` < 30
SELECT (SUM(CASE WHEN `Diagnosis` = 'BEHCET' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM `Patient` WHERE `SEX` = 'M' AND strftime('%Y', `First Date`) = '1981'
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '-' AND `Laboratory`.`Date` LIKE '1991-10%' AND `Laboratory`.`T-BIL` < 2.0
SELECT COUNT(*) FROM `Examination` AS E INNER JOIN `Patient` AS P ON E.`ID` = P.`ID` WHERE E.`ANA Pattern` != 'P' AND P.`SEX` = 'F' AND P.`Birthday` BETWEEN '1980-01-01' AND '1989-12-31'
SELECT `SEX` FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Examination` WHERE `Diagnosis` = 'PSS') AND `ID` IN (SELECT `ID` FROM `Laboratory` WHERE `CRP` > 2 AND `CRE` = 1 AND `LDH` = 123)
SELECT AVG(`ALB`) FROM `Laboratory` AS L INNER JOIN `Patient` AS P ON L.`ID` = P.`ID` WHERE P.`SEX` = 'F' AND L.`PLT` > 400 AND P.`Diagnosis` = 'SLE'
SELECT `Symptoms` FROM `Examination` WHERE `Diagnosis` = 'SLE' GROUP BY `Symptoms` ORDER BY COUNT(`Symptoms`) DESC LIMIT 1
SELECT `Patient`.`Description`, `Patient`.`Diagnosis` FROM `Patient` WHERE `Patient`.`ID` = 48473
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` WHERE `Patient`.`SEX` = 'F' AND `Patient`.`Diagnosis` = 'APS'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE strftime('%Y', `Laboratory`.`Date`) = '1997' AND (`Laboratory`.`TP` <= 6 OR `Laboratory`.`TP` >= 8.5)
SELECT (SUM(CASE WHEN `Diagnosis` LIKE '%SLE%' THEN 1 ELSE 0 END) * 100.0 / SUM(CASE WHEN `Symptoms` LIKE '%thrombocytopenia%' THEN 1 ELSE 0 END)) AS proportion FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Symptoms` LIKE '%thrombocytopenia%'
SELECT CAST(SUM(CASE WHEN `SEX` = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`SEX`) AS percentage FROM `Patient` WHERE strftime('%Y', `Birthday`) = '1980' AND `Diagnosis` = 'RA'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Examination`.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND `Examination`.`Diagnosis` = 'Behcet' AND `Patient`.`Admission` = '-'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'F' AND `Laboratory`.`WBC` < 3.5
SELECT DATEDIFF(`Examination Date`, `First Date`) FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Patient`.`ID` = 821298
SELECT CASE WHEN `UA` > 8.0 AND `SEX` = 'M' OR `UA` > 6.5 AND `SEX` = 'F' THEN 'Yes' ELSE 'No' END AS `Uric Acid Normal Range` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`ID` = 57266
SELECT `Date` FROM `Laboratory` WHERE `ID` = '48473' AND `GOT` >= 60
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GOT` < 60 AND strftime('%Y', `Laboratory`.`Date`) = '1994'
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`GPT` >= 60
SELECT `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GPT` > 60 ORDER BY `Patient`.`Birthday` ASC
SELECT AVG(`LDH`) FROM `Laboratory` WHERE `LDH` < 500
SELECT `Patient`.`ID`, (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) AS `age` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`LDH` BETWEEN 600 AND 800
SELECT DISTINCT `Patient`.`ID`, `Patient`.`Admission` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`ALP` < 300
SELECT `Patient`.`ID`, CASE WHEN `Laboratory`.`ALP` < 300 THEN 'Yes' ELSE 'No' END AS `ALP_Normal_Range` FROM `Patient` LEFT JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Birthday` = '1982-04-01'
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TP` < 6.0
SELECT `Patient`.`ID`, (`Laboratory`.`TP` - 8.5) AS `TP_Deviation` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'F' AND `Laboratory`.`TP` > 8.5
SELECT `Patient`.`ID`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND (`Laboratory`.`ALB` <= 3.5 OR `Laboratory`.`ALB` >= 5.5) ORDER BY `Patient`.`Birthday` DESC
SELECT `P`.`ID`, CASE WHEN `L`.`ALB` BETWEEN 3.5 AND 5.5 THEN 'Normal' ELSE 'Abnormal' END AS `Albumin_Status` FROM `Patient` AS `P` INNER JOIN `Laboratory` AS `L` ON `P`.`ID` = `L`.`ID` WHERE strftime('%Y', `P`.`Birthday`) = '1982'
SELECT CAST(SUM(CASE WHEN `P`.`SEX` = 'F' AND `L`.`UA` > 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`P`.`ID`) FROM `Patient` AS `P` INNER JOIN `Laboratory` AS `L` ON `P`.`ID` = `L`.`ID` WHERE `P`.`SEX` = 'F'
SELECT AVG(`Laboratory`.`UA`) AS `average_UA_index` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE (`Laboratory`.`UA` < 8.0 AND `Patient`.`SEX` = 'M') OR (`Laboratory`.`UA` < 6.5 AND `Patient`.`SEX` = 'F') AND `Laboratory`.`Date` = (SELECT MAX(`Date`) FROM `Laboratory` WHERE `Laboratory`.`ID` = `Patient`.`ID`)
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`UN` = 29
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'RA' AND `Laboratory`.`UN` < 30
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`CRE` >= 1.5
SELECT CASE WHEN SUM(CASE WHEN `Patient`.`SEX` = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN `Patient`.`SEX` = 'F' THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END AS result FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`CRE` >= 1.5
SELECT T1.`ID`, T1.`SEX`, T1.`Birthday`, T2.`T-BIL` FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`T-BIL` = (SELECT MAX(`T-BIL`) FROM `Laboratory`)
SELECT `SEX`, GROUP_CONCAT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`T-BIL` >= 2.0 GROUP BY `Patient`.`SEX`
SELECT `P`.`ID`, `L`.`T-CHO` FROM `Patient` AS `P` INNER JOIN `Laboratory` AS `L` ON `P`.`ID` = `L`.`ID` WHERE `P`.`Birthday` = (SELECT MIN(`Birthday`) FROM `Patient`) AND `L`.`T-CHO` = (SELECT MAX(`T-CHO`) FROM `Laboratory`) LIMIT 1
SELECT SUM((strftime('%Y', 'now') - strftime('%Y', `Birthday`))) / COUNT(`Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`T-CHO` >= 250
SELECT `Patient`.`ID`, `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TG` > 300
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TG` >= 200 AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) > 50
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '-' AND `Laboratory`.`CPK` < 250
SELECT COUNT(DISTINCT `Patient`.`ID`) AS Male_Patients FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND strftime('%Y', `Patient`.`Birthday`) BETWEEN '1936' AND '1956' AND `Laboratory`.`CPK` >= 250
SELECT `Patient`.`ID`, `Patient`.`SEX`, (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) AS age FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GLU` >= 180 AND `Laboratory`.`T-CHO` < 250
SELECT DISTINCT `Patient`.`ID`, `Laboratory`.`GLU` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GLU` < 180 AND strftime('%Y', `Patient`.`Description`) = '1991'
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`WBC` <= 3.5 OR `Laboratory`.`WBC` >= 9.0 GROUP BY `Patient`.`SEX`, `Patient`.`ID` ORDER BY `Patient`.`Birthday` ASC
SELECT `Patient`.`ID`, `Patient`.`Diagnosis`, (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) AS age FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`RBC` < 3.5
SELECT DISTINCT `P`.`ID`, `P`.`Admission` FROM `Patient` AS `P` INNER JOIN `Laboratory` AS `L` ON `P`.`ID` = `L`.`ID` WHERE `P`.`SEX` = 'F' AND (strftime('%Y', 'now') - strftime('%Y', `P`.`Birthday`)) >= 50 AND (`L`.`RBC` <= 3.5 OR `L`.`RBC` >= 6.0)
SELECT DISTINCT `Patient`.`ID`, `Patient`.`SEX` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '-' AND `Laboratory`.`HGB` < 10
SELECT `Patient`.`ID`, `Patient`.`SEX` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'SLE' AND `Laboratory`.`HGB` > 10 AND `Laboratory`.`HGB` < 17 ORDER BY `Patient`.`Birthday` ASC LIMIT 1
SELECT `Patient`.`ID`, (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) AS age FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`HCT` >= 52 GROUP BY `Patient`.`ID` HAVING COUNT(`Laboratory`.`ID`) > 2
SELECT AVG(`HCT`) FROM `Laboratory` WHERE `Date` LIKE '1991%' AND `HCT` < 29
SELECT (SELECT COUNT(DISTINCT L.ID) FROM Laboratory AS L WHERE L.PLT < 100) AS lower_than_normal, (SELECT COUNT(DISTINCT L.ID) FROM Laboratory AS L WHERE L.PLT > 400) AS higher_than_normal
SELECT DISTINCT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE strftime('%Y', `Laboratory`.`Date`) = '1984' AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) < 50 AND `Laboratory`.`PLT` BETWEEN 100 AND 400
SELECT CAST(SUM(CASE WHEN `Patient`.`SEX` = 'F' AND `Laboratory`.`PT` >= 14 THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN `Laboratory`.`PT` >= 14 THEN 1 ELSE 0 END) AS percentage FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) > 55
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE strftime('%Y', `Patient`.`First Date`) > '1992' AND `Laboratory`.`PT` < 14
SELECT COUNT(`ID`) FROM `Examination` WHERE `Examination Date` > '1997-01-01' AND `APTT` < 45
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` INNER JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`APTT` > 45 AND `Examination`.`Thrombosis` = 0
SELECT COUNT(DISTINCT `T1`.`ID`) FROM `Patient` AS `T1` INNER JOIN `Laboratory` AS `T2` ON `T1`.`ID` = `T2`.`ID` WHERE `T1`.`SEX` = 'M' AND `T2`.`WBC` > 3.5 AND `T2`.`WBC` < 9.0 AND (`T2`.`FG` <= 150 OR `T2`.`FG` >= 450)
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Birthday` > '1980-01-01' AND (`Laboratory`.`FG` < 150 OR `Laboratory`.`FG` > 450)
SELECT DISTINCT `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`U-PRO` >= 30
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`U-PRO` > 0 AND `Laboratory`.`U-PRO` < 30 AND `Patient`.`Diagnosis` = 'SLE'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`IGG` >= 2000
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`IGG` > 900 AND `Laboratory`.`IGG` < 2000 AND `Examination`.`Symptoms` IS NOT NULL
SELECT `Diagnosis` FROM `Patient` WHERE `ID` = (SELECT `ID` FROM `Laboratory` WHERE `IGA` BETWEEN 80 AND 500 ORDER BY `IGA` DESC LIMIT 1)
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`IGA` > 80 AND `Laboratory`.`IGA` < 500 AND strftime('%Y', `Patient`.`First Date`) >= '1990'
SELECT `Diagnosis` FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Laboratory` WHERE `IGM` <= 40 OR `IGM` >= 400) GROUP BY `Diagnosis` ORDER BY COUNT(`Diagnosis`) DESC LIMIT 1
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`CRP` = '+' AND `Patient`.`Description` IS NULL
SELECT COUNT(*) FROM `Patient` AS P INNER JOIN `Laboratory` AS L ON P.`ID` = L.`ID` WHERE L.`CRE` >= 1.5 AND (strftime('%Y', 'now') - strftime('%Y', P.`Birthday`)) < 70
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`Diagnosis` LIKE '%RA%' AND `Examination`.`KCT` = '+'
SELECT DISTINCT `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE strftime('%Y', `Patient`.`Birthday`) >= '1985' AND `Laboratory`.`RA` IN ('-', '+-')
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`RF` < 20 AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) > 60
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`RF` < 20 AND `Examination`.`Thrombosis` = '0'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`C3` > 35 AND `Examination`.`ANA Pattern` = 'P'
SELECT `Patient`.`ID` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Examination`.`aCL IgA` = (SELECT MAX(`aCL IgA`) FROM `Examination` INNER JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`HCT` <= 29 OR `Laboratory`.`HCT` >= 52) LIMIT 1
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Thrombosis` = 1 AND `Laboratory`.`C4` > 10
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`Admission` = '+' AND (`Examination`.`RNP` = '-' OR `Examination`.`RNP` = '+-')
SELECT `Birthday` FROM `Patient` WHERE `ID` = (SELECT `ID` FROM `Laboratory` WHERE `RNP` NOT IN ('-', '+-') ORDER BY `Birthday` DESC LIMIT 1)
SELECT COUNT(DISTINCT T1.`ID`) FROM `Examination` AS T1 INNER JOIN `Patient` AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SM` IN ('-', '0') AND T1.`Thrombosis` = 0
SELECT `ID` FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Laboratory` WHERE `SM` NOT IN ('negative', '0')) ORDER BY `Birthday` DESC LIMIT 3
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Examination Date` > '1997-01-01' AND `Laboratory`.`SC170` IN ('negative', '0')
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`SC170` IN ('negative', '0') AND `Patient`.`SEX` = 'F' AND `Examination`.`Symptoms` IS NULL
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Examination`.`SSA` IN ('-', '+-') AND strftime('%Y', `Patient`.`First Date`) < '2000'
SELECT `ID` FROM `Patient` WHERE `ID` = (SELECT `ID` FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Laboratory` WHERE `SSA` NOT IN ('negative', '0')) ORDER BY `First Date` ASC LIMIT 1)
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Examination`.`SSB` IN ('-', '+-') AND `Examination`.`Diagnosis` = 'SLE'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Examination`.`Symptoms` IS NOT NULL AND `Examination`.`SSB` IN ('negative', '0')
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`CENTROMEA` IN ('-', '+-') AND `Laboratory`.`SSB` IN ('-', '+-')
SELECT DISTINCT `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`DNA` >= 8
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`DNA` < 8 AND `Patient`.`Description` IS NULL
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`IGG` > 900 AND `Laboratory`.`IGG` < 2000 AND `Patient`.`Admission` = '+'
SELECT CAST(COUNT(`Laboratory`.`ID`) AS REAL) / (SELECT COUNT(`Laboratory`.`ID`) FROM `Laboratory` WHERE `GOT` >= 60) * 100 FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `GOT` >= 60 AND `Patient`.`Diagnosis` = 'SLE'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`GOT` < 60
SELECT `Birthday` FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Laboratory` WHERE `GOT` >= 60) ORDER BY `Birthday` DESC LIMIT 1
SELECT DISTINCT `P`.`Birthday` FROM `Laboratory` AS `L` INNER JOIN `Patient` AS `P` ON `L`.`ID` = `P`.`ID` WHERE `L`.`GPT` < 60 ORDER BY `L`.`GPT` DESC LIMIT 3
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GOT` < 60 AND `Patient`.`SEX` = 'M'
SELECT `Patient`.`First Date` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`LDH` = (SELECT MAX(`LDH`) FROM `Laboratory` WHERE `LDH` < 500) LIMIT 1
SELECT MAX(`Date`) FROM `Laboratory` WHERE `ID` = (SELECT `ID` FROM `Patient` WHERE `First Date` = (SELECT MAX(`First Date`) FROM `Patient`)) AND `LDH` >= 500
SELECT COUNT(DISTINCT `Laboratory`.`ID`) FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`ALP` >= 300 AND `Patient`.`Admission` = '+'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '-' AND `Laboratory`.`ALP` < 300
SELECT DISTINCT `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TP` < 6.0
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'SJS' AND `Laboratory`.`TP` > 6.0 AND `Laboratory`.`TP` < 8.5
SELECT `Date` FROM `Laboratory` WHERE `ALB` = (SELECT MAX(`ALB`) FROM `Laboratory` WHERE `ALB` > 3.5 AND `ALB` < 5.5)
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`ALB` > 3.5 AND `Laboratory`.`ALB` < 5.5 AND `Laboratory`.`TP` BETWEEN 6.0 AND 8.5
SELECT `E`.`aCL IgG`, `E`.`aCL IgM`, `E`.`aCL IgA` FROM `Examination` AS `E` INNER JOIN `Patient` AS `P` ON `E`.`ID` = `P`.`ID` INNER JOIN `Laboratory` AS `L` ON `P`.`ID` = `L`.`ID` WHERE `P`.`SEX` = 'F' AND `L`.`UA` = (SELECT MAX(`UA`) FROM `Laboratory` WHERE `UA` <= 6.50)
SELECT MAX(`ANA`) FROM `Examination` INNER JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`CRE` < 1.5
SELECT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`CRE` < 1.5 AND `Examination`.`aCL IgA` = (SELECT MAX(`aCL IgA`) FROM `Examination`)
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` INNER JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`T-BIL` >= 2.0 AND `Examination`.`ANA Pattern` LIKE '%P%'
SELECT `Examination`.`ANA` FROM `Examination` INNER JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`T-BIL` = (SELECT MAX(`T-BIL`) FROM `Laboratory` WHERE `T-BIL` < 2.0)
SELECT COUNT(DISTINCT E.`ID`) FROM Examination AS E INNER JOIN Laboratory AS L ON E.`ID` = L.`ID` WHERE L.`T-CHO` >= 250 AND E.`KCT` = '-'
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` INNER JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`T-CHO` < 250 AND `Examination`.`ANA Pattern` = 'P'
SELECT COUNT(DISTINCT `E`.`ID`) FROM `Examination` AS `E` INNER JOIN `Laboratory` AS `L` ON `E`.`ID` = `L`.`ID` WHERE `L`.`TG` < 200 AND `E`.`Symptoms` IS NOT NULL
SELECT `Diagnosis` FROM `Patient` WHERE `ID` = (SELECT `ID` FROM `Laboratory` WHERE `TG` < 200 ORDER BY `TG` DESC LIMIT 1)
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Thrombosis` = 0 AND `Laboratory`.`CPK` < 250
SELECT COUNT(DISTINCT E.`ID`) FROM Examination AS E INNER JOIN Laboratory AS L ON E.`ID` = L.`ID` WHERE L.`CPK` < 250 AND (E.`KCT` = '+' OR E.`RVVT` = '+' OR E.`LAC` = '+')
SELECT MIN(`Birthday`) FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Laboratory` WHERE `GLU` > 180)
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`GLU` < 180 AND `Examination`.`Thrombosis` = 0
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '+' AND `Laboratory`.`WBC` BETWEEN 3.5 AND 9.0
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'SLE' AND `Laboratory`.`WBC` BETWEEN 3.5 AND 9.0
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE (`Laboratory`.`RBC` <= 3.5 OR `Laboratory`.`RBC` >= 6.0) AND `Patient`.`Admission` = '-'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`PLT` > 100 AND `Laboratory`.`PLT` < 400 AND `Patient`.`Diagnosis` IS NOT NULL
SELECT `L`.`PLT` FROM `Laboratory` AS `L` INNER JOIN `Patient` AS `P` ON `L`.`ID` = `P`.`ID` INNER JOIN `Examination` AS `E` ON `P`.`ID` = `E`.`ID` WHERE `L`.`PLT` > 100 AND `L`.`PLT` < 400 AND `E`.`Diagnosis` = 'MCTD'
SELECT AVG(`L`.`PT`) FROM `Laboratory` AS `L` INNER JOIN `Patient` AS `P` ON `L`.`ID` = `P`.`ID` WHERE `P`.`SEX` = 'M' AND `L`.`PT` < 14
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Examination` INNER JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Thrombosis` IN (1, 2) AND `Laboratory`.`PT` < 14
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Angela' AND `member`.`last_name` = 'Sanders'
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`college` = 'College of Engineering'
SELECT `first_name`, `last_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`department` = 'Art and Design Department'
SELECT COUNT(DISTINCT `link_to_member`) FROM `attendance` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'Women's Soccer')
SELECT DISTINCT `member`.`phone` FROM `member` INNER JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Women''s Soccer'
SELECT COUNT(DISTINCT `member`.`member_id`) FROM `attendance` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `event`.`event_name` = 'Women''s Soccer' AND `member`.`t_shirt_size` = 'Medium'
SELECT `event`.`event_name` FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` GROUP BY `event`.`event_id` ORDER BY COUNT(`attendance`.`link_to_event`) DESC LIMIT 1
SELECT `college` FROM `major` WHERE `major_id` = (SELECT `link_to_major` FROM `member` WHERE `position` = 'Vice President')
SELECT DISTINCT `event`.`event_name` FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Maya' AND `member`.`last_name` = 'Mclean'
SELECT COUNT(*) FROM `attendance` AS A INNER JOIN `member` AS M ON A.link_to_member = M.member_id INNER JOIN `event` AS E ON A.link_to_event = E.event_id WHERE M.first_name = 'Sacha' AND M.last_name = 'Harrison' AND strftime('%Y', E.event_date) = '2019'
SELECT COUNT(DISTINCT `event`.`event_id`) FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` WHERE `event`.`type` = 'Meeting' GROUP BY `event`.`event_id` HAVING COUNT(`attendance`.`link_to_member`) > 10
SELECT `event`.`event_name` FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` WHERE `event`.`type` <> 'Fundraiser' GROUP BY `event`.`event_id` HAVING COUNT(`attendance`.`link_to_member`) > 20
SELECT CAST(COUNT(DISTINCT `attendance`.`link_to_member`) AS REAL) / COUNT(DISTINCT `event`.`event_name`) FROM `attendance` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`type` = 'Meeting' AND strftime('%Y', `event`.`event_date`) = '2020'
SELECT `expense_description` FROM `expense` WHERE `cost` = (SELECT MAX(`cost`) FROM `expense`)
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Environmental Engineering'
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Laugh Out Loud'
SELECT `last_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Law and Constitutional Studies'
SELECT T3.county FROM member AS T1 INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T1.first_name = 'Sherri' AND T1.last_name = 'Ramsey'
SELECT `major`.`college` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Tyler' AND `member`.`last_name` = 'Hewitt'
SELECT SUM(`amount`) FROM `income` INNER JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `member`.`position` = 'Vice President'
SELECT SUM(`spent`) FROM `budget` WHERE `category` = 'Food' AND `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'September Meeting')
SELECT `zip_code`.`city`, `zip_code`.`state` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`position` = 'President'
SELECT `first_name`, `last_name` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`state` = 'Illinois'
SELECT SUM(`spent`) FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `budget`.`category` = 'Advertisement' AND `event`.`event_name` = 'September Meeting'
SELECT DISTINCT `major`.`department` FROM `major` INNER JOIN `member` ON `major`.`major_id` = `member`.`link_to_major` WHERE `member`.`last_name` IN ('Pierce', 'Guidi')
SELECT SUM(`amount`) FROM `budget` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'October Speaker')
SELECT CASE WHEN `approved` = 'true' THEN 'Yes' ELSE 'No' END AS `approved_status` FROM `expense` WHERE `link_to_budget` IN (SELECT `budget_id` FROM `budget` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'October Meeting' AND `event_date` = '2019-10-08'))
SELECT SUM(`cost`) / COUNT(DISTINCT `link_to_event`) FROM `expense` AS E INNER JOIN `member` AS M ON E.`link_to_member` = M.`member_id` WHERE M.`first_name` = 'Elijah' AND M.`last_name` = 'Allen' AND (SUBSTR(E.`expense_date`, 6, 2) = '09' OR SUBSTR(E.`expense_date`, 6, 2) = '10')
SELECT SUM(CASE WHEN SUBSTR(`event_date`, 1, 4) = '2019' THEN `spent` ELSE 0 END) - SUM(CASE WHEN SUBSTR(`event_date`, 1, 4) = '2020' THEN `spent` ELSE 0 END) FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id`
SELECT `location` FROM `event` WHERE `event_name` = 'Spring Budget Review'
SELECT `cost` FROM `expense` WHERE `expense_description` = 'Posters' AND `expense_date` = '2019-09-04'
SELECT `remaining` FROM `budget` WHERE `category` = 'Food' ORDER BY `amount` DESC LIMIT 1
SELECT `notes` FROM `income` WHERE `source` = 'Fundraising' AND `date_received` = '2019-09-14'
SELECT COUNT(*) FROM `major` WHERE `college` = 'College of Humanities and Social Sciences'
SELECT `phone` FROM `member` WHERE `first_name` = 'Carlo' AND `last_name` = 'Jacobs'
SELECT `z`.`county` FROM `member` AS `m` INNER JOIN `zip_code` AS `z` ON `m`.`zip` = `z`.`zip_code` WHERE `m`.`first_name` = 'Adela' AND `m`.`last_name` = 'O\'Gallagher'
SELECT COUNT(`budget_id`) FROM `budget` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'November Meeting') AND `remaining` < 0
SELECT SUM(`amount`) FROM `budget` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'September Speaker')
SELECT `b`.`event_status` FROM `expense` AS `e` INNER JOIN `budget` AS `b` ON `e`.`link_to_budget` = `b`.`budget_id` WHERE `e`.`expense_description` = 'Post Cards, Posters' AND `e`.`expense_date` = '2019-08-20'
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Brent' AND `member`.`last_name` = 'Thomason'
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business' AND `member`.`t_shirt_size` = 'Medium'
SELECT `z`.`type` FROM `member` AS `m` INNER JOIN `zip_code` AS `z` ON `m`.`zip` = `z`.`zip_code` WHERE `m`.`first_name` = 'Christof' AND `m`.`last_name` = 'Nielson'
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'Vice President'
SELECT `state` FROM `member` AS M INNER JOIN `zip_code` AS Z ON M.`zip` = Z.`zip_code` WHERE M.`first_name` = 'Sacha' AND M.`last_name` = 'Harrison'
SELECT `major`.`department` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'President'
SELECT `date_received` FROM `income` INNER JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Connor' AND `member`.`last_name` = 'Hilton' AND `income`.`source` = 'Dues'
SELECT `first_name`, `last_name` FROM `member` WHERE `member_id` = (SELECT `link_to_member` FROM `income` WHERE `source` = 'Dues' ORDER BY `date_received` LIMIT 1)
SELECT SUM(CASE WHEN `event`.`event_name` = 'Yearly Kickoff' THEN `budget`.`amount` ELSE 0 END) / SUM(CASE WHEN `event`.`event_name` = 'October Meeting' THEN `budget`.`amount` ELSE 0 END) FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `budget`.`category` = 'Advertisement'
SELECT (SUM(`spent`) / (SELECT SUM(`amount`) FROM `budget` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'November Speaker'))) * 100 AS `percentage` FROM `budget` WHERE `category` = 'Parking' AND `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'November Speaker')
SELECT SUM(`cost`) FROM `expense` WHERE `expense_description` = 'Pizza'
SELECT COUNT(DISTINCT `city`) FROM `zip_code` WHERE `county` = 'Orange County' AND `state` = 'Virginia'
SELECT DISTINCT `department` FROM `major` WHERE `college` = 'College of Humanities and Social Sciences'
SELECT `zip_code`.`city`, `zip_code`.`county`, `zip_code`.`state` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`first_name` = 'Amy' AND `member`.`last_name` = 'Firth'
SELECT `expense_description` FROM `expense` WHERE `link_to_budget` = (SELECT `budget_id` FROM `budget` ORDER BY `remaining` LIMIT 1)
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'October Meeting'
SELECT `major`.`college` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` GROUP BY `major`.`college` ORDER BY COUNT(`member`.`member_id`) DESC LIMIT 1
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`phone` = '809-555-3360'
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` ORDER BY `budget`.`amount` DESC LIMIT 1
SELECT `expense`.`expense_description` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`position` = 'Vice President'
SELECT COUNT(`attendance`.`link_to_member`) FROM `attendance` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Women's Soccer'
SELECT `date_received` FROM `income` INNER JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Casey' AND `member`.`last_name` = 'Mason'
SELECT COUNT(DISTINCT `member`.`member_id`) FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`state` = 'Maryland'
SELECT COUNT(`attendance`.`link_to_event`) FROM `attendance` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `member`.`phone` = '954-555-6240'
SELECT `first_name`, `last_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`department` = 'School of Applied Sciences, Technology and Education'
SELECT `event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`status` = 'Closed' ORDER BY (`budget`.`spent` / `budget`.`amount`) DESC LIMIT 1
SELECT COUNT(*) FROM `member` WHERE `position` = 'President'
SELECT MAX(`spent`) FROM `budget`
SELECT COUNT(`event_id`) FROM `event` WHERE `type` = 'Meeting' AND SUBSTR(`event_date`, 1, 4) = '2020'
SELECT SUM(`spent`) FROM `budget` WHERE `category` = 'Food'
SELECT `m`.`first_name`, `m`.`last_name` FROM `member` AS `m` INNER JOIN `attendance` AS `a` ON `m`.`member_id` = `a`.`link_to_member` GROUP BY `m`.`member_id` HAVING COUNT(`a`.`link_to_event`) > 7
SELECT `m`.`first_name`, `m`.`last_name` FROM `member` AS `m` INNER JOIN `major` AS `maj` ON `m`.`link_to_major` = `maj`.`major_id` INNER JOIN `attendance` AS `a` ON `m`.`member_id` = `a`.`link_to_member` INNER JOIN `event` AS `e` ON `a`.`link_to_event` = `e`.`event_id` WHERE `maj`.`major_name` = 'Interior Design' AND `e`.`event_name` = 'Community Theater'
SELECT `first_name`, `last_name` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`city` = 'Georgetown' AND `zip_code`.`state` = 'South Carolina'
SELECT COUNT(`income`.`amount`) FROM `income` INNER JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Grant' AND `member`.`last_name` = 'Gilmour'
SELECT `first_name`, `last_name` FROM `member` INNER JOIN `income` ON `member`.`member_id` = `income`.`link_to_member` WHERE `income`.`amount` > 40
SELECT SUM(`cost`) FROM `expense` WHERE `link_to_budget` IN (SELECT `budget_id` FROM `budget` WHERE `link_to_event` IN (SELECT `event_id` FROM `event` WHERE `event_name` = 'Yearly Kickoff'))
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Yearly Kickoff'
SELECT `m`.`first_name`, `m`.`last_name`, `i`.`source` FROM `income` AS `i` INNER JOIN `member` AS `m` ON `i`.`link_to_member` = `m`.`member_id` WHERE `i`.`amount` = (SELECT MAX(`amount`) FROM `income`)
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` ORDER BY `budget`.`spent` LIMIT 1
SELECT CAST(SUM(CASE WHEN `event`.`event_name` = 'Yearly Kickoff' THEN `expense`.`cost` ELSE 0 END) AS REAL) * 100 / SUM(`expense`.`cost`) FROM `expense` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id`
SELECT CAST(SUM(CASE WHEN `major_name` = 'Finance' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN `major_name` = 'Physics' THEN 1 ELSE 0 END) FROM `major`
SELECT `source` FROM `income` WHERE `date_received` BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY `source` ORDER BY SUM(`amount`) DESC LIMIT 1
SELECT `first_name`, `last_name`, `email` FROM `member` WHERE `position` = 'Secretary'
SELECT COUNT(`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Physics Teaching'
SELECT COUNT(DISTINCT `attendance`.`link_to_member`) FROM `attendance` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Community Theater' AND strftime('%Y', `event`.`event_date`) = '2019'
SELECT COUNT(DISTINCT `attendance`.`link_to_event`) AS `number_of_events`, `major`.`major_name` FROM `attendance` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Luisa' AND `member`.`last_name` = 'Guidi'
SELECT AVG(`spent`) FROM `budget` WHERE `category` = 'Food' AND `event_status` = 'Closed'
SELECT `event`.`event_name` FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `budget`.`category` = 'Advertisement' ORDER BY `budget`.`spent` DESC LIMIT 1
SELECT COUNT(*) > 0 FROM attendance AS A INNER JOIN member AS M ON A.link_to_member = M.member_id INNER JOIN event AS E ON A.link_to_event = E.event_id WHERE M.first_name = 'Maya' AND M.last_name = 'Mclean' AND E.event_name = 'Women's Soccer'
SELECT CAST(SUM(CASE WHEN `type` = 'Community Service' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`event_id`) FROM `event` WHERE `event_date` BETWEEN '2019-01-01' AND '2019-12-31'
SELECT `e`.`cost` FROM `expense` AS `e` INNER JOIN `budget` AS `b` ON `e`.`link_to_budget` = `b`.`budget_id` INNER JOIN `event` AS `ev` ON `b`.`link_to_event` = `ev`.`event_id` WHERE `e`.`expense_description` = 'Posters' AND `ev`.`event_name` = 'September Speaker'
SELECT `t_shirt_size` FROM `member` GROUP BY `t_shirt_size` ORDER BY COUNT(`t_shirt_size`) DESC LIMIT 1
SELECT `event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`status` = 'Closed' AND `budget`.`remaining` < 0 ORDER BY `budget`.`remaining` ASC LIMIT 1
SELECT `expense_description`, SUM(`cost`) FROM `expense` WHERE `approved` = 'true' AND `link_to_budget` IN (SELECT `budget_id` FROM `budget` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'October Meeting')) GROUP BY `expense_description`
SELECT SUM(`amount`) AS total_budgeted, `category` FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'April Speaker' GROUP BY `category` ORDER BY total_budgeted ASC
SELECT MAX(`amount`) FROM `budget` WHERE `category` = 'Food'
SELECT `budget_id` FROM `budget` WHERE `category` = 'Advertisement' ORDER BY `amount` DESC LIMIT 3
SELECT SUM(`cost`) FROM `expense` WHERE `expense_description` = 'Parking'
SELECT SUM(`cost`) FROM `expense` WHERE `expense_date` = '2019-08-20'
SELECT `member`.`first_name`, `member`.`last_name`, SUM(`expense`.`cost`) AS `total_cost` FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` WHERE `member`.`member_id` = 'rec4BLdZHS2Blfp4v' GROUP BY `member`.`first_name`, `member`.`last_name`
SELECT DISTINCT `expense`.`expense_description` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Sacha' AND `member`.`last_name` = 'Harrison'
SELECT DISTINCT `expense`.`expense_description` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`t_shirt_size` = 'X-Large'
SELECT DISTINCT `zip_code`.`zip_code` FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `expense`.`cost` < 50
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Phillip' AND `member`.`last_name` = 'Cullen'
SELECT `m`.`position` FROM `member` AS `m` INNER JOIN `major` AS `maj` ON `m`.`link_to_major` = `maj`.`major_id` WHERE `maj`.`major_name` = 'Business'
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business' AND `member`.`t_shirt_size` = 'Medium'
SELECT DISTINCT `event`.`type` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`remaining` > 30
SELECT DISTINCT `category` FROM `budget` WHERE `link_to_event` IN (SELECT `event_id` FROM `event` WHERE `location` = 'MU 215')
SELECT `category` FROM `budget` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_date` = '2020-03-24T12:00:00')
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'Vice President'
SELECT CAST(SUM(CASE WHEN `position` = 'Member' AND `major_name` = 'Business' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id`
SELECT DISTINCT `category` FROM `budget` WHERE `link_to_event` IN (SELECT `event_id` FROM `event` WHERE `location` = 'MU 215')
SELECT COUNT(`income_id`) FROM `income` WHERE `amount` = 50
SELECT COUNT(`member_id`) FROM `member` WHERE `position` = 'Member' AND `t_shirt_size` = 'X-Large'
SELECT COUNT(*) FROM `major` WHERE `college` = 'College of Agriculture and Applied Sciences' AND `department` = 'School of Applied Sciences, Technology and Education'
SELECT `m`.`last_name`, `maj`.`department`, `maj`.`college` FROM `member` AS `m` INNER JOIN `major` AS `maj` ON `m`.`link_to_major` = `maj`.`major_id` WHERE `maj`.`major_name` = 'Environmental Engineering'
SELECT DISTINCT `budget`.`category` FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`location` = 'MU 215' AND `event`.`type` = 'Guest Speaker' AND `budget`.`spent` = 0
SELECT DISTINCT `zip_code`.`city`, `zip_code`.`state` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `major`.`department` = 'Electrical and Computer Engineering Department' AND `member`.`position` = 'Member'
SELECT e.`event_name` FROM `event` e INNER JOIN `attendance` a ON e.`event_id` = a.`link_to_event` INNER JOIN `member` m ON a.`link_to_member` = m.`member_id` WHERE e.`type` = 'Social' AND m.`position` = 'Vice President' AND e.`location` = '900 E. Washington St.'
SELECT `m`.`last_name`, `m`.`position` FROM `expense` AS `e` INNER JOIN `member` AS `m` ON `e`.`link_to_member` = `m`.`member_id` WHERE `e`.`expense_description` = 'Pizza' AND `e`.`expense_date` = '2019-09-10'
SELECT `m`.`last_name` FROM `member` AS `m` INNER JOIN `attendance` AS `a` ON `m`.`member_id` = `a`.`link_to_member` INNER JOIN `event` AS `e` ON `a`.`link_to_event` = `e`.`event_id` WHERE `m`.`position` = 'Member' AND `e`.`event_name` = 'Women''s Soccer'
SELECT CAST(COUNT(IIF(`income`.`amount` = 50, 1, NULL)) AS REAL) * 100 / COUNT(`member`.`member_id`) FROM `member` JOIN `income` ON `member`.`member_id` = `income`.`link_to_member` WHERE `member`.`t_shirt_size` = 'Medium' AND `member`.`position` = 'Member'
SELECT DISTINCT `county` FROM `zip_code` WHERE `type` = 'PO Box'
SELECT `zip_code` FROM `zip_code` WHERE `type` = 'PO Box' AND `county` = 'San Juan Municipio' AND `state` = 'Puerto Rico'
SELECT `event_name` FROM `event` WHERE `type` = 'Game' AND `status` = 'Closed' AND `event_date` BETWEEN '2019-03-15' AND '2020-03-20'
SELECT DISTINCT `attendance`.`link_to_event` FROM `attendance` INNER JOIN `expense` ON `attendance`.`link_to_member` = `expense`.`link_to_member` WHERE `expense`.`cost` > 50
SELECT DISTINCT `m`.`first_name`, `m`.`last_name`, `a`.`link_to_event` FROM `member` AS `m` INNER JOIN `expense` AS `e` ON `m`.`member_id` = `e`.`link_to_member` INNER JOIN `attendance` AS `a` ON `m`.`member_id` = `a`.`link_to_member` WHERE `e`.`approved` = 'true' AND `e`.`expense_date` BETWEEN '2019-01-10' AND '2019-11-19'
SELECT `major`.`college` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Katy' AND `member`.`link_to_major` = 'rec1N0upiVLy5esTO'
SELECT `phone` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business' AND `major`.`college` = 'College of Agriculture and Applied Sciences'
SELECT `M`.`email` FROM `expense` AS `E` INNER JOIN `member` AS `M` ON `E`.`link_to_member` = `M`.`member_id` WHERE `E`.`expense_date` BETWEEN '2019-09-10' AND '2019-11-19' AND `E`.`cost` > 20
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'education' AND `major`.`college` = 'College of Education & Human Services' AND `member`.`position` = 'Member'
SELECT CAST(SUM(CASE WHEN `remaining` < 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`budget_id`) FROM `budget`
SELECT `event_id`, `location`, `status` FROM `event` WHERE `event_date` BETWEEN '2019-11-01' AND '2020-03-31'
SELECT `expense_description` FROM `expense` GROUP BY `expense_description` HAVING AVG(`cost`) > 50
SELECT `first_name`, `last_name` FROM `member` WHERE `t_shirt_size` = 'X-Large'
SELECT CAST(SUM(CASE WHEN `type` = 'PO Box' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`zip_code`) FROM `zip_code`
SELECT `event`.`event_name`, `event`.`location` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`remaining` > 0
SELECT `event`.`event_name`, `event`.`event_date` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `expense`.`expense_description` = 'Pizza' AND `expense`.`cost` > 50 AND `expense`.`cost` < 100
SELECT `member`.`first_name`, `member`.`last_name`, `major`.`major_name` FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `expense`.`cost` > 100
SELECT DISTINCT `zip_code`.`city`, `zip_code`.`county` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `member` ON `member`.`member_id` = `income`.`link_to_member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `income`.`amount` > 40
SELECT `m`.`first_name`, `m`.`last_name` FROM `member` AS `m` INNER JOIN `expense` AS `e` ON `m`.`member_id` = `e`.`link_to_member` INNER JOIN `budget` AS `b` ON `e`.`link_to_budget` = `b`.`budget_id` GROUP BY `m`.`member_id` HAVING COUNT(DISTINCT `b`.`link_to_event`) > 1 ORDER BY SUM(`e`.`cost`) DESC LIMIT 1
SELECT AVG(`expense`.`cost`) FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`position` != 'Member'
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`category` = 'Parking' AND `budget`.`spent` < (SELECT AVG(`spent`) FROM `budget` WHERE `category` = 'Parking')
SELECT CAST(SUM(`cost`) AS REAL) * 100 / COUNT(`event_id`) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `event`.`type` = 'Meeting'
SELECT `budget_id` FROM `budget` WHERE `budget_id` = (SELECT `link_to_budget` FROM `expense` WHERE `expense_description` = 'Water, chips, cookies' ORDER BY `cost` DESC LIMIT 1)
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` GROUP BY `member`.`member_id` ORDER BY SUM(`expense`.`cost`) DESC LIMIT 5
SELECT DISTINCT `member`.`first_name`, `member`.`last_name`, `member`.`phone` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `expense`.`cost` > (SELECT AVG(`cost`) FROM `expense`)
SELECT (CAST(SUM(CASE WHEN Z.`state` = 'New Jersey' THEN 1 ELSE 0 END) AS REAL) / COUNT(M.`position` = 'Member')) - (CAST(SUM(CASE WHEN Z.`state` = 'Vermont' THEN 1 ELSE 0 END) AS REAL) / COUNT(M.`position` = 'Member')) FROM `member` AS M INNER JOIN `zip_code` AS Z ON M.`zip` = Z.`zip_code`
SELECT `major`.`major_name`, `major`.`department` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Garrett' AND `member`.`last_name` = 'Gerke'
SELECT `member`.`first_name`, `member`.`last_name`, `expense`.`cost` FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` WHERE `expense`.`expense_description` = 'Water, Veggie tray, supplies'
SELECT `m`.`last_name`, `m`.`phone` FROM `member` AS `m` INNER JOIN `major` AS `maj` ON `m`.`link_to_major` = `maj`.`major_id` WHERE `maj`.`major_name` = 'Elementary Education'
SELECT `budget`.`category`, `budget`.`amount` FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'January Speaker'
SELECT `event`.`event_name` FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `budget`.`category` = 'Food'
SELECT `member`.`first_name`, `member`.`last_name`, `income`.`amount` FROM `member` INNER JOIN `income` ON `member`.`member_id` = `income`.`link_to_member` WHERE `income`.`date_received` = '2019-09-09'
SELECT `category` FROM `budget` WHERE `budget_id` = (SELECT `link_to_budget` FROM `expense` WHERE `expense_description` = 'Posters')
SELECT `member`.`first_name` || ' ' || `member`.`last_name` AS `full_name`, `major`.`college` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'Secretary'
SELECT SUM(`b`.`spent`), `e`.`event_name` FROM `budget` AS `b` INNER JOIN `event` AS `e` ON `b`.`link_to_event` = `e`.`event_id` WHERE `b`.`category` = 'Speaker Gifts' GROUP BY `e`.`event_name`
SELECT `city` FROM `member` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `first_name` = 'Garrett' AND `last_name` = 'Gerke'
SELECT `first_name`, `last_name`, `position` FROM `member` WHERE `zip` = (SELECT `zip_code` FROM `zip_code` WHERE `city` = 'Lincolnton' AND `state` = 'North Carolina' AND `zip_code` = 28092)
SELECT COUNT(DISTINCT `GasStationID`) FROM `gasstations` WHERE `Country` = 'CZE' AND `Segment` = 'Premium'
SELECT CAST(SUM(IIF(`Currency` = 'EUR', 1, 0)) AS REAL) / SUM(IIF(`Currency` = 'CZK', 1, 0)) FROM `customers`
SELECT `CustomerID` FROM `yearmonth` WHERE SUBSTR(`Date`, 1, 4) = '2012' AND `CustomerID` IN (SELECT `CustomerID` FROM `customers` WHERE `Segment` = 'LAM') ORDER BY `Consumption` ASC LIMIT 1
SELECT AVG(`Consumption`) / 12 FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Segment` = 'SME' AND SUBSTR(`yearmonth`.`Date`, 1, 4) BETWEEN '201301' AND '201312'
SELECT `CustomerID` FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Currency` = 'CZK' AND `yearmonth`.`Date` BETWEEN 201101 AND 201112 GROUP BY `yearmonth`.`CustomerID` ORDER BY SUM(`yearmonth`.`Consumption`) DESC LIMIT 1
SELECT COUNT(DISTINCT `CustomerID`) FROM `yearmonth` WHERE `CustomerID` IN (SELECT `CustomerID` FROM `customers` WHERE `Segment` = 'KAM') AND `Date` BETWEEN 201201 AND 201212 AND `Consumption` < 30000
SELECT SUM(CASE WHEN c.Currency = 'CZK' THEN ym.Consumption ELSE 0 END) - SUM(CASE WHEN c.Currency = 'EUR' THEN ym.Consumption ELSE 0 END) AS ConsumptionDifference FROM yearmonth AS ym INNER JOIN customers AS c ON ym.CustomerID = c.CustomerID WHERE ym.Date BETWEEN 201201 AND 201212
SELECT strftime('%Y', `Date`) AS Year, SUM(`Amount`) AS TotalGasUse FROM `transactions_1k` INNER JOIN `customers` ON `transactions_1k`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Currency` = 'EUR' GROUP BY Year ORDER BY TotalGasUse DESC LIMIT 1
SELECT `Segment` FROM `customers` WHERE `CustomerID` = (SELECT `CustomerID` FROM `yearmonth` GROUP BY `CustomerID` ORDER BY SUM(`Consumption`) ASC LIMIT 1)
SELECT SUBSTR(`Date`, 1, 4) AS `Year` FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Currency` = 'CZK' GROUP BY `Year` ORDER BY SUM(`Consumption`) DESC LIMIT 1
SELECT SUBSTR(`Date`, 5, 2) AS `Month` FROM `yearmonth` WHERE `CustomerID` IN (SELECT `CustomerID` FROM `customers` WHERE `Segment` = 'SME') AND `Date` BETWEEN 201301 AND 201312 ORDER BY `Consumption` DESC LIMIT 1
WITH MinConsumption AS (SELECT `Segment`, MIN(`Consumption`) AS MinCons FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `yearmonth`.`Date` BETWEEN 201301 AND 201312 AND `customers`.`Currency` = 'CZK' GROUP BY `Segment`), AnnualAverage AS (SELECT `Segment`, SUM(`Consumption`) / COUNT(DISTINCT `CustomerID`) AS AnnualAvg FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `yearmonth`.`Date` BETWEEN 201301 AND 201312 AND `customers`.`Currency` = 'CZK' AND `Consumption` IN (SELECT MinCons FROM MinConsumption WHERE `Segment` = `customers`.`Segment`) GROUP BY `Segment`) SELECT (SELECT AnnualAvg FROM AnnualAverage WHERE `Segment` = 'SME') - (SELECT AnnualAvg FROM AnnualAverage WHERE `Segment` = 'LAM') AS SME_LAM_Diff, (SELECT AnnualAvg FROM AnnualAverage WHERE `Segment` = 'LAM') - (SELECT AnnualAvg FROM AnnualAverage WHERE `Segment` = 'KAM') AS LAM_KAM_Diff, (SELECT AnnualAvg FROM AnnualAverage WHERE `Segment` = 'KAM') - (SELECT AnnualAvg FROM AnnualAverage WHERE `Segment` = 'SME') AS KAM_SME_Diff
SELECT `Segment`, MAX(`PercentageIncrease`) AS `MaxPercentageIncrease`, MIN(`PercentageIncrease`) AS `MinPercentageIncrease` FROM ( SELECT c.`Segment`, ((SUM(CASE WHEN SUBSTR(y.`Date`, 1, 4) = '2013' THEN y.`Consumption` ELSE 0 END) - SUM(CASE WHEN SUBSTR(y.`Date`, 1, 4) = '2012' THEN y.`Consumption` ELSE 0 END)) / SUM(CASE WHEN SUBSTR(y.`Date`, 1, 4) = '2013' THEN y.`Consumption` ELSE 0 END)) * 100 AS `PercentageIncrease` FROM `yearmonth` y JOIN `customers` c ON y.`CustomerID` = c.`CustomerID` WHERE c.`Currency` = 'EUR' AND c.`Segment` IN ('SME', 'LAM', 'KAM') GROUP BY c.`Segment` )
SELECT SUM(`Consumption`) FROM `yearmonth` WHERE `CustomerID` = 6 AND `Date` BETWEEN 201308 AND 201311
SELECT (SELECT COUNT(*) FROM `gasstations` WHERE `Country` = 'CZE' AND `Segment` = 'Value for money') - (SELECT COUNT(*) FROM `gasstations` WHERE `Country` = 'SVK' AND `Segment` = 'Value for money') AS `MoreDiscountStations`
SELECT (SELECT `Consumption` FROM `yearmonth` WHERE `CustomerID` = 7 AND `Date` = 201304) - (SELECT `Consumption` FROM `yearmonth` WHERE `CustomerID` = 5 AND `Date` = 201304) AS `ConsumptionDifference`
SELECT (SELECT COUNT(*) FROM customers AS c INNER JOIN transactions_1k AS t ON c.CustomerID = t.CustomerID WHERE c.Segment = 'SME' AND c.Currency = 'CZK') - (SELECT COUNT(*) FROM customers AS c INNER JOIN transactions_1k AS t ON c.CustomerID = t.CustomerID WHERE c.Segment = 'SME' AND c.Currency = 'EUR') AS Difference
SELECT `c`.`CustomerID` FROM `customers` AS `c` INNER JOIN `yearmonth` AS `y` ON `c`.`CustomerID` = `y`.`CustomerID` WHERE `c`.`Segment` = 'LAM' AND `c`.`Currency` = 'EUR' AND `y`.`Date` = 201310 ORDER BY `y`.`Consumption` DESC LIMIT 1
SELECT `customers`.`CustomerID`, MAX(`yearmonth`.`Consumption`) AS `MaxConsumption` FROM `customers` INNER JOIN `yearmonth` ON `customers`.`CustomerID` = `yearmonth`.`CustomerID` WHERE `customers`.`Segment` = 'KAM' GROUP BY `customers`.`CustomerID` ORDER BY `MaxConsumption` DESC LIMIT 1
SELECT SUM(`Consumption`) FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Segment` = 'KAM' AND `yearmonth`.`Date` = 201305
SELECT (COUNT(DISTINCT y.`CustomerID`) * 100.0 / (SELECT COUNT(DISTINCT c.`CustomerID`) FROM `customers` c WHERE c.`Segment` = 'LAM')) AS percentage FROM `yearmonth` y INNER JOIN `customers` c ON y.`CustomerID` = c.`CustomerID` WHERE c.`Segment` = 'LAM' AND y.`Consumption` > 46.73
SELECT `Country`, COUNT(*) AS `TotalValueForMoneyStations` FROM `gasstations` WHERE `Segment` = 'Value for money' GROUP BY `Country`
SELECT CAST(SUM(IIF(`Currency` = 'EUR', 1, 0)) AS REAL) * 100 / COUNT(`CustomerID`) FROM `customers` WHERE `Segment` = 'KAM'
SELECT CAST(SUM(IIF(`Consumption` > 528.3, 1, 0)) AS REAL) * 100 / COUNT(`CustomerID`) FROM `yearmonth` WHERE `Date` = '201202'
SELECT CAST(SUM(CASE WHEN `Segment` = 'Premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`GasStationID`) FROM `gasstations` WHERE `Country` = 'SVK'
SELECT `CustomerID` FROM `yearmonth` WHERE `Date` = '201309' ORDER BY `Consumption` DESC LIMIT 1
SELECT `Segment` FROM `customers` WHERE `CustomerID` = (SELECT `CustomerID` FROM `yearmonth` WHERE `Date` = '201309' GROUP BY `CustomerID` ORDER BY SUM(`Consumption`) ASC LIMIT 1)
SELECT `CustomerID` FROM `yearmonth` WHERE `Date` = '201206' AND `CustomerID` IN (SELECT `CustomerID` FROM `customers` WHERE `Segment` = 'SME') ORDER BY `Consumption` ASC LIMIT 1
SELECT MAX(`Consumption`) FROM `yearmonth` WHERE SUBSTR(`Date`, 1, 4) = '2012'
SELECT MAX(SUM(`Consumption`) / 12) AS `BiggestMonthlyConsumption` FROM `yearmonth` AS ym INNER JOIN `customers` AS c ON ym.`CustomerID` = c.`CustomerID` WHERE c.`Currency` = 'EUR'
SELECT DISTINCT `p`.`Description` FROM `yearmonth` AS `y` INNER JOIN `transactions_1k` AS `t` ON `y`.`CustomerID` = `t`.`CustomerID` INNER JOIN `products` AS `p` ON `t`.`ProductID` = `p`.`ProductID` WHERE `y`.`Date` = '201309'
SELECT DISTINCT `g`.`Country` FROM `transactions_1k` AS `t` INNER JOIN `gasstations` AS `g` ON `t`.`GasStationID` = `g`.`GasStationID` WHERE strftime('%Y%m', `t`.`Date`) = '201306'
SELECT DISTINCT `g`.`ChainID` FROM `gasstations` AS `g` INNER JOIN `transactions_1k` AS `t` ON `g`.`GasStationID` = `t`.`GasStationID` INNER JOIN `customers` AS `c` ON `t`.`CustomerID` = `c`.`CustomerID` WHERE `c`.`Currency` = 'EUR'
SELECT DISTINCT `p`.`Description` FROM `transactions_1k` AS `t` INNER JOIN `customers` AS `c` ON `t`.`CustomerID` = `c`.`CustomerID` INNER JOIN `products` AS `p` ON `t`.`ProductID` = `p`.`ProductID` WHERE `c`.`Currency` = 'EUR'
SELECT AVG(`Price`) FROM `transactions_1k` WHERE `Date` LIKE '2012-01%'
SELECT COUNT(DISTINCT `yearmonth`.`CustomerID`) FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Currency` = 'EUR' AND `yearmonth`.`Consumption` > 1000
SELECT DISTINCT T3.`Description` FROM `transactions_1k` AS T1 INNER JOIN `gasstations` AS T2 ON T1.`GasStationID` = T2.`GasStationID` INNER JOIN `products` AS T3 ON T1.`ProductID` = T3.`ProductID` WHERE T2.`Country` = 'CZE'
SELECT DISTINCT `Time` FROM `transactions_1k` AS T1 INNER JOIN `gasstations` AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11
SELECT COUNT(`TransactionID`) FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `gasstations`.`Country` = 'CZE' AND `transactions_1k`.`Price` > 1000
SELECT COUNT(T1.`TransactionID`) FROM `transactions_1k` AS T1 INNER JOIN `gasstations` AS T2 ON T1.`GasStationID` = T2.`GasStationID` WHERE T2.`Country` = 'CZE' AND T1.`Date` > '2012-01-01'
SELECT AVG(`Price`) FROM `transactions_1k` AS T1 INNER JOIN `gasstations` AS T2 ON T1.`GasStationID` = T2.`GasStationID` WHERE T2.`Country` = 'CZE'
SELECT AVG(`Price`) FROM `transactions_1k` WHERE `CustomerID` IN (SELECT `CustomerID` FROM `customers` WHERE `Currency` = 'EUR')
SELECT `CustomerID` FROM `transactions_1k` WHERE `Date` = '2012-08-25' GROUP BY `CustomerID` ORDER BY SUM(`Amount` * `Price`) DESC LIMIT 1
SELECT `Country` FROM `gasstations` WHERE `GasStationID` = (SELECT `GasStationID` FROM `transactions_1k` WHERE `Date` = '2012-08-25' ORDER BY `Time` ASC LIMIT 1)
SELECT `c`.`Currency` FROM `transactions_1k` AS `t` INNER JOIN `customers` AS `c` ON `t`.`CustomerID` = `c`.`CustomerID` WHERE `t`.`Date` = '2012-08-24' AND `t`.`Time` = '16:25:00'
SELECT `Segment` FROM `customers` WHERE `CustomerID` = (SELECT `CustomerID` FROM `transactions_1k` WHERE `Date` = '2012-08-23' AND `Time` = '21:20:00' LIMIT 1)
SELECT COUNT(`TransactionID`) FROM `transactions_1k` JOIN `customers` ON `transactions_1k`.`CustomerID` = `customers`.`CustomerID` WHERE `transactions_1k`.`Date` = '2012-08-26' AND `transactions_1k`.`Time` < '13:00:00' AND `customers`.`Currency` = 'CZK'
SELECT `Segment` FROM `customers` WHERE `CustomerID` = (SELECT `CustomerID` FROM `customers` ORDER BY `CustomerID` LIMIT 1)
SELECT T2.`Country` FROM `transactions_1k` AS T1 INNER JOIN `gasstations` AS T2 ON T1.`GasStationID` = T2.`GasStationID` WHERE T1.`Date` = '2012-08-24' AND T1.`Time` = '12:42:00'
SELECT `ProductID` FROM `transactions_1k` WHERE `Date` = '2012-08-23' AND `Time` = '21:20:00'
SELECT `Date`, `Consumption` FROM `yearmonth` WHERE `CustomerID` = (SELECT `CustomerID` FROM `transactions_1k` WHERE `Amount` = 124.05 AND `Date` = '2012-08-24' LIMIT 1) AND `Date` = '201201'
SELECT COUNT(`TransactionID`) FROM `transactions_1k` AS t INNER JOIN `gasstations` AS g ON t.`GasStationID` = g.`GasStationID` WHERE t.`Date` = '2012-08-26' AND t.`Time` BETWEEN '08:00:00' AND '09:00:00' AND g.`Country` = 'CZE'
SELECT `c`.`Currency` FROM `customers` AS `c` INNER JOIN `yearmonth` AS `y` ON `c`.`CustomerID` = `y`.`CustomerID` WHERE `y`.`Date` = '201306' AND `y`.`Consumption` = 214582.17
SELECT DISTINCT T2.`Country` FROM `transactions_1k` AS T1 INNER JOIN `gasstations` AS T2 ON T1.`GasStationID` = T2.`GasStationID` WHERE T1.`CardID` = 667467
SELECT T3.Country FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T1.GasStationID = T3.GasStationID WHERE T1.Amount = 548.4 AND T1.Date = '2012-08-24'
SELECT CAST(SUM(CASE WHEN `T1`.`Currency` = 'EUR' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`T1`.`CustomerID`) FROM `customers` AS `T1` INNER JOIN `transactions_1k` AS `T2` ON `T1`.`CustomerID` = `T2`.`CustomerID` WHERE `T2`.`Date` = '2012-08-25'
SELECT (y2012.Consumption - y2013.Consumption) / y2012.Consumption AS decrease_rate FROM (SELECT `CustomerID`, SUM(`Amount`) AS total_paid FROM `transactions_1k` WHERE `Date` = '2012-08-25' GROUP BY `CustomerID`) AS t INNER JOIN `yearmonth` AS y2012 ON t.`CustomerID` = y2012.`CustomerID` AND y2012.`Date` = '201207' INNER JOIN `yearmonth` AS y2013 ON t.`CustomerID` = y2013.`CustomerID` AND y2013.`Date` = '201303' WHERE t.total_paid = 634.8
SELECT `GasStationID` FROM `transactions_1k` GROUP BY `GasStationID` ORDER BY SUM(`Amount` * `Price`) DESC LIMIT 1
SELECT CAST(SUM(IIF(`Segment` = 'Premium', 1, 0)) AS REAL) * 100 / COUNT(`Segment`) FROM `gasstations` WHERE `Country` = 'SVK'
SELECT SUM(T1.Amount) AS TotalSpentAtGasStations, (SELECT SUM(T2.Consumption) FROM yearmonth AS T2 WHERE T2.CustomerID = 38508 AND T2.Date = '201201') AS SpentInJanuary2012 FROM transactions_1k AS T1 WHERE T1.CustomerID = 38508
SELECT `p`.`Description` FROM `products` AS `p` INNER JOIN `transactions_1k` AS `t` ON `p`.`ProductID` = `t`.`ProductID` GROUP BY `p`.`Description` ORDER BY SUM(`t`.`Amount`) DESC LIMIT 5
SELECT c.`CustomerID`, SUM(t.`Price`) / SUM(t.`Amount`) AS `AveragePricePerItem`, c.`Currency` FROM `transactions_1k` t INNER JOIN `customers` c ON t.`CustomerID` = c.`CustomerID` GROUP BY t.`CustomerID` ORDER BY SUM(t.`Price`) DESC LIMIT 1
SELECT `g`.`Country` FROM `transactions_1k` AS `t` INNER JOIN `gasstations` AS `g` ON `t`.`GasStationID` = `g`.`GasStationID` WHERE `t`.`ProductID` = 2 ORDER BY `t`.`Price` DESC LIMIT 1
SELECT `y`.`Consumption` FROM `transactions_1k` AS `t` INNER JOIN `yearmonth` AS `y` ON `t`.`CustomerID` = `y`.`CustomerID` WHERE `t`.`ProductID` = 5 AND (`t`.`Price` / `t`.`Amount`) > 29.00 AND `y`.`Date` = '201208'
