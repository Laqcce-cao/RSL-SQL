SELECT MAX(`Free Meal Count (K-12)` * 1.0 / `Enrollment (K-12)`) AS max_eligible_free_rate FROM `frpm` WHERE `County Name` = 'Alameda' AND `Enrollment (K-12)` > 0
SELECT `School Name`, (`Free Meal Count (Ages 5-17)` * 1.0 / `Enrollment (Ages 5-17)`) AS `Eligible Free Rate` FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `School Type` = 'Continuation' ORDER BY `Eligible Free Rate` ASC LIMIT 3;
SELECT DISTINCT `s`.`Zip` FROM `schools` s JOIN `frpm` f ON `s`.`CDSCode` = `f`.`CDSCode` WHERE `f`.`Charter School (Y/N)` = '1' AND `s`.`County` = 'Fresno'
SELECT `MailStreet` FROM `schools` JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` ORDER BY `FRPM Count (K-12)` DESC LIMIT 1
SELECT `Phone` FROM `schools` INNER JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `frpm`.`Charter School (Y/N)` = '1' AND `schools`.`OpenDate` > '2000-01-01' AND `frpm`.`Charter Funding Type` = 'Direct'
SELECT COUNT(*) FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `satscores`.`AvgScrMath` > 400 AND `schools`.`Virtual` = 'F'
SELECT `s`.`School` FROM `schools` s JOIN `satscores` ss ON `s`.`CDSCode` = `ss`.`cds` WHERE `ss`.`NumTstTakr` > 500 AND `s`.`Magnet` = 1
SELECT `Phone` FROM `schools` WHERE `CDSCode` = (SELECT `cds` FROM `satscores` ORDER BY `NumGE1500` DESC LIMIT 1)
SELECT `satscores`.`NumTstTakr` FROM `satscores` JOIN `frpm` ON `satscores`.`cds` = `frpm`.`CDSCode` WHERE `frpm`.`FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM `frpm`)
SELECT COUNT(*) FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode WHERE satscores.AvgScrMath > 560 AND schools.FundingType = 'Directly funded'
SELECT `frpm`.`FRPM Count (Ages 5-17)` FROM `satscores` JOIN `frpm` ON `satscores`.`cds` = `frpm`.`CDSCode` WHERE `satscores`.`AvgScrRead` = (SELECT MAX(`AvgScrRead`) FROM `satscores`)
SELECT `CDSCode` FROM `frpm` WHERE (`Enrollment (K-12)` + `Enrollment (Ages 5-17)`) > 500
SELECT MAX(`Free Meal Count (Ages 5-17)` * 1.0 / `Enrollment (Ages 5-17)`) AS max_eligible_free_rate FROM frpm JOIN satscores ON frpm.CDSCode = satscores.cds WHERE NumGE1500 * 1.0 / NumTstTakr > 0.3
SELECT `Phone` FROM `schools` JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` ORDER BY (`NumGE1500` * 1.0 / `NumTstTakr`) DESC LIMIT 3
SELECT `NCESSchool` FROM `schools` JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` ORDER BY `Enrollment (Ages 5-17)` DESC LIMIT 5
SELECT `dname` FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`StatusType` = 'Active' AND `satscores`.`rtype` = 'District' ORDER BY `AvgScrRead` DESC LIMIT 1;
SELECT COUNT(*) FROM satscores JOIN schools ON satscores.cds = schools.CDSCode WHERE schools.County = 'Alameda' AND satscores.NumTstTakr < 100
SELECT `satscores`.`sname`, `schools`.`CharterNum`, `satscores`.`AvgScrWrite` FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `satscores`.`AvgScrWrite` > 499 AND `schools`.`CharterNum` IS NOT NULL ORDER BY `satscores`.`AvgScrWrite` DESC
SELECT COUNT(*) FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`County` = 'Fresno' AND `schools`.`FundingType` = 'Directly Funded' AND `satscores`.`NumTstTakr` <= 250;
SELECT `Phone` FROM `schools` JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` ORDER BY `AvgScrMath` DESC LIMIT 1
SELECT COUNT(*) FROM `frpm` WHERE `County Name` = 'Amador' AND `Low Grade` = '9' AND `High Grade` = '12'
SELECT COUNT(*) FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`County` = 'Los Angeles' AND `frpm`.`Free Meal Count (K-12)` > 500 AND `frpm`.`FRPM Count (K-12)` < 700;
SELECT `sname` FROM `satscores` WHERE `cname` = 'Contra Costa' ORDER BY `NumTstTakr` DESC LIMIT 1
SELECT `s`.`School`, `s`.`Street` FROM `frpm` AS `f` JOIN `schools` AS `s` ON `f`.`CDSCode` = `s`.`CDSCode` WHERE (`f`.`Enrollment (K-12)` - `f`.`Enrollment (Ages 5-17)`) > 30;
SELECT `s`.`School` FROM `schools` s JOIN `frpm` f ON `s`.`CDSCode` = `f`.`CDSCode` JOIN `satscores` ss ON `s`.`CDSCode` = `ss`.`cds` WHERE (`f`.`Free Meal Count (K-12)` / `f`.`Enrollment (K-12)`) > 0.1 AND `ss`.`NumGE1500` > 0
SELECT `s`.`School`, `s`.`FundingType` FROM `schools` s JOIN `satscores` ss ON `s`.`CDSCode` = `ss`.`cds` WHERE `s`.`County` = 'Riverside' GROUP BY `s`.`School` HAVING AVG(`ss`.`AvgScrMath`) > 400
SELECT `s`.`School`, `s`.`Street` || ', ' || `s`.`City` || ', ' || `s`.`State` || ' ' || `s`.`Zip` AS `FullAddress` FROM `schools` AS `s` JOIN `frpm` AS `f` ON `s`.`CDSCode` = `f`.`CDSCode` WHERE `s`.`County` = 'Monterey' AND `s`.`GSoffered` LIKE '%High%' AND `f`.`FRPM Count (Ages 5-17)` > 800;
SELECT `s`.`School`, `sats`.`AvgScrWrite`, `s`.`Phone` FROM `schools` AS `s` JOIN `satscores` AS `sats` ON `s`.`CDSCode` = `sats`.`cds` WHERE (`s`.`OpenDate` > '1991-12-31' OR `s`.`ClosedDate` < '2000-01-01')
WITH AvgDiff AS (SELECT AVG(`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) AS avg_diff FROM frpm JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE schools.`FundingType` = 'Local'), SchoolDiff AS (SELECT schools.`School` AS school_name, schools.`DOCType` AS doc_type, (`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) AS diff FROM frpm JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE schools.`FundingType` = 'Local') SELECT school_name, doc_type FROM SchoolDiff WHERE diff > (SELECT avg_diff FROM AvgDiff)
SELECT `OpenDate` FROM `schools` WHERE `CDSCode` = (SELECT `CDSCode` FROM `frpm` WHERE `Enrollment (K-12)` = (SELECT MAX(`Enrollment (K-12)`) FROM `frpm`))
SELECT `City`, SUM(`Enrollment (K-12)`) AS `TotalEnrollment` FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` GROUP BY `City` ORDER BY `TotalEnrollment` ASC LIMIT 5
SELECT `Free Meal Count (K-12)` * 1.0 / `Enrollment (K-12)` AS eligible_free_rate FROM frpm ORDER BY `Enrollment (K-12)` DESC LIMIT 2 OFFSET 9
SELECT `School Name`, (`FRPM Count (K-12)` * 1.0 / `Enrollment (K-12)`) AS `Eligible FRPM Rate` FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`SOC` = 66 ORDER BY `FRPM Count (K-12)` DESC LIMIT 5
SELECT `schools`.`School`, `schools`.`Website` FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000;
SELECT (`Free Meal Count (Ages 5-17)` * 1.0 / `Enrollment (Ages 5-17)`) AS free_rate FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE `AdmFName1` = 'Kacey' AND `AdmLName1` = 'Gibson'
SELECT `AdmEmail1` FROM `schools` JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `frpm`.`Charter School (Y/N)` = '1' ORDER BY `frpm`.`Enrollment (K-12)` ASC LIMIT 1
SELECT `AdmFName1`, `AdmLName1`, `AdmFName2`, `AdmLName2`, `AdmFName3`, `AdmLName3` FROM `schools` JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` WHERE `NumGE1500` = (SELECT MAX(`NumGE1500`) FROM `satscores`)
SELECT `Street`, `City`, `Zip`, `State` FROM `schools` JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` WHERE `NumTstTakr` > 0 ORDER BY (`NumGE1500` * 1.0 / `NumTstTakr`) ASC LIMIT 1
SELECT `schools`.`Website` FROM `schools` JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` WHERE `satscores`.`cname` = 'Los Angeles' AND `satscores`.`NumTstTakr` BETWEEN 2000 AND 3000;
SELECT AVG(`NumTstTakr`) FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`County` = 'Fresno' AND strftime('%Y', `schools`.`OpenDate`) = '1980'
SELECT `Phone` FROM `schools` JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` WHERE `dname` = 'Fresno Unified' ORDER BY `AvgScrRead` ASC LIMIT 1
SELECT `s`.`School` FROM `schools` s JOIN `satscores` ss ON `s`.`CDSCode` = `ss`.`cds` WHERE `s`.`Virtual` = 'F' AND `ss`.`rtype` = 'S' AND `ss`.`AvgScrRead` IN (SELECT `AvgScrRead` FROM (SELECT `AvgScrRead`, `cname`, RANK() OVER (PARTITION BY `cname` ORDER BY `AvgScrRead` DESC) as `rnk` FROM `satscores` WHERE `rtype` = 'S') WHERE `rnk` <= 5)
SELECT `EdOpsName` FROM `schools` JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` WHERE `AvgScrMath` = (SELECT MAX(`AvgScrMath`) FROM `satscores`)
SELECT `satscores`.`AvgScrMath`, `schools`.`County` FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE (`satscores`.`AvgScrRead` + `satscores`.`AvgScrMath` + `satscores`.`AvgScrWrite`) = (SELECT MIN(`AvgScrRead` + `AvgScrMath` + `AvgScrWrite`) FROM `satscores`)
SELECT `s`.`MailCity`, `sat`.`AvgScrWrite` FROM `satscores` AS `sat` JOIN `schools` AS `s` ON `sat`.`cds` = `s`.`CDSCode` WHERE `sat`.`NumTstTakr` = (SELECT MAX(`NumTstTakr`) FROM `satscores` WHERE `NumGE1500` > 0) AND `sat`.`NumGE1500` > 0 LIMIT 1
SELECT `s`.`School`, AVG(`sat`.`AvgScrWrite`) AS `AverageWritingScore` FROM `schools` AS `s` JOIN `satscores` AS `sat` ON `s`.`CDSCode` = `sat`.`cds` WHERE `s`.`AdmFName1` = 'Ricci' AND `s`.`AdmLName1` = 'Ulrich' GROUP BY `s`.`School`
SELECT `s`.`School`, MAX(`f`.`Enrollment (K-12)`) AS `MaxEnrollment` FROM `schools` s JOIN `frpm` f ON `s`.`CDSCode` = `f`.`CDSCode` WHERE `s`.`DOC` = 31 GROUP BY `s`.`School` ORDER BY `MaxEnrollment` DESC LIMIT 1
SELECT COUNT(*) / 12 AS monthly_average FROM schools WHERE `County` = 'Alameda' AND `DOC` = 52 AND strftime('%Y', `OpenDate`) = '1980'
SELECT (SELECT COUNT(DISTINCT s1.`CDSCode`) FROM `schools` s1 JOIN `frpm` f1 ON s1.`CDSCode` = f1.`CDSCode` WHERE s1.`County` = 'Orange' AND s1.`DOC` = 54) * 1.0 / (SELECT COUNT(DISTINCT s2.`CDSCode`) FROM `schools` s2 JOIN `frpm` f2 ON s2.`CDSCode` = f2.`CDSCode` WHERE s2.`County` = 'Orange' AND s2.`DOC` = 52) AS ratio
SELECT `County`, `School`, `ClosedDate` FROM `schools` WHERE `StatusType` = 'Closed' GROUP BY `County` ORDER BY COUNT(`School`) DESC LIMIT 1;
SELECT `s`.`School`, `s`.`Street` FROM `schools` s JOIN `satscores` ss ON `s`.`CDSCode` = `ss`.`cds` ORDER BY `ss`.`AvgScrMath` DESC LIMIT 1 OFFSET 6
SELECT `s`.`MailStreet`, `s`.`School` FROM `satscores` AS `ss` JOIN `schools` AS `s` ON `ss`.`cds` = `s`.`CDSCode` WHERE `ss`.`AvgScrRead` = (SELECT MIN(`AvgScrRead`) FROM `satscores`)
SELECT COUNT(DISTINCT `s`.`CDSCode`) FROM `satscores` AS `s` JOIN `schools` AS `sc` ON `s`.`cds` = `sc`.`CDSCode` WHERE (`s`.`AvgScrRead` + `s`.`AvgScrMath` + `s`.`AvgScrWrite`) >= 1500 AND `sc`.`MailCity` = 'Lakeport'
SELECT SUM(`NumTstTakr`) FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`MailCity` = 'Fresno';
SELECT `schools`.`School`, `schools`.`MailZip` FROM `schools` WHERE (`schools`.`AdmFName1` = 'Avetik' AND `schools`.`AdmLName1` = 'Atoian') OR (`schools`.`AdmFName2` = 'Avetik' AND `schools`.`AdmLName2` = 'Atoian') OR (`schools`.`AdmFName3` = 'Avetik' AND `schools`.`AdmLName3` = 'Atoian')
SELECT (COUNT(CASE WHEN `County` = 'Colusa' THEN 1 END) * 1.0 / COUNT(CASE WHEN `County` = 'Humboldt' THEN 1 END)) AS Ratio FROM `schools` WHERE `MailState` = 'CA';
SELECT COUNT(*) FROM `schools` WHERE `MailState` = 'CA' AND `StatusType` = 'Active' AND `MailCity` = 'San Joaquin'
SELECT `Phone`, `Ext` FROM `schools` JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` ORDER BY `AvgScrWrite` DESC LIMIT 1 OFFSET 332
SELECT `School`, `Phone`, `Ext` FROM `schools` WHERE `Zip` = '95203-3704'
SELECT `Website` FROM `schools` WHERE (`AdmFName1` = 'Mike' AND `AdmLName1` = 'Larson') OR (`AdmFName1` = 'Dante' AND `AdmLName1` = 'Alvarez')
SELECT `Website` FROM `schools` WHERE `Virtual` = 'P' AND `Charter` = 1 AND `County` = 'San Joaquin'
SELECT COUNT(*) FROM `schools` WHERE `Charter` = 1 AND `City` = 'Hickman' AND `DOC` = 52;
SELECT COUNT(*) FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`County` = 'Los Angeles' AND `schools`.`Charter` = 0 AND (`frpm`.`Free Meal Count (K-12)` * 100.0 / `frpm`.`Enrollment (K-12)`) < 0.18
SELECT `schools`.`School`, `schools`.`City`, `schools`.`AdmFName1` || ' ' || `schools`.`AdmLName1` AS `Admin1`, `schools`.`AdmFName2` || ' ' || `schools`.`AdmLName2` AS `Admin2`, `schools`.`AdmFName3` || ' ' || `schools`.`AdmLName3` AS `Admin3` FROM `schools` WHERE `schools`.`Charter` = 1 AND `schools`.`CharterNum` = '00D2'
SELECT COUNT(*) FROM `schools` WHERE `MailCity` = 'Hickman' AND `CharterNum` = '00D4'
SELECT (COUNT(CASE WHEN `FundingType` = 'Locally Funded' THEN 1 END) * 100.0 / COUNT(*)) AS `Ratio` FROM `schools` WHERE `County` = 'Santa Clara' AND `Charter` = 'Y';
SELECT COUNT(*) FROM `schools` WHERE `FundingType` = 'Directly Funded' AND `County` = 'Stanislaus' AND `OpenDate` BETWEEN '2000-01-01' AND '2005-12-31'
SELECT COUNT(*) AS total_closures FROM `schools` WHERE `District` = 'Community College District' AND `ClosedDate` LIKE '1989%' AND `City` = 'San Francisco';
SELECT `County`, COUNT(*) AS closure_count FROM `schools` WHERE `SOC` = 11 AND `ClosedDate` BETWEEN '1980-01-01' AND '1989-12-31' GROUP BY `County` ORDER BY closure_count DESC LIMIT 1
SELECT `NCESDist` FROM `schools` WHERE `SOC` = 31 AND `NCESDist` IS NOT NULL
SELECT COUNT(*) FROM `schools` WHERE `County` = 'Alpine' AND `StatusType` IN ('Active', 'Closed') AND `EdOpsName` = 'District Community Day School'
SELECT `District Code` FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`City` = 'Fresno' AND `schools`.`Magnet` = 0
SELECT SUM(`Enrollment (Ages 5-17)`) FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`Academic Year` = '2014-2015' AND `schools`.`City` = 'Fremont' AND `schools`.`EdOpsCode` = 'SSS'
SELECT f.`FRPM Count (Ages 5-17)` FROM frpm f JOIN schools s ON f.`CDSCode` = s.`CDSCode` WHERE s.`MailStreet` = 'PO Box 1040' AND s.`EdOpsName` = 'Youth Authority School'
SELECT MIN(`Low Grade`) FROM `frpm` WHERE `CDSCode` IN (SELECT `CDSCode` FROM `schools` WHERE `NCESDist` = '0613360') AND `Educational Option Type` = 'SPECON'
SELECT `schools`.`School`, `schools`.`EdOpsName` FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`NSLP Provision Status` = 'Provision 2' AND `frpm`.`County Code` = '37'
SELECT `City` FROM `schools` JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `EILCode` = 'HS' AND `Low Grade` = 9 AND `High Grade` = 12 AND `County Name` = 'Merced' AND `NSLP Provision Status` = '2'
SELECT `s`.`School`, `f`.`Percent (%) Eligible FRPM (Ages 5-17)` FROM `schools` s JOIN `frpm` f ON `s`.`CDSCode` = `f`.`CDSCode` WHERE `s`.`County` = 'Los Angeles' AND `s`.`GSoffered` LIKE '%K%' AND `s`.`GSoffered` LIKE '%9%' AND `s`.`GSoffered` NOT LIKE '%10%' AND `s`.`GSoffered` NOT LIKE '%11%' AND `s`.`GSoffered` NOT LIKE '%12%'
SELECT `GSserved`, COUNT(*) as `count` FROM `schools` WHERE `City` = 'Adelanto' GROUP BY `GSserved` ORDER BY `count` DESC LIMIT 1;
SELECT `County`, COUNT(*) AS `NumberOfSchools` FROM `schools` WHERE `County` IN ('San Diego', 'Santa Barbara') AND `Virtual` = 'F' GROUP BY `County` ORDER BY `NumberOfSchools` DESC LIMIT 1;
SELECT `s`.`School`, `s`.`Latitude`, `f`.`School Type` FROM `schools` s JOIN `frpm` f ON `s`.`CDSCode` = `f`.`CDSCode` ORDER BY `s`.`Latitude` DESC LIMIT 1
SELECT `School`, `City`, `Low Grade` FROM `schools` JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `State` = 'CA' ORDER BY `Latitude` ASC LIMIT 1
SELECT `GSoffered` FROM `schools` WHERE ABS(`Longitude`) = (SELECT MAX(ABS(`Longitude`)) FROM `schools`)
SELECT `s`.`City`, COUNT(`s`.`CDSCode`) AS `Number_of_Schools` FROM `schools` s JOIN `frpm` f ON `s`.`CDSCode` = `f`.`CDSCode` WHERE `s`.`Magnet` = 1 AND `f`.`Low Grade` = 'K' AND `f`.`High Grade` = '8' AND `f`.`NSLP Provision Status` = 'Multiple Provision Types' GROUP BY `s`.`City`
SELECT `District`, `AdmFName1`, COUNT(`AdmFName1`) as `Count` FROM `schools` GROUP BY `District`, `AdmFName1` ORDER BY `Count` DESC LIMIT 2
SELECT `frpm`.`District Code`, `frpm`.`Percent (%) Eligible Free (K-12)` FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`AdmFName1` = 'Alusine'
SELECT `schools`.`AdmLName1`, `schools`.`District`, `schools`.`County`, `schools`.`School` FROM `schools` WHERE `schools`.`CharterNum` = 40
SELECT DISTINCT `AdmEmail1`, `AdmEmail2`, `AdmEmail3` FROM `schools` WHERE `County` = 'San Bernardino' AND `City` = 'San Bernardino City Unified' AND `OpenDate` BETWEEN '2009-01-01' AND '2010-12-31' AND (`SOC` = 62 OR `DOC` = 54) AND `StatusType` = 'Active' AND `Charter` = 'N'
SELECT `s`.`School`, `s`.`AdmEmail1` FROM `satscores` AS `ss` JOIN `schools` AS `s` ON `ss`.`cds` = `s`.`CDSCode` WHERE `ss`.`NumGE1500` = (SELECT MAX(`NumGE1500`) FROM `satscores`)
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `card`.`type` = 'POPLATEK PO OBRATU' AND `district`.`A3` = 'East Bohemia'
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` JOIN `district` ON `account`.`district_id` = `district`.`district_id` JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `district`.`A3` = 'Prague'
SELECT CASE WHEN AVG(`A12`) > AVG(`A13`) THEN '1995' ELSE '1996' END AS higher_unemployment_year FROM `district`
SELECT COUNT(DISTINCT `district`.`district_id`) FROM `district` JOIN `client` ON `district`.`district_id` = `client`.`district_id` WHERE `client`.`gender` = 'F' AND `district`.`A11` > 6000 AND `district`.`A11` < 10000;
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'M' AND `district`.`A3` = 'North Bohemia' AND `district`.`A11` > 8000;
WITH FemaleClients AS (SELECT `client_id`, `birth_date`, `district_id` FROM `client` WHERE `gender` = 'F'), OldestFemale AS (SELECT `client_id`, `district_id` FROM FemaleClients WHERE `birth_date` = (SELECT MIN(`birth_date`) FROM FemaleClients)), LowestSalaryDistrict AS (SELECT `district_id` FROM `district` WHERE `A11` = (SELECT MIN(`A11`) FROM `district` WHERE `district_id` IN (SELECT `district_id` FROM OldestFemale))), HighestSalary AS (SELECT MAX(`A11`) AS max_salary FROM `district`), Gap AS (SELECT (SELECT max_salary FROM HighestSalary) - (SELECT `A11` FROM `district` WHERE `district_id` = (SELECT `district_id` FROM LowestSalaryDistrict)) AS salary_gap) SELECT `account_id` FROM `account` WHERE `district_id` = (SELECT `district_id` FROM LowestSalaryDistrict) AND `account_id` IN (SELECT `account_id` FROM `disp` WHERE `client_id` IN (SELECT `client_id` FROM OldestFemale));
SELECT DISTINCT `account`.`account_id` FROM `account` JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` JOIN `client` ON `disp`.`client_id` = `client`.`client_id` JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`birth_date` = (SELECT MAX(`birth_date`) FROM `client`) AND `district`.`A11` = (SELECT MAX(`district`.`A11`) FROM `district`)
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `account` ON `disp`.`account_id` = `account`.`account_id` WHERE `account`.`frequency` = 'POPLATEK TYDNE' AND `disp`.`type` = 'OWNER'
SELECT DISTINCT `client`.`client_id` FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `account` ON `disp`.`account_id` = `account`.`account_id` WHERE `disp`.`type` = 'DISPONENT' AND `account`.`frequency` = 'POPLATEK PO OBRATU'
SELECT `account_id` FROM `loan` WHERE `status` = 'A' AND strftime('%Y', `date`) = '1997' AND `amount` = (SELECT MIN(`amount`) FROM `loan` WHERE `status` = 'A' AND strftime('%Y', `date`) = '1997') AND `account_id` IN (SELECT `account_id` FROM `account` WHERE `frequency` = 'POPLATEK TYDNE')
SELECT `account_id` FROM `loan` WHERE `duration` > 12 AND `status` = 'A' AND `amount` = (SELECT MAX(`amount`) FROM `loan` WHERE `duration` > 12 AND `status` = 'A' AND `account_id` IN (SELECT `account_id` FROM `account` WHERE `date` LIKE '1993%')) AND `account_id` IN (SELECT `account_id` FROM `account` WHERE `date` LIKE '1993%')
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `account` ON `disp`.`account_id` = `account`.`account_id` JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' AND `client`.`birth_date` < '1950-01-01' AND `district`.`A2` = 'Sokolov'
SELECT `account_id` FROM `trans` WHERE `date` = (SELECT MIN(`date`) FROM `trans` WHERE `date` LIKE '1995%')
SELECT DISTINCT `account`.`account_id` FROM `account` JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `account`.`date` < '1997-01-01' AND `trans`.`amount` > 3000
SELECT `client`.`client_id` FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`issued` = '1994-03-03'
SELECT `account`.`date` FROM `trans` JOIN `account` ON `trans`.`account_id` = `account`.`account_id` WHERE `trans`.`amount` = 840 AND `trans`.`date` = '1998-10-14'
SELECT `account`.`district_id` FROM `loan` JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `loan`.`date` = '1994-08-25'
SELECT MAX(`trans`.`amount`) FROM `trans` JOIN `account` ON `trans`.`account_id` = `account`.`account_id` JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`issued` = '1996-10-21'
SELECT `client`.`gender` FROM `client` JOIN `account` ON `client`.`client_id` = (SELECT `disp`.`client_id` FROM `disp` WHERE `disp`.`account_id` = `account`.`account_id` LIMIT 1) JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A11` = (SELECT MAX(`A11`) FROM `district`) ORDER BY `client`.`birth_date` ASC LIMIT 1
SELECT `t`.`amount` FROM `trans` t JOIN `account` a ON `t`.`account_id` = `a`.`account_id` JOIN `loan` l ON `a`.`account_id` = `l`.`account_id` WHERE `l`.`amount` = (SELECT MAX(`amount`) FROM `loan`) AND `t`.`date` = (SELECT MIN(`t2`.`date`) FROM `trans` t2 WHERE `t2`.`account_id` = `a`.`account_id`) LIMIT 1
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `account` ON `disp`.`account_id` = `account`.`account_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Jesenik' AND `client`.`gender` = 'F'
SELECT `disp`.`disp_id` FROM `trans` JOIN `disp` ON `trans`.`account_id` = `disp`.`account_id` WHERE `trans`.`amount` = 5100 AND `trans`.`date` = '1998-09-02'
SELECT COUNT(*) FROM `account` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Litomerice' AND strftime('%Y', `account`.`date`) = '1996'
SELECT `district`.`A2` FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `account` ON `disp`.`account_id` = `account`.`account_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' AND `client`.`birth_date` = '1976-01-29'
SELECT `client`.`birth_date` FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `loan` ON `disp`.`account_id` = `loan`.`account_id` WHERE `loan`.`amount` = 98832 AND `loan`.`date` = '1996-01-03'
SELECT `account`.`account_id` FROM `account` JOIN `district` ON `account`.`district_id` = `district`.`district_id` JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `district`.`A3` = 'Prague' ORDER BY `account`.`date` ASC LIMIT 1;
SELECT (COUNT(CASE WHEN `client`.`gender` = 'M' THEN 1 END) * 100.0 / COUNT(*)) AS male_percentage FROM `client` JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `district`.`A3` = 'south Bohemia' AND `district`.`A4` = (SELECT MAX(`A4`) FROM `district` WHERE `A3` = 'south Bohemia');
SELECT ((t2.balance - t1.balance) / t1.balance) * 100 AS increase_rate FROM (SELECT `account_id`, `balance` FROM `trans` WHERE `date` = '1993-03-22') t1 JOIN (SELECT `account_id`, `balance` FROM `trans` WHERE `date` = '1998-12-27') t2 ON t1.account_id = t2.account_id WHERE t1.account_id = (SELECT `account_id` FROM `loan` WHERE `date` = '1993-07-05' AND `status` = 'A' ORDER BY `date` ASC LIMIT 1)
SELECT (SUM(CASE WHEN `status` = 'A' THEN `amount` ELSE 0 END) * 100.0 / SUM(`amount`)) AS percentage FROM `loan`
SELECT (SUM(CASE WHEN `amount` < 100000 AND `status` = 'C' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM `loan` WHERE `amount` < 100000;
SELECT `account`.`account_id`, `district`.`A2` AS district_name, `district`.`A3` AS district_region FROM `account` JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `account`.`date` LIKE '1993%' AND `trans`.`k_symbol` = 'POPLATEK PO OBRATU';
SELECT DISTINCT `a`.`account_id`, `a`.`frequency`, `c`.`client_id` FROM `account` a JOIN `disp` d ON `a`.`account_id` = `d`.`account_id` JOIN `client` c ON `d`.`client_id` = `c`.`client_id` JOIN `district` dis ON `a`.`district_id` = `dis`.`district_id` WHERE `dis`.`A2` = 'east Bohemia' AND `a`.`date` BETWEEN '1995-01-01' AND '2000-12-31' AND `d`.`type` = 'OWNER'
SELECT `account`.`account_id`, `account`.`date` FROM `account` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Prachatice'
SELECT `district`.`A2`, `district`.`A3` FROM `loan` JOIN `account` ON `loan`.`account_id` = `account`.`account_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`loan_id` = 4990;
SELECT `account`.`account_id`, `district`.`A2` AS `district`, `district`.`A3` AS `region` FROM `loan` JOIN `account` ON `loan`.`account_id` = `account`.`account_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`amount` > 300000
SELECT `loan`.`loan_id`, `district`.`A3`, `district`.`A11` FROM `loan` JOIN `account` ON `loan`.`account_id` = `account`.`account_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`duration` = 60
SELECT `district`.`A3` AS `district_name`, ((`district`.`A13` - `district`.`A12`) / `district`.`A12`) * 100 AS `unemployment_increment_percentage` FROM `loan` JOIN `account` ON `loan`.`account_id` = `account`.`account_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`status` = 'D';
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM `account` WHERE strftime('%Y', `date`) = '1993')) AS percentage FROM `account` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Decin' AND strftime('%Y', `date`) = '1993';
SELECT `account_id` FROM `account` WHERE `frequency` = 'POPLATEK MESICNE'
SELECT d.`A2`, COUNT(c.`client_id`) AS female_count FROM `client` c JOIN `disp` dp ON c.`client_id` = dp.`client_id` JOIN `account` a ON dp.`account_id` = a.`account_id` JOIN `district` d ON a.`district_id` = d.`district_id` WHERE c.`gender` = 'F' GROUP BY d.`A2` ORDER BY female_count DESC LIMIT 9;
SELECT `d`.`A2` AS `district_name`, `t`.`amount` FROM `trans` t JOIN `account` a ON `t`.`account_id` = `a`.`account_id` JOIN `district` d ON `a`.`district_id` = `d`.`district_id` WHERE `t`.`type` = 'VYDAJ' AND `t`.`date` LIKE '1996-01%' ORDER BY `t`.`amount` DESC LIMIT 10;
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` JOIN `district` ON `account`.`district_id` = `district`.`district_id` LEFT JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` LEFT JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `district`.`A3` = 'South Bohemia' AND `card`.`card_id` IS NULL;
SELECT `district`.`A3` FROM `loan` JOIN `account` ON `loan`.`account_id` = `account`.`account_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`status` IN ('C', 'D') GROUP BY `district`.`A3` ORDER BY COUNT(`loan`.`loan_id`) DESC LIMIT 1;
SELECT AVG(`loan`.`amount`) AS `average_loan_amount` FROM `loan` JOIN `account` ON `loan`.`account_id` = `account`.`account_id` JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `client`.`gender` = 'M'
SELECT `district`.`A3` AS `branch_location`, `district`.`A2` AS `district_name` FROM `district` WHERE `district`.`A13` = (SELECT MAX(`A13`) FROM `district`)
SELECT COUNT(`account`.`account_id`) FROM `account` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A16` = (SELECT MAX(`A16`) FROM `district`)
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `account`.`frequency` = 'POPLATEK MESICNE' AND `trans`.`operation` = 'VYBER KARTOU' AND `trans`.`balance` < 0;
SELECT COUNT(*) FROM loan l JOIN account a ON l.account_id = a.account_id WHERE l.amount >= 250000 AND a.frequency = 'POPLATEK MESICNE' AND l.status = 'A' AND l.date BETWEEN '1995-01-01' AND '1997-12-31';
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`status` IN ('C', 'D') AND `district`.`A2` = 1
SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id = (SELECT district_id FROM district ORDER BY A15 DESC LIMIT 1 OFFSET 1)
SELECT COUNT(*) FROM `card` INNER JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` WHERE `card`.`type` = 'gold' AND `disp`.`type` = 'OWNER';
SELECT COUNT(*) FROM `account` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Pisek'
SELECT DISTINCT `district`.`district_id` FROM `district` JOIN `account` ON `district`.`district_id` = `account`.`district_id` JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `trans`.`amount` > 10000 AND strftime('%Y', `trans`.`date`) = '1997'
SELECT DISTINCT `account`.`account_id` FROM `account` JOIN `order` ON `account`.`account_id` = `order`.`account_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `order`.`k_symbol` = 'SIPO' AND `district`.`A2` = 'Pisek'
SELECT DISTINCT `account`.`account_id` FROM `account` JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`type` = 'gold';
SELECT AVG(`amount`) FROM `trans` WHERE `operation` = 'VYBER KARTOU' AND strftime('%Y', `date`) = '2021' AND strftime('%m', `date`) = '01'
SELECT DISTINCT `disp`.`client_id` FROM `trans` JOIN `disp` ON `trans`.`account_id` = `disp`.`account_id` JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `trans`.`operation` = 'VYBER KARTOU' AND `trans`.`amount` < (SELECT AVG(`amount`) FROM `trans` WHERE `operation` = 'VYBER KARTOU' AND strftime('%Y', `date`) = '1998') AND strftime('%Y', `trans`.`date`) = '1998'
SELECT DISTINCT `client`.`client_id` FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `account` ON `disp`.`account_id` = `account`.`account_id` JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `client`.`gender` = 'F'
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `account` ON `disp`.`account_id` = `account`.`account_id` JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' AND `district`.`A3` LIKE '%south Bohemia%'
SELECT `account`.`account_id` FROM `account` JOIN `district` ON `account`.`district_id` = `district`.`district_id` JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` WHERE `district`.`A2` = 'Tabor' AND `disp`.`type` = 'OWNER'
SELECT DISTINCT `disp`.`type` FROM `disp` JOIN `account` ON `disp`.`account_id` = `account`.`account_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `disp`.`type` != 'OWNER' AND `district`.`A11` > 8000 AND `district`.`A11` <= 9000
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` JOIN `district` ON `account`.`district_id` = `district`.`district_id` JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `district`.`A3` = 'North Bohemia' AND `trans`.`bank` = 'AB'
SELECT DISTINCT `district`.`A2` FROM `district` JOIN `account` ON `district`.`district_id` = `account`.`district_id` JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `trans`.`type` = 'VYDAJ'
SELECT AVG(`A15`) FROM `district` WHERE `A15` > 4000 AND `district_id` IN (SELECT DISTINCT `district_id` FROM `account` WHERE strftime('%Y', `date`) >= '1997')
SELECT COUNT(*) FROM card JOIN disp ON card.disp_id = disp.disp_id WHERE card.type = 'classic' AND disp.type = 'OWNER'
SELECT COUNT(*) FROM `client` WHERE `gender` = 'M' AND `district_id` = (SELECT `district_id` FROM `district` WHERE `A2` = 'Hl.m. Praha')
SELECT (COUNT(CASE WHEN `type` = 'gold' AND `issued` < '1998-01-01' THEN 1 END) * 100.0 / COUNT(*)) AS percent_gold FROM `card`
SELECT `client`.`client_id` FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `loan` ON `disp`.`account_id` = `loan`.`account_id` WHERE `loan`.`amount` = (SELECT MAX(`amount`) FROM `loan`)
SELECT `d`.`A15` FROM `district` d JOIN `account` a ON `d`.`district_id` = `a`.`district_id` WHERE `a`.`account_id` = 532
SELECT `account`.`district_id` FROM `order` JOIN `account` ON `order`.`account_id` = `account`.`account_id` WHERE `order`.`order_id` = 33333
SELECT `trans`.* FROM `trans` JOIN `account` ON `trans`.`account_id` = `account`.`account_id` JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` WHERE `disp`.`client_id` = 3356 AND `trans`.`operation` = 'VYBER'
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `account`.`frequency` = 'POPLATEK TYDNE' AND `loan`.`amount` < 200000;
SELECT `card`.`type` FROM `card` JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` WHERE `disp`.`client_id` = 13539
SELECT `district`.`A3` FROM `client` JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`client_id` = 3541
SELECT `district`.`district_id`, COUNT(`loan`.`loan_id`) AS `loan_count` FROM `loan` JOIN `account` ON `loan`.`account_id` = `account`.`account_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`status` = 'A' GROUP BY `district`.`district_id` ORDER BY `loan_count` DESC LIMIT 1;
SELECT `client`.`client_id` FROM `order` JOIN `account` ON `order`.`account_id` = `account`.`account_id` JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `order`.`order_id` = 32423
SELECT `trans`.* FROM `trans` JOIN `account` ON `trans`.`account_id` = `account`.`account_id` WHERE `account`.`district_id` = 5
SELECT COUNT(*) FROM `account` WHERE `district_id` = (SELECT `district_id` FROM `district` WHERE `A2` = 'Jesenik')
SELECT DISTINCT `client`.`client_id` FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`type` = 'junior' AND `card`.`issued` >= '1997-01-01'
SELECT (COUNT(DISTINCT c.client_id) * 100.0 / (SELECT COUNT(DISTINCT c2.client_id) FROM client c2 JOIN account a2 ON c2.district_id = a2.district_id JOIN district d2 ON a2.district_id = d2.district_id WHERE d2.A11 > 10000)) AS percentage FROM client c JOIN account a ON c.district_id = a.district_id JOIN district d ON a.district_id = d.district_id WHERE d.A11 > 10000 AND c.gender = 'F'
SELECT (SUM(CASE WHEN strftime('%Y', l.date) = '1997' THEN l.amount ELSE 0 END) - SUM(CASE WHEN strftime('%Y', l.date) = '1996' THEN l.amount ELSE 0 END)) * 100.0 / SUM(CASE WHEN strftime('%Y', l.date) = '1996' THEN l.amount ELSE 0 END) AS growth_rate FROM loan l JOIN account a ON l.account_id = a.account_id JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE c.gender = 'M';
SELECT COUNT(*) FROM `trans` WHERE `operation` = 'VYBER KARTOU' AND `date` > '1995-12-31'
SELECT (SELECT SUM(`A16`) FROM `district` WHERE `A3` = 'north Bohemia') - (SELECT SUM(`A16`) FROM `district` WHERE `A3` = 'east Bohemia') AS `crime_difference`
SELECT `type`, COUNT(*) AS `count` FROM `disp` WHERE `account_id` BETWEEN 1 AND 10 GROUP BY `type`
SELECT `frequency`, `k_symbol` FROM `account` JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `account`.`account_id` = 3 AND `trans`.`amount` = 3539
SELECT strftime('%Y', `birth_date`) AS birth_year FROM `client` WHERE `client_id` = (SELECT `client_id` FROM `disp` WHERE `account_id` = 130 AND `type` = 'OWNER')
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` WHERE `disp`.`type` = 'OWNER' AND `account`.`frequency` = 'POPLATEK PO OBRATU';
SELECT SUM(`loan`.`amount`) AS `total_debt`, `loan`.`status` FROM `loan` JOIN `disp` ON `loan`.`account_id` = `disp`.`account_id` WHERE `disp`.`client_id` = 992 GROUP BY `loan`.`status`
SELECT SUM(`trans`.`amount`), `client`.`gender` FROM `trans` JOIN `account` ON `trans`.`account_id` = `account`.`account_id` JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `client`.`client_id` = 4 AND `trans`.`trans_id` > 851 GROUP BY `client`.`gender`
SELECT `card`.`type` FROM `card` JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` WHERE `disp`.`client_id` = 9
SELECT SUM(`amount`) AS total_paid FROM `trans` WHERE `account_id` IN (SELECT `account_id` FROM `disp` WHERE `client_id` = 617) AND `date` LIKE '1998%' AND `type` = 'debit'
SELECT `client`.`client_id`, `client`.`birth_date` FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `account` ON `disp`.`account_id` = `account`.`account_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `client`.`birth_date` BETWEEN '1983-01-01' AND '1987-12-31' AND `district`.`A2` = 'East Bohemia'
SELECT `client`.`client_id` FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `loan` ON `disp`.`account_id` = `loan`.`account_id` WHERE `client`.`gender` = 'F' ORDER BY `loan`.`amount` DESC LIMIT 3
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `account` ON `disp`.`account_id` = `account`.`account_id` JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `client`.`gender` = 'M' AND `client`.`birth_date` BETWEEN '1974-01-01' AND '1976-12-31' AND `trans`.`k_symbol` = 'SIPO' AND `trans`.`amount` > 4000;
SELECT COUNT(*) FROM `account` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A3` = 'Beroun' AND `account`.`date` > '1996-12-31'
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `client`.`gender` = 'F' AND `card`.`type` = 'junior'
SELECT (COUNT(DISTINCT c.client_id) * 100.0 / (SELECT COUNT(DISTINCT c2.client_id) FROM client c2 JOIN disp d2 ON c2.client_id = d2.client_id JOIN account a2 ON d2.account_id = a2.account_id JOIN district dis2 ON a2.district_id = dis2.district_id WHERE dis2.A3 LIKE '%Prague%')) AS female_percentage FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN district dis ON a.district_id = dis.district_id WHERE c.gender = 'F' AND dis.A3 LIKE '%Prague%';
SELECT (COUNT(DISTINCT c.client_id) * 100.0 / (SELECT COUNT(DISTINCT c2.client_id) FROM client c2 JOIN disp d2 ON c2.client_id = d2.client_id JOIN account a2 ON d2.account_id = a2.account_id WHERE a2.frequency = 'POPLATEK TYDNE')) AS percentage_of_male_clients FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE c.gender = 'M' AND a.frequency = 'POPLATEK TYDNE';
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `account` ON `disp`.`account_id` = `account`.`account_id` WHERE `account`.`frequency` = 'POPLATEK TYDNE' AND `disp`.`type` = 'OWNER'
SELECT `account_id` FROM `loan` WHERE `duration` > 24 AND `status` = 'A' AND `amount` = (SELECT MIN(`amount`) FROM `loan` WHERE `duration` > 24 AND `status` = 'A') AND `account_id` IN (SELECT `account_id` FROM `account` WHERE `date` < '1997-01-01')
SELECT `account`.`account_id` FROM `account` JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` JOIN `client` ON `disp`.`client_id` = `client`.`client_id` JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' AND `client`.`birth_date` = (SELECT MIN(`birth_date`) FROM `client` WHERE `gender` = 'F') AND `district`.`A11` = (SELECT MIN(`A11`) FROM `district` WHERE `district_id` IN (SELECT `district_id` FROM `client` WHERE `gender` = 'F'))
SELECT COUNT(*) FROM `client` WHERE `birth_date` LIKE '1920%' AND `district_id` IN (SELECT `district_id` FROM `district` WHERE `A3` = 'East Bohemia')
SELECT COUNT(DISTINCT `loan`.`account_id`) FROM `loan` JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `loan`.`duration` = 24 AND `account`.`frequency` = 'POPLATEK TYDNE'
SELECT AVG(`amount`) FROM `loan` WHERE `status` = 'C' AND `loan_id` IN (SELECT `account_id` FROM `order` WHERE `k_symbol` = 'POPLATEK PO OBRATU')
SELECT DISTINCT `client`.`client_id`, `client`.`district_id` FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` WHERE `disp`.`type` = 'OWNER'
SELECT `client`.`client_id`, (strftime('%Y', 'now') - strftime('%Y', `client`.`birth_date`)) AS `age` FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`type` = 'gold' AND `disp`.`type` = 'OWNER'
SELECT `bond_type` FROM `bond` GROUP BY `bond_type` ORDER BY COUNT(`bond_type`) DESC LIMIT 1
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '-' AND `atom`.`element` = 'cl';
SELECT AVG(oxygen_count) FROM (SELECT `molecule_id`, COUNT(*) AS oxygen_count FROM `atom` WHERE `element` = 'o' AND `molecule_id` IN (SELECT `molecule_id` FROM `bond` WHERE `bond_type` = '-') GROUP BY `molecule_id`)
SELECT AVG(single_bonded_count) FROM (SELECT `m`.`molecule_id`, COUNT(`b`.`bond_id`) AS single_bonded_count FROM `molecule` AS `m` JOIN `bond` AS `b` ON `m`.`molecule_id` = `b`.`molecule_id` WHERE `m`.`label` = '+' AND `b`.`bond_type` = '-' GROUP BY `m`.`molecule_id`);
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'na' AND `molecule`.`label` = '-'
SELECT DISTINCT `molecule`.`molecule_id` FROM `molecule` JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '#' AND `molecule`.`label` = '+'
SELECT 100.0 * SUM(a.`element` = 'c') / COUNT(a.`atom_id`) AS percentage FROM `molecule` m JOIN `bond` b ON m.`molecule_id` = b.`molecule_id` JOIN `connected` c ON b.`bond_id` = c.`bond_id` JOIN `atom` a ON c.`atom_id` = a.`atom_id` WHERE b.`bond_type` = '='
SELECT COUNT(*) FROM `bond` WHERE `bond_type` = '#'
SELECT COUNT(DISTINCT `atom_id`) FROM `atom` WHERE `element` != 'br'
SELECT COUNT(*) FROM `molecule` WHERE `molecule_id` BETWEEN 'TR000' AND 'TR099' AND `label` = '+'
SELECT DISTINCT `molecule_id` FROM `atom` WHERE `element` = 'c'
SELECT DISTINCT `a`.`element` FROM `atom` AS `a` JOIN `connected` AS `c` ON `a`.`atom_id` = `c`.`atom_id` OR `a`.`atom_id` = `c`.`atom_id2` JOIN `bond` AS `b` ON `c`.`bond_id` = `b`.`bond_id` WHERE `b`.`bond_id` = 'TR004_8_9'
SELECT DISTINCT `a`.`element` FROM `atom` AS `a` JOIN `connected` AS `c` ON `a`.`atom_id` = `c`.`atom_id` OR `a`.`atom_id` = `c`.`atom_id2` JOIN `bond` AS `b` ON `c`.`bond_id` = `b`.`bond_id` WHERE `b`.`bond_type` = '='
SELECT `molecule`.`label` FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'h' GROUP BY `molecule`.`label` ORDER BY COUNT(`atom`.`atom_id`) DESC LIMIT 1
SELECT DISTINCT `bond`.`bond_type` FROM `bond` JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` OR `connected`.`atom_id2` = `atom`.`atom_id` WHERE `atom`.`element` = 'cl'
SELECT DISTINCT a1.`atom_id`, a2.`atom_id` FROM `connected` c JOIN `bond` b ON c.`bond_id` = b.`bond_id` JOIN `atom` a1 ON c.`atom_id` = a1.`atom_id` JOIN `atom` a2 ON c.`atom_id2` = a2.`atom_id` WHERE b.`bond_type` = '-'
SELECT c.`atom_id`, c.`atom_id2` FROM `connected` c JOIN `bond` b ON c.`bond_id` = b.`bond_id` JOIN `molecule` m ON b.`molecule_id` = m.`molecule_id` WHERE m.`label` = '-'
SELECT `element` FROM `atom` WHERE `molecule_id` IN (SELECT `molecule_id` FROM `molecule` WHERE `label` = '-') GROUP BY `element` ORDER BY COUNT(`element`) ASC LIMIT 1;
SELECT `bond`.`bond_type` FROM `connected` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE (`connected`.`atom_id` = 'TR004_8' AND `connected`.`atom_id2` = 'TR004_20') OR (`connected`.`atom_id` = 'TR004_20' AND `connected`.`atom_id2` = 'TR004_8')
SELECT DISTINCT `m`.`label` FROM `molecule` AS `m` WHERE `m`.`label` NOT IN (SELECT DISTINCT `m2`.`label` FROM `molecule` AS `m2` JOIN `atom` AS `a` ON `m2`.`molecule_id` = `a`.`molecule_id` WHERE `a`.`element` = 'sn')
SELECT COUNT(DISTINCT a1.`atom_id`) FROM `atom` a1 JOIN `connected` c ON a1.`atom_id` = c.`atom_id` JOIN `atom` a2 ON c.`atom_id2` = a2.`atom_id` JOIN `bond` b ON c.`bond_id` = b.`bond_id` WHERE (a1.`element` = 'i' OR a1.`element` = 's') AND b.`bond_type` = '-'
SELECT DISTINCT a1.`atom_id`, a2.`atom_id` FROM `connected` c JOIN `bond` b ON c.`bond_id` = b.`bond_id` JOIN `atom` a1 ON c.`atom_id` = a1.`atom_id` JOIN `atom` a2 ON c.`atom_id2` = a2.`atom_id` WHERE b.`bond_type` = '#';
SELECT DISTINCT a2.`atom_id` FROM `atom` a1 JOIN `connected` c ON a1.`atom_id` = c.`atom_id` JOIN `atom` a2 ON c.`atom_id2` = a2.`atom_id` WHERE a1.`molecule_id` = 'TR181'
SELECT 100 - (SUM(CASE WHEN a.`element` = 'f' THEN 1 ELSE 0 END) * 100.0 / COUNT(DISTINCT m.`molecule_id`)) AS percentage FROM `molecule` m JOIN `atom` a ON m.`molecule_id` = a.`molecule_id` WHERE m.`label` = '+'
SELECT (SUM(CASE WHEN `bond`.`bond_type` = '#' THEN 1 ELSE 0 END) * 100.0 / COUNT(`bond`.`bond_id`)) AS `percent` FROM `molecule` JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT `element` FROM `atom` WHERE `molecule_id` = 'TR000' ORDER BY `element` ASC LIMIT 3
SELECT a1.`atom_id`, a2.`atom_id` FROM `connected` c JOIN `atom` a1 ON c.`atom_id` = a1.`atom_id` JOIN `atom` a2 ON c.`atom_id2` = a2.`atom_id` WHERE c.`bond_id` = 'TR001_2_6' AND a1.`molecule_id` = 'TR001'
SELECT SUM(CASE WHEN `label` = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN `label` = '-' THEN 1 ELSE 0 END) AS difference FROM `molecule`
SELECT `atom_id`, `atom_id2` FROM `connected` WHERE `bond_id` = 'TR000_2_5'
SELECT `bond_id` FROM `connected` WHERE `atom_id2` = 'TR000_2'
SELECT `molecule`.`label` FROM `molecule` JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = ' = ' GROUP BY `molecule`.`label` ORDER BY `molecule`.`label` ASC LIMIT 5;
SELECT ROUND(100.0 * SUM(`bond_type` = '=') / COUNT(`bond_id`), 5) AS percent FROM `bond` WHERE `molecule_id` = 'TR008'
SELECT ROUND(100.0 * SUM(CASE WHEN `label` = '+' THEN 1 ELSE 0 END) / COUNT(`molecule_id`), 3) AS percent FROM `molecule`
SELECT ROUND(100.0 * SUM(CASE WHEN `element` = 'h' THEN 1 ELSE 0 END) / COUNT(`atom_id`), 4) AS percent FROM `atom` WHERE `molecule_id` = 'TR206'
SELECT DISTINCT `bond`.`bond_type` FROM `bond` JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = 'TR000'
SELECT `atom`.`element`, `molecule`.`label` FROM `atom` JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = 'TR060'
SELECT `b`.`bond_type`, CASE WHEN `m`.`label` LIKE '%carcinogenic%' THEN 'Yes' ELSE 'No' END AS `is_carcinogenic` FROM `bond` AS `b` JOIN `molecule` AS `m` ON `b`.`molecule_id` = `m`.`molecule_id` WHERE `m`.`molecule_id` = 'TR010' GROUP BY `b`.`bond_type` ORDER BY COUNT(`b`.`bond_type`) DESC LIMIT 1;
SELECT `molecule`.`molecule_id` FROM `molecule` JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` WHERE `molecule`.`label` = '-' AND `bond`.`bond_type` = '-' GROUP BY `molecule`.`molecule_id` ORDER BY `molecule`.`molecule_id` ASC LIMIT 3
SELECT `bond_type` FROM `bond` WHERE `molecule_id` = 'TR006' ORDER BY `bond_type` ASC LIMIT 2
SELECT COUNT(*) FROM `bond` WHERE `molecule_id` = 'TR009' AND `bond_id` IN (SELECT `bond_id` FROM `connected` WHERE `atom_id` = 'TR009_12' OR `atom_id2` = 'TR009_12')
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+' AND `atom`.`element` = 'br'
SELECT `bond`.`bond_type`, `connected`.`atom_id`, `connected`.`atom_id2` FROM `bond` JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = 'TR001_6_9'
SELECT m.`label`, CASE WHEN m.`label` = '+' THEN 'Carcinogenic' ELSE 'Non-carcinogenic' END AS carcinogenic_status FROM `molecule` m JOIN `atom` a ON m.`molecule_id` = a.`molecule_id` WHERE a.`atom_id` = 'TR001_10';
SELECT COUNT(DISTINCT `molecule_id`) FROM `bond` WHERE `bond_type` = '#';
SELECT COUNT(DISTINCT `bond_id`) FROM `connected` WHERE `atom_id` LIKE 'TR%_19' OR `atom_id2` LIKE 'TR%_19';
SELECT DISTINCT `atom`.`element` FROM `atom` JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = 'TR004'
SELECT COUNT(*) FROM `molecule` WHERE `label` = '-'
SELECT DISTINCT `m`.`molecule_id` FROM `molecule` m JOIN `atom` a ON `m`.`molecule_id` = `a`.`molecule_id` WHERE SUBSTR(`a`.`atom_id`, 7, 2) BETWEEN '21' AND '25' AND `m`.`label` = '+'
SELECT DISTINCT `b`.`bond_id` FROM `bond` b JOIN `connected` c ON `b`.`bond_id` = `c`.`bond_id` JOIN `atom` a1 ON `c`.`atom_id` = `a1`.`atom_id` JOIN `atom` a2 ON `c`.`atom_id2` = `a2`.`atom_id` WHERE (`a1`.`element` = 'p' AND `a2`.`element` = 'n') OR (`a1`.`element` = 'n' AND `a2`.`element` = 'p')
SELECT `molecule`.`label` = '+' FROM `molecule` WHERE `molecule_id` = (SELECT `molecule_id` FROM `bond` WHERE `bond_type` = ' = ' GROUP BY `molecule_id` ORDER BY COUNT(*) DESC LIMIT 1)
SELECT CAST(COUNT(DISTINCT `c`.`bond_id`) AS FLOAT) / COUNT(DISTINCT `a`.`atom_id`) FROM `atom` AS `a` JOIN `connected` AS `c` ON `a`.`atom_id` = `c`.`atom_id` WHERE `a`.`element` = 'i'
SELECT `bond`.`bond_type`, `bond`.`bond_id` FROM `bond` JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` WHERE SUBSTR(`connected`.`atom_id`, 7, 2) + 0 = 45 OR SUBSTR(`connected`.`atom_id2`, 7, 2) + 0 = 45;
SELECT DISTINCT `element` FROM `atom` WHERE `atom_id` NOT IN (SELECT `atom_id` FROM `connected` UNION SELECT `atom_id2` FROM `connected`);
SELECT a1.`atom_id` FROM `atom` a1 JOIN `connected` c ON a1.`atom_id` = c.`atom_id` JOIN `bond` b ON c.`bond_id` = b.`bond_id` JOIN `molecule` m ON b.`molecule_id` = m.`molecule_id` WHERE m.`label` = 'TR041' AND b.`bond_type` = '#' UNION SELECT a2.`atom_id` FROM `atom` a2 JOIN `connected` c ON a2.`atom_id` = c.`atom_id2` JOIN `bond` b ON c.`bond_id` = b.`bond_id` JOIN `molecule` m ON b.`molecule_id` = m.`molecule_id` WHERE m.`label` = 'TR041' AND b.`bond_type` = '#'
SELECT DISTINCT `a`.`element` FROM `atom` AS `a` JOIN `connected` AS `c` ON `a`.`atom_id` = `c`.`atom_id` OR `a`.`atom_id` = `c`.`atom_id2` JOIN `bond` AS `b` ON `c`.`bond_id` = `b`.`bond_id` WHERE `b`.`bond_id` = 'TR144_8_19'
SELECT `m`.`label` FROM `molecule` AS `m` JOIN `bond` AS `b` ON `m`.`molecule_id` = `b`.`molecule_id` WHERE `m`.`label` = '+' AND `b`.`bond_type` = '=' GROUP BY `m`.`molecule_id` ORDER BY COUNT(`b`.`bond_id`) DESC LIMIT 1;
SELECT `element` FROM `atom` WHERE `molecule_id` IN (SELECT `molecule_id` FROM `molecule` WHERE `label` = '+') GROUP BY `element` ORDER BY COUNT(*) ASC LIMIT 1
SELECT DISTINCT a2.`atom_id` FROM `connected` c JOIN `atom` a1 ON c.`atom_id` = a1.`atom_id` JOIN `atom` a2 ON c.`atom_id2` = a2.`atom_id` WHERE a1.`element` = 'pb'
SELECT DISTINCT `a`.`element` FROM `atom` AS `a` JOIN `connected` AS `c` ON `a`.`atom_id` = `c`.`atom_id` OR `a`.`atom_id` = `c`.`atom_id2` JOIN `bond` AS `b` ON `c`.`bond_id` = `b`.`bond_id` WHERE `b`.`bond_type` = '#';
SELECT (COUNT(DISTINCT `b`.`bond_id`) * 100.0 / (SELECT COUNT(*) FROM `bond`)) AS percentage FROM `connected` AS `c` JOIN `atom` AS `a1` ON `c`.`atom_id` = `a1`.`atom_id` JOIN `atom` AS `a2` ON `c`.`atom_id2` = `a2`.`atom_id` JOIN `bond` AS `b` ON `c`.`bond_id` = `b`.`bond_id` WHERE (`a1`.`element`, `a2`.`element`) IN (SELECT `a1`.`element`, `a2`.`element` FROM `connected` AS `c` JOIN `atom` AS `a1` ON `c`.`atom_id` = `a1`.`atom_id` JOIN `atom` AS `a2` ON `c`.`atom_id2` = `a2`.`atom_id` GROUP BY `a1`.`element`, `a2`.`element` ORDER BY COUNT(*) DESC LIMIT 1))
SELECT ROUND(SUM(m.label = '+') * 100.0 / COUNT(b.bond_id), 5) AS proportion FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '-';
SELECT COUNT(*) FROM `atom` WHERE `element` IN ('c', 'h')
SELECT `atom_id2` FROM `connected` JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `atom`.`element` = 's'
SELECT DISTINCT `bond`.`bond_type` FROM `bond` JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `atom`.`element` = 'sn'
SELECT COUNT(DISTINCT `element`) FROM `atom` WHERE `molecule_id` IN (SELECT `molecule_id` FROM `bond` WHERE `bond_type` = '-')
SELECT COUNT(DISTINCT a.atom_id) FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '#' AND (a.element = 'p' OR a.element = 'br')
SELECT `bond`.`bond_id` FROM `bond` JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT DISTINCT `b`.`molecule_id` FROM `bond` b JOIN `molecule` m ON `b`.`molecule_id` = `m`.`molecule_id` WHERE `b`.`bond_type` = '-' AND `m`.`label` = '-'
SELECT 100.0 * SUM(CASE WHEN `element` = 'cl' THEN 1 ELSE 0 END) / COUNT(`atom`.`atom_id`) AS `percent` FROM `atom` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '-'
SELECT `label` FROM `molecule` WHERE `molecule_id` IN ('TR000', 'TR001', 'TR002')
SELECT `molecule_id` FROM `molecule` WHERE `label` = '-'
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) AS total_carcinogenic_molecules FROM `molecule` WHERE `molecule`.`label` = '+' AND `molecule`.`molecule_id` BETWEEN 'TR000' AND 'TR030';
SELECT DISTINCT `bond_type` FROM `bond` WHERE `molecule_id` BETWEEN 'TR000' AND 'TR050';
SELECT DISTINCT `a`.`element` FROM `atom` AS `a` JOIN `connected` AS `c` ON `a`.`atom_id` = `c`.`atom_id` OR `a`.`atom_id` = `c`.`atom_id2` WHERE `c`.`bond_id` = 'TR001_10_11'
SELECT COUNT(DISTINCT `connected`.`bond_id`) FROM `connected` JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `atom`.`element` = 'i'
SELECT CASE WHEN COUNT(CASE WHEN `molecule`.`label` = '+' THEN 1 END) > COUNT(CASE WHEN `molecule`.`label` = '-' THEN 1 END) THEN 'Carcinogenic' ELSE 'Non-carcinogenic' END AS `majority` FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'ca';
SELECT EXISTS (SELECT 1 FROM `connected` c JOIN `atom` a1 ON c.`atom_id` = a1.`atom_id` JOIN `atom` a2 ON c.`atom_id2` = a2.`atom_id` WHERE c.`bond_id` = 'TR001_1_8' AND ((a1.`element` = 'cl' AND a2.`element` = 'c') OR (a1.`element` = 'c' AND a2.`element` = 'cl')))
SELECT DISTINCT `molecule_id` FROM `molecule` WHERE `label` = '-' AND `molecule_id` IN (SELECT `molecule_id` FROM `atom` WHERE `element` = 'c') AND `molecule_id` IN (SELECT `molecule_id` FROM `bond` WHERE `bond_type` = '#') LIMIT 2;
SELECT 100.0 * SUM(CASE WHEN `element` = 'cl' THEN 1 ELSE 0 END) / COUNT(`atom`.`molecule_id`) AS `percentage` FROM `atom` JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT DISTINCT `a`.`element` FROM `atom` AS `a` JOIN `molecule` AS `m` ON `a`.`molecule_id` = `m`.`molecule_id` WHERE `m`.`label` = 'TR001'
SELECT DISTINCT `molecule_id` FROM `bond` WHERE `bond_type` = ' = '
SELECT `c`.`atom_id`, `c`.`atom_id2` FROM `connected` AS `c` JOIN `bond` AS `b` ON `c`.`bond_id` = `b`.`bond_id` WHERE `b`.`bond_type` = '#';
SELECT DISTINCT `a`.`element` FROM `atom` AS `a` JOIN `connected` AS `c` ON `a`.`atom_id` = `c`.`atom_id` OR `a`.`atom_id` = `c`.`atom_id2` WHERE `c`.`bond_id` = 'TR000_1_2'
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `molecule`.`label` = '-' AND `bond`.`bond_type` = '-'
SELECT `molecule`.`label` FROM `bond` JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_id` = 'TR001_10_11'
SELECT `bond`.`bond_id`, `molecule`.`label` FROM `bond` JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '#';
SELECT `element`, COUNT(*) AS `tally` FROM `atom` WHERE `atom_id` IN (SELECT `atom_id` FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `label` = '+' AND SUBSTR(`atom_id`, 7, 1) = '4') GROUP BY `element`
SELECT (SUM(CASE WHEN `element` = 'h' THEN 1 ELSE 0 END) * 1.0 / COUNT(`element`)) AS `ratio`, `molecule`.`label` FROM `atom` JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`molecule_id` = 'TR006' GROUP BY `molecule`.`label`
SELECT DISTINCT `m`.`label` FROM `molecule` m JOIN `atom` a ON `m`.`molecule_id` = `a`.`molecule_id` WHERE `a`.`element` = 'ca'
SELECT DISTINCT `bond`.`bond_type` FROM `bond` JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `atom`.`element` = 'c'
SELECT DISTINCT a1.`element` FROM `connected` c JOIN `atom` a1 ON c.`atom_id` = a1.`atom_id` JOIN `atom` a2 ON c.`atom_id2` = a2.`atom_id` WHERE c.`bond_id` = 'TR001_10_11' UNION SELECT DISTINCT a2.`element` FROM `connected` c JOIN `atom` a1 ON c.`atom_id` = a1.`atom_id` JOIN `atom` a2 ON c.`atom_id2` = a2.`atom_id` WHERE c.`bond_id` = 'TR001_10_11'
SELECT (COUNT(DISTINCT `b`.`molecule_id`) * 100.0 / (SELECT COUNT(DISTINCT `molecule_id`) FROM `molecule`)) AS `percent_with_triple_bond` FROM `bond` AS `b` WHERE `b`.`bond_type` = '#'
SELECT 100.0 * SUM(CASE WHEN `bond_type` = ' = ' THEN 1 ELSE 0 END) / COUNT(`bond_id`) AS percent FROM `bond` WHERE `molecule_id` = 'TR047'
SELECT CASE WHEN m.`label` = '+' THEN 'Carcinogenic' ELSE 'Non-carcinogenic' END AS `status` FROM `molecule` m JOIN `atom` a ON m.`molecule_id` = a.`molecule_id` WHERE a.`element` = 'TR001_1'
SELECT CASE WHEN `label` = '+' THEN 'Yes' ELSE 'No' END AS carcinogenic FROM `molecule` WHERE `label` = 'TR151'
SELECT DISTINCT `a`.`element` FROM `atom` AS `a` JOIN `molecule` AS `m` ON `a`.`molecule_id` = `m`.`molecule_id` WHERE `m`.`label` = 'TR151' AND `a`.`element` IN ('cl', 'br', 'f', 'i', 'sn', 'pb', 'te')
SELECT COUNT(*) FROM `molecule` WHERE `label` = '+'
SELECT DISTINCT `a`.`atom_id` FROM `atom` AS `a` JOIN `molecule` AS `m` ON `a`.`molecule_id` = `m`.`molecule_id` WHERE `a`.`element` = 'c' AND substr(`m`.`molecule_id`, 3, 3) >= '010' AND substr(`m`.`molecule_id`, 3, 3) <= '050'
SELECT COUNT(*) FROM `atom` WHERE `molecule_id` IN (SELECT `molecule_id` FROM `molecule` WHERE `label` = '+');
SELECT `bond`.`bond_id` FROM `bond` JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = ' = ' AND `molecule`.`label` = '+'
SELECT COUNT(`atom`.`atom_id`) FROM `atom` JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'h' AND `molecule`.`label` = '+'
SELECT DISTINCT `molecule`.`molecule_id` FROM `molecule` JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` JOIN `atom` AS `a1` ON `connected`.`atom_id` = `a1`.`atom_id` JOIN `atom` AS `a2` ON `connected`.`atom_id2` = `a2`.`atom_id` WHERE `bond`.`bond_type` = 'TR000_1_2' AND `a1`.`element` = 'TR000_1'
SELECT DISTINCT `a`.`atom_id` FROM `atom` a JOIN `molecule` m ON `a`.`molecule_id` = `m`.`molecule_id` WHERE `a`.`element` = 'c' AND `m`.`label` = '-'
SELECT (SUM(CASE WHEN m.`label` = '+' AND a.`element` = 'h' THEN 1 ELSE 0 END) * 100.0 / COUNT(DISTINCT m.`molecule_id`)) AS percentage FROM `molecule` m JOIN `atom` a ON m.`molecule_id` = a.`molecule_id` WHERE m.`label` = '+'
SELECT CASE WHEN `label` = '+' THEN 'Yes' ELSE 'No' END AS carcinogenic FROM `molecule` WHERE `label` = 'TR124'
SELECT `atom`.`atom_id`, `atom`.`element` FROM `atom` JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = 'TR186'
SELECT `bond`.`bond_type` FROM `bond` JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = 'TR007_4_19'
SELECT DISTINCT `element` FROM `atom` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` OR `atom`.`atom_id` = `connected`.`atom_id2` WHERE `connected`.`bond_id` = (SELECT `bond_id` FROM `bond` WHERE `bond_type` = 'TR001_2_4')
SELECT COUNT(`bond`.`bond_id`) AS `double_bonds`, `molecule`.`label` FROM `molecule` JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `molecule`.`label` = 'TR006' AND `bond`.`bond_type` = ' = ' GROUP BY `molecule`.`label`
SELECT DISTINCT m.`molecule_id`, a.`element` FROM `molecule` m JOIN `atom` a ON m.`molecule_id` = a.`molecule_id` WHERE m.`label` = '+'
SELECT `b`.`bond_id`, `a1`.`atom_id` AS `atom1`, `a2`.`atom_id` AS `atom2` FROM `bond` AS `b` JOIN `connected` AS `c` ON `b`.`bond_id` = `c`.`bond_id` JOIN `atom` AS `a1` ON `c`.`atom_id` = `a1`.`atom_id` JOIN `atom` AS `a2` ON `c`.`atom_id2` = `a2`.`atom_id` WHERE `b`.`bond_type` = '-'
SELECT DISTINCT m.`label`, a.`element` FROM `molecule` m JOIN `bond` b ON m.`molecule_id` = b.`molecule_id` JOIN `connected` c ON b.`bond_id` = c.`bond_id` JOIN `atom` a ON c.`atom_id` = a.`atom_id` WHERE b.`bond_type` = '#'
SELECT DISTINCT `a`.`element` FROM `atom` AS `a` JOIN `connected` AS `c` ON `a`.`atom_id` = `c`.`atom_id` OR `a`.`atom_id` = `c`.`atom_id2` JOIN `bond` AS `b` ON `c`.`bond_id` = `b`.`bond_id` WHERE `b`.`bond_type` = 'TR000_2_3'
SELECT COUNT(*) FROM `bond` b JOIN `connected` c ON b.`bond_id` = c.`bond_id` JOIN `atom` a1 ON c.`atom_id` = a1.`atom_id` JOIN `atom` a2 ON c.`atom_id2` = a2.`atom_id` WHERE a1.`element` = 'cl' OR a2.`element` = 'cl';
SELECT `a`.`atom_id`, COUNT(DISTINCT `b`.`bond_type`) AS `bond_type_count` FROM `atom` AS `a` JOIN `molecule` AS `m` ON `a`.`molecule_id` = `m`.`molecule_id` LEFT JOIN `bond` AS `b` ON `a`.`molecule_id` = `b`.`molecule_id` WHERE `m`.`label` = 'TR346' GROUP BY `a`.`atom_id`
SELECT COUNT(DISTINCT m1.`molecule_id`) AS total_molecules, COUNT(DISTINCT m2.`molecule_id`) AS carcinogenic_molecules FROM `bond` b LEFT JOIN `molecule` m1 ON b.`molecule_id` = m1.`molecule_id` LEFT JOIN `molecule` m2 ON b.`molecule_id` = m2.`molecule_id` AND m2.`label` = '+' WHERE b.`bond_type` = ' = '
SELECT COUNT(DISTINCT m.`molecule_id`) FROM `molecule` m LEFT JOIN `atom` a ON m.`molecule_id` = a.`molecule_id` LEFT JOIN `bond` b ON m.`molecule_id` = b.`molecule_id` WHERE a.`element` != 's' AND b.`bond_type` != ' = ' AND m.`molecule_id` NOT IN (SELECT DISTINCT m2.`molecule_id` FROM `molecule` m2 JOIN `atom` a2 ON m2.`molecule_id` = a2.`molecule_id` WHERE a2.`element` = 's') AND m.`molecule_id` NOT IN (SELECT DISTINCT m3.`molecule_id` FROM `molecule` m3 JOIN `bond` b2 ON m3.`molecule_id` = b2.`molecule_id` WHERE b2.`bond_type` = ' = ')
SELECT `molecule`.`label` FROM `bond` JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_id` = 'TR001_2_4' AND `molecule`.`label` = '+'
SELECT COUNT(*) FROM `atom` WHERE `molecule_id` = 'TR001'
SELECT COUNT(*) FROM `bond` WHERE `bond_type` = '-'
SELECT DISTINCT m.`label` FROM `molecule` m JOIN `atom` a ON m.`molecule_id` = a.`molecule_id` WHERE a.`element` = 'cl' AND m.`label` = '+'
SELECT DISTINCT m.`molecule_id` FROM `molecule` m JOIN `atom` a ON m.`molecule_id` = a.`molecule_id` WHERE a.`element` = 'c' AND m.`label` = '-'
SELECT (SUM(CASE WHEN m.`label` = '+' AND a.`element` = 'cl' THEN 1 ELSE 0 END) * 1.0 / COUNT(DISTINCT m.`molecule_id`)) AS percentage FROM `molecule` m JOIN `atom` a ON m.`molecule_id` = a.`molecule_id` WHERE m.`label` = '+'
SELECT `molecule_id` FROM `bond` WHERE `bond_id` = 'TR001_1_7'
SELECT COUNT(DISTINCT `element`) FROM `connected` JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `connected`.`bond_id` = 'TR001_3_4'
SELECT `b`.`bond_type` FROM `bond` b JOIN `connected` c ON `b`.`bond_id` = `c`.`bond_id` JOIN `atom` a1 ON `c`.`atom_id` = `a1`.`atom_id` JOIN `atom` a2 ON `c`.`atom_id2` = `a2`.`atom_id` WHERE `a1`.`element` = 'TR000_1' AND `a2`.`element` = 'TR000_2'
SELECT `m`.`label` FROM `molecule` AS `m` JOIN `atom` AS `a1` ON `m`.`molecule_id` = `a1`.`molecule_id` JOIN `atom` AS `a2` ON `m`.`molecule_id` = `a2`.`molecule_id` WHERE `a1`.`atom_id` = 'TR000_2' AND `a2`.`atom_id` = 'TR000_4'
SELECT `element` FROM `atom` WHERE `atom_id` = 'TR000_1'
SELECT CASE WHEN `label` = '+' THEN 'carcinogenic' ELSE 'non-carcinogenic' END AS `status` FROM `molecule` WHERE `molecule_id` = 'TR000'
SELECT (SUM(CASE WHEN `bond`.`bond_type` = '-' THEN 1 ELSE 0 END) * 1.0 / COUNT(`bond`.`bond_id`)) AS percentage FROM `atom` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id`
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+' AND `atom`.`element` = 'n';
SELECT DISTINCT `molecule`.`label` FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `atom`.`element` = 's' AND `bond`.`bond_type` = ' = '
SELECT `molecule`.`molecule_id` FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '-' GROUP BY `molecule`.`molecule_id` HAVING COUNT(`atom`.`atom_id`) > 5
SELECT DISTINCT `a`.`element` FROM `atom` a JOIN `connected` c ON `a`.`atom_id` = `c`.`atom_id` JOIN `bond` b ON `c`.`bond_id` = `b`.`bond_id` JOIN `molecule` m ON `a`.`molecule_id` = `m`.`molecule_id` WHERE `b`.`bond_type` = '=' AND `m`.`label` = 'TR024'
SELECT `m`.`label` FROM `molecule` AS `m` JOIN `atom` AS `a` ON `m`.`molecule_id` = `a`.`molecule_id` WHERE `m`.`label` = '+' GROUP BY `m`.`molecule_id` ORDER BY COUNT(`a`.`atom_id`) DESC LIMIT 1;
SELECT (SUM(CASE WHEN m.`label` = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(DISTINCT m.`molecule_id`)) AS percentage FROM `molecule` m JOIN `atom` a ON m.`molecule_id` = a.`molecule_id` JOIN `connected` c ON a.`atom_id` = c.`atom_id` JOIN `bond` b ON c.`bond_id` = b.`bond_id` WHERE a.`element` = 'h' AND b.`bond_type` = '#'
SELECT COUNT(*) FROM `molecule` WHERE `label` = '+'
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '-' AND `molecule`.`molecule_id` BETWEEN 'TR004' AND 'TR010';
SELECT COUNT(*) FROM `atom` JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = 'TR008' AND `atom`.`element` = 'c'
SELECT `a`.`element` FROM `atom` AS `a` JOIN `molecule` AS `m` ON `a`.`molecule_id` = `m`.`molecule_id` WHERE `a`.`atom_id` = 'TR004_7' AND `m`.`label` = '-'
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `atom`.`element` = 'o' AND `bond`.`bond_type` = ' = '
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '#' AND `molecule`.`label` = '-'
SELECT DISTINCT `atom`.`element`, `bond`.`bond_type` FROM `atom` JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`molecule_id` = 'TR002'
SELECT a1.`atom_id` FROM `atom` a1 JOIN `molecule` m ON a1.`molecule_id` = m.`molecule_id` JOIN `connected` c ON a1.`atom_id` = c.`atom_id` JOIN `atom` a2 ON c.`atom_id2` = a2.`atom_id` JOIN `bond` b ON c.`bond_id` = b.`bond_id` WHERE m.`label` = 'TR012' AND a1.`element` = 'c' AND a2.`element` = 'c' AND b.`bond_type` = ' = ';
SELECT DISTINCT a.`atom_id` FROM `atom` a JOIN `molecule` m ON a.`molecule_id` = m.`molecule_id` WHERE m.`label` = '+' AND a.`element` = 'o'
SELECT `name` FROM `cards` WHERE `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL
SELECT `name` FROM `cards` WHERE `borderColor` = 'borderless' AND (`cardKingdomFoilId` IS NULL OR `cardKingdomId` IS NULL)
SELECT `name` FROM `cards` WHERE `faceConvertedManaCost` = (SELECT MAX(`faceConvertedManaCost`) FROM `cards`);
SELECT `name` FROM `cards` WHERE `frameVersion` = 2015 AND `edhrecRank` < 100
SELECT `c`.`name` FROM `cards` c JOIN `legalities` l ON `c`.`uuid` = `l`.`uuid` WHERE `c`.`rarity` = 'mythic' AND `l`.`format` = 'gladiator' AND `l`.`status` = 'Banned'
SELECT `c`.`name`, `l`.`status` FROM `cards` c JOIN `legalities` l ON `c`.`uuid` = `l`.`uuid` WHERE `c`.`types` = 'Artifact' AND `c`.`side` IS NULL AND `l`.`format` = 'vintage'
SELECT `cards`.`id`, `cards`.`artist` FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE (`cards`.`power` = '*' OR `cards`.`power` IS NULL) AND `legalities`.`format` = 'commander' AND `legalities`.`status` = 'Legal'
SELECT c.`id`, r.`text`, c.`hasContentWarning` FROM `cards` c JOIN `rulings` r ON c.`uuid` = r.`uuid` WHERE c.`artist` = 'Stephen Daniele'
SELECT `rulings`.`text` FROM `rulings` JOIN `cards` ON `rulings`.`uuid` = `cards`.`uuid` WHERE `cards`.`name` = 'Sublime Epiphany' AND `cards`.`number` = '74s'
SELECT `c`.`name`, `c`.`artist`, `c`.`isPromo` FROM `cards` c JOIN `rulings` r ON `c`.`uuid` = `r`.`uuid` GROUP BY `c`.`uuid` ORDER BY COUNT(`r`.`uuid`) DESC LIMIT 1
SELECT DISTINCT `language` FROM `foreign_data` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Annul' AND `number` = '29')
SELECT DISTINCT `c`.`name` FROM `cards` c JOIN `foreign_data` fd ON `c`.`uuid` = `fd`.`uuid` WHERE `fd`.`language` = 'Japanese'
SELECT (COUNT(DISTINCT `foreign_data`.`uuid`) * 100.0 / (SELECT COUNT(DISTINCT `uuid`) FROM `cards`)) AS percentage FROM `foreign_data` WHERE `language` = 'Chinese Simplified';
SELECT `sets`.`name`, `sets`.`totalSetSize` FROM `sets` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Italian'
SELECT COUNT(DISTINCT `type`) FROM `cards` WHERE `artist` = 'Aaron Boyd'
SELECT `keywords` FROM `cards` WHERE `name` = 'Angel of Mercy'
SELECT COUNT(*) FROM `cards` WHERE `power` = '*'
SELECT `promoTypes` FROM `cards` WHERE `name` = 'Duress'
SELECT `borderColor` FROM `cards` WHERE `name` = 'Ancestor''s Chosen'
SELECT `originalType` FROM `cards` WHERE `name` = 'Ancestor''s Chosen'
SELECT DISTINCT `set_translations`.`language` FROM `cards` JOIN `sets` ON `cards`.`setCode` = `sets`.`code` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `cards`.`name` = 'Angel of Mercy'
SELECT COUNT(*) FROM `legalities` JOIN `cards` ON `legalities`.`uuid` = `cards`.`uuid` WHERE `legalities`.`status` = 'restricted' AND `cards`.`isTextless` = 0;
SELECT `rulings`.`text` FROM `rulings` JOIN `cards` ON `rulings`.`uuid` = `cards`.`uuid` WHERE `cards`.`name` = 'Condemn'
SELECT COUNT(*) FROM `legalities` INNER JOIN `cards` ON `legalities`.`uuid` = `cards`.`uuid` WHERE `legalities`.`status` = 'restricted' AND `cards`.`isStarter` = 1;
SELECT `status` FROM `legalities` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Cloudchaser Eagle')
SELECT `type` FROM `cards` WHERE `name` = 'Benalish Knight'
SELECT `format`, `status` FROM `legalities` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Benalish Knight')
SELECT DISTINCT `c`.`artist` FROM `cards` c JOIN `foreign_data` fd ON `c`.`uuid` = `fd`.`uuid` WHERE `fd`.`language` = 'Phyrexian'
SELECT (COUNT(`id`) FILTER(WHERE `borderColor` = 'borderless') * 100.0 / COUNT(`id`)) AS percentage FROM `cards`
SELECT COUNT(*) FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'German' AND `cards`.`isReprint` = 1;
SELECT COUNT(*) FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`borderColor` = 'borderless' AND `foreign_data`.`language` = 'Russian'
SELECT (COUNT(fd.`id`) * 100.0 / (SELECT COUNT(`id`) FROM `cards` WHERE `isStorySpotlight` = 1)) AS `Percentage` FROM `foreign_data` fd JOIN `cards` c ON fd.`uuid` = c.`uuid` WHERE fd.`language` = 'French' AND c.`isStorySpotlight` = 1;
SELECT COUNT(*) FROM `cards` WHERE `toughness` = 99
SELECT `name` FROM `cards` WHERE `artist` = 'Aaron Boyd'
SELECT COUNT(*) FROM `cards` WHERE `borderColor` = 'black' AND `availability` = 'mtgo'
SELECT `id` FROM `cards` WHERE `convertedManaCost` = 0
SELECT DISTINCT `layout` FROM `cards` WHERE `keywords` LIKE '%flying%'
SELECT COUNT(*) FROM `cards` WHERE `originalType` = 'Summon - Angel' AND `subtypes` != 'Angel'
SELECT `id` FROM `cards` WHERE `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL AND `hasFoil` = 1 AND `hasNonFoil` = 1;
SELECT `id` FROM `cards` WHERE `duelDeck` = 'a'
SELECT `edhrecRank` FROM `cards` WHERE `frameVersion` = '2015'
SELECT DISTINCT `c`.`artist` FROM `cards` c JOIN `foreign_data` fd ON `c`.`uuid` = `fd`.`uuid` WHERE `fd`.`language` = 'Chinese Simplified'
SELECT `c`.`name` FROM `cards` c JOIN `foreign_data` fd ON `c`.`uuid` = `fd`.`uuid` WHERE `c`.`availability` = 'paper' AND `fd`.`language` = 'Japanese'
SELECT COUNT(*) FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`status` = 'Banned' AND `cards`.`borderColor` = 'white'
SELECT DISTINCT `c`.`uuid`, `f`.`language` FROM `cards` c JOIN `legalities` l ON `c`.`uuid` = `l`.`uuid` JOIN `foreign_data` f ON `c`.`uuid` = `f`.`uuid` WHERE `l`.`format` = 'legacy'
SELECT `r`.`text` FROM `rulings` AS `r` JOIN `cards` AS `c` ON `r`.`uuid` = `c`.`uuid` WHERE `c`.`name` = 'Beacon of Immortality'
SELECT COUNT(`c`.`uuid`) AS `card_count`, `l`.`status` FROM `cards` AS `c` LEFT JOIN `legalities` AS `l` ON `c`.`uuid` = `l`.`uuid` WHERE `c`.`frameVersion` = 'future' GROUP BY `l`.`status`
SELECT `c`.`name`, `c`.`colors` FROM `cards` AS `c` WHERE `c`.`setCode` = 'OGW'
SELECT `c`.`name`, `st`.`language` FROM `cards` AS `c` JOIN `set_translations` AS `st` ON `c`.`setCode` = `st`.`setCode` WHERE `c`.`setCode` = '10E' AND `c`.`convertedManaCost` = 5
SELECT `cards`.`name`, `rulings`.`date` FROM `cards` JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`originalType` = 'Creature - Elf'
SELECT `c`.`colors`, `l`.`format` FROM `cards` AS `c` LEFT JOIN `legalities` AS `l` ON `c`.`uuid` = `l`.`uuid` WHERE `c`.`id` BETWEEN 1 AND 20;
SELECT c.`name` FROM `cards` c JOIN `foreign_data` f ON c.`uuid` = f.`uuid` WHERE c.`originalType` = 'Artifact' AND c.`colors` = 'B' AND f.`language` != 'English'
SELECT `cards`.`name` FROM `cards` JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`rarity` = 'uncommon' ORDER BY `rulings`.`date` ASC LIMIT 3;
SELECT COUNT(*) FROM `cards` WHERE `artist` = 'John Avon' AND `cardKingdomFoilId` IS NULL;
SELECT COUNT(*) FROM `cards` WHERE `borderColor` = 'white' AND `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL;
SELECT COUNT(*) FROM `cards` WHERE `artist` = 'UDON' AND `availability` = 'mtgo' AND `hand` = -1
SELECT COUNT(*) FROM `cards` WHERE `frameVersion` = '1993' AND `availability` = 'paper' AND `hasContentWarning` = 1;
SELECT `manaCost` FROM `cards` WHERE `layout` = 'normal' AND `frameVersion` = 2003 AND `borderColor` = 'black' AND `availability` = 'mtgo,paper'
SELECT SUM(`convertedManaCost`) AS total_unconverted_mana FROM `cards` WHERE `artist` = 'Rob Alexander'
SELECT DISTINCT `types` FROM `cards` WHERE `availability` = 'arena'
SELECT DISTINCT `setCode` FROM `set_translations` WHERE `language` = 'Spanish'
SELECT 100.0 * SUM(`isOnlineOnly` = 1) / COUNT(`id`) AS percentage FROM `cards` WHERE `frameEffects` = 'legendary'
SELECT (COUNT(`id`) FILTER (WHERE `isStorySpotlight` = 1 AND `isTextless` = 0) * 100.0 / COUNT(`id`)) AS percentage FROM `cards` WHERE `isStorySpotlight` = 1 AND `isTextless` = 0;
SELECT `name`, (COUNT(`foreign_data`.`id`) FILTER (WHERE `foreign_data`.`language` = 'Spanish') * 100.0 / COUNT(`foreign_data`.`id`)) AS `percentage` FROM `cards` LEFT JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` GROUP BY `name`
SELECT DISTINCT `language` FROM `set_translations` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `baseSetSize` = 309)
SELECT COUNT(DISTINCT `set_translations`.`setCode`) FROM `set_translations` JOIN `sets` ON `set_translations`.`setCode` = `sets`.`code` WHERE `sets`.`block` = 'Commander' AND `set_translations`.`language` = 'Portuguese (Brasil)'
SELECT `cards`.`id` FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`types` = 'Creature' AND `legalities`.`status` = 'legal'
SELECT DISTINCT `subtypes`, `supertypes` FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'German' AND `subtypes` IS NOT NULL AND `supertypes` IS NOT NULL
SELECT COUNT(*) FROM `cards` WHERE (`power` IS NULL OR `power` = '*') AND `text` LIKE '%triggered ability%'
SELECT COUNT(*) FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `legalities`.`format` = 'premodern' AND `rulings`.`text` = 'This is a triggered mana ability.' AND `cards`.`side` IS NULL;
SELECT `c`.`id` FROM `cards` AS `c` JOIN `legalities` AS `l` ON `c`.`uuid` = `l`.`uuid` WHERE `c`.`artist` = 'Erica Yang' AND `l`.`format` = 'pauper' AND `l`.`status` = 'legal' AND `c`.`availability` = 'paper'
SELECT `artist` FROM `cards` WHERE `uuid` = (SELECT `uuid` FROM `foreign_data` WHERE `text` = 'Das perfekte Gegenmittel zu einer dichten Formation')
SELECT `foreign_data`.`name` FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'French' AND `cards`.`type` LIKE '%Creature%' AND `cards`.`layout` = 'normal' AND `cards`.`borderColor` = 'black' AND `cards`.`artist` = 'Matthew D. Wilson'
SELECT COUNT(DISTINCT `cards`.`uuid`) FROM `cards` JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`rarity` = 'rare' AND `rulings`.`date` = '2007-02-01'
SELECT DISTINCT `set_translations`.`language` FROM `sets` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`block` = 'Ravnica' AND `sets`.`baseSetSize` = 180
SELECT (COUNT(CASE WHEN c.`hasContentWarning` = 0 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM `cards` c JOIN `legalities` l ON c.`uuid` = l.`uuid` WHERE l.`format` = 'commander' AND l.`status` = 'legal';
SELECT (COUNT(CASE WHEN `language` = 'French' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM `foreign_data` WHERE `uuid` IN (SELECT `uuid` FROM `cards` WHERE `power` IS NULL OR `power` = '*')
SELECT (COUNT(CASE WHEN `language` = 'Japanese' AND `type` = 'expansion' THEN 1 END) * 100.0 / COUNT(CASE WHEN `language` = 'Japanese' THEN 1 END)) AS percentage FROM `set_translations` JOIN `sets` ON `set_translations`.`setCode` = `sets`.`code`
SELECT DISTINCT `availability` FROM `cards` WHERE `artist` = 'Daren Bader'
SELECT COUNT(*) FROM `cards` WHERE `borderColor` = 'borderless' AND `edhrecRank` > 12000 AND `colors` IS NOT NULL
SELECT COUNT(*) FROM `cards` WHERE `isOversized` = 1 AND `isReprint` = 1 AND `isPromo` = 1
SELECT `name` FROM `cards` WHERE (`power` IS NULL OR `power` = '*') AND `promoTypes` = 'arenaleague' ORDER BY `name` ASC LIMIT 3
SELECT `language` FROM `foreign_data` WHERE `multiverseid` = 149934
SELECT `id` FROM `cards` WHERE `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL ORDER BY `cardKingdomFoilId` ASC LIMIT 3
SELECT (COUNT(*) FILTER (WHERE `isTextless` = 1 AND `layout` = 'normal') * 100.0 / COUNT(*)) AS proportion FROM `cards`
SELECT `number` FROM `cards` WHERE `side` IS NULL AND `subtypes` LIKE '%Angel%' AND `subtypes` LIKE '%Wizard%'
SELECT `name` FROM `sets` WHERE `mtgoCode` IS NULL OR `mtgoCode` = '' ORDER BY `name` ASC LIMIT 3;
SELECT DISTINCT `language` FROM `set_translations` WHERE `setCode` = 'ARC'
SELECT `sets`.`name`, `set_translations`.`translation` FROM `sets` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`id` = 5
SELECT `set_translations`.`language`, `sets`.`type` FROM `sets` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`id` = 206
SELECT `sets`.`id`, `sets`.`name` FROM `sets` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Italian' AND `sets`.`block` = 'Shadowmoor' ORDER BY `sets`.`name` ASC LIMIT 2;
SELECT `sets`.`id`, `sets`.`name` FROM `sets` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`isForeignOnly` = 0 AND `sets`.`isFoilOnly` = 1 AND `set_translations`.`language` = 'Japanese'
SELECT `name` FROM `sets` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Russian' ORDER BY `sets`.`baseSetSize` DESC LIMIT 1
SELECT (COUNT(DISTINCT `c`.`uuid`) * 100.0 / (SELECT COUNT(DISTINCT `uuid`) FROM `cards` WHERE `isOnlineOnly` = 1)) AS `percentage` FROM `cards` AS `c` JOIN `foreign_data` AS `fd` ON `c`.`uuid` = `fd`.`uuid` WHERE `fd`.`language` = 'Chinese Simplified' AND `c`.`isOnlineOnly` = 1;
SELECT COUNT(DISTINCT `sets`.`code`) FROM `sets` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Japanese' AND (`sets`.`mtgoCode` IS NULL OR `sets`.`mtgoCode` = '')
SELECT `id` FROM `cards` WHERE `borderColor` = 'black'
SELECT `id` FROM `cards` WHERE `frameEffects` = 'extendedart'
SELECT `name` FROM `cards` WHERE `borderColor` = 'black' AND `isFullArt` = 1
SELECT `language` FROM `set_translations` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `id` = 174)
SELECT `name` FROM `sets` WHERE `code` = 'ALL'
SELECT DISTINCT `language` FROM `foreign_data` WHERE `name` = 'A Pedra Fellwar'
SELECT `code` FROM `sets` WHERE `releaseDate` = '2007-07-13'
SELECT `baseSetSize`, `code` FROM `sets` WHERE `block` IN ('Masques', 'Mirage')
SELECT `code` FROM `sets` WHERE `type` = 'expansion'
SELECT `foreign_data`.`name`, `foreign_data`.`type` FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'boros';
SELECT `foreign_data`.`language`, `foreign_data`.`flavorText`, `cards`.`type` FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'colorpie'
SELECT (COUNT(CASE WHEN `convertedManaCost` = 10 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM `cards` WHERE `name` = 'Abyssal Horror'
SELECT `code` FROM `sets` WHERE `type` = 'expansion commander'
SELECT `foreign_data`.`name`, `foreign_data`.`type` FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'abzan'
SELECT `foreign_data`.`language`, `foreign_data`.`type` FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'azorius'
SELECT COUNT(*) FROM `cards` WHERE `artist` = 'Aaron Miller' AND `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL
SELECT COUNT(*) FROM `cards` WHERE `availability` LIKE '%paper%' AND `hand` = '3'
SELECT `name` FROM `cards` WHERE `isTextless` = 0
SELECT `manaCost` FROM `cards` WHERE `name` = 'Ancestor''s Chosen'
SELECT COUNT(*) FROM `cards` WHERE `borderColor` = 'white' AND (`power` = '*' OR `power` IS NULL)
SELECT `name` FROM `cards` WHERE `isPromo` = 1 AND `side` IS NOT NULL
SELECT `subtypes`, `supertypes` FROM `cards` WHERE `name` = 'Molimo, Maro-Sorcerer'
SELECT DISTINCT `purchaseUrls` FROM `cards` WHERE `promoTypes` = 'bundle'
SELECT COUNT(DISTINCT `artist`) FROM `cards` WHERE `borderColor` = 'black' AND `availability` LIKE '%arena,mtgo%'
SELECT `name` FROM `cards` WHERE `name` IN ('Serra Angel', 'Shrine Keeper') ORDER BY `convertedManaCost` DESC LIMIT 1;
SELECT `artist` FROM `cards` WHERE `flavorName` = 'Battra, Dark Destroyer'
SELECT `name` FROM `cards` WHERE `frameVersion` = '2003' ORDER BY `convertedManaCost` DESC LIMIT 3
SELECT `set_translations`.`translation` FROM `set_translations` JOIN `sets` ON `set_translations`.`setCode` = `sets`.`code` JOIN `cards` ON `cards`.`setCode` = `sets`.`code` WHERE `cards`.`name` = 'Ancestor''s Chosen' AND `set_translations`.`language` = 'Italian'
SELECT COUNT(DISTINCT `translation`) FROM `set_translations` WHERE `setCode` IN (SELECT DISTINCT `setCode` FROM `cards` WHERE `name` = 'Angel of Mercy')
SELECT `c`.`name` FROM `cards` AS `c` JOIN `sets` AS `s` ON `c`.`setCode` = `s`.`code` JOIN `set_translations` AS `st` ON `s`.`code` = `st`.`setCode` WHERE `st`.`translation` = 'Hauptset Zehnte Edition'
SELECT EXISTS (SELECT 1 FROM `cards` c JOIN `foreign_data` fd ON c.`uuid` = fd.`uuid` WHERE c.`name` = 'Ancestor''s Chosen' AND fd.`language` = 'Korean') AS has_korean_version;
SELECT COUNT(*) FROM `cards` c JOIN `set_translations` st ON c.`setCode` = st.`setCode` WHERE st.`translation` = 'Hauptset Zehnte Edition' AND c.`artist` = 'Adam Rex'
SELECT `baseSetSize` FROM `sets` WHERE `code` = (SELECT `setCode` FROM `set_translations` WHERE `translation` = 'Hauptset Zehnte Edition')
SELECT `translation` FROM `set_translations` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Eighth Edition') AND `language` = 'Chinese Simplified'
SELECT EXISTS (SELECT 1 FROM `cards` JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `cards`.`name` = 'Angel of Mercy' AND `sets`.`mtgoCode` IS NOT NULL) AS `appeared_on_mtg_online`
SELECT `releaseDate` FROM `sets` WHERE `code` = (SELECT `setCode` FROM `cards` WHERE `name` = 'Ancestor''s Chosen')
SELECT `type` FROM `sets` WHERE `code` = (SELECT `setCode` FROM `set_translations` WHERE `translation` = ' Hauptset Zehnte Edition')
SELECT COUNT(DISTINCT `s`.`code`) FROM `sets` AS `s` JOIN `set_translations` AS `st` ON `s`.`code` = `st`.`setCode` WHERE `s`.`block` = 'Ice Age' AND `st`.`language` = 'Italian' AND `st`.`translation` IS NOT NULL;
SELECT `isForeignOnly` FROM `sets` WHERE `code` = (SELECT `setCode` FROM `cards` WHERE `name` = 'Adarkar Valkyrie')
SELECT COUNT(DISTINCT `sets`.`code`) FROM `sets` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Italian' AND `sets`.`baseSetSize` < 100;
SELECT COUNT(*) FROM `cards` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Coldsnap') AND `borderColor` = 'black'
SELECT `name` FROM `cards` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Coldsnap') AND `convertedManaCost` = (SELECT MAX(`convertedManaCost`) FROM `cards` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Coldsnap'))
SELECT DISTINCT `artist` FROM `cards` WHERE `artist` IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Coldsnap')
SELECT `name` FROM `cards` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Coldsnap') AND `number` = 4
SELECT COUNT(*) FROM `cards` WHERE `name` = 'Coldsnap' AND `convertedManaCost` > 5 AND (`power` = '*' OR `power` IS NULL)
SELECT `flavorText` FROM `foreign_data` WHERE `name` = 'Ancestor''s Chosen' AND `language` = 'Italian'
SELECT DISTINCT `language` FROM `foreign_data` WHERE `name` = 'Ancestor''s Chosen' AND `flavorText` IS NOT NULL;
SELECT `type` FROM `foreign_data` WHERE `name` = 'Ancestor''s Chosen' AND `language` = 'German'
SELECT `r`.`text` FROM `rulings` AS `r` JOIN `cards` AS `c` ON `r`.`uuid` = `c`.`uuid` JOIN `sets` AS `s` ON `c`.`setCode` = `s`.`code` JOIN `set_translations` AS `st` ON `s`.`code` = `st`.`setCode` WHERE `s`.`name` = 'Coldsnap' AND `st`.`language` = 'Italian'
SELECT `foreign_data`.`name` FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap' AND `foreign_data`.`language` = 'Italian' AND `cards`.`convertedManaCost` = (SELECT MAX(`convertedManaCost`) FROM `cards` JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap')
SELECT `date` FROM `rulings` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Reminisce')
SELECT (SUM(`convertedManaCost` = 7) * 100.0 / COUNT(*)) AS percentage FROM `cards` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Coldsnap')
SELECT (SUM(CASE WHEN `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM `cards` WHERE `name` = 'Coldsnap'
SELECT `code` FROM `sets` WHERE `releaseDate` = '2017-07-14'
SELECT `keyruneCode` FROM `sets` WHERE `code` = 'PKHC'
SELECT `mcmId` FROM `sets` WHERE `code` = 'SS2'
SELECT `mcmName` FROM `sets` WHERE `releaseDate` = '2017-06-09'
SELECT `type` FROM `sets` WHERE `name` = 'From the Vault: Lore'
SELECT `parentCode` FROM `sets` WHERE `name` = 'Commander 2014 Oversized'
SELECT c.`name`, r.`text`, c.`hasContentWarning` FROM `cards` c JOIN `rulings` r ON c.`uuid` = r.`uuid` WHERE c.`artist` = 'Jim Pavelec';
SELECT `sets`.`releaseDate` FROM `sets` JOIN `cards` ON `sets`.`code` = `cards`.`setCode` WHERE `cards`.`name` = 'Evacuation'
SELECT `baseSetSize` FROM `sets` WHERE `code` = (SELECT `setCode` FROM `set_translations` WHERE `translation` = 'Rinascita di Alara')
SELECT `type` FROM `sets` WHERE `code` = (SELECT `setCode` FROM `set_translations` WHERE `translation` = 'Huitième édition')
SELECT `st`.`translation` FROM `cards` AS `c` JOIN `sets` AS `s` ON `c`.`setCode` = `s`.`code` JOIN `set_translations` AS `st` ON `s`.`code` = `st`.`setCode` WHERE `c`.`name` = 'Tendo Ice Bridge' AND `st`.`language` = 'French'
SELECT COUNT(*) FROM `set_translations` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Tenth Edition') AND `translation` IS NOT NULL
SELECT `st`.`translation` FROM `cards` AS `c` JOIN `sets` AS `s` ON `c`.`setCode` = `s`.`code` JOIN `set_translations` AS `st` ON `s`.`code` = `st`.`setCode` WHERE `c`.`name` = 'Fellwar Stone' AND `st`.`language` = 'Japanese'
SELECT `name` FROM `cards` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Journey into Nyx Hero''s Path') ORDER BY `convertedManaCost` DESC LIMIT 1
SELECT `releaseDate` FROM `sets` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = 'Ola de frío'
SELECT `sets`.`type` FROM `sets` JOIN `cards` ON `sets`.`code` = `cards`.`setCode` WHERE `cards`.`name` = 'Samite Pilgrim'
SELECT COUNT(*) FROM `cards` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'World Championship Decks 2004') AND `convertedManaCost` = 3
SELECT `translation` FROM `set_translations` WHERE `language` = 'Chinese Simplified' AND `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Mirrodin')
SELECT (SUM(s.isNonFoilOnly = 1) * 100.0 / COUNT(*)) AS percentage_non_foil FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.language = 'Japanese';
SELECT (SUM(c.`isOnlineOnly` = 1) * 100.0 / COUNT(*)) AS percentage_online_only FROM `cards` c JOIN `foreign_data` fd ON c.`uuid` = fd.`uuid` WHERE fd.`language` = 'Portuguese (Brazil)';
SELECT DISTINCT `availability` FROM `cards` WHERE `artist` = 'Aleksi Briclot' AND `isTextless` = 1
SELECT `id` FROM `sets` WHERE `baseSetSize` = (SELECT MAX(`baseSetSize`) FROM `sets`)
SELECT `artist` FROM `cards` WHERE `side` IS NULL ORDER BY `convertedManaCost` DESC LIMIT 1
SELECT `frameEffects` FROM `cards` WHERE `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL GROUP BY `frameEffects` ORDER BY COUNT(*) DESC LIMIT 1
SELECT COUNT(*) FROM `cards` WHERE (`power` IS NULL OR `power` = '*') AND `hasFoil` = 0 AND `duelDeck` = 'a'
SELECT `id` FROM `sets` WHERE `type` = 'commander' ORDER BY `totalSetSize` DESC LIMIT 1
SELECT `c`.`name`, `c`.`manaCost` FROM `cards` AS `c` JOIN `legalities` AS `l` ON `c`.`uuid` = `l`.`uuid` WHERE `l`.`format` = 'duel' ORDER BY `c`.`convertedManaCost` DESC LIMIT 10
SELECT `c`.`originalReleaseDate`, GROUP_CONCAT(DISTINCT `l`.`format`) AS `legal_formats` FROM `cards` AS `c` JOIN `legalities` AS `l` ON `c`.`uuid` = `l`.`uuid` WHERE `c`.`rarity` = 'mythic' AND `l`.`status` = 'legal' AND `c`.`originalReleaseDate` = (SELECT MIN(`originalReleaseDate`) FROM `cards` WHERE `rarity` = 'mythic') GROUP BY `c`.`originalReleaseDate`
SELECT COUNT(*) FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`artist` = 'Volkan Baǵa' AND `foreign_data`.`language` = 'French'
SELECT COUNT(*) FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`rarity` = 'rare' AND `cards`.`types` = 'Enchantment' AND `cards`.`name` = 'Abundance' AND `legalities`.`status` = 'Legal'
SELECT `l1`.`format`, GROUP_CONCAT(`c`.`name`) AS `card_names` FROM `legalities` AS `l1` JOIN `cards` AS `c` ON `l1`.`uuid` = `c`.`uuid` WHERE `l1`.`status` = 'Banned' GROUP BY `l1`.`format` HAVING COUNT(`l1`.`status`) = (SELECT MAX(banned_count) FROM (SELECT COUNT(`status`) AS banned_count FROM `legalities` WHERE `status` = 'Banned' GROUP BY `format`))
SELECT `language` FROM `set_translations` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Battlebond')
SELECT `l`.`format` FROM `cards` c JOIN `legalities` l ON `c`.`uuid` = `l`.`uuid` WHERE `c`.`artist` = (SELECT `artist` FROM `cards` GROUP BY `artist` ORDER BY COUNT(*) ASC LIMIT 1)
SELECT `l`.`status` FROM `cards` AS `c` JOIN `legalities` AS `l` ON `c`.`uuid` = `l`.`uuid` WHERE `c`.`frameVersion` = '1997' AND `c`.`artist` = 'D. Alexander Gregory' AND `l`.`format` = 'legacy' AND (`c`.`hasContentWarning` = 1 OR `c`.`artist` = 'Wizards of the Coast')
SELECT c.`name`, l.`format` FROM `cards` c LEFT JOIN `legalities` l ON c.`uuid` = l.`uuid` WHERE c.`edhrecRank` = 1 AND l.`status` = 'Banned'
SELECT AVG(annual_count) AS avg_annual_sets, common_language FROM (SELECT COUNT(DISTINCT `code`) AS annual_count, `releaseDate`, (SELECT `language` FROM `set_translations` GROUP BY `language` ORDER BY COUNT(`language`) DESC LIMIT 1) AS common_language FROM `sets` WHERE `releaseDate` BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY strftime('%Y', `releaseDate`))
SELECT DISTINCT `artist` FROM `cards` WHERE `borderColor` = 'black' AND `availability` = 'arena'
SELECT `uuid` FROM `legalities` WHERE `format` = 'oldschool' AND (`status` = 'banned' OR `status` = 'restricted')
SELECT COUNT(*) FROM `cards` WHERE `artist` = 'Matthew D. Wilson' AND `availability` = 'paper'
SELECT `rulings`.`text` FROM `rulings` JOIN `cards` ON `rulings`.`uuid` = `cards`.`uuid` WHERE `cards`.`artist` = 'Kev Walker' ORDER BY `rulings`.`date` DESC
SELECT DISTINCT c.`name`, l.`format` FROM `cards` c JOIN `legalities` l ON c.`uuid` = l.`uuid` JOIN `sets` s ON c.`setCode` = s.`code` WHERE s.`name` = 'Hour of Devastation' AND l.`status` = 'Legal'
SELECT `s`.`name` FROM `sets` s WHERE `s`.`code` IN (SELECT `st`.`setCode` FROM `set_translations` st WHERE `st`.`language` = 'Korean') AND `s`.`code` NOT IN (SELECT `st`.`setCode` FROM `set_translations` st WHERE `st`.`language` LIKE '%Japanese%')
SELECT DISTINCT `c`.`frameVersion` FROM `cards` AS `c` WHERE `c`.`artist` = 'Allen Williams' UNION SELECT DISTINCT `l`.`uuid` FROM `legalities` AS `l` WHERE `l`.`status` = 'Banned';
SELECT `DisplayName`, `Reputation` FROM `users` WHERE `DisplayName` IN ('Harlan', 'Jarrod Dixon') ORDER BY `Reputation` DESC LIMIT 1;
SELECT `DisplayName` FROM `users` WHERE strftime('%Y', `CreationDate`) = '2011'
SELECT COUNT(*) FROM `users` WHERE `LastAccessDate` > '2014-09-01'
SELECT `DisplayName` FROM `users` ORDER BY `Views` DESC LIMIT 1
SELECT COUNT(*) FROM `users` WHERE `UpVotes` > 100 AND `DownVotes` > 1;
SELECT COUNT(*) FROM `users` WHERE `Views` > 10 AND strftime('%Y', `CreationDate`) > '2013'
SELECT COUNT(*) FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie'
SELECT `Title` FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'csgillespie')
SELECT `users`.`DisplayName` FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Eliciting priors from experts'
SELECT `Title` FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'csgillespie') ORDER BY `ViewCount` DESC LIMIT 1
SELECT `users`.`DisplayName` FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` ORDER BY `posts`.`FavoriteCount` DESC LIMIT 1
SELECT SUM(`CommentCount`) AS total_comments FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie'
SELECT MAX(`AnswerCount`) FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'csgillespie')
SELECT `LastEditorDisplayName` FROM `posts` WHERE `Title` = 'Examples for teaching: Correlation does not mean causation'
SELECT COUNT(*) FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie' AND `posts`.`ParentId` IS NULL;
SELECT DISTINCT `users`.`DisplayName` FROM `users` JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `posts`.`ClosedDate` IS NOT NULL
SELECT COUNT(*) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`Age` > 65 AND `posts`.`Score` >= 20
SELECT `users`.`Location` FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Eliciting priors from experts'
SELECT `posts`.`Body` FROM `posts` JOIN `tags` ON `posts`.`Id` = `tags`.`ExcerptPostId` WHERE `tags`.`TagName` = 'bayesian'
SELECT `posts`.`Body` FROM `posts` JOIN `tags` ON `posts`.`Id` = `tags`.`ExcerptPostId` ORDER BY `tags`.`Count` DESC LIMIT 1
SELECT COUNT(*) FROM `badges` WHERE `UserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'csgillespie')
SELECT DISTINCT `b`.`Name` FROM `badges` AS `b` JOIN `users` AS `u` ON `b`.`UserId` = `u`.`Id` WHERE `u`.`DisplayName` = 'csgillespie'
SELECT COUNT(*) FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie' AND strftime('%Y', `badges`.`Date`) = '2011'
SELECT `DisplayName` FROM `users` WHERE `Id` = (SELECT `UserId` FROM `badges` GROUP BY `UserId` ORDER BY COUNT(`Id`) DESC LIMIT 1)
SELECT AVG(`Score`) FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'csgillespie')
SELECT AVG(badge_count) FROM (SELECT COUNT(`badges`.`Id`) AS badge_count FROM `users` JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `users`.`Views` > 200 GROUP BY `users`.`Id`);
SELECT (COUNT(DISTINCT p.Id) * 100.0 / (SELECT COUNT(DISTINCT Id) FROM posts WHERE Score > 5)) AS percentage FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.Score > 5 AND u.Age > 65;
SELECT COUNT(*) FROM `votes` WHERE `UserId` = 58 AND `CreationDate` = '2010-07-19'
SELECT `CreationDate` FROM `votes` GROUP BY `CreationDate` ORDER BY COUNT(`Id`) DESC LIMIT 1;
SELECT COUNT(*) FROM `badges` WHERE `Name` = 'Revival'
SELECT `posts`.`Title` FROM `posts` JOIN `comments` ON `posts`.`Id` = `comments`.`PostId` WHERE `comments`.`Score` = (SELECT MAX(`Score`) FROM `comments`)
SELECT `CommentCount` FROM `posts` WHERE `ViewCount` = 1910
SELECT `FavoriteCount` FROM `posts` WHERE `Id` = (SELECT `PostId` FROM `comments` WHERE `UserId` = '3025' AND `CreationDate` = '2014/4/23 20:29:39.0')
SELECT `c`.`Text` FROM `comments` c JOIN `posts` p ON `c`.`PostId` = `p`.`Id` WHERE `p`.`ParentId` = 107829 AND `p`.`CommentCount` = 1
SELECT CASE WHEN `ClosedDate` IS NULL THEN 'No' ELSE 'Yes' END AS `WellFinished` FROM `posts` WHERE `Id` = (SELECT `PostId` FROM `comments` WHERE `UserId` = 23853 AND `CreationDate` = '2013-07-12 09:08:18.0')
SELECT `users`.`Reputation` FROM `users` JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `posts`.`Id` = 65041
SELECT COUNT(*) FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Tiago Pasqualini'
SELECT `users`.`DisplayName` FROM `votes` JOIN `users` ON `votes`.`UserId` = `users`.`Id` WHERE `votes`.`Id` = '6347'
SELECT COUNT(*) FROM `votes` WHERE `PostId` IN (SELECT `Id` FROM `posts` WHERE `Title` LIKE '%data visualization%')
SELECT `b`.`Name` FROM `badges` AS `b` JOIN `users` AS `u` ON `b`.`UserId` = `u`.`Id` WHERE `u`.`DisplayName` = 'DatEpicCoderGuyWhoPrograms'
SELECT CAST(COUNT(p.`Id`) AS FLOAT) / COUNT(v.`Id`) AS post_to_vote_ratio FROM `posts` p LEFT JOIN `votes` v ON p.`OwnerUserId` = v.`UserId` WHERE p.`OwnerUserId` = 24 AND (v.`UserId` = 24 OR v.`UserId` IS NULL)
SELECT `ViewCount` FROM `posts` WHERE `Title` = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'
SELECT `Text` FROM `comments` WHERE `Score` = 17
SELECT `DisplayName` FROM `users` WHERE `WebsiteUrl` = 'http://stackoverflow.com'
SELECT DISTINCT `b`.`Name` FROM `badges` AS `b` JOIN `users` AS `u` ON `b`.`UserId` = `u`.`Id` WHERE `u`.`DisplayName` = 'SilentGhost'
SELECT `UserDisplayName` FROM `comments` WHERE `Text` = 'thank you user93!';
SELECT `Text` FROM `comments` WHERE `UserDisplayName` = 'A Lion'
SELECT `users`.`DisplayName`, `users`.`Reputation` FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Understanding what Dassault iSight is doing?'
SELECT `c`.`Text` FROM `comments` c JOIN `posts` p ON `c`.`PostId` = `p`.`Id` WHERE `p`.`Title` = 'How does gentle boosting differ from AdaBoost?'
SELECT DISTINCT `users`.`DisplayName` FROM `users` JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `badges`.`Name` = 'Necromancer' LIMIT 10
SELECT `u`.`DisplayName` FROM `posts` p JOIN `users` u ON `p`.`LastEditorUserId` = `u`.`Id` WHERE `p`.`Title` = 'Open source tools for visualizing multi-dimensional data'
SELECT `Title` FROM `posts` JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Vebjorn Ljosa'
SELECT SUM(p.`Score`) AS TotalScore, u.`WebsiteUrl` FROM `posts` p JOIN `users` u ON p.`LastEditorUserId` = u.`Id` WHERE u.`DisplayName` = 'Yevgeny'
SELECT `c`.`Text` FROM `comments` c JOIN `posts` p ON `c`.`PostId` = `p`.`Id` WHERE `p`.`Title` = 'Why square the difference instead of taking the absolute value in standard deviation?' AND `c`.`UserId` IN (SELECT `LastEditorUserId` FROM `posts` WHERE `Title` = 'Why square the difference instead of taking the absolute value in standard deviation?')
SELECT SUM(`votes`.`BountyAmount`) AS total_bounty_amount FROM `votes` JOIN `posts` ON `votes`.`PostId` = `posts`.`Id` WHERE `posts`.`Title` LIKE '%data%'
SELECT DISTINCT `users`.`DisplayName` FROM `votes` JOIN `posts` ON `votes`.`PostId` = `posts`.`Id` JOIN `users` ON `votes`.`UserId` = `users`.`Id` WHERE `votes`.`BountyAmount` = 50 AND `posts`.`Title` LIKE '%variance%'
SELECT p.`Title`, c.`Text`, AVG(p.`ViewCount`) AS `AverageViewCount` FROM `posts` p JOIN `tags` t ON p.`Id` = t.`ExcerptPostId` JOIN `comments` c ON p.`Id` = c.`PostId` WHERE t.`TagName` = 'humor' GROUP BY p.`Id`
SELECT COUNT(*) FROM `comments` WHERE `UserId` = 13
SELECT `Id` FROM `users` ORDER BY `Reputation` DESC LIMIT 1
SELECT `Id` FROM `users` WHERE `Views` = (SELECT MIN(`Views`) FROM `users`);
SELECT COUNT(DISTINCT `UserId`) FROM `badges` WHERE `Name` = 'Supporter' AND strftime('%Y', `Date`) = '2011'
SELECT COUNT(DISTINCT `UserId`) FROM `badges` GROUP BY `UserId` HAVING COUNT(`Name`) > 5
SELECT COUNT(DISTINCT `b1`.`UserId`) FROM `badges` AS `b1` JOIN `badges` AS `b2` ON `b1`.`UserId` = `b2`.`UserId` JOIN `users` ON `b1`.`UserId` = `users`.`Id` WHERE `b1`.`Name` = 'Supporter' AND `b2`.`Name` = 'Teacher' AND `users`.`Location` = 'New York'
SELECT `users`.`DisplayName`, `users`.`Reputation` FROM `users` JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `posts`.`Id` = 1
SELECT `users`.`Id`, `users`.`DisplayName` FROM `users` JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `posts`.`ViewCount` >= 1000 AND `posts`.`Id` IN (SELECT `PostId` FROM `postHistory` GROUP BY `PostId`, `UserId` HAVING COUNT(`Id`) = 1)
SELECT `b`.`Name` FROM `badges` b JOIN (SELECT `UserId`, COUNT(`Id`) AS `CommentCount` FROM `comments` GROUP BY `UserId` ORDER BY `CommentCount` DESC LIMIT 1) c ON `b`.`UserId` = `c`.`UserId`
SELECT COUNT(DISTINCT `users`.`Id`) FROM `users` JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `users`.`Location` = 'India' AND `badges`.`Name` = 'Teacher'
SELECT (COUNT(CASE WHEN strftime('%Y', `Date`) = '2010' THEN 1 END) * 100.0 / COUNT(`Name`) - COUNT(CASE WHEN strftime('%Y', `Date`) = '2011' THEN 1 END) * 100.0 / COUNT(`Name`)) AS percentage_difference FROM `badges` WHERE `Name` = 'Student';
SELECT DISTINCT `PostHistoryTypeId` FROM `postHistory` WHERE `PostId` = 3720; SELECT COUNT(DISTINCT `UserId`) FROM `comments` WHERE `PostId` = 3720;
SELECT `p`.`Id`, `p`.`ViewCount` FROM `postLinks` pl JOIN `posts` p ON `pl`.`RelatedPostId` = `p`.`Id` WHERE `pl`.`PostId` = 61217;
SELECT `Score`, `LinkTypeId` FROM `postLinks` JOIN `posts` ON `postLinks`.`PostId` = `posts`.`Id` WHERE `posts`.`Id` = 395
SELECT `Id`, `OwnerUserId` FROM `posts` WHERE `Score` > 60
SELECT SUM(`FavoriteCount`) FROM `posts` WHERE `OwnerUserId` = 686 AND strftime('%Y', `CreaionDate`) = '2011'
SELECT AVG(`u`.`UpVotes`) AS `average_up_votes`, AVG(`u`.`Age`) AS `average_age` FROM `users` u JOIN (SELECT `OwnerUserId` FROM `posts` GROUP BY `OwnerUserId` HAVING COUNT(`Id`) > 10) p ON `u`.`Id` = `p`.`OwnerUserId`
SELECT COUNT(DISTINCT `UserId`) FROM `badges` WHERE `Name` = 'Announcer'
SELECT DISTINCT `Name` FROM `badges` WHERE `Date` = '2010-07-19 19:39:08.0'
SELECT COUNT(*) FROM `comments` WHERE `Score` > 60
SELECT `Text` FROM `comments` WHERE `CreationDate` = '2010-07-19 19:25:47.0'
SELECT COUNT(*) FROM `posts` WHERE `Score` = 10
SELECT DISTINCT `b`.`Name` FROM `badges` AS `b` JOIN `users` AS `u` ON `b`.`UserId` = `u`.`Id` WHERE `u`.`Reputation` = (SELECT MAX(`Reputation`) FROM `users`)
SELECT `users`.`Reputation` FROM `users` JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `badges`.`Date` = '2010-07-19 19:39:08.0'
SELECT DISTINCT `b`.`Name` FROM `badges` AS `b` JOIN `users` AS `u` ON `b`.`UserId` = `u`.`Id` WHERE `u`.`DisplayName` = 'Pierre'
SELECT DISTINCT `b`.`Date` FROM `badges` AS `b` JOIN `users` AS `u` ON `b`.`UserId` = `u`.`Id` WHERE `u`.`Location` = 'Rochester, NY'
SELECT (COUNT(DISTINCT CASE WHEN `Name` = 'Teacher' THEN `UserId` END) * 100.0 / COUNT(DISTINCT `UserId`)) AS percentage FROM `badges`
SELECT (COUNT(DISTINCT u.Id) FILTER (WHERE u.Age BETWEEN 13 AND 18) * 100.0 / COUNT(DISTINCT u.Id)) AS percentage FROM users u JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Organizer';
SELECT `comments`.`Score` FROM `comments` JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`CreaionDate` = '2010-07-19 19:19:56.0'
SELECT `c`.`Text` FROM `comments` c JOIN `posts` p ON `c`.`PostId` = `p`.`Id` WHERE `p`.`CreaionDate` = '2010-07-19 19:37:33.0'
SELECT DISTINCT `users`.`Age` FROM `users` JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `users`.`Location` = 'Vienna, Austria' AND `users`.`Age` IS NOT NULL
SELECT COUNT(DISTINCT `users`.`Id`) FROM `users` JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `badges`.`Name` = 'Supporter' AND `users`.`Age` BETWEEN 19 AND 65;
SELECT SUM(`users`.`Views`) FROM `users` JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `badges`.`Date` = '2010-07-19 19:39:08.0'
SELECT DISTINCT `b`.`Name` FROM `badges` AS `b` JOIN `users` AS `u` ON `b`.`UserId` = `u`.`Id` WHERE `u`.`Reputation` = (SELECT MIN(`Reputation`) FROM `users`)
SELECT DISTINCT `b`.`Name` FROM `badges` AS `b` JOIN `users` AS `u` ON `b`.`UserId` = `u`.`Id` WHERE `u`.`DisplayName` = 'Sharpie'
SELECT COUNT(DISTINCT `users`.`Id`) FROM `users` JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `users`.`Age` > 65 AND `badges`.`Name` = 'Supporter'
SELECT `DisplayName` FROM `users` WHERE `Id` = 30
SELECT COUNT(*) FROM `users` WHERE `Location` = 'New York'
SELECT COUNT(*) FROM `votes` WHERE strftime('%Y', `CreationDate`) = '2010'
SELECT COUNT(*) FROM `users` WHERE `Age` BETWEEN 19 AND 65;
SELECT `DisplayName` FROM `users` WHERE `Views` = (SELECT MAX(`Views`) FROM `users`);
SELECT CAST(SUM(CASE WHEN strftime('%Y', `CreationDate`) = '2010' THEN 1 ELSE 0 END) AS FLOAT) / NULLIF(SUM(CASE WHEN strftime('%Y', `CreationDate`) = '2011' THEN 1 ELSE 0 END), 0) AS ratio FROM `votes`
SELECT DISTINCT `tags`.`TagName` FROM `tags` JOIN `posts` ON `tags`.`ExcerptPostId` = `posts`.`Id` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'John Salvatier';
SELECT COUNT(*) FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Daniel Vassallo';
SELECT COUNT(*) FROM `votes` WHERE `UserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'Harlan')
SELECT `Id` FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'slashnick') ORDER BY `AnswerCount` DESC LIMIT 1;
SELECT `u`.`DisplayName`, SUM(`p`.`ViewCount`) AS `TotalViews` FROM `posts` p JOIN `users` u ON `p`.`OwnerUserId` = `u`.`Id` WHERE `u`.`DisplayName` IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY `u`.`DisplayName` ORDER BY `TotalViews` DESC LIMIT 1;
SELECT COUNT(DISTINCT `posts`.`Id`) FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` JOIN `votes` ON `posts`.`Id` = `votes`.`PostId` WHERE `users`.`DisplayName` = 'Matt Parker' AND `votes`.`PostId` > 4;
SELECT COUNT(*) FROM `comments` c JOIN `posts` p ON c.`PostId` = p.`Id` JOIN `users` u ON p.`OwnerUserId` = u.`Id` WHERE c.`Score` < 60 AND u.`DisplayName` = 'Neil McGuigan'
SELECT DISTINCT `t`.`TagName` FROM `posts` p JOIN `tags` t ON `p`.`Tags` LIKE '%' || `t`.`TagName` || '%' WHERE `p`.`OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'Mark Meckes') AND `p`.`CommentCount` = 0;
SELECT DISTINCT `users`.`DisplayName` FROM `users` JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `badges`.`Name` = 'Organizer'
SELECT 100.0 * (SELECT COUNT(*) FROM `posts` p JOIN `tags` t ON p.`Id` = t.`ExcerptPostId` WHERE t.`TagName` = 'r' AND p.`OwnerDisplayName` = 'Community') / (SELECT COUNT(*) FROM `posts` WHERE `OwnerDisplayName` = 'Community') AS percentage;
SELECT COALESCE((SELECT SUM(`ViewCount`) FROM `posts` p JOIN `users` u ON p.`OwnerUserId` = u.`Id` WHERE u.`DisplayName` = 'Mornington'), 0) - COALESCE((SELECT SUM(`ViewCount`) FROM `posts` p JOIN `users` u ON p.`OwnerUserId` = u.`Id` WHERE u.`DisplayName` = 'Amos'), 0) AS `ViewCountDifference`
SELECT COUNT(DISTINCT `UserId`) FROM `badges` WHERE `Name` = 'Commentator' AND strftime('%Y', `Date`) = '2014'
SELECT COUNT(*) FROM `posts` WHERE `CreaionDate` BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59';
SELECT `DisplayName`, `Age` FROM `users` WHERE `Views` = (SELECT MAX(`Views`) FROM `users`);
SELECT `LastEditDate`, `LastEditorUserId` FROM `posts` WHERE `Title` = 'Detecting a given face in a database of facial images';
SELECT COUNT(*) FROM `comments` WHERE `UserId` = 13 AND `Score` < 60;
SELECT DISTINCT `posts`.`Title`, `comments`.`UserDisplayName` FROM `comments` JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `comments`.`Score` > 60
SELECT DISTINCT `b`.`Name` FROM `badges` AS `b` JOIN `users` AS `u` ON `b`.`UserId` = `u`.`Id` WHERE `u`.`Location` = 'North Pole' AND strftime('%Y', `b`.`Date`) = '2011'
SELECT DISTINCT `users`.`DisplayName`, `users`.`WebsiteUrl` FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`FavoriteCount` > 150
SELECT COUNT(`postHistory`.`Id`) AS `PostHistoryCount`, MAX(`postHistory`.`CreationDate`) AS `LastEditDate` FROM `postHistory` JOIN `posts` ON `postHistory`.`PostId` = `posts`.`Id` WHERE `posts`.`Title` = 'What is the best introductory Bayesian statistics textbook?'
SELECT `u`.`LastAccessDate`, `u`.`Location` FROM `users` u JOIN `badges` b ON `u`.`Id` = `b`.`UserId` WHERE `b`.`Name` = 'Outliers'
SELECT p2.`Title` FROM `posts` p1 JOIN `postLinks` pl ON p1.`Id` = pl.`PostId` JOIN `posts` p2 ON pl.`RelatedPostId` = p2.`Id` WHERE p1.`Title` = 'How to tell if something happened in a data set which monitors a value over time'
SELECT DISTINCT `p`.`Id` AS `PostId`, `b`.`Name` AS `BadgeName` FROM `posts` p JOIN `comments` c ON `p`.`Id` = `c`.`PostId` JOIN `users` u ON `c`.`UserId` = `u`.`Id` JOIN `badges` b ON `u`.`Id` = `b`.`UserId` WHERE `u`.`DisplayName` = 'Samuel' AND strftime('%Y', `p`.`CreaionDate`) = '2013' AND strftime('%Y', `b`.`Date`) = '2013'
SELECT `OwnerDisplayName` FROM `posts` WHERE `ViewCount` = (SELECT MAX(`ViewCount`) FROM `posts`)
SELECT `users`.`DisplayName`, `users`.`Location` FROM `tags` JOIN `posts` ON `tags`.`ExcerptPostId` = `posts`.`Id` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `tags`.`TagName` = 'hypothesis-testing'
SELECT p2.`Title`, pl.`LinkTypeId` FROM `posts` p1 JOIN `postLinks` pl ON p1.`Id` = pl.`PostId` JOIN `posts` p2 ON pl.`RelatedPostId` = p2.`Id` WHERE p1.`Title` = 'What are principal component scores?'
SELECT `u`.`DisplayName` FROM `posts` AS `p` JOIN `posts` AS `parent` ON `p`.`ParentId` = `parent`.`Id` JOIN `users` AS `u` ON `parent`.`OwnerUserId` = `u`.`Id` WHERE `p`.`Score` = (SELECT MAX(`Score`) FROM `posts` WHERE `ParentId` IS NOT NULL)
SELECT `u`.`DisplayName`, `u`.`WebsiteUrl` FROM `users` u JOIN `votes` v ON `u`.`Id` = `v`.`UserId` WHERE `v`.`VoteTypeId` = 8 AND `v`.`BountyAmount` = (SELECT MAX(`BountyAmount`) FROM `votes` WHERE `VoteTypeId` = 8)
SELECT `Title` FROM `posts` ORDER BY `ViewCount` DESC LIMIT 5
SELECT COUNT(*) FROM `tags` WHERE `Count` BETWEEN 5000 AND 7000;
SELECT `OwnerUserId` FROM `posts` ORDER BY `FavoriteCount` DESC LIMIT 1
SELECT `Age` FROM `users` WHERE `Reputation` = (SELECT MAX(`Reputation`) FROM `users`)
SELECT COUNT(DISTINCT `posts`.`Id`) FROM `posts` JOIN `votes` ON `posts`.`Id` = `votes`.`PostId` WHERE strftime('%Y', `posts`.`CreaionDate`) = '2011' AND `votes`.`BountyAmount` = 50;
SELECT `Id` FROM `users` WHERE `Age` = (SELECT MIN(`Age`) FROM `users`);
SELECT SUM(`Score`) FROM `posts` WHERE `LasActivityDate` LIKE '2010-07-19%';
SELECT COUNT(`postLinks`.`Id`) / 12 FROM `postLinks` JOIN `posts` ON `postLinks`.`PostId` = `posts`.`Id` WHERE strftime('%Y', `postLinks`.`CreationDate`) = '2010' AND `posts`.`AnswerCount` <= 2;
SELECT `PostId` FROM `votes` JOIN `posts` ON `votes`.`PostId` = `posts`.`Id` WHERE `votes`.`UserId` = 1465 ORDER BY `posts`.`FavoriteCount` DESC LIMIT 1;
SELECT `posts`.`Title` FROM `posts` JOIN `postLinks` ON `posts`.`Id` = `postLinks`.`PostId` ORDER BY `postLinks`.`CreationDate` ASC LIMIT 1
SELECT `u`.`DisplayName` FROM `users` u JOIN `badges` b ON `u`.`Id` = `b`.`UserId` GROUP BY `u`.`Id` ORDER BY COUNT(`b`.`Name`) DESC LIMIT 1;
SELECT MIN(`votes`.`CreationDate`) FROM `votes` JOIN `users` ON `votes`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'chl'
SELECT MIN(p.`CreaionDate`) FROM `users` u JOIN `posts` p ON u.`Id` = p.`OwnerUserId` WHERE u.`Age` = (SELECT MIN(`Age`) FROM `users` WHERE `Age` IS NOT NULL)
SELECT `users`.`DisplayName` FROM `badges` JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Autobiographer' ORDER BY `badges`.`Date` ASC LIMIT 1
SELECT COUNT(DISTINCT `u`.`Id`) FROM `users` u JOIN `posts` p ON `u`.`Id` = `p`.`OwnerUserId` WHERE `u`.`Location` = 'United Kingdom' AND `p`.`FavoriteCount` >= 4;
SELECT AVG(v.`PostId`) FROM `votes` v JOIN `users` u ON v.`UserId` = u.`Id` WHERE u.`Age` = (SELECT MAX(`Age`) FROM `users`)
SELECT `DisplayName` FROM `users` WHERE `Reputation` = (SELECT MAX(`Reputation`) FROM `users`);
SELECT COUNT(*) FROM `users` WHERE `Reputation` > 2000 AND `Views` > 1000;
SELECT `DisplayName` FROM `users` WHERE `Age` BETWEEN 19 AND 65;
SELECT COUNT(*) FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Jay Stevens' AND strftime('%Y', `posts`.`CreaionDate`) = '2010'
SELECT `Id`, `Title` FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'Harvey Motulsky') ORDER BY `ViewCount` DESC LIMIT 1
SELECT `Id`, `Title` FROM `posts` WHERE `Score` = (SELECT MAX(`Score`) FROM `posts`);
SELECT AVG(`Score`) FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Stephen Turner'
SELECT DISTINCT `users`.`DisplayName` FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`ViewCount` > 20000 AND strftime('%Y', `posts`.`CreaionDate`) = '2011'
SELECT `p`.`Id`, `u`.`DisplayName` FROM `posts` p JOIN `users` u ON `p`.`OwnerUserId` = `u`.`Id` WHERE strftime('%Y', `p`.`CreaionDate`) = '2010' ORDER BY `p`.`FavoriteCount` DESC LIMIT 1
SELECT (COUNT(p.`Id`) * 100.0 / (SELECT COUNT(`Id`) FROM `posts`)) AS percentage FROM `posts` p JOIN `users` u ON p.`OwnerUserId` = u.`Id` WHERE u.`Reputation` > 1000 AND strftime('%Y', p.`CreaionDate`) = '2011';
SELECT (COUNT(`Id`) FILTER (WHERE `Age` BETWEEN 13 AND 18) * 100.0 / COUNT(`Id`)) AS `percentage` FROM `users`
SELECT p.`ViewCount`, u.`DisplayName` FROM `posts` p JOIN `users` u ON p.`OwnerUserId` = u.`Id` WHERE p.`Body` = 'Computer Game Datasets' ORDER BY p.`LasActivityDate` DESC LIMIT 1
SELECT COUNT(*) FROM `posts` WHERE `ViewCount` > (SELECT AVG(`ViewCount`) FROM `posts`);
SELECT COUNT(*) FROM `comments` WHERE `PostId` = (SELECT `Id` FROM `posts` ORDER BY `Score` DESC LIMIT 1)
SELECT COUNT(*) FROM `posts` WHERE `ViewCount` > 35000 AND `CommentCount` = 0;
SELECT `users`.`DisplayName`, `users`.`Location` FROM `posts` JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `posts`.`Id` = 183 ORDER BY `posts`.`LastEditDate` DESC LIMIT 1;
SELECT `b`.`Name` FROM `badges` b JOIN `users` u ON `b`.`UserId` = `u`.`Id` WHERE `u`.`DisplayName` = 'Emmett' ORDER BY `b`.`Date` DESC LIMIT 1
SELECT COUNT(*) FROM `users` WHERE `Age` BETWEEN 19 AND 65 AND `UpVotes` > 5000
SELECT `b`.`Date` - `u`.`CreationDate` AS `DaysToBadge` FROM `badges` AS `b` JOIN `users` AS `u` ON `b`.`UserId` = `u`.`Id` WHERE `u`.`DisplayName` = 'Zolomon';
SELECT (SELECT COUNT(*) FROM `posts` WHERE `OwnerUserId` = u.`Id`) AS `PostCount`, (SELECT COUNT(*) FROM `comments` WHERE `UserId` = u.`Id`) AS `CommentCount` FROM `users` u WHERE `CreationDate` = (SELECT MAX(`CreationDate`) FROM `users`)
SELECT `c`.`Text`, `u`.`DisplayName` FROM `comments` c JOIN `posts` p ON `c`.`PostId` = `p`.`Id` LEFT JOIN `users` u ON `c`.`UserId` = `u`.`Id` WHERE `p`.`Title` = 'Analysing wind data with R' ORDER BY `c`.`CreationDate` DESC LIMIT 10
SELECT COUNT(DISTINCT `UserId`) FROM `badges` WHERE `Name` = 'Citizen Patrol'
SELECT COUNT(*) FROM `posts` WHERE `Tags` LIKE '%<careers>%';
SELECT `users`.`Reputation`, `users`.`Views` FROM `users` WHERE `users`.`DisplayName` = 'Jarrod Dixon'
SELECT (SELECT COUNT(*) FROM `comments` WHERE `PostId` = (SELECT `Id` FROM `posts` WHERE `Title` = 'Clustering 1D data')) AS CommentCount, (SELECT COUNT(*) FROM `posts` WHERE `ParentId` = (SELECT `Id` FROM `posts` WHERE `Title` = 'Clustering 1D data')) AS AnswerCount
SELECT `CreationDate` FROM `users` WHERE `DisplayName` = 'IrishStat'
SELECT COUNT(DISTINCT `PostId`) FROM `votes` WHERE `BountyAmount` >= 30;
WITH influential_user AS (SELECT `OwnerUserId`, MAX(`Reputation`) as max_reputation FROM `users` JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` GROUP BY `OwnerUserId` ORDER BY max_reputation DESC LIMIT 1), user_posts AS (SELECT `Id`, `Score` FROM `posts` WHERE `OwnerUserId` = (SELECT `OwnerUserId` FROM influential_user)) SELECT (100.0 * SUM(CASE WHEN `Score` > 50 THEN 1 ELSE 0 END) / COUNT(*)) AS percentage FROM user_posts;
SELECT COUNT(*) FROM `posts` WHERE `Score` < 20
SELECT COUNT(*) FROM `tags` WHERE `Id` < 15 AND `Count` <= 20;
SELECT `ExcerptPostId`, `WikiPostId` FROM `tags` WHERE `TagName` = 'sample'
SELECT `users`.`Reputation`, `users`.`UpVotes` FROM `users` JOIN `comments` ON `users`.`Id` = `comments`.`UserId` WHERE `comments`.`Text` = 'fine, you win :)'
SELECT `c`.`Text` FROM `comments` c JOIN `posts` p ON `c`.`PostId` = `p`.`Id` WHERE `p`.`Title` LIKE '%linear regression%'
SELECT `Text` FROM `comments` WHERE `PostId` IN (SELECT `Id` FROM `posts` WHERE `ViewCount` BETWEEN 100 AND 150) ORDER BY `Score` DESC LIMIT 1;
SELECT DISTINCT `u`.`CreationDate`, `u`.`Age` FROM `users` u JOIN `comments` c ON `u`.`Id` = `c`.`UserId` WHERE `c`.`Text` LIKE '%http://%'
SELECT COUNT(DISTINCT `c`.`PostId`) FROM `comments` c JOIN `posts` p ON `c`.`PostId` = `p`.`Id` WHERE `c`.`Score` = 0 AND `p`.`ViewCount` < 5;
SELECT COUNT(*) FROM `comments` WHERE `Score` = 0 AND `PostId` IN (SELECT `Id` FROM `posts` WHERE `CommentCount` = 1)
SELECT COUNT(DISTINCT `users`.`Id`) FROM `comments` JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Score` = 0 AND `users`.`Age` = 40
SELECT `posts`.`Id`, `comments`.`Text` FROM `posts` JOIN `comments` ON `posts`.`Id` = `comments`.`PostId` WHERE `posts`.`Title` = 'Group differences on a five point Likert item'
SELECT `u`.`UpVotes` FROM `users` u JOIN `comments` c ON `u`.`Id` = `c`.`UserId` WHERE `c`.`Text` = 'R is also lazy evaluated.'
SELECT `Text` FROM `comments` WHERE `UserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'Harvey Motulsky')
SELECT DISTINCT `u`.`DisplayName` FROM `comments` AS `c` JOIN `users` AS `u` ON `c`.`UserId` = `u`.`Id` WHERE `c`.`Score` BETWEEN 1 AND 5 AND `u`.`DownVotes` = 0
SELECT (COUNT(DISTINCT c.UserId) FILTER (WHERE u.UpVotes = 0) * 100.0 / COUNT(DISTINCT c.UserId)) AS percentage FROM comments c JOIN users u ON c.UserId = u.Id WHERE c.Score BETWEEN 5 AND 10;
SELECT `sp`.`power_name` FROM `superpower` AS `sp` JOIN `hero_power` AS `hp` ON `sp`.`id` = `hp`.`power_id` JOIN `superhero` AS `sh` ON `hp`.`hero_id` = `sh`.`id` WHERE `sh`.`superhero_name` = '3-D Man'
SELECT COUNT(DISTINCT `hero_id`) FROM `hero_power` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Super Strength'
SELECT COUNT(*) FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Super Strength' AND `superhero`.`height_cm` > 200
SELECT `s`.`full_name` FROM `superhero` AS `s` JOIN `hero_power` AS `hp` ON `s`.`id` = `hp`.`hero_id` GROUP BY `s`.`id` HAVING COUNT(`hp`.`power_id`) > 15
SELECT COUNT(*) FROM `superhero` WHERE `eye_colour_id` = (SELECT `id` FROM `colour` WHERE `colour` = 'Blue')
SELECT `colour`.`colour` FROM `superhero` JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` WHERE `superhero`.`superhero_name` = 'Apocalypse'
SELECT COUNT(DISTINCT `superhero`.`id`) FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `colour`.`colour` = 'Blue' AND `superpower`.`power_name` = 'Agility'
SELECT `s`.`superhero_name` FROM `superhero` AS `s` JOIN `colour` AS `ec` ON `s`.`eye_colour_id` = `ec`.`id` JOIN `colour` AS `hc` ON `s`.`hair_colour_id` = `hc`.`id` WHERE `ec`.`colour` = 'Blue' AND `hc`.`colour` = 'Blond'
SELECT COUNT(*) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics'
SELECT `superhero_name` FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics' ORDER BY `superhero`.`height_cm` DESC
SELECT `publisher`.`publisher_name` FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`superhero_name` = 'Sauron'
SELECT `colour`.`colour`, COUNT(`superhero`.`id`) AS `count` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics' GROUP BY `colour`.`colour` ORDER BY `count` DESC;
SELECT AVG(`height_cm`) FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics'
SELECT `s`.`superhero_name` FROM `superhero` AS `s` JOIN `publisher` AS `p` ON `s`.`publisher_id` = `p`.`id` JOIN `hero_power` AS `hp` ON `s`.`id` = `hp`.`hero_id` JOIN `superpower` AS `sp` ON `hp`.`power_id` = `sp`.`id` WHERE `p`.`publisher_name` = 'Marvel Comics' AND `sp`.`power_name` = 'Super Strength'
SELECT COUNT(*) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'DC Comics'
SELECT `publisher`.`publisher_name` FROM `superhero` JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `attribute`.`attribute_name` = 'Speed' ORDER BY `hero_attribute`.`attribute_value` ASC LIMIT 1;
SELECT COUNT(*) FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `colour`.`colour` = 'Gold' AND `publisher`.`publisher_name` = 'Marvel Comics'
SELECT `publisher`.`publisher_name` FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`superhero_name` = 'Blue Beetle II'
SELECT COUNT(*) FROM `superhero` WHERE `hair_colour_id` = (SELECT `id` FROM `colour` WHERE `colour` = 'Blond')
SELECT `s`.`superhero_name` FROM `superhero` AS `s` JOIN `hero_attribute` AS `ha` ON `s`.`id` = `ha`.`hero_id` JOIN `attribute` AS `a` ON `ha`.`attribute_id` = `a`.`id` WHERE `a`.`attribute_name` = 'Intelligence' ORDER BY `ha`.`attribute_value` ASC LIMIT 1
SELECT `race`.`race` FROM `superhero` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`superhero_name` = 'Copycat'
SELECT `s`.`superhero_name` FROM `superhero` AS `s` JOIN `hero_attribute` AS `ha` ON `s`.`id` = `ha`.`hero_id` JOIN `attribute` AS `a` ON `ha`.`attribute_id` = `a`.`id` WHERE `a`.`attribute_name` = 'Durability' AND `ha`.`attribute_value` < 50
SELECT `superhero`.`superhero_name` FROM `superhero` JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Death Touch'
SELECT COUNT(*) FROM `superhero` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `gender`.`gender` = 'Female' AND `attribute`.`attribute_name` = 'Strength' AND `hero_attribute`.`attribute_value` = 100
SELECT `s`.`superhero_name` FROM `superhero` AS `s` JOIN `hero_power` AS `hp` ON `s`.`id` = `hp`.`hero_id` GROUP BY `s`.`id` ORDER BY COUNT(`hp`.`power_id`) DESC LIMIT 1
SELECT COUNT(*) FROM `superhero` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Vampire'
SELECT ROUND(100.0 * SUM(CASE WHEN a.`alignment` = 'Bad' THEN 1 ELSE 0 END) / COUNT(s.`id`), 2) AS percentage_bad, SUM(CASE WHEN a.`alignment` = 'Bad' AND p.`publisher_name` = 'Marvel Comics' THEN 1 ELSE 0 END) AS marvel_bad_count FROM `superhero` s JOIN `alignment` a ON s.`alignment_id` = a.`id` JOIN `publisher` p ON s.`publisher_id` = p.`id`;
SELECT SUM(CASE WHEN `publisher_name` = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN `publisher_name` = 'DC Comics' THEN 1 ELSE 0 END) AS difference FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id`
SELECT `id` FROM `publisher` WHERE `publisher_name` = 'Star Trek'
SELECT AVG(`attribute_value`) FROM `hero_attribute`
SELECT COUNT(*) FROM `superhero` WHERE `full_name` IS NULL
SELECT `colour`.`colour` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`id` = 75
SELECT `sp`.`power_name` FROM `superpower` AS `sp` JOIN `hero_power` AS `hp` ON `sp`.`id` = `hp`.`power_id` JOIN `superhero` AS `sh` ON `hp`.`hero_id` = `sh`.`id` WHERE `sh`.`superhero_name` = 'Deathlok'
SELECT AVG(`weight_kg`) FROM `superhero` JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `gender`.`gender` = 'Female'
SELECT DISTINCT `sp`.`power_name` FROM `superpower` sp JOIN `hero_power` hp ON `sp`.`id` = `hp`.`power_id` JOIN `superhero` sh ON `hp`.`hero_id` = `sh`.`id` JOIN `gender` g ON `sh`.`gender_id` = `g`.`id` WHERE `g`.`gender` = 'Male' LIMIT 5
SELECT `superhero_name` FROM `superhero` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Alien'
SELECT `s`.`superhero_name` FROM `superhero` AS `s` JOIN `colour` AS `c` ON `s`.`eye_colour_id` = `c`.`id` WHERE `s`.`height_cm` BETWEEN 170 AND 190 AND `c`.`colour` = 'No Colour'
SELECT `power_name` FROM `superpower` INNER JOIN `hero_power` ON `superpower`.`id` = `hero_power`.`power_id` WHERE `hero_power`.`hero_id` = 56
SELECT `s`.`full_name` FROM `superhero` AS `s` JOIN `race` AS `r` ON `s`.`race_id` = `r`.`id` WHERE `r`.`race` = 'Demi-God' LIMIT 5
SELECT COUNT(*) FROM `superhero` WHERE `alignment_id` = (SELECT `id` FROM `alignment` WHERE `alignment` = 'Bad')
SELECT `race`.`race` FROM `superhero` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`weight_kg` = 169
SELECT `colour`.`colour` FROM `superhero` JOIN `race` ON `superhero`.`race_id` = `race`.`id` JOIN `colour` ON `superhero`.`hair_colour_id` = `colour`.`id` WHERE `superhero`.`height_cm` = 185 AND `race`.`race` = 'human'
SELECT `colour`.`colour` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` ORDER BY `superhero`.`weight_kg` DESC LIMIT 1
SELECT (SUM(CASE WHEN `publisher_name` = 'Marvel Comics' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `height_cm` BETWEEN 150 AND 180;
SELECT `s`.`superhero_name` FROM `superhero` AS `s` JOIN `gender` AS `g` ON `s`.`gender_id` = `g`.`id` WHERE `g`.`gender` = 'Male' AND `s`.`weight_kg` > (SELECT AVG(`weight_kg`) * 0.79 FROM `superhero`)
SELECT `power_name` FROM `superpower` WHERE `id` = (SELECT `power_id` FROM `hero_power` GROUP BY `power_id` ORDER BY COUNT(`hero_id`) DESC LIMIT 1)
SELECT `ha`.`attribute_value` FROM `hero_attribute` ha JOIN `superhero` s ON `ha`.`hero_id` = `s`.`id` WHERE `s`.`superhero_name` = 'Abomination'
SELECT `superpower`.`power_name` FROM `hero_power` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `hero_power`.`hero_id` = 1
SELECT COUNT(DISTINCT `hero_id`) FROM `hero_power` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'stealth'
SELECT `s`.`full_name` FROM `superhero` AS `s` JOIN `hero_attribute` AS `ha` ON `s`.`id` = `ha`.`hero_id` JOIN `attribute` AS `a` ON `ha`.`attribute_id` = `a`.`id` WHERE `a`.`attribute_name` = 'strength' ORDER BY `ha`.`attribute_value` DESC LIMIT 1
SELECT COUNT(`superhero`.`id`) * 1.0 / SUM(`superhero`.`skin_colour_id` = 1) AS `average` FROM `superhero` WHERE `superhero`.`skin_colour_id` = 1
SELECT COUNT(*) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Dark Horse Comics'
SELECT `s`.`superhero_name` FROM `superhero` AS `s` JOIN `publisher` AS `p` ON `s`.`publisher_id` = `p`.`id` JOIN `hero_attribute` AS `ha` ON `s`.`id` = `ha`.`hero_id` JOIN `attribute` AS `a` ON `ha`.`attribute_id` = `a`.`id` WHERE `p`.`publisher_name` = 'Dark Horse Comics' AND `a`.`attribute_name` = 'durability' ORDER BY `ha`.`attribute_value` DESC LIMIT 1;
SELECT `colour`.`colour` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`full_name` = 'Abraham Sapien'
SELECT `s`.`superhero_name` FROM `superhero` AS `s` JOIN `hero_power` AS `hp` ON `s`.`id` = `hp`.`hero_id` JOIN `superpower` AS `sp` ON `hp`.`power_id` = `sp`.`id` WHERE `sp`.`power_name` = 'Flight'
SELECT ec.`colour` AS eyes, hc.`colour` AS hair, sc.`colour` AS skin FROM `superhero` s JOIN `gender` g ON s.`gender_id` = g.`id` JOIN `publisher` p ON s.`publisher_id` = p.`id` JOIN `colour` ec ON s.`eye_colour_id` = ec.`id` JOIN `colour` hc ON s.`hair_colour_id` = hc.`id` JOIN `colour` sc ON s.`skin_colour_id` = sc.`id` WHERE g.`gender` = 'Female' AND p.`publisher_name` = 'Dark Horse Comics'
SELECT s.`superhero_name`, p.`publisher_name` FROM `superhero` s JOIN `publisher` p ON s.`publisher_id` = p.`id` WHERE s.`hair_colour_id` = s.`skin_colour_id` AND s.`hair_colour_id` = s.`eye_colour_id`
SELECT `race`.`race` FROM `superhero` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`superhero_name` = 'A-Bomb'
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM `superhero` WHERE `gender_id` = (SELECT `id` FROM `gender` WHERE `gender` = 'Female'))) AS percentage FROM `superhero` WHERE `gender_id` = (SELECT `id` FROM `gender` WHERE `gender` = 'Female') AND `skin_colour_id` = (SELECT `id` FROM `colour` WHERE `colour` = 'Blue')
SELECT `superhero`.`superhero_name`, `race`.`race` FROM `superhero` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`full_name` = 'Charles Chandler'
SELECT `gender`.`gender` FROM `superhero` JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `superhero`.`superhero_name` = 'Agent 13'
SELECT `s`.`superhero_name` FROM `superhero` AS `s` JOIN `hero_power` AS `hp` ON `s`.`id` = `hp`.`hero_id` JOIN `superpower` AS `sp` ON `hp`.`power_id` = `sp`.`id` WHERE `sp`.`power_name` = 'Adaptation'
SELECT COUNT(*) FROM `hero_power` JOIN `superhero` ON `hero_power`.`hero_id` = `superhero`.`id` WHERE `superhero`.`superhero_name` = 'Amazo'
SELECT `sp`.`power_name` FROM `superpower` AS `sp` JOIN `hero_power` AS `hp` ON `sp`.`id` = `hp`.`power_id` JOIN `superhero` AS `sh` ON `hp`.`hero_id` = `sh`.`id` WHERE `sh`.`full_name` = 'Hunter Zolomon'
SELECT `height_cm` FROM `superhero` WHERE `eye_colour_id` = (SELECT `id` FROM `colour` WHERE `colour` = 'Amber')
SELECT `s`.`superhero_name` FROM `superhero` AS `s` JOIN `colour` AS `c1` ON `s`.`eye_colour_id` = `c1`.`id` JOIN `colour` AS `c2` ON `s`.`hair_colour_id` = `c2`.`id` WHERE `c1`.`colour` = 'Black' AND `c2`.`colour` = 'Black'
SELECT DISTINCT `colour`.`colour` AS `eye_colour` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`skin_colour_id` = (SELECT `id` FROM `colour` WHERE `colour` = 'Gold')
SELECT `s`.`full_name` FROM `superhero` AS `s` JOIN `race` AS `r` ON `s`.`race_id` = `r`.`id` WHERE `r`.`race` = 'Vampire'
SELECT `superhero_name` FROM `superhero` JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `alignment`.`alignment` = 'Neutral'
SELECT COUNT(DISTINCT `hero_id`) FROM `hero_attribute` WHERE `attribute_id` = (SELECT `id` FROM `attribute` WHERE `attribute_name` = 'Strength') AND `attribute_value` = (SELECT MAX(`attribute_value`) FROM `hero_attribute` WHERE `attribute_id` = (SELECT `id` FROM `attribute` WHERE `attribute_name` = 'Strength'))
SELECT `race`.`race`, `alignment`.`alignment` FROM `superhero` JOIN `race` ON `superhero`.`race_id` = `race`.`id` JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `superhero`.`superhero_name` = 'Cameron Hicks'
SELECT 100.0 * (SELECT COUNT(*) FROM `superhero` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `gender`.`gender` = 'Female' AND `publisher`.`publisher_name` = 'Marvel Comics') / (SELECT COUNT(*) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics') AS percent_female_marvel_heroes;
SELECT AVG(`weight_kg`) FROM `superhero` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Alien'
SELECT (SELECT SUM(`weight_kg`) FROM `superhero` WHERE `full_name` = 'Emil Blonsky') - (SELECT SUM(`weight_kg`) FROM `superhero` WHERE `full_name` = 'Charles Chandler') AS `difference`
SELECT `superhero_name`, AVG(`height_cm`) AS `average_height` FROM `superhero` GROUP BY `superhero_name`
SELECT `superpower`.`power_name` FROM `superpower` JOIN `hero_power` ON `superpower`.`id` = `hero_power`.`power_id` JOIN `superhero` ON `hero_power`.`hero_id` = `superhero`.`id` WHERE `superhero`.`superhero_name` = 'Abomination'
SELECT COUNT(*) FROM `superhero` WHERE `race_id` = 21 AND `gender_id` = 1
SELECT `s`.`superhero_name` FROM `superhero` AS `s` JOIN `hero_attribute` AS `ha` ON `s`.`id` = `ha`.`hero_id` JOIN `attribute` AS `a` ON `ha`.`attribute_id` = `a`.`id` WHERE `a`.`attribute_name` = 'Speed' ORDER BY `ha`.`attribute_value` DESC LIMIT 1
SELECT COUNT(*) FROM `superhero` WHERE `alignment_id` = 3
SELECT `attribute`.`attribute_name`, `hero_attribute`.`attribute_value` FROM `hero_attribute` JOIN `superhero` ON `hero_attribute`.`hero_id` = `superhero`.`id` JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `superhero`.`superhero_name` = '3-D Man'
SELECT `s`.`superhero_name` FROM `superhero` AS `s` JOIN `colour` AS `ec` ON `s`.`eye_colour_id` = `ec`.`id` JOIN `colour` AS `hc` ON `s`.`hair_colour_id` = `hc`.`id` WHERE `ec`.`colour` = 'Blue' AND `hc`.`colour` = 'Brown'
SELECT DISTINCT `p`.`publisher_name` FROM `superhero` AS `s` JOIN `publisher` AS `p` ON `s`.`publisher_id` = `p`.`id` WHERE `s`.`superhero_name` IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT COUNT(*) FROM `superhero` WHERE `publisher_id` IS NULL
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM `superhero`)) AS percentage FROM `superhero` WHERE `eye_colour_id` = 7
SELECT CAST(SUM(CASE WHEN `gender_id` = 2 THEN 1 ELSE 0 END) AS FLOAT) / SUM(CASE WHEN `gender_id` = 1 THEN 1 ELSE 0 END) AS ratio FROM `superhero`
SELECT `superhero_name` FROM `superhero` WHERE `height_cm` = (SELECT MAX(`height_cm`) FROM `superhero`)
SELECT `id` FROM `superpower` WHERE `power_name` = 'cryokinesis'
SELECT `superhero_name` FROM `superhero` WHERE `id` = 294
SELECT `full_name` FROM `superhero` WHERE `weight_kg` = 0 OR `weight_kg` IS NULL
SELECT `colour`.`colour` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`full_name` = 'Karen Beecher-Duncan'
SELECT `sp`.`power_name` FROM `superpower` AS `sp` JOIN `hero_power` AS `hp` ON `sp`.`id` = `hp`.`power_id` JOIN `superhero` AS `sh` ON `hp`.`hero_id` = `sh`.`id` WHERE `sh`.`full_name` = 'Helen Parr'
SELECT `race`.`race` FROM `superhero` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`weight_kg` = 108 AND `superhero`.`height_cm` = 188
SELECT `publisher_name` FROM `publisher` WHERE `id` = (SELECT `publisher_id` FROM `superhero` WHERE `id` = 38)
SELECT `race`.`race` FROM `superhero` JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `hero_attribute`.`attribute_value` = (SELECT MAX(`attribute_value`) FROM `hero_attribute`)
SELECT `a`.`alignment`, `sp`.`power_name` FROM `superhero` AS `s` JOIN `alignment` AS `a` ON `s`.`alignment_id` = `a`.`id` JOIN `hero_power` AS `hp` ON `s`.`id` = `hp`.`hero_id` JOIN `superpower` AS `sp` ON `hp`.`power_id` = `sp`.`id` WHERE `s`.`superhero_name` = 'Atom IV'
SELECT `full_name` FROM `superhero` WHERE `eye_colour_id` = (SELECT `id` FROM `colour` WHERE `colour` = 'Blue') LIMIT 5
SELECT AVG(`ha`.`attribute_value`) AS `average` FROM `hero_attribute` AS `ha` JOIN `superhero` AS `s` ON `ha`.`hero_id` = `s`.`id` WHERE `s`.`alignment_id` = 3
SELECT DISTINCT `colour`.`colour` FROM `superhero` JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` WHERE `hero_attribute`.`attribute_value` = 100
SELECT COUNT(*) FROM `superhero` WHERE `alignment_id` = 1 AND `gender_id` = 2;
SELECT `superhero`.`superhero_name` FROM `superhero` JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` WHERE `hero_attribute`.`attribute_value` BETWEEN 75 AND 80
SELECT `race`.`race` FROM `superhero` JOIN `colour` ON `superhero`.`hair_colour_id` = `colour`.`id` JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `colour`.`colour` = 'blue' AND `gender`.`gender` = 'male'
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM `superhero` WHERE `alignment_id` = 2)) AS percentage FROM `superhero` WHERE `alignment_id` = 2 AND `gender_id` = 2;
SELECT (SUM(CASE WHEN `eye_colour_id` = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN `eye_colour_id` = 1 THEN 1 ELSE 0 END)) AS `difference` FROM `superhero` WHERE `weight_kg` = 0 OR `weight_kg` IS NULL;
SELECT `ha`.`attribute_value` FROM `hero_attribute` ha JOIN `superhero` s ON `ha`.`hero_id` = `s`.`id` JOIN `attribute` a ON `ha`.`attribute_id` = `a`.`id` WHERE `s`.`superhero_name` = 'Hulk' AND `a`.`attribute_name` = 'Strength'
SELECT `sp`.`power_name` FROM `superpower` AS `sp` JOIN `hero_power` AS `hp` ON `sp`.`id` = `hp`.`power_id` JOIN `superhero` AS `sh` ON `hp`.`hero_id` = `sh`.`id` WHERE `sh`.`superhero_name` = 'Ajax'
SELECT COUNT(*) FROM `superhero` JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `colour`.`colour` = 'Green' AND `alignment`.`alignment` = 'Bad';
SELECT COUNT(*) FROM `superhero` JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `gender`.`gender` = 'Female' AND `publisher`.`publisher_name` = 'Marvel Comics'
SELECT `s`.`superhero_name` FROM `superhero` AS `s` JOIN `hero_power` AS `hp` ON `s`.`id` = `hp`.`hero_id` JOIN `superpower` AS `sp` ON `hp`.`power_id` = `sp`.`id` WHERE `sp`.`power_name` = 'Wind Control' ORDER BY `s`.`superhero_name` ASC
SELECT `gender`.`gender` FROM `superhero` JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `superpower`.`power_name` = 'Phoenix Force'
SELECT `superhero_name` FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'DC Comics' ORDER BY `weight_kg` DESC LIMIT 1
SELECT AVG(`s`.`height_cm`) AS `average_height` FROM `superhero` AS `s` JOIN `race` AS `r` ON `s`.`race_id` = `r`.`id` JOIN `publisher` AS `p` ON `s`.`publisher_id` = `p`.`id` WHERE `r`.`race` <> 'Human' AND `p`.`publisher_name` = 'Dark Horse Comics';
SELECT COUNT(DISTINCT `hero_id`) FROM `hero_attribute` JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Speed' AND `hero_attribute`.`attribute_value` = 100;
SELECT (dc_count - marvel_count) AS difference FROM (SELECT COUNT(*) AS dc_count FROM `superhero` s JOIN `publisher` p ON s.`publisher_id` = p.`id` WHERE p.`publisher_name` = 'DC Comics'), (SELECT COUNT(*) AS marvel_count FROM `superhero` s JOIN `publisher` p ON s.`publisher_id` = p.`id` WHERE p.`publisher_name` = 'Marvel Comics')
SELECT `attribute_name` FROM `attribute` WHERE `id` = (SELECT `attribute_id` FROM `hero_attribute` WHERE `hero_id` = (SELECT `id` FROM `superhero` WHERE `superhero_name` = 'Black Panther') ORDER BY `attribute_value` ASC LIMIT 1)
SELECT `colour`.`colour` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`superhero_name` = 'Abomination'
SELECT `superhero_name` FROM `superhero` WHERE `height_cm` = (SELECT MAX(`height_cm`) FROM `superhero`)
SELECT `superhero_name` FROM `superhero` WHERE `full_name` = 'Charles Chandler'
SELECT 100.0 * SUM(g.gender = 'Female') / COUNT(*) AS female_percentage FROM `superhero` s JOIN `gender` g ON s.`gender_id` = g.`id` JOIN `publisher` p ON s.`publisher_id` = p.`id` WHERE p.`publisher_name` = 'George Lucas';
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM `superhero` WHERE `publisher_id` = (SELECT `id` FROM `publisher` WHERE `publisher_name` = 'Marvel Comics'))) AS percentage FROM `superhero` WHERE `alignment_id` = (SELECT `id` FROM `alignment` WHERE `alignment` = 'Good') AND `publisher_id` = (SELECT `id` FROM `publisher` WHERE `publisher_name` = 'Marvel Comics')
SELECT COUNT(*) FROM `superhero` WHERE `full_name` LIKE 'John%';
SELECT `hero_id` FROM `hero_attribute` ORDER BY `attribute_value` ASC LIMIT 1
SELECT `full_name` FROM `superhero` WHERE `superhero_name` = 'Alien'
SELECT `s`.`full_name` FROM `superhero` AS `s` JOIN `colour` AS `c` ON `s`.`eye_colour_id` = `c`.`id` WHERE `s`.`weight_kg` < 100 AND `c`.`colour` = 'brown'
SELECT `ha`.`attribute_value` FROM `hero_attribute` ha JOIN `superhero` s ON `ha`.`hero_id` = `s`.`id` WHERE `s`.`superhero_name` = 'Aquababy'
SELECT `weight_kg`, (SELECT `race` FROM `race` WHERE `id` = `race_id`) AS `race` FROM `superhero` WHERE `id` = 40
SELECT AVG(`height_cm`) FROM `superhero` JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `alignment`.`alignment` = 'neutral'
SELECT DISTINCT `hero_id` FROM `hero_power` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Intelligence'
SELECT `colour`.`colour` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`superhero_name` = 'Blackwulf'
SELECT DISTINCT `sp`.`power_name` FROM `superhero` AS `sh` JOIN `hero_power` AS `hp` ON `sh`.`id` = `hp`.`hero_id` JOIN `superpower` AS `sp` ON `hp`.`power_id` = `sp`.`id` WHERE `sh`.`height_cm` > (SELECT AVG(`height_cm`) * 0.8 FROM `superhero`)
SELECT `d`.`driverRef` FROM `qualifying` q JOIN `drivers` d ON `q`.`driverId` = `d`.`driverId` WHERE `q`.`raceId` = 20 ORDER BY `q`.`q1` DESC LIMIT 5
SELECT `d`.`surname` FROM `qualifying` q JOIN `drivers` d ON `q`.`driverId` = `d`.`driverId` WHERE `q`.`raceId` = 19 AND `q`.`q2` = (SELECT MIN(`q2`) FROM `qualifying` WHERE `raceId` = 19)
SELECT DISTINCT `year` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`location` = 'Shanghai'
SELECT DISTINCT `races`.`url` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Circuit de Barcelona-Catalunya'
SELECT DISTINCT `races`.`name` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'Germany'
SELECT DISTINCT `circuits`.`location` FROM `circuits` JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` JOIN `results` ON `races`.`raceId` = `results`.`raceId` JOIN `constructors` ON `results`.`constructorId` = `constructors`.`constructorId` WHERE `constructors`.`name` = 'Renault'
SELECT COUNT(*) FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`year` = 2010 AND `circuits`.`country` NOT IN ('Asia', 'Europe')
SELECT DISTINCT `races`.`name` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'Spain'
SELECT `circuits`.`lat`, `circuits`.`lng` FROM `circuits` JOIN `races` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`name` = 'Australian Grand Prix'
SELECT `races`.`url` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Sepang International Circuit'
SELECT `races`.`time` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Sepang International Circuit';
SELECT `circuits`.`lat`, `circuits`.`lng` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`name` = 'Abu Dhabi Grand Prix'
SELECT `country` FROM `constructors` WHERE `constructorId` = (SELECT `constructorId` FROM `constructorResults` WHERE `raceId` = 24 AND `points` = 1)
SELECT `q1` FROM `qualifying` JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Bruno' AND `drivers`.`surname` = 'Senna' AND `qualifying`.`raceId` = 354
SELECT `d`.`nationality` FROM `qualifying` q JOIN `drivers` d ON `q`.`driverId` = `d`.`driverId` WHERE `q`.`raceId` = 355 AND `q`.`q2` = '0:01:40'
SELECT `number` FROM `qualifying` WHERE `raceId` = 903 AND `q3` LIKE '0:01:54%'
SELECT COUNT(*) FROM `results` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`name` = 'Bahrain Grand Prix' AND `races`.`year` = 2007 AND `results`.`time` IS NULL;
SELECT `seasons`.`url` FROM `seasons` JOIN `races` ON `seasons`.`year` = `races`.`year` WHERE `races`.`raceId` = 901
SELECT COUNT(DISTINCT `driverId`) FROM `results` WHERE `raceId` = (SELECT `raceId` FROM `races` WHERE `date` = '2015-11-29') AND `statusId` = (SELECT `statusId` FROM `status` WHERE `status` = 'Finished')
SELECT `d`.`forename`, `d`.`surname`, `d`.`dob` FROM `results` r JOIN `drivers` d ON `r`.`driverId` = `d`.`driverId` WHERE `r`.`raceId` = 592 AND `r`.`time` IS NOT NULL ORDER BY `d`.`dob` ASC LIMIT 1
SELECT `drivers`.`url` FROM `lapTimes` JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` WHERE `lapTimes`.`raceId` = 161 AND `lapTimes`.`time` LIKE '1:27%';
SELECT d.nationality FROM `results` r JOIN `drivers` d ON r.driverId = d.driverId WHERE r.raceId = 933 ORDER BY r.fastestLapSpeed DESC LIMIT 1
SELECT `circuits`.`lat`, `circuits`.`lng` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`name` = 'Malaysian Grand Prix'
SELECT `constructors`.`url` FROM `constructorResults` JOIN `constructors` ON `constructorResults`.`constructorId` = `constructors`.`constructorId` WHERE `constructorResults`.`raceId` = 9 ORDER BY `constructorResults`.`points` DESC LIMIT 1;
SELECT `q1` FROM `qualifying` JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Lucas' AND `drivers`.`surname` = 'di Grassi' AND `qualifying`.`raceId` = 345
SELECT `d`.`nationality` FROM `qualifying` q JOIN `drivers` d ON `q`.`driverId` = `d`.`driverId` WHERE `q`.`raceId` = 347 AND `q`.`q2` = '0:01:15'
SELECT `d`.`code` FROM `qualifying` q JOIN `drivers` d ON `q`.`driverId` = `d`.`driverId` WHERE `q`.`raceId` = 45 AND `q`.`q3` = '0:01:33'
SELECT `time` FROM `results` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Bruce' AND `drivers`.`surname` = 'McLaren' AND `results`.`raceId` = 743
SELECT d.`forename`, d.`surname` FROM `results` r JOIN `races` ra ON r.`raceId` = ra.`raceId` JOIN `drivers` d ON r.`driverId` = d.`driverId` WHERE ra.`name` = 'San Marino Grand Prix' AND ra.`year` = 2006 AND r.`position` = 2
SELECT `seasons`.`url` FROM `seasons` JOIN `races` ON `seasons`.`year` = `races`.`year` WHERE `races`.`raceId` = 901
SELECT COUNT(DISTINCT `driverId`) FROM `results` WHERE `raceId` = (SELECT `raceId` FROM `races` WHERE `date` = '2015-11-29') AND `statusId` != (SELECT `statusId` FROM `status` WHERE `status` = 'Finished')
SELECT `d`.`forename`, `d`.`surname` FROM `drivers` d JOIN `results` r ON `d`.`driverId` = `r`.`driverId` WHERE `r`.`raceId` = 872 AND `r`.`time` IS NOT NULL ORDER BY `d`.`dob` DESC LIMIT 1
SELECT `forename` || ' ' || `surname` AS `full_name` FROM `drivers` WHERE `driverId` = (SELECT `driverId` FROM `lapTimes` WHERE `raceId` = 348 ORDER BY `milliseconds` LIMIT 1)
SELECT d.`nationality` FROM `results` r JOIN `drivers` d ON r.`driverId` = d.`driverId` WHERE r.`fastestLapSpeed` = (SELECT MAX(`fastestLapSpeed`) FROM `results`)
SELECT (r1.`fastestLapSpeed` - r2.`fastestLapSpeed`) * 100.0 / r1.`fastestLapSpeed` AS `percentage` FROM `results` r1 JOIN `drivers` d ON r1.`driverId` = d.`driverId` JOIN `results` r2 ON r2.`driverId` = d.`driverId` AND r2.`raceId` = 854 WHERE d.`forename` = 'Paul' AND d.`surname` = 'di Resta' AND r1.`raceId` = 853;
SELECT (COUNT(`driverId`) FILTER(WHERE `time` IS NOT NULL) * 1.0 / COUNT(`driverId`)) * 100 AS `completion_rate` FROM `results` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`date` = '1983-07-16'
SELECT MIN(`year`) FROM `races` WHERE `name` = 'Singapore Grand Prix'
SELECT `name` FROM `races` WHERE `year` = 2005 ORDER BY `name` DESC
SELECT `races`.`name` FROM `races` WHERE strftime('%Y-%m', `date`) = (SELECT strftime('%Y-%m', MIN(`date`)) FROM `races`);
SELECT `name`, `date` FROM `races` WHERE `year` = 1999 AND `round` = (SELECT MAX(`round`) FROM `races` WHERE `year` = 1999)
SELECT `year` FROM `races` GROUP BY `year` ORDER BY COUNT(`round`) DESC LIMIT 1
SELECT DISTINCT r1.`name` FROM `races` r1 WHERE r1.`year` = 2017 AND r1.`name` NOT IN (SELECT r2.`name` FROM `races` r2 WHERE r2.`year` = 2000)
SELECT `circuits`.`country`, `circuits`.`name`, `circuits`.`location` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`year` = (SELECT MIN(`year`) FROM `races` WHERE `name` LIKE '%European Grand Prix%') AND `races`.`name` LIKE '%European Grand Prix%'
SELECT MAX(`year`) FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Brands Hatch' AND `races`.`name` = 'British Grand Prix';
SELECT COUNT(DISTINCT `year`) FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Silverstone Circuit' AND `races`.`name` = 'British Grand Prix'
SELECT d.`forename`, d.`surname` FROM `results` r JOIN `races` ra ON r.`raceId` = ra.`raceId` JOIN `drivers` d ON r.`driverId` = d.`driverId` WHERE ra.`year` = 2010 AND ra.`name` = 'Singapore Grand Prix' ORDER BY r.`positionOrder`
SELECT `drivers`.`forename`, `drivers`.`surname`, MAX(`driverStandings`.`points`) AS `points` FROM `driverStandings` JOIN `drivers` ON `driverStandings`.`driverId` = `drivers`.`driverId` GROUP BY `drivers`.`driverId` ORDER BY `points` DESC LIMIT 1;
SELECT d.`forename`, d.`surname`, r.`points` FROM `results` r JOIN `drivers` d ON r.`driverId` = d.`driverId` JOIN `races` ra ON r.`raceId` = ra.`raceId` WHERE ra.`year` = 2017 AND ra.`name` = 'Chinese Grand Prix' ORDER BY r.`points` DESC LIMIT 3
SELECT d.forename, d.surname, r.name, lt.time FROM lapTimes lt JOIN drivers d ON lt.driverId = d.driverId JOIN races r ON lt.raceId = r.raceId WHERE lt.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes)
SELECT AVG(`lapTimes`.`milliseconds`) AS `average_lap_time` FROM `lapTimes` JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' AND `races`.`name` = 'Malaysian Grand Prix' AND `races`.`year` = 2009
SELECT 100.0 * SUM(CASE WHEN `position` > 1 THEN 1 ELSE 0 END) / COUNT(*) AS percentage FROM `results` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`surname` = 'Hamilton' AND `races`.`year` >= 2010;
SELECT d.forename || ' ' || d.surname AS full_name, d.nationality, MAX(ds.points) AS max_points FROM `drivers` d JOIN `driverStandings` ds ON d.driverId = ds.driverId WHERE ds.wins = (SELECT MAX(wins) FROM `driverStandings`) GROUP BY d.driverId ORDER BY ds.points DESC LIMIT 1;
SELECT `forename`, `surname`, MAX(strftime('%Y', 'now') - strftime('%Y', `dob`)) AS `age` FROM `drivers` WHERE `nationality` = 'Japanese'
SELECT `c`.`name` FROM `circuits` c JOIN `races` r ON `c`.`circuitId` = `r`.`circuitId` WHERE `r`.`year` BETWEEN 1990 AND 2000 GROUP BY `c`.`circuitId` HAVING COUNT(`r`.`raceId`) = 4
SELECT c.`name` AS circuit_name, c.`location`, r.`name` AS race_name FROM `circuits` c JOIN `races` r ON c.`circuitId` = r.`circuitId` WHERE c.`country` = 'USA' AND r.`year` = 2006;
SELECT r.`name` AS race_name, c.`name` AS circuit_name, c.`location` FROM `races` r JOIN `circuits` c ON r.`circuitId` = c.`circuitId` WHERE strftime('%m', r.`date`) = '09' AND strftime('%Y', r.`date`) = '2005'
SELECT DISTINCT `races`.`name` FROM `races` JOIN `results` ON `races`.`raceId` = `results`.`raceId` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Alex' AND `drivers`.`surname` = 'Yoong' AND `results`.`position` < 20;
SELECT COUNT(*) AS wins FROM `results` JOIN `races` ON `results`.`raceId` = `races`.`raceId` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `drivers`.`forename` = 'Michael' AND `drivers`.`surname` = 'Schumacher' AND `circuits`.`name` = 'Sepang International Circuit' AND `results`.`positionOrder` = 1;
SELECT r.`name`, r.`year` FROM `races` r JOIN `lapTimes` lt ON r.`raceId` = lt.`raceId` JOIN `drivers` d ON lt.`driverId` = d.`driverId` WHERE d.`forename` = 'Michael' AND d.`surname` = 'Schumacher' ORDER BY lt.`milliseconds` ASC LIMIT 1;
SELECT AVG(`points`) AS `average_points` FROM `results` JOIN `races` ON `results`.`raceId` = `races`.`raceId` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Eddie' AND `drivers`.`surname` = 'Irvine' AND `races`.`year` = 2000
SELECT r.`name`, r.`date`, r.`year`, res.`points` FROM `races` r JOIN `results` res ON r.`raceId` = res.`raceId` JOIN `drivers` d ON res.`driverId` = d.`driverId` WHERE d.`forename` = 'Lewis' AND d.`surname` = 'Hamilton' ORDER BY r.`year`, r.`date` LIMIT 1
SELECT `r`.`name`, `c`.`country`, `r`.`date` FROM `races` AS `r` JOIN `circuits` AS `c` ON `r`.`circuitId` = `c`.`circuitId` WHERE `r`.`year` = 2017 ORDER BY `r`.`date`
SELECT r.name, r.year, c.location FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE r.raceId IN (SELECT raceId FROM results GROUP BY raceId ORDER BY SUM(laps) DESC LIMIT 1)
SELECT (COUNT(CASE WHEN `circuits`.`country` = 'Germany' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`name` = 'European Grand Prix';
SELECT `lat`, `lng` FROM `circuits` WHERE `name` = 'Silverstone Circuit'
SELECT `name` FROM `circuits` WHERE `name` IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY `lat` DESC LIMIT 1
SELECT `circuitRef` FROM `circuits` WHERE `name` = 'Marina Bay Street Circuit'
SELECT `country` FROM `circuits` WHERE `alt` = (SELECT MAX(`alt`) FROM `circuits`)
SELECT COUNT(*) FROM `drivers` WHERE `code` IS NULL
SELECT `country` FROM `drivers` ORDER BY `dob` ASC LIMIT 1
SELECT `surname` FROM `drivers` WHERE `nationality` = 'Italian'
SELECT `url` FROM `drivers` WHERE `forename` = 'Anthony' AND `surname` = 'Davidson'
SELECT `driverRef` FROM `drivers` WHERE `forename` = 'Lewis' AND `surname` = 'Hamilton'
SELECT `circuits`.`name` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`year` = 2009 AND `races`.`name` = 'Spanish Grand Prix'
SELECT DISTINCT `races`.`year` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Silverstone Circuit'
SELECT `races`.* FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Silverstone Circuit'
SELECT `r`.`time` FROM `races` AS `r` JOIN `circuits` AS `c` ON `r`.`circuitId` = `c`.`circuitId` WHERE `r`.`year` = 2010 AND `c`.`name` = 'Abu Dhabi Circuit'
SELECT COUNT(*) FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'Italy'
SELECT DISTINCT `date` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Barcelona-Catalunya'
SELECT `circuits`.`url` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`name` = 'Spanish Grand Prix' AND `races`.`year` = 2009
SELECT MIN(`fastestLapTime`) AS `fastest_lap_time` FROM `results` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT d.`forename`, d.`surname` FROM `results` r JOIN `drivers` d ON r.`driverId` = d.`driverId` ORDER BY r.`fastestLapSpeed` DESC LIMIT 1
SELECT d.`driverRef` FROM `results` r JOIN `races` ra ON r.`raceId` = ra.`raceId` JOIN `drivers` d ON r.`driverId` = d.`driverId` WHERE ra.`name` = 'Canadian Grand Prix' AND ra.`year` = 2007 AND r.`positionOrder` = 1
SELECT DISTINCT `races`.`name` FROM `races` JOIN `results` ON `races`.`raceId` = `results`.`raceId` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT `races`.`name` FROM `results` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' ORDER BY `results`.`rank` ASC LIMIT 1
SELECT MAX(`fastestLapSpeed`) FROM `results` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`name` = 'Spanish Grand Prix' AND `races`.`year` = 2009
SELECT DISTINCT `races`.`year` FROM `races` JOIN `results` ON `races`.`raceId` = `results`.`raceId` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT `r`.`positionOrder` FROM `results` AS `r` JOIN `drivers` AS `d` ON `r`.`driverId` = `d`.`driverId` JOIN `races` AS `ra` ON `r`.`raceId` = `ra`.`raceId` WHERE `d`.`forename` = 'Lewis' AND `d`.`surname` = 'Hamilton' AND `ra`.`name` = 'Chinese Grand Prix' AND `ra`.`year` = 2008
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `results` JOIN `races` ON `results`.`raceId` = `races`.`raceId` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `races`.`year` = 1989 AND `races`.`name` = 'Australian Grand Prix' AND `results`.`grid` = 4
SELECT COUNT(DISTINCT `driverId`) FROM `results` WHERE `raceId` = (SELECT `raceId` FROM `races` WHERE `year` = 2008 AND `name` = 'Australian Grand Prix') AND `time` IS NOT NULL
SELECT `lapTimes`.`lap`, `lapTimes`.`time` FROM `lapTimes` JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' AND `races`.`year` = 2008 AND `races`.`name` = 'Australian Grand Prix' ORDER BY `lapTimes`.`milliseconds` ASC LIMIT 1
SELECT r.`time` FROM `results` r JOIN `races` ra ON r.`raceId` = ra.`raceId` WHERE ra.`year` = 2008 AND ra.`name` = 'Chinese Grand Prix' AND r.`positionOrder` = 2
SELECT d.`forename`, d.`surname`, d.`url` FROM `results` r JOIN `races` ra ON r.`raceId` = ra.`raceId` JOIN `drivers` d ON r.`driverId` = d.`driverId` WHERE ra.`year` = 2008 AND ra.`name` = 'Australian Grand Prix' AND r.`positionOrder` = 1
SELECT COUNT(DISTINCT `drivers`.`driverId`) FROM `drivers` JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`nationality` = 'British' AND `races`.`year` = 2008 AND `races`.`name` = 'Australian Grand Prix'
SELECT COUNT(DISTINCT `d`.`driverId`) FROM `results` r JOIN `drivers` d ON `r`.`driverId` = `d`.`driverId` JOIN `races` ra ON `r`.`raceId` = `ra`.`raceId` WHERE `ra`.`year` = 2008 AND `ra`.`name` = 'Chinese Grand Prix' AND `r`.`time` IS NOT NULL AND EXISTS (SELECT 1 FROM `results` r2 WHERE `r2`.`driverId` = `d`.`driverId` AND `r2`.`time` IS NOT NULL)
SELECT SUM(`points`) AS total_points FROM `results` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton';
SELECT AVG((CAST(SUBSTR(`fastestLapTime`, 1, 2) AS INTEGER) * 60) + CAST(SUBSTR(`fastestLapTime`, 4) AS REAL)) AS average_fastest_lap_time FROM `results` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' AND `fastestLapTime` IS NOT NULL;
SELECT (COUNT(CASE WHEN `time` IS NOT NULL THEN 1 END) * 1.0 / COUNT(*)) AS `rate` FROM `results` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`year` = 2008 AND `races`.`name` = 'Australian Grand Prix'
SELECT ((julianday('2000-01-01 ' || MIN(`time`)) - julianday('2000-01-01 ' || MAX(`time`))) / julianday('2000-01-01 ' || MAX(`time`))) * 100 AS faster_percentage FROM `results` WHERE `raceId` = (SELECT `raceId` FROM `races` WHERE `year` = 2008 AND `name` = 'Australian Grand Prix') AND `time` IS NOT NULL;
SELECT COUNT(*) FROM `circuits` WHERE `location` = 'Adelaide' AND `country` = 'Australia'
SELECT `lat`, `lng` FROM `circuits` WHERE `country` = 'USA'
SELECT COUNT(*) FROM `drivers` WHERE `nationality` = 'British' AND `dob` > '1980-12-31'
SELECT MAX(`points`) FROM `constructorResults` cr JOIN `constructors` c ON cr.`constructorId` = c.`constructorId` WHERE c.`nationality` = 'British'
SELECT `name` FROM `constructors` WHERE `constructorId` = (SELECT `constructorId` FROM `constructorStandings` ORDER BY `points` DESC LIMIT 1)
SELECT `constructors`.`name` FROM `constructorResults` JOIN `constructors` ON `constructorResults`.`constructorId` = `constructors`.`constructorId` WHERE `constructorResults`.`raceId` = 291 AND `constructorResults`.`points` = 0
SELECT COUNT(DISTINCT cr.constructorId) FROM constructorResults cr JOIN constructors c ON cr.constructorId = c.constructorId WHERE c.nationality = 'Japanese' AND cr.points = 0 GROUP BY cr.constructorId HAVING COUNT(DISTINCT cr.raceId) = 2
SELECT DISTINCT `c`.`name` FROM `constructors` c JOIN `constructorStandings` cs ON `c`.`constructorId` = `cs`.`constructorId` WHERE `cs`.`position` = 1
SELECT COUNT(DISTINCT `c`.`constructorId`) AS `FrenchConstructorsWithLapOver50` FROM `constructors` c JOIN `results` r ON `c`.`constructorId` = `r`.`constructorId` JOIN `lapTimes` l ON `r`.`raceId` = `l`.`raceId` AND `r`.`driverId` = `l`.`driverId` WHERE `c`.`nationality` = 'French' AND `l`.`lap` > 50;
SELECT (COUNT(DISTINCT r.`driverId`) * 100.0 / (SELECT COUNT(DISTINCT r2.`driverId`) FROM `results` r2 JOIN `races` ra2 ON r2.`raceId` = ra2.`raceId` JOIN `drivers` d2 ON r2.`driverId` = d2.`driverId` WHERE ra2.`year` BETWEEN 2007 AND 2009 AND d2.`nationality` = 'Japanese')) AS completion_percentage FROM `results` r JOIN `races` ra ON r.`raceId` = ra.`raceId` JOIN `drivers` d ON r.`driverId` = d.`driverId` WHERE ra.`year` BETWEEN 2007 AND 2009 AND d.`nationality` = 'Japanese' AND r.`time` IS NOT NULL;
SELECT `r`.`year`, AVG(CAST(SUBSTR(`res`.`time`, 1, 2) AS INTEGER) * 3600 + CAST(SUBSTR(`res`.`time`, 4, 2) AS INTEGER) * 60 + CAST(SUBSTR(`res`.`time`, 7) AS REAL)) AS `average_time_seconds` FROM `results` `res` JOIN `races` `r` ON `res`.`raceId` = `r`.`raceId` WHERE `res`.`positionOrder` = 1 AND `res`.`time` IS NOT NULL AND `r`.`year` < 1975 GROUP BY `r`.`year`
SELECT `d`.`forename`, `d`.`surname` FROM `drivers` d JOIN `driverStandings` ds ON `d`.`driverId` = `ds`.`driverId` WHERE `d`.`dob` > '1975-12-31' AND `ds`.`position` = 2
SELECT COUNT(DISTINCT `drivers`.`driverId`) FROM `drivers` JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` WHERE `drivers`.`nationality` = 'Italian' AND `results`.`time` IS NULL;
SELECT `d`.`forename`, `d`.`surname` FROM `drivers` d JOIN `lapTimes` l ON `d`.`driverId` = `l`.`driverId` ORDER BY `l`.`milliseconds` ASC LIMIT 1
SELECT `lapTimes`.`lap` FROM `lapTimes` JOIN `driverStandings` ON `lapTimes`.`raceId` = `driverStandings`.`raceId` AND `lapTimes`.`driverId` = `driverStandings`.`driverId` JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `races`.`year` = 2009 AND `driverStandings`.`position` = 1 ORDER BY `lapTimes`.`milliseconds` ASC LIMIT 1
SELECT AVG(`fastestLapSpeed`) FROM `results` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`name` = 'Spanish Grand Prix' AND `races`.`year` = 2009
SELECT `r`.`name`, `r`.`year` FROM `results` res JOIN `races` r ON res.`raceId` = r.`raceId` WHERE res.`milliseconds` IS NOT NULL ORDER BY res.`milliseconds` ASC LIMIT 1;
SELECT (COUNT(DISTINCT `r`.`driverId`) * 100.0 / (SELECT COUNT(DISTINCT `driverId`) FROM `results` WHERE `raceId` IN (SELECT `raceId` FROM `races` WHERE `year` BETWEEN 2000 AND 2005))) AS percentage FROM `results` r JOIN `drivers` d ON `r`.`driverId` = `d`.`driverId` WHERE `r`.`laps` > 50 AND strftime('%Y', `d`.`dob`) < '1985' AND `r`.`raceId` IN (SELECT `raceId` FROM `races` WHERE `year` BETWEEN 2000 AND 2005)
SELECT COUNT(DISTINCT `drivers`.`driverId`) FROM `drivers` JOIN `lapTimes` ON `drivers`.`driverId` = `lapTimes`.`driverId` WHERE `drivers`.`nationality` = 'French' AND `lapTimes`.`milliseconds` < 120000
SELECT `code` FROM `drivers` WHERE `nationality` = 'American'
SELECT `raceId` FROM `races` WHERE `year` = 2009
SELECT COUNT(DISTINCT `driverId`) FROM `results` WHERE `raceId` = 18
SELECT `code`, COUNT(CASE WHEN `nationality` = 'Dutch' THEN 1 END) AS `netherlandic_count` FROM (SELECT `code`, `dob`, `nationality` FROM `drivers` ORDER BY `dob` DESC LIMIT 3) AS `top3`
SELECT `driverRef` FROM `drivers` WHERE `forename` = 'Robert' AND `surname` = 'Kubica'
SELECT COUNT(*) FROM `drivers` WHERE `nationality` = 'British' AND strftime('%Y', `dob`) = '1980'
SELECT `d`.`forename`, `d`.`surname`, MIN(`lt`.`time`) AS `earliest_lap_time` FROM `drivers` d JOIN `lapTimes` lt ON `d`.`driverId` = `lt`.`driverId` WHERE `d`.`nationality` = 'German' AND `d`.`dob` BETWEEN '1980-01-01' AND '1990-12-31' GROUP BY `d`.`driverId` ORDER BY `earliest_lap_time` ASC LIMIT 3
SELECT `driverRef` FROM `drivers` WHERE `nationality` = 'German' ORDER BY `dob` ASC LIMIT 1
SELECT DISTINCT `drivers`.`driverId`, `drivers`.`code` FROM `drivers` JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` WHERE strftime('%Y', `drivers`.`dob`) = '1971' AND `results`.`fastestLapTime` IS NOT NULL
SELECT `d`.`forename`, `d`.`surname`, MAX(`lt`.`time`) AS `latest_lap_time` FROM `drivers` d JOIN `lapTimes` lt ON `d`.`driverId` = `lt`.`driverId` WHERE `d`.`dob` < '1982-01-01' AND `d`.`nationality` = 'Spanish' GROUP BY `d`.`driverId` ORDER BY `latest_lap_time` DESC LIMIT 10
SELECT `year` FROM `races` JOIN `results` ON `races`.`raceId` = `results`.`raceId` WHERE `fastestLapTime` IS NOT NULL ORDER BY `fastestLapTime` ASC LIMIT 1;
SELECT `year` FROM `races` JOIN `lapTimes` ON `races`.`raceId` = `lapTimes`.`raceId` ORDER BY `lapTimes`.`milliseconds` DESC LIMIT 1
SELECT `driverId` FROM `lapTimes` WHERE `lap` = 1 ORDER BY `milliseconds` ASC LIMIT 5
SELECT COUNT(*) FROM results WHERE `raceId` > 50 AND `raceId` < 100 AND `statusId` = 2 AND `time` IS NOT NULL;
SELECT `location`, `lat`, `lng`, COUNT(*) AS `times_held` FROM `circuits` WHERE `country` = 'Austria' GROUP BY `location`, `lat`, `lng`
SELECT `raceId` FROM `results` WHERE `time` IS NOT NULL GROUP BY `raceId` ORDER BY COUNT(*) DESC LIMIT 1;
SELECT d.`driverRef`, d.`nationality`, d.`dob` FROM `qualifying` q JOIN `drivers` d ON q.`driverId` = d.`driverId` WHERE q.`raceId` = 23 AND q.`q2` IS NOT NULL
SELECT `r`.`year`, `r`.`name`, `r`.`date`, `r`.`time` FROM `drivers` d JOIN `qualifying` q ON `d`.`driverId` = `q`.`driverId` JOIN `races` r ON `q`.`raceId` = `r`.`raceId` WHERE `d`.`dob` = (SELECT MAX(`dob`) FROM `drivers`) AND `r`.`date` = (SELECT MIN(`r2`.`date`) FROM `qualifying` q2 JOIN `races` r2 ON `q2`.`raceId` = `r2`.`raceId` WHERE `q2`.`driverId` = `d`.`driverId`)
SELECT COUNT(DISTINCT `drivers`.`driverId`) FROM `drivers` JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` JOIN `status` ON `results`.`statusId` = `status`.`statusId` WHERE `drivers`.`nationality` = 'American' AND `status`.`status` = 'Puncture'
SELECT `c`.`name`, `c`.`url` FROM `constructors` AS `c` JOIN `constructorResults` AS `cr` ON `c`.`constructorId` = `cr`.`constructorId` WHERE `c`.`nationality` = 'Italian' GROUP BY `c`.`constructorId` ORDER BY SUM(`cr`.`points`) DESC LIMIT 1;
SELECT `c`.`url` FROM `constructors` c JOIN (SELECT `constructorId`, SUM(`wins`) as total_wins FROM `constructorStandings` GROUP BY `constructorId` ORDER BY total_wins DESC LIMIT 1) cs ON `c`.`constructorId` = `cs`.`constructorId`
SELECT d.`forename`, d.`surname`, MAX(lt.`time`) AS slowest_time FROM `lapTimes` lt JOIN `races` r ON lt.`raceId` = r.`raceId` JOIN `drivers` d ON lt.`driverId` = d.`driverId` WHERE r.`name` = 'French Grand Prix' AND lt.`lap` = 3 GROUP BY d.`driverId` ORDER BY slowest_time DESC LIMIT 1;
SELECT `races`.`name`, MIN(`lapTimes`.`milliseconds`) AS `fastest_time` FROM `lapTimes` JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `lapTimes`.`lap` = 1 GROUP BY `races`.`raceId` ORDER BY `fastest_time` LIMIT 1;
SELECT AVG(CAST(`fastestLapTime` AS REAL)) AS avg_fastest_lap_time FROM `results` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`year` = 2006 AND `races`.`name` = 'United States Grand Prix' AND `results`.`positionOrder` < 11
SELECT `d`.`forename`, `d`.`surname`, AVG(`p`.`duration`) AS `avg_duration` FROM `drivers` d JOIN `pitStops` p ON `d`.`driverId` = `p`.`driverId` WHERE `d`.`nationality` = 'German' AND `d`.`dob` > '1980-01-01' AND `d`.`dob` < '1985-12-31' GROUP BY `d`.`driverId` ORDER BY `avg_duration` ASC LIMIT 3
SELECT d.`forename`, d.`surname`, r.`time` FROM `results` res JOIN `races` ra ON res.`raceId` = ra.`raceId` JOIN `drivers` d ON res.`driverId` = d.`driverId` WHERE ra.`name` = 'Canadian Grand Prix' AND ra.`year` = 2008 AND res.`positionOrder` = 1;
SELECT `constructors`.`constructorRef`, `constructors`.`url` FROM `results` JOIN `races` ON `results`.`raceId` = `races`.`raceId` JOIN `constructors` ON `results`.`constructorId` = `constructors`.`constructorId` WHERE `races`.`year` = 2009 AND `races`.`name` = 'Singapore Grand Prix' AND `results`.`positionOrder` = 1
SELECT `forename`, `surname`, `dob` FROM `drivers` WHERE `nationality` = 'Austrian' AND strftime('%Y', `dob`) BETWEEN '1981' AND '1991'
SELECT `forename` || ' ' || `surname` AS `full_name`, `url`, `dob` FROM `drivers` WHERE `nationality` = 'German' AND strftime('%Y', `dob`) BETWEEN '1971' AND '1985' ORDER BY `dob` DESC
SELECT `location`, `country`, `lat`, `lng` FROM `circuits` WHERE `name` = 'Hungaroring'
SELECT SUM(`cr`.`points`) AS `total_points`, `c`.`name`, `c`.`nationality` FROM `constructorResults` cr JOIN `races` r ON `cr`.`raceId` = `r`.`raceId` JOIN `constructors` c ON `cr`.`constructorId` = `c`.`constructorId` WHERE `r`.`name` = 'Monaco Grand Prix' AND `r`.`year` BETWEEN 1980 AND 2010 GROUP BY `cr`.`constructorId` ORDER BY `total_points` DESC LIMIT 1;
SELECT AVG(`r`.`points`) AS `average_score` FROM `results` r JOIN `races` ra ON `r`.`raceId` = `ra`.`raceId` JOIN `drivers` d ON `r`.`driverId` = `d`.`driverId` WHERE `d`.`forename` = 'Lewis' AND `d`.`surname` = 'Hamilton' AND `ra`.`name` = 'Turkish Grand Prix'
SELECT AVG(race_count) AS annual_average_races FROM (SELECT COUNT(`raceId`) AS race_count FROM `races` WHERE `date` BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY `year`)
SELECT `nationality` FROM `drivers` GROUP BY `nationality` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `wins` FROM `driverStandings` WHERE `position` = 91 LIMIT 1
SELECT `races`.`name` FROM `results` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `results`.`fastestLapTime` = (SELECT MIN(`fastestLapTime`) FROM `results`)
SELECT `location` || ', ' || `country` AS `full_location` FROM `circuits` WHERE `circuitId` = (SELECT `circuitId` FROM `races` WHERE `date` = (SELECT MAX(`date`) FROM `races`))
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `qualifying` JOIN `races` ON `qualifying`.`raceId` = `races`.`raceId` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `races`.`year` = 2008 AND `races`.`round` = 3 AND `circuits`.`name` = 'Marina Bay Street Circuit' AND `qualifying`.`position` = 1
SELECT d.forename || ' ' || d.surname AS full_name, d.nationality, r.name AS race_name FROM drivers d JOIN results res ON d.driverId = res.driverId JOIN races r ON res.raceId = r.raceId WHERE d.dob = (SELECT MAX(dob) FROM drivers) ORDER BY r.date ASC, r.time ASC LIMIT 1;
SELECT COUNT(*) FROM `results` WHERE `statusId` = 3 AND `raceId` = (SELECT `raceId` FROM `races` WHERE `name` = 'Canadian Grand Prix') AND `driverId` = (SELECT `driverId` FROM `results` WHERE `statusId` = 3 AND `raceId` = (SELECT `raceId` FROM `races` WHERE `name` = 'Canadian Grand Prix') GROUP BY `driverId` ORDER BY COUNT(*) DESC LIMIT 1)
SELECT d.forename || ' ' || d.surname AS full_name, SUM(ds.wins) AS total_wins FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId WHERE d.dob = (SELECT MIN(dob) FROM drivers) GROUP BY d.driverId
SELECT MAX(`duration`) FROM `pitStops`
SELECT MIN(`milliseconds`) AS `fastest_lap_time` FROM `lapTimes`
SELECT MAX(`duration`) FROM `pitStops` JOIN `drivers` ON `pitStops`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT `lap` FROM `pitStops` JOIN `races` ON `pitStops`.`raceId` = `races`.`raceId` JOIN `drivers` ON `pitStops`.`driverId` = `drivers`.`driverId` WHERE `races`.`year` = 2011 AND `races`.`name` = 'Australian Grand Prix' AND `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT d.`forename`, d.`surname`, ps.`duration` FROM `pitStops` ps JOIN `races` r ON ps.`raceId` = r.`raceId` JOIN `drivers` d ON ps.`driverId` = d.`driverId` WHERE r.`year` = 2011 AND r.`name` = 'Australian Grand Prix'
SELECT MIN(`lapTimes`.`milliseconds`) AS `lap_record` FROM `lapTimes` JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT `d`.`forename`, `d`.`surname` FROM `lapTimes` AS `lt` JOIN `drivers` AS `d` ON `lt`.`driverId` = `d`.`driverId` JOIN `driverStandings` AS `ds` ON `lt`.`raceId` = `ds`.`raceId` AND `lt`.`driverId` = `ds`.`driverId` WHERE `ds`.`position` <= 20 ORDER BY `lt`.`milliseconds` ASC LIMIT 1;
SELECT `c`.`name`, `lt`.`position` FROM `lapTimes` lt JOIN `drivers` d ON `lt`.`driverId` = `d`.`driverId` JOIN `races` r ON `lt`.`raceId` = `r`.`raceId` JOIN `circuits` c ON `r`.`circuitId` = `c`.`circuitId` WHERE `d`.`forename` = 'Lewis' AND `d`.`surname` = 'Hamilton' AND `lt`.`time` = (SELECT MIN(`time`) FROM `lapTimes` WHERE `driverId` = `d`.`driverId`)
SELECT MIN(`lapTimes`.`milliseconds`) AS `lap_record` FROM `lapTimes` JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Austrian Grand Prix Circuit'
SELECT `c`.`name` AS `circuit_name`, `lt`.`time` AS `lap_record` FROM `lapTimes` lt JOIN `races` r ON `lt`.`raceId` = `r`.`raceId` JOIN `circuits` c ON `r`.`circuitId` = `c`.`circuitId` WHERE `c`.`country` = 'Italy' AND `lt`.`milliseconds` = (SELECT MIN(`lt2`.`milliseconds`) FROM `lapTimes` lt2 WHERE `lt2`.`raceId` = `lt`.`raceId`)
SELECT `r`.`name`, `r`.`date`, `lt`.`time` FROM `lapTimes` lt JOIN `races` r ON `lt`.`raceId` = `r`.`raceId` JOIN `circuits` c ON `r`.`circuitId` = `c`.`circuitId` WHERE `c`.`name` = 'Austrian Grand Prix Circuit' ORDER BY `lt`.`milliseconds` ASC LIMIT 1;
SELECT ps.`duration` FROM `pitStops` ps JOIN `races` r ON ps.`raceId` = r.`raceId` JOIN `lapTimes` lt ON ps.`driverId` = lt.`driverId` AND ps.`raceId` = lt.`raceId` WHERE r.`name` = 'Austrian Grand Prix' AND lt.`milliseconds` = (SELECT MIN(`milliseconds`) FROM `lapTimes` WHERE `raceId` = r.`raceId`)
SELECT DISTINCT `c`.`lat`, `c`.`lng` FROM `circuits` AS `c` JOIN `races` AS `r` ON `c`.`circuitId` = `r`.`circuitId` JOIN `lapTimes` AS `lt` ON `r`.`raceId` = `lt`.`raceId` WHERE `lt`.`time` = '1:29.488'
SELECT AVG(`milliseconds`) AS average_pit_stop_time FROM `pitStops` JOIN `drivers` ON `pitStops`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT AVG(`lapTimes`.`milliseconds`) AS `average` FROM `lapTimes` JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'Italy'
SELECT `player_api_id` FROM `Player_Attributes` WHERE `overall_rating` = (SELECT MAX(`overall_rating`) FROM `Player_Attributes`)
SELECT `player_name`, `height` FROM `Player` WHERE `height` = (SELECT MAX(`height`) FROM `Player`)
SELECT `preferred_foot` FROM `Player_Attributes` WHERE `potential` = (SELECT MIN(`potential`) FROM `Player_Attributes`);
SELECT COUNT(DISTINCT `player_api_id`) FROM `Player_Attributes` WHERE `overall_rating` >= 60 AND `overall_rating` < 65 AND `defensive_work_rate` = 'low'
SELECT `player_api_id` FROM `Player_Attributes` ORDER BY `crossing` DESC LIMIT 5
SELECT `l`.`name` FROM `Match` AS `m` JOIN `League` AS `l` ON `m`.`league_id` = `l`.`id` WHERE `m`.`season` = '2015/2016' GROUP BY `l`.`id` ORDER BY SUM(`m`.`home_team_goal` + `m`.`away_team_goal`) DESC LIMIT 1;
SELECT `T`.`team_long_name` FROM `Match` AS `M` JOIN `Team` AS `T` ON `M`.`home_team_api_id` = `T`.`team_api_id` WHERE `M`.`season` = '2015/2016' AND `M`.`home_team_goal` < `M`.`away_team_goal` GROUP BY `M`.`home_team_api_id` ORDER BY COUNT(*) ASC LIMIT 1;
SELECT `player_name` FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` ORDER BY `penalties` DESC LIMIT 10
SELECT `T`.`team_long_name` FROM `Match` AS `M` JOIN `Team` AS `T` ON `M`.`away_team_api_id` = `T`.`team_api_id` JOIN `League` AS `L` ON `M`.`league_id` = `L`.`id` WHERE `L`.`name` = 'Scotland Premier League' AND `M`.`season` = '2009/2010' AND `M`.`away_team_goal` > `M`.`home_team_goal` GROUP BY `M`.`away_team_api_id` ORDER BY COUNT(*) DESC LIMIT 1;
SELECT `team_long_name`, `buildUpPlaySpeed` FROM `Team_Attributes` JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` ORDER BY `buildUpPlaySpeed` DESC LIMIT 4
SELECT `l`.`name` FROM `Match` AS `m` JOIN `League` AS `l` ON `m`.`league_id` = `l`.`id` WHERE `m`.`season` = '2015/2016' GROUP BY `l`.`name` ORDER BY SUM(`m`.`home_team_goal` = `m`.`away_team_goal`) DESC LIMIT 1;
SELECT `p`.`player_name`, (strftime('%Y', 'now') - strftime('%Y', `p`.`birthday`)) AS `age` FROM `Player` p JOIN `Player_Attributes` pa ON `p`.`player_api_id` = `pa`.`player_api_id` WHERE `pa`.`sprint_speed` >= 97 AND strftime('%Y', `pa`.`date`) BETWEEN '2013' AND '2015'
SELECT `l`.`name`, COUNT(`m`.`league_id`) AS `match_count` FROM `Match` AS `m` JOIN `League` AS `l` ON `m`.`league_id` = `l`.`id` GROUP BY `m`.`league_id` ORDER BY `match_count` DESC LIMIT 1;
SELECT AVG(`height`) AS average_height FROM `Player` WHERE `birthday` >= '1990-01-01 00:00:00' AND `birthday` < '1996-01-01 00:00:00'
SELECT `player_api_id` FROM `Player_Attributes` WHERE `overall_rating` > (SELECT AVG(`overall_rating`) FROM `Player_Attributes` WHERE substr(`date`, 1, 4) = '2010') AND substr(`date`, 1, 4) = '2010' AND `overall_rating` = (SELECT MAX(`overall_rating`) FROM `Player_Attributes` WHERE substr(`date`, 1, 4) = '2010');
SELECT `team_fifa_api_id` FROM `Team_Attributes` WHERE `buildUpPlaySpeed` > 50 AND `buildUpPlaySpeed` < 60
SELECT `team_long_name` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE strftime('%Y', `Team_Attributes`.`date`) = '2012' AND `Team_Attributes`.`buildUpPlayPassing` > (SELECT AVG(`buildUpPlayPassing`) FROM `Team_Attributes` WHERE strftime('%Y', `date`) = '2012' AND `buildUpPlayPassing` IS NOT NULL)
SELECT (SUM(`preferred_foot` = 'left') * 100.0 / COUNT(`player_fifa_api_id`)) AS percentage_left_foot FROM `Player` WHERE strftime('%Y', `birthday`) BETWEEN '1987' AND '1992';
SELECT `l`.`name`, SUM(`m`.`home_team_goal` + `m`.`away_team_goal`) AS `total_goals` FROM `Match` m JOIN `League` l ON `m`.`league_id` = `l`.`id` GROUP BY `l`.`id` ORDER BY `total_goals` ASC LIMIT 5;
SELECT AVG(`long_shots`) FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Ahmed Samir Farag')
SELECT `p`.`player_name` FROM `Player` p JOIN `Player_Attributes` pa ON `p`.`player_api_id` = `pa`.`player_api_id` WHERE `p`.`height` > 180 GROUP BY `p`.`player_name` ORDER BY AVG(`pa`.`heading_accuracy`) DESC LIMIT 10
SELECT `T`.`team_long_name` FROM `Team_Attributes` TA JOIN `Team` T ON `TA`.`team_api_id` = `T`.`team_api_id` WHERE `TA`.`buildUpPlayDribblingClass` = 'Normal' AND `TA`.`date` >= '2014-01-01 00:00:00' AND `TA`.`date` <= '2014-01-31 00:00:00' GROUP BY `T`.`team_long_name` HAVING AVG(`TA`.`chanceCreationPassing`) < (SELECT AVG(`chanceCreationPassing`) FROM `Team_Attributes`) ORDER BY AVG(`TA`.`chanceCreationPassing`) DESC;
SELECT `l`.`name` FROM `League` l JOIN `Match` m ON `l`.`id` = `m`.`league_id` WHERE `m`.`season` = '2009/2010' GROUP BY `l`.`id` HAVING AVG(`m`.`home_team_goal`) > AVG(`m`.`away_team_goal`);
SELECT `team_short_name` FROM `Team` WHERE `team_long_name` = 'Queens Park Rangers'
SELECT `player_name` FROM `Player` WHERE substr(`birthday`, 1, 7) = '1970-10';
SELECT `attacking_work_rate` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Franco Zennaro')
SELECT `ta`.`buildUpPlayPositioningClass` FROM `Team_Attributes` ta JOIN `Team` t ON `ta`.`team_api_id` = `t`.`team_api_id` WHERE `t`.`team_long_name` = 'ADO Den Haag'
SELECT `heading_accuracy` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Francois Affolter') AND `date` = '2014-09-18 00:00:00'
SELECT `pa`.`overall_rating` FROM `Player_Attributes` pa JOIN `Player` p ON `pa`.`player_api_id` = `p`.`player_api_id` WHERE `p`.`player_name` = 'Gabriel Tamas' AND strftime('%Y', `pa`.`date`) = '2011'
SELECT COUNT(*) FROM `Match` JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `League`.`name` = 'Scotland Premier League' AND `Match`.`season` = '2015/2016'
SELECT `preferred_foot` FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`birthday` = (SELECT MAX(`birthday`) FROM `Player`) LIMIT 1
SELECT `player_name` FROM `Player` WHERE `player_api_id` IN (SELECT `player_api_id` FROM `Player_Attributes` WHERE `potential` = (SELECT MAX(`potential`) FROM `Player_Attributes`));
SELECT COUNT(*) FROM `Player` WHERE `weight` < 130 AND `player_api_id` IN (SELECT `player_api_id` FROM `Player_Attributes` WHERE `preferred_foot` = 'left')
SELECT `team_short_name` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `chanceCreationPassingClass` = 'Risky'
SELECT `pa`.`defensive_work_rate` FROM `Player_Attributes` pa JOIN `Player` p ON `pa`.`player_api_id` = `p`.`player_api_id` WHERE `p`.`player_name` = 'David Wilson'
SELECT `p`.`birthday` FROM `Player` p JOIN `Player_Attributes` pa ON `p`.`player_api_id` = `pa`.`player_api_id` WHERE `pa`.`overall_rating` = (SELECT MAX(`overall_rating`) FROM `Player_Attributes`) LIMIT 1
SELECT `name` FROM `League` WHERE `country_id` = (SELECT `id` FROM `Country` WHERE `name` = 'Netherlands')
SELECT AVG(`home_team_goal`) AS average_home_team_goal FROM `Match` JOIN `Country` ON `Match`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Poland' AND `Match`.`season` = '2010/2011';
SELECT `p`.`player_name` FROM `Player` p JOIN `Player_Attributes` pa ON `p`.`player_api_id` = `pa`.`player_api_id` WHERE `p`.`height` = (SELECT MAX(`height`) FROM `Player`) OR `p`.`height` = (SELECT MIN(`height`) FROM `Player`) GROUP BY `p`.`player_name` ORDER BY AVG(`pa`.`finishing`) DESC LIMIT 1;
SELECT `player_name` FROM `Player` WHERE `height` > 180
SELECT COUNT(*) FROM `Player` WHERE strftime('%Y', `birthday`) > '1990'
SELECT COUNT(*) FROM `Player` WHERE `player_name` LIKE 'Adam %' AND `weight` > 170
SELECT DISTINCT `p`.`player_name` FROM `Player` p JOIN `Player_Attributes` pa ON `p`.`player_api_id` = `pa`.`player_api_id` WHERE `pa`.`overall_rating` > 80 AND strftime('%Y', `pa`.`date`) BETWEEN '2008' AND '2010'
SELECT `potential` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Aaron Doran')
SELECT `player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `preferred_foot` = 'left'
SELECT `team_long_name` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `buildUpPlaySpeedClass` = 'Fast'
SELECT `buildUpPlayPassingClass` FROM `Team_Attributes` JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_short_name` = 'CLB'
SELECT `T`.`team_short_name` FROM `Team_Attributes` AS `TA` JOIN `Team` AS `T` ON `TA`.`team_api_id` = `T`.`team_api_id` WHERE `TA`.`buildUpPlayPassing` > 70
SELECT AVG(`t2`.`overall_rating`) AS `average_overall_rating` FROM `Player_Attributes` AS `t2` JOIN `Player` AS `t1` ON `t2`.`player_api_id` = `t1`.`player_api_id` WHERE strftime('%Y', `t2`.`date`) BETWEEN '2010' AND '2015' AND `t1`.`height` > 170
SELECT `player_name` FROM `Player` WHERE `height` = (SELECT MIN(`height`) FROM `Player`)
SELECT `Country`.`name` FROM `Country` JOIN `League` ON `Country`.`id` = `League`.`country_id` WHERE `League`.`name` = 'Italy Serie A'
SELECT `team_short_name` FROM `Team` JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `buildUpPlaySpeed` = 31 AND `buildUpPlayDribbling` = 53 AND `buildUpPlayPassing` = 32
SELECT AVG(`overall_rating`) FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Aaron Doran')
SELECT COUNT(*) FROM `Match` JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `League`.`name` = 'Germany 1. Bundesliga' AND strftime('%Y-%m', `Match`.`date`) BETWEEN '2008-08' AND '2008-10'
SELECT DISTINCT `T`.`team_short_name` FROM `Match` AS `M` JOIN `Team` AS `T` ON `M`.`home_team_api_id` = `T`.`team_api_id` WHERE `M`.`home_team_goal` = 10;
SELECT `player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`potential` = 61 AND `Player_Attributes`.`balance` = (SELECT MAX(`balance`) FROM `Player_Attributes` WHERE `potential` = 61)
SELECT (SUM(CASE WHEN `player_name` = 'Abdou Diallo' THEN `ball_control` ELSE 0 END) / COUNT(CASE WHEN `player_name` = 'Abdou Diallo' THEN `id` ELSE NULL END)) - (SUM(CASE WHEN `player_name` = 'Aaron Appindangoye' THEN `ball_control` ELSE 0 END) / COUNT(CASE WHEN `player_name` = 'Aaron Appindangoye' THEN `id` ELSE NULL END)) AS difference FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` IN ('Abdou Diallo', 'Aaron Appindangoye')
SELECT `team_long_name` FROM `Team` WHERE `team_short_name` = 'GEN'
SELECT `player_name` FROM `Player` WHERE `player_name` IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY `birthday` ASC LIMIT 1;
SELECT `player_name` FROM `Player` WHERE `height` = (SELECT MAX(`height`) FROM `Player`)
SELECT COUNT(*) FROM `Player_Attributes` WHERE `preferred_foot` = 'left' AND `attacking_work_rate` = 'low'
SELECT `Country`.`name` FROM `Country` JOIN `League` ON `Country`.`id` = `League`.`country_id` WHERE `League`.`name` = 'Belgium Jupiler League'
SELECT `name` FROM `League` WHERE `country_id` = (SELECT `id` FROM `Country` WHERE `name` = 'Germany')
SELECT `player_name` FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `overall_rating` = (SELECT MAX(`overall_rating`) FROM `Player_Attributes`)
SELECT COUNT(DISTINCT `Player`.`player_api_id`) FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE strftime('%Y', `Player`.`birthday`) < '1986' AND `Player_Attributes`.`defensive_work_rate` = 'high';
SELECT `player_name` FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `player_name` IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY `crossing` DESC LIMIT 1
SELECT `pa`.`heading_accuracy` FROM `Player_Attributes` pa JOIN `Player` p ON `pa`.`player_api_id` = `p`.`player_api_id` WHERE `p`.`player_name` = 'Ariel Borysiuk'
SELECT COUNT(*) FROM `Player` p JOIN `Player_Attributes` pa ON p.`player_api_id` = pa.`player_api_id` WHERE p.`height` > 180 AND pa.`volleys` > 70
SELECT DISTINCT `p`.`player_name` FROM `Player` p JOIN `Player_Attributes` pa ON `p`.`player_api_id` = `pa`.`player_api_id` WHERE `pa`.`volleys` > 70 AND `pa`.`dribbling` > 70
SELECT COUNT(*) FROM `Match` JOIN `Country` ON `Match`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Belgium' AND `Match`.`season` = '2008/2009'
SELECT `pa`.`long_passing` FROM `Player_Attributes` pa JOIN `Player` p ON `pa`.`player_api_id` = `p`.`player_api_id` WHERE `p`.`birthday` = (SELECT MIN(`birthday`) FROM `Player`) ORDER BY `pa`.`date` DESC LIMIT 1
SELECT COUNT(*) FROM `Match` JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `League`.`name` = 'Belgium Jupiler League' AND SUBSTR(`Match`.`date`, 1, 7) = '2009-04'
SELECT `l`.`name` FROM `Match` AS `m` JOIN `League` AS `l` ON `m`.`league_id` = `l`.`id` WHERE `m`.`season` = '2008/2009' GROUP BY `l`.`name` ORDER BY COUNT(`m`.`id`) DESC LIMIT 1;
SELECT AVG(`overall_rating`) FROM `Player_Attributes` WHERE `player_api_id` IN (SELECT `player_api_id` FROM `Player` WHERE strftime('%Y', `birthday`) < '1986')
SELECT (100.0 * (ab.overall_rating - pp.overall_rating) / pp.overall_rating) AS percentage_increase FROM (SELECT `overall_rating` FROM `Player_Attributes` pa JOIN `Player` p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Ariel Borysiuk' ORDER BY pa.date DESC LIMIT 1) ab, (SELECT `overall_rating` FROM `Player_Attributes` pa JOIN `Player` p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Paulin Puel' ORDER BY pa.date DESC LIMIT 1) pp;
SELECT AVG(`buildUpPlaySpeed`) FROM `Team_Attributes` JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'Heart of Midlothian'
SELECT AVG(`T1`.`overall_rating`) FROM `Player_Attributes` AS `T1` JOIN `Player` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T2`.`player_name` = 'Pietro Marino'
SELECT SUM(`crossing`) AS `total_crossing_score` FROM `Player_Attributes` PA JOIN `Player` P ON PA.`player_api_id` = P.`player_api_id` WHERE P.`player_name` = 'Aaron Lennox'
SELECT MAX(`chanceCreationPassing`) AS `highest_chance_creation_passing_score`, `chanceCreationPassingClass` FROM `Team_Attributes` JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `team_long_name` = 'Ajax' GROUP BY `chanceCreationPassingClass` ORDER BY `highest_chance_creation_passing_score` DESC LIMIT 1
SELECT `preferred_foot` FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Abdou Diallo' LIMIT 1
SELECT MAX(`overall_rating`) FROM `Player_Attributes` PA JOIN `Player` P ON PA.`player_api_id` = P.`player_api_id` WHERE P.`player_name` = 'Dorlan Pabon'
SELECT AVG(`away_team_goal`) FROM `Match` JOIN `Team` ON `Match`.`away_team_api_id` = `Team`.`team_api_id` JOIN `Country` ON `Match`.`country_id` = `Country`.`id` WHERE `Team`.`team_long_name` = 'Parma' AND `Country`.`name` = 'Italy'
SELECT `p`.`player_name` FROM `Player_Attributes` pa JOIN `Player` p ON `pa`.`player_api_id` = `p`.`player_api_id` WHERE `pa`.`overall_rating` = 77 AND `pa`.`date` LIKE '2016-06-23%' ORDER BY `p`.`birthday` ASC LIMIT 1
SELECT `overall_rating` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Aaron Mooy') AND `date` LIKE '2016-02-04%'
SELECT `potential` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Francesco Parravicini') AND `date` = '2010-08-30 00:00:00'
SELECT `attacking_work_rate` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Francesco Migliore') AND `date` LIKE '2015-05-01%'
SELECT `defensive_work_rate` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Kevin Berigaud') AND `date` = '2013-02-22 00:00:00'
SELECT `date` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Kevin Constant') AND `crossing` = (SELECT MAX(`crossing`) FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Kevin Constant')) ORDER BY `date` ASC LIMIT 1;
SELECT `buildUpPlaySpeedClass` FROM `Team_Attributes` JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'Willem II' AND `Team_Attributes`.`date` = '2012-02-22'
SELECT `buildUpPlayDribblingClass` FROM `Team_Attributes` JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_short_name` = 'LEI' AND `Team_Attributes`.`date` = '2015-09-10 00:00:00'
SELECT `buildUpPlayPassingClass` FROM `Team_Attributes` JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'FC Lorient' AND `Team_Attributes`.`date` LIKE '2010-02-22%'
SELECT `chanceCreationPassingClass` FROM `Team_Attributes` JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'PEC Zwolle' AND `Team_Attributes`.`date` = '2013-09-20 00:00:00'
SELECT `chanceCreationCrossingClass` FROM `Team_Attributes` JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'Hull City' AND `Team_Attributes`.`date` = '2010-02-22 00:00:00'
SELECT `defenceAggressionClass` FROM `Team_Attributes` JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'Hannover 96' AND `Team_Attributes`.`date` LIKE '2015-09-10%'
SELECT AVG(`overall_rating`) FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Marko Arnautovic') AND SUBSTR(`date`, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'
SELECT (ld.overall_rating - jb.overall_rating) * 100.0 / ld.overall_rating AS percentage FROM (SELECT `overall_rating` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Landon Donovan') AND `date` = '2013-07-12') ld, (SELECT `overall_rating` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Jordan Bowery') AND `date` = '2013-07-12') jb;
SELECT `player_name` FROM `Player` WHERE `height` = (SELECT MAX(`height`) FROM `Player`)
SELECT `player_api_id` FROM `Player` ORDER BY `weight` DESC LIMIT 10
SELECT `player_name` FROM `Player` WHERE (julianday('now') - julianday(`birthday`)) / 365.25 > 34
SELECT SUM(`home_team_goal`) FROM `Match` WHERE `home_player_1` IN (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Aaron Lennon') OR `home_player_2` IN (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Aaron Lennon') OR `home_player_3` IN (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Aaron Lennon') OR `home_player_4` IN (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Aaron Lennon') OR `home_player_5` IN (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Aaron Lennon') OR `home_player_6` IN (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Aaron Lennon') OR `home_player_7` IN (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Aaron Lennon') OR `home_player_8` IN (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Aaron Lennon') OR `home_player_9` IN (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Aaron Lennon') OR `home_player_10` IN (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Aaron Lennon') OR `home_player_11` IN (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Aaron Lennon')
SELECT SUM(`away_team_goal`) FROM `Match` WHERE `away_player_1` IN (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Daan Smith' OR `player_name` = 'Filipe Ferreira') OR `away_player_2` IN (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Daan Smith' OR `player_name` = 'Filipe Ferreira') OR `away_player_3` IN (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Daan Smith' OR `player_name` = 'Filipe Ferreira') OR `away_player_4` IN (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Daan Smith' OR `player_name` = 'Filipe Ferreira') OR `away_player_5` IN (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Daan Smith' OR `player_name` = 'Filipe Ferreira') OR `away_player_6` IN (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Daan Smith' OR `player_name` = 'Filipe Ferreira') OR `away_player_7` IN (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Daan Smith' OR `player_name` = 'Filipe Ferreira') OR `away_player_8` IN (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Daan Smith' OR `player_name` = 'Filipe Ferreira') OR `away_player_9` IN (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Daan Smith' OR `player_name` = 'Filipe Ferreira') OR `away_player_10` IN (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Daan Smith' OR `player_name` = 'Filipe Ferreira') OR `away_player_11` IN (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Daan Smith' OR `player_name` = 'Filipe Ferreira')
SELECT SUM(`home_team_goal`) FROM `Match` WHERE `home_player_1` IN (SELECT `player_api_id` FROM `Player` WHERE (julianday('now') - julianday(`birthday`)) / 365.25 <= 30) OR `home_player_2` IN (SELECT `player_api_id` FROM `Player` WHERE (julianday('now') - julianday(`birthday`)) / 365.25 <= 30) OR `home_player_3` IN (SELECT `player_api_id` FROM `Player` WHERE (julianday('now') - julianday(`birthday`)) / 365.25 <= 30) OR `home_player_4` IN (SELECT `player_api_id` FROM `Player` WHERE (julianday('now') - julianday(`birthday`)) / 365.25 <= 30) OR `home_player_5` IN (SELECT `player_api_id` FROM `Player` WHERE (julianday('now') - julianday(`birthday`)) / 365.25 <= 30) OR `home_player_6` IN (SELECT `player_api_id` FROM `Player` WHERE (julianday('now') - julianday(`birthday`)) / 365.25 <= 30) OR `home_player_7` IN (SELECT `player_api_id` FROM `Player` WHERE (julianday('now') - julianday(`birthday`)) / 365.25 <= 30) OR `home_player_8` IN (SELECT `player_api_id` FROM `Player` WHERE (julianday('now') - julianday(`birthday`)) / 365.25 <= 30) OR `home_player_9` IN (SELECT `player_api_id` FROM `Player` WHERE (julianday('now') - julianday(`birthday`)) / 365.25 <= 30) OR `home_player_10` IN (SELECT `player_api_id` FROM `Player` WHERE (julianday('now') - julianday(`birthday`)) / 365.25 <= 30) OR `home_player_11` IN (SELECT `player_api_id` FROM `Player` WHERE (julianday('now') - julianday(`birthday`)) / 365.25 <= 30)
SELECT `p`.`player_name` FROM `Player` p JOIN `Player_Attributes` pa ON `p`.`player_api_id` = `pa`.`player_api_id` WHERE `pa`.`overall_rating` = (SELECT MAX(`overall_rating`) FROM `Player_Attributes`) LIMIT 1
SELECT `player_name` FROM `Player` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player_Attributes` WHERE `potential` = (SELECT MAX(`potential`) FROM `Player_Attributes`))
SELECT DISTINCT `p`.`player_name` FROM `Player` p JOIN `Player_Attributes` pa ON `p`.`player_api_id` = `pa`.`player_api_id` WHERE `pa`.`attacking_work_rate` = 'high'
SELECT `p`.`player_name` FROM `Player` p JOIN `Player_Attributes` pa ON `p`.`player_api_id` = `pa`.`player_api_id` WHERE `pa`.`finishing` = 1 ORDER BY datetime(CURRENT_TIMESTAMP, 'localtime') - datetime(`p`.`birthday`) DESC LIMIT 1
SELECT DISTINCT `p`.`player_name` FROM `Player` p JOIN `Match` m ON (m.`home_player_1` = p.`player_api_id` OR m.`home_player_2` = p.`player_api_id` OR m.`home_player_3` = p.`player_api_id` OR m.`home_player_4` = p.`player_api_id` OR m.`home_player_5` = p.`player_api_id` OR m.`home_player_6` = p.`player_api_id` OR m.`home_player_7` = p.`player_api_id` OR m.`home_player_8` = p.`player_api_id` OR m.`home_player_9` = p.`player_api_id` OR m.`home_player_10` = p.`player_api_id` OR m.`home_player_11` = p.`player_api_id` OR m.`away_player_1` = p.`player_api_id` OR m.`away_player_2` = p.`player_api_id` OR m.`away_player_3` = p.`player_api_id` OR m.`away_player_4` = p.`player_api_id` OR m.`away_player_5` = p.`player_api_id` OR m.`away_player_6` = p.`player_api_id` OR m.`away_player_7` = p.`player_api_id` OR m.`away_player_8` = p.`player_api_id` OR m.`away_player_9` = p.`player_api_id` OR m.`away_player_10` = p.`player_api_id` OR m.`away_player_11` = p.`player_api_id`) JOIN `Country` c ON m.`country_id` = c.`id` WHERE c.`name` = 'Belgium'
SELECT DISTINCT `Player`.`player_name`, `Country`.`name` FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` JOIN `Match` ON `Match`.`home_player_1` = `Player`.`player_api_id` OR `Match`.`home_player_2` = `Player`.`player_api_id` OR `Match`.`home_player_3` = `Player`.`player_api_id` OR `Match`.`home_player_4` = `Player`.`player_api_id` OR `Match`.`home_player_5` = `Player`.`player_api_id` OR `Match`.`home_player_6` = `Player`.`player_api_id` OR `Match`.`home_player_7` = `Player`.`player_api_id` OR `Match`.`home_player_8` = `Player`.`player_api_id` OR `Match`.`home_player_9` = `Player`.`player_api_id` OR `Match`.`home_player_10` = `Player`.`player_api_id` OR `Match`.`home_player_11` = `Player`.`player_api_id` OR `Match`.`away_player_1` = `Player`.`player_api_id` OR `Match`.`away_player_2` = `Player`.`player_api_id` OR `Match`.`away_player_3` = `Player`.`player_api_id` OR `Match`.`away_player_4` = `Player`.`player_api_id` OR `Match`.`away_player_5` = `Player`.`player_api_id` OR `Match`.`away_player_6` = `Player`.`player_api_id` OR `Match`.`away_player_7` = `Player`.`player_api_id` OR `Match`.`away_player_8` = `Player`.`player_api_id` OR `Match`.`away_player_9` = `Player`.`player_api_id` OR `Match`.`away_player_10` = `Player`.`player_api_id` OR `Match`.`away_player_11` = `Player`.`player_api_id` JOIN `Country` ON `Match`.`country_id` = `Country`.`id` WHERE `Player_Attributes`.`vision` > 89
SELECT `c`.`name` FROM `Country` c JOIN `Player` p ON `c`.`id` = `p`.`player_api_id` GROUP BY `c`.`name` ORDER BY AVG(`p`.`weight`) DESC LIMIT 1
SELECT `team_long_name` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `buildUpPlaySpeedClass` = 'Slow'
SELECT DISTINCT `T`.`team_short_name` FROM `Team_Attributes` TA JOIN `Team` T ON `TA`.`team_api_id` = `T`.`team_api_id` WHERE `TA`.`chanceCreationPassingClass` = 'Safe'
SELECT AVG(`height`) FROM `Player` WHERE `player_api_id` IN (SELECT DISTINCT `player_api_id` FROM `Match` WHERE `country_id` = (SELECT `id` FROM `Country` WHERE `name` = 'Italy'))
SELECT `player_name` FROM `Player` WHERE `height` > 180 ORDER BY `player_name` ASC LIMIT 3
SELECT COUNT(*) FROM `Player` WHERE `player_name` LIKE 'Aaron%' AND `birthday` > '1990-01-01'
SELECT (SELECT `jumping` FROM `Player_Attributes` WHERE `player_api_id` = 6 ORDER BY `date` DESC LIMIT 1) - (SELECT `jumping` FROM `Player_Attributes` WHERE `player_api_id` = 23 ORDER BY `date` DESC LIMIT 1) AS `jumping_difference`
SELECT `player_api_id` FROM `Player_Attributes` WHERE `potential` = (SELECT MIN(`potential`) FROM `Player_Attributes` WHERE `preferred_foot` = 'right') AND `preferred_foot` = 'right' LIMIT 5
SELECT COUNT(DISTINCT `player_api_id`) FROM `Player_Attributes` WHERE `crossing` = (SELECT MAX(`crossing`) FROM `Player_Attributes`) AND `preferred_foot` = 'left'
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM `Player_Attributes`)) AS percentage FROM `Player_Attributes` WHERE `stamina` > 80 AND `strength` > 80;
SELECT `Country`.`name` FROM `Country` JOIN `League` ON `Country`.`id` = `League`.`country_id` WHERE `League`.`name` = 'Poland Ekstraklasa'
SELECT `home_team_goal`, `away_team_goal` FROM `Match` JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `Match`.`date` LIKE '2008-09-24%' AND `League`.`name` = 'Belgium Jupiler League'
SELECT `sprint_speed`, `agility`, `acceleration` FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Alexis Blin'
SELECT DISTINCT `buildUpPlaySpeedClass` FROM `Team_Attributes` JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'KSV Cercle Brugge'
SELECT COUNT(*) FROM `Match` JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `Match`.`season` = '2015/2016' AND `League`.`name` = 'Italian Serie A'
SELECT MAX(`home_team_goal`) FROM `Match` JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `League`.`name` = 'Netherlands Eredivisie'
SELECT `finishing`, `curve` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` ORDER BY `weight` DESC LIMIT 1) LIMIT 1
SELECT `l`.`name`, COUNT(`m`.`id`) AS `game_count` FROM `Match` m JOIN `League` l ON `m`.`league_id` = `l`.`id` WHERE `m`.`season` = '2015/2016' GROUP BY `l`.`name` ORDER BY `game_count` DESC LIMIT 4;
SELECT `T`.`team_long_name` FROM `Match` AS `M` JOIN `Team` AS `T` ON `M`.`away_team_api_id` = `T`.`team_api_id` ORDER BY `M`.`away_team_goal` DESC LIMIT 1
SELECT `player_name` FROM `Player` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player_Attributes` ORDER BY `overall_rating` DESC LIMIT 1) LIMIT 1
SELECT (COUNT(*) FILTER (WHERE `height` < 180 AND `overall_rating` > 70) * 100.0 / COUNT(*)) AS percentage FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id`
SELECT (COUNT(CASE WHEN `Admission` = '+' THEN 1 END) - COUNT(CASE WHEN `Admission` = '-' THEN 1 END)) * 100.0 / COUNT(CASE WHEN `Admission` = '-' THEN 1 END) AS deviation_percentage FROM `Patient` WHERE `SEX` = 'M';
SELECT 100.0 * (SELECT COUNT(`ID`) FROM `Patient` WHERE `SEX` = 'F' AND strftime('%Y', `Birthday`) > '1930') / (SELECT COUNT(`ID`) FROM `Patient` WHERE `SEX` = 'F') AS percentage
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM `Patient` WHERE strftime('%Y', `Birthday`) BETWEEN '1930' AND '1940')) AS inpatient_percentage FROM `Patient` WHERE strftime('%Y', `Birthday`) BETWEEN '1930' AND '1940' AND `Admission` = '+'
SELECT CAST(SUM(CASE WHEN `Admission` = '-' THEN 1 ELSE 0 END) AS FLOAT) / SUM(CASE WHEN `Admission` = '+' THEN 1 ELSE 0 END) AS ratio FROM `Patient` WHERE `Diagnosis` = 'SLE';
SELECT `Patient`.`Diagnosis`, `Laboratory`.`Date` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`ID` = '30609';
SELECT `Patient`.`SEX`, `Patient`.`Birthday`, `Examination`.`Examination Date`, `Examination`.`Symptoms` FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`ID` = '163109'
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`LDH` > 500;
SELECT `Patient`.`ID`, (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) AS `age` FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Examination`.`RVVT` = '+'
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Diagnosis` FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Examination`.`Thrombosis` = 2
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday`, `Patient`.`Description`, `Patient`.`First Date`, `Patient`.`Admission`, `Patient`.`Diagnosis` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE strftime('%Y', `Patient`.`Birthday`) = '1937' AND `Laboratory`.`T-CHO` >= 250;
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Diagnosis` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`ALB` < 3.5
SELECT (COUNT(DISTINCT `Laboratory`.`ID`) * 100.0 / (SELECT COUNT(DISTINCT `ID`) FROM `Patient` WHERE `SEX` = 'F')) AS percentage FROM `Laboratory` JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Patient`.`SEX` = 'F' AND (`Laboratory`.`TP` < 6.0 OR `Laboratory`.`TP` > 8.5)
SELECT AVG(`aCL IgG`) FROM `Examination` JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Patient`.`Admission` = '+' AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) >= 50
SELECT COUNT(*) FROM `Patient` WHERE `SEX` = 'F' AND strftime('%Y', `Description`) = '1997' AND `Admission` = '-'
SELECT MIN(SUBSTR(`First Date`, 1, 4) - SUBSTR(`Birthday`, 1, 4)) AS `youngest_age` FROM `Patient`
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`SEX` = 'F' AND `Examination`.`Thrombosis` = '1' AND strftime('%Y', `Examination`.`Examination Date`) = '1997'
SELECT MAX(strftime('%Y', `Birthday`)) - MIN(strftime('%Y', `Birthday`)) AS age_gap FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Laboratory` WHERE `TG` >= 200);
SELECT `e`.`Symptoms`, `p`.`Diagnosis` FROM `Patient` p JOIN `Examination` e ON `p`.`ID` = `e`.`ID` WHERE `p`.`Birthday` = (SELECT MAX(`Birthday`) FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Examination`)) AND `e`.`Symptoms` IS NOT NULL;
SELECT COUNT(DISTINCT `Laboratory`.`ID`) / 12 FROM `Laboratory` JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`Date` BETWEEN '1998-01-01' AND '1998-12-31';
SELECT `Laboratory`.`Date`, (strftime('%Y', `Patient`.`First Date`) - strftime('%Y', `Patient`.`Birthday`)) AS `Age` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'SJS' ORDER BY `Patient`.`Birthday` ASC LIMIT 1
SELECT (SUM(CASE WHEN `SEX` = 'M' AND `UA` <= 8.0 THEN 1 ELSE 0 END) * 1.0) / SUM(CASE WHEN `SEX` = 'F' AND `UA` <= 6.5 THEN 1 ELSE 0 END) AS ratio FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE (`SEX` = 'M' AND `UA` <= 8.0) OR (`SEX` = 'F' AND `UA` <= 6.5)
SELECT COUNT(*) FROM `Patient` p WHERE NOT EXISTS (SELECT 1 FROM `Examination` e WHERE e.`ID` = p.`ID` AND (strftime('%Y', e.`Examination Date`) - strftime('%Y', p.`First Date`)) >= 1)
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE strftime('%Y', `Patient`.`Birthday`) > strftime('%Y', `Examination`.`Examination Date`, '-18 years') AND strftime('%Y', `Examination`.`Examination Date`) BETWEEN '1990' AND '1993';
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`T-BIL` >= '2.0'
SELECT `Diagnosis` FROM `Examination` WHERE `Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY `Diagnosis` ORDER BY COUNT(`Diagnosis`) DESC LIMIT 1;
SELECT AVG(1999 - strftime('%Y', `Birthday`)) AS `average_age` FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Laboratory` WHERE `Date` BETWEEN '1991-10-01' AND '1991-10-30');
SELECT (strftime('%Y', `Examination Date`) - strftime('%Y', `Birthday`)) AS Age, `Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `HGB` = (SELECT MAX(`HGB`) FROM `Laboratory`)
SELECT `ANA` FROM `Examination` WHERE `ID` = 3605340 AND `Examination Date` = '1996-12-02'
SELECT CASE WHEN `T-CHO` < 250 THEN 'Normal' ELSE 'High' END AS `Total Cholesterol Status` FROM `Laboratory` WHERE `ID` = 2927464 AND `Date` = '1995-9-4'
SELECT `SEX` FROM `Patient` WHERE `Diagnosis` = 'AORTITIS' ORDER BY `First Date` ASC LIMIT 1
SELECT `e`.`aCL IgM` FROM `Examination` e JOIN `Patient` p ON `e`.`ID` = `p`.`ID` WHERE `p`.`Diagnosis` = 'SLE' AND `p`.`Description` = '1994-02-19' AND `e`.`Examination Date` = '1993/11/12'
SELECT `SEX` FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Laboratory` WHERE `GPT` = '9' AND `Date` = '1992-06-12')
SELECT strftime('%Y', `Date`) - strftime('%Y', `Birthday`) AS `Age` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `UA` = '8.4' AND `Date` = '1991-10-21'
SELECT COUNT(`Laboratory`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`First Date` = '1991-06-13' AND `Patient`.`Diagnosis` = 'SJS' AND strftime('%Y', `Laboratory`.`Date`) = '1995'
SELECT `p`.`Diagnosis` FROM `Patient` p JOIN `Examination` e ON `p`.`ID` = `e`.`ID` WHERE `e`.`Diagnosis` = 'SLE' AND `e`.`Examination Date` = '1997-01-27'
SELECT `Examination`.`Symptoms` FROM `Examination` JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Patient`.`Birthday` = '1959-03-01' AND `Examination`.`Examination Date` = '1993-09-27'
SELECT (SUM(CASE WHEN `Date` LIKE '1981-11-%' THEN `T-CHO` ELSE 0 END) - SUM(CASE WHEN `Date` LIKE '1981-12-%' THEN `T-CHO` ELSE 0 END)) / SUM(CASE WHEN `Date` LIKE '1981-11-%' THEN `T-CHO` ELSE 0 END) * 100 AS decrease_rate FROM `Laboratory` WHERE `ID` IN (SELECT `ID` FROM `Patient` WHERE `Birthday` = '1959-02-18')
SELECT DISTINCT `Patient`.`ID` FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`Diagnosis` = 'Behcet' AND `Examination`.`Examination Date` BETWEEN '1997-01-01' AND '1997-12-31'
SELECT DISTINCT `Patient`.`ID` FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' AND `Laboratory`.`GPT` > 30 AND `Laboratory`.`ALB` < 4;
SELECT `ID` FROM `Patient` WHERE `SEX` = 'F' AND strftime('%Y', `Birthday`) = '1964' AND `Admission` = '+'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Examination` JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Examination`.`Thrombosis` = 2 AND `Examination`.`ANA` = 'S' AND `Examination`.`aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM `Examination`)
SELECT (COUNT(CASE WHEN `UA` <= 6.5 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM `Laboratory` WHERE `U-PRO` > 0 AND `U-PRO` < 30;
SELECT (SUM(CASE WHEN `Diagnosis` = 'BEHCET' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM `Patient` WHERE `SEX` = 'M' AND strftime('%Y', `First Date`) = '1981';
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday`, `Patient`.`Description`, `Patient`.`First Date`, `Patient`.`Admission`, `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '-' AND `Laboratory`.`Date` LIKE '1991-10%' AND `Laboratory`.`T-BIL` < 2.0;
SELECT COUNT(*) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`SEX` = 'F' AND `Patient`.`Birthday` BETWEEN '1980-01-01' AND '1989-12-31' AND `Examination`.`ANA Pattern` != 'P';
SELECT `SEX` FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Examination` WHERE `Diagnosis` = 'PSS') AND `ID` IN (SELECT `ID` FROM `Laboratory` WHERE `CRP` > 2 AND `CRE` = 1 AND `LDH` = 123)
SELECT AVG(`ALB`) FROM `Laboratory` JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Patient`.`SEX` = 'F' AND `Laboratory`.`PLT` > 400 AND `Patient`.`Diagnosis` = 'SLE'
SELECT `Symptoms` FROM `Examination` WHERE `Diagnosis` = 'SLE' GROUP BY `Symptoms` ORDER BY COUNT(`Symptoms`) DESC LIMIT 1
SELECT `Description`, `Diagnosis` FROM `Patient` WHERE `ID` = 48473;
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` WHERE `Patient`.`SEX` = 'F' AND `Patient`.`Diagnosis` = 'APS'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE strftime('%Y', `Laboratory`.`Date`) = '1997' AND (`Laboratory`.`TP` <= 6 OR `Laboratory`.`TP` >= 8.5)
SELECT (SUM(`Diagnosis` LIKE '%ITP%') * 100.0 / SUM(`Diagnosis` LIKE '%SLE%')) AS proportion FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Examination` WHERE `Symptoms` LIKE '%thrombocytopenia%');
SELECT (SUM(`SEX` = 'F') * 100.0 / COUNT(`SEX`)) AS percentage FROM `Patient` WHERE strftime('%Y', `Birthday`) = '1980' AND `Diagnosis` = 'RA';
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Examination`.`Examination Date` BETWEEN '1995' AND '1997' AND `Examination`.`Diagnosis` = 'Behcet' AND `Patient`.`Admission` = '-'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'F' AND `Laboratory`.`WBC` < 3.5
SELECT DATEDIFF(`Examination Date`, `First Date`) FROM `Examination` JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Patient`.`ID` = 821298;
SELECT CASE WHEN (`UA` > 8.0 AND `SEX` = 'M') OR (`UA` > 6.5 AND `SEX` = 'F') THEN 'Yes' ELSE 'No' END AS `Uric Acid Normal Range` FROM `Laboratory` JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Patient`.`ID` = 57266
SELECT `Date` FROM `Laboratory` WHERE `ID` = '48473' AND `GOT` >= 60
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GOT` < 60 AND strftime('%Y', `Laboratory`.`Date`) = '1994'
SELECT DISTINCT `Patient`.`ID` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`GPT` >= 60
SELECT `Patient`.`Diagnosis` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GPT` > 60 ORDER BY `Patient`.`Birthday` ASC
SELECT AVG(`LDH`) FROM `Laboratory` WHERE `LDH` < 500
SELECT `Patient`.`ID`, (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) AS `age` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`LDH` BETWEEN 600 AND 800;
SELECT `Patient`.`ID`, `Patient`.`Admission` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`ALP` < 300
SELECT `Patient`.`ID`, CASE WHEN `Laboratory`.`ALP` < 300 THEN 'Yes' ELSE 'No' END AS `ALP_Normal_Range` FROM `Patient` LEFT JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Birthday` = '1982-04-01'
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TP` < 6.0
SELECT `Laboratory`.`ID`, `Laboratory`.`TP` - 8.5 AS `TP Deviation` FROM `Laboratory` JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Patient`.`SEX` = 'F' AND `Laboratory`.`TP` > 8.5;
SELECT `Patient`.`ID`, `Patient`.`Birthday` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND (`Laboratory`.`ALB` <= 3.5 OR `Laboratory`.`ALB` >= 5.5) ORDER BY `Patient`.`Birthday` DESC
SELECT `Patient`.`ID`, CASE WHEN `Laboratory`.`ALB` BETWEEN 3.5 AND 5.5 THEN 'Normal' ELSE 'Abnormal' END AS `Albumin_Status` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE strftime('%Y', `Patient`.`Birthday`) = '1982';
SELECT (COUNT(DISTINCT CASE WHEN `UA` > 6.5 AND `SEX` = 'F' THEN Patient.`ID` END) * 100.0 / COUNT(DISTINCT Patient.`ID`)) AS percentage FROM Patient JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE `SEX` = 'F';
SELECT AVG(`UA`) AS `average_UA` FROM (SELECT `Laboratory`.`UA`, `Patient`.`SEX` FROM `Laboratory` JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE (`Patient`.`SEX` = 'M' AND `Laboratory`.`UA` < 8.0) OR (`Patient`.`SEX` = 'F' AND `Laboratory`.`UA` < 6.5) AND `Laboratory`.`Date` = (SELECT MAX(`Date`) FROM `Laboratory` WHERE `Laboratory`.`ID` = `Patient`.`ID`))
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`UN` = 29
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'RA' AND `Laboratory`.`UN` < 30
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`CRE` >= 1.5
SELECT CASE WHEN SUM(`SEX` = 'M') > SUM(`SEX` = 'F') THEN 'True' ELSE 'False' END AS result FROM `Laboratory` JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `CRE` >= 1.5;
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday`, `Laboratory`.`T-BIL` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`T-BIL` = (SELECT MAX(`T-BIL`) FROM `Laboratory`)
SELECT `SEX`, GROUP_CONCAT(DISTINCT `Patient`.`ID`) AS `List` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`T-BIL` >= 2.0 GROUP BY `SEX`
SELECT `Patient`.`ID`, `Laboratory`.`T-CHO` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Birthday` = (SELECT MIN(`Birthday`) FROM `Patient`) ORDER BY `Laboratory`.`T-CHO` DESC LIMIT 1;
SELECT AVG((strftime('%Y', 'now') - strftime('%Y', `Birthday`))) AS average_age FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `SEX` = 'M' AND `T-CHO` >= 250;
SELECT `Patient`.`ID`, `Patient`.`Diagnosis` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TG` > 300
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TG` >= 200 AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) > 50;
SELECT DISTINCT `Patient`.`ID` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '-' AND `Laboratory`.`CPK` < 250;
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE strftime('%Y', `Patient`.`Birthday`) BETWEEN '1936' AND '1956' AND `Patient`.`SEX` = 'M' AND `Laboratory`.`CPK` >= 250;
SELECT `p`.`ID`, `p`.`SEX`, (strftime('%Y', 'now') - strftime('%Y', `p`.`Birthday`)) AS `age` FROM `Patient` p JOIN `Laboratory` l ON `p`.`ID` = `l`.`ID` WHERE `l`.`GLU` >= 180 AND `l`.`T-CHO` < 250;
SELECT `Patient`.`ID`, `Laboratory`.`GLU` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GLU` < 180 AND strftime('%Y', `Patient`.`Description`) = '1991'
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`WBC` <= 3.5 OR `Laboratory`.`WBC` >= 9.0 GROUP BY `Patient`.`SEX`, `Patient`.`ID` ORDER BY `Patient`.`Birthday` ASC
SELECT `Patient`.`ID`, `Patient`.`Diagnosis`, (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) AS `age` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`RBC` < 3.5
SELECT `Patient`.`ID`, `Patient`.`Admission` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'F' AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) >= 50 AND (`Laboratory`.`RBC` <= 3.5 OR `Laboratory`.`RBC` >= 6.0);
SELECT DISTINCT `Patient`.`ID`, `Patient`.`SEX` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '-' AND `Laboratory`.`HGB` < 10;
SELECT `p`.`ID`, `p`.`SEX` FROM `Patient` p JOIN `Laboratory` l ON `p`.`ID` = `l`.`ID` WHERE `p`.`Diagnosis` = 'SLE' AND `l`.`HGB` > 10 AND `l`.`HGB` < 17 ORDER BY `p`.`Birthday` ASC LIMIT 1
SELECT `p`.`ID`, (strftime('%Y', 'now') - strftime('%Y', `p`.`Birthday`)) AS `age` FROM `Patient` p JOIN `Laboratory` l ON `p`.`ID` = `l`.`ID` WHERE `l`.`HCT` >= 52 GROUP BY `p`.`ID` HAVING COUNT(`l`.`ID`) > 2
SELECT AVG(`HCT`) FROM `Laboratory` WHERE `Date` LIKE '1991%' AND `HCT` < 29;
SELECT (SELECT COUNT(DISTINCT `ID`) FROM `Laboratory` WHERE `PLT` < 100) AS `Lower_than_normal`, (SELECT COUNT(DISTINCT `ID`) FROM `Laboratory` WHERE `PLT` > 400) AS `Higher_than_normal`
SELECT DISTINCT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday`, `Patient`.`Description`, `Patient`.`First Date`, `Patient`.`Admission`, `Patient`.`Diagnosis` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE strftime('%Y', `Laboratory`.`Date`) = '1984' AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) < 50 AND `Laboratory`.`PLT` BETWEEN 100 AND 400;
SELECT (SUM(CASE WHEN `SEX` = 'F' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE (strftime('%Y', 'now') - strftime('%Y', `Birthday`)) > 55 AND `PT` >= 14;
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday`, `Patient`.`Description`, `Patient`.`First Date`, `Patient`.`Admission`, `Patient`.`Diagnosis` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE strftime('%Y', `Patient`.`First Date`) > '1992' AND `Laboratory`.`PT` < 14;
SELECT COUNT(*) FROM `Examination` JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Examination Date` > '1997-01-01' AND `Laboratory`.`APTT` < 45;
SELECT COUNT(DISTINCT `Laboratory`.`ID`) FROM `Laboratory` JOIN `Examination` ON `Laboratory`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`APTT` > 45 AND `Examination`.`Thrombosis` = 0;
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`WBC` > 3.5 AND `Laboratory`.`WBC` < 9.0 AND (`Laboratory`.`FG` <= 150 OR `Laboratory`.`FG` >= 450)
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Birthday` > '1980-01-01' AND (`Laboratory`.`FG` < 150 OR `Laboratory`.`FG` > 450)
SELECT DISTINCT `Patient`.`Diagnosis` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`U-PRO` >= 30
SELECT `Patient`.`ID` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'SLE' AND `Laboratory`.`U-PRO` > 0 AND `Laboratory`.`U-PRO` < 30;
SELECT COUNT(DISTINCT `ID`) FROM `Laboratory` WHERE `IGG` >= 2000
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`IGG` > 900 AND `Laboratory`.`IGG` < 2000 AND `Examination`.`Symptoms` IS NOT NULL;
SELECT `Diagnosis` FROM `Patient` WHERE `ID` = (SELECT `ID` FROM `Laboratory` WHERE `IGA` BETWEEN 80 AND 500 ORDER BY `IGA` DESC LIMIT 1)
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`IGA` > 80 AND `Laboratory`.`IGA` < 500 AND strftime('%Y', `Patient`.`First Date`) >= '1990';
SELECT `Diagnosis` FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Laboratory` WHERE `IGM` <= 40 OR `IGM` >= 400) GROUP BY `Diagnosis` ORDER BY COUNT(`Diagnosis`) DESC LIMIT 1;
SELECT COUNT(*) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`CRP` = '+' AND `Patient`.`Description` IS NULL;
SELECT COUNT(*) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`CRE` >= 1.5 AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) < 70;
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`RA` IN ('-', '+-') AND `Examination`.`KCT` = '+'
SELECT DISTINCT `p`.`Diagnosis` FROM `Patient` p JOIN `Laboratory` l ON `p`.`ID` = `l`.`ID` WHERE strftime('%Y', `p`.`Birthday`) >= '1985' AND `l`.`RA` IN ('-', '+-');
SELECT `Patient`.`ID` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`RF` < 20 AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) > 60;
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`RF` < 20 AND `Examination`.`Thrombosis` = '0';
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`C3` > 35 AND `Examination`.`ANA Pattern` = 'P'
SELECT `e`.`ID` FROM `Examination` e JOIN `Laboratory` l ON `e`.`ID` = `l`.`ID` WHERE `l`.`HCT` <= 29 OR `l`.`HCT` >= 52 ORDER BY `e`.`aCL IgA` DESC LIMIT 1;
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Thrombosis` = 'Blood Clots in veins' AND `Laboratory`.`C4` > 10;
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`RNP` IN ('-', '+-') AND `Patient`.`Admission` = '+'
SELECT `p`.`Birthday` FROM `Patient` p JOIN `Laboratory` l ON `p`.`ID` = `l`.`ID` WHERE `l`.`RNP` NOT IN ('-', '+-') ORDER BY `p`.`Birthday` DESC LIMIT 1
SELECT COUNT(*) FROM `Patient` p JOIN `Examination` e ON p.`ID` = e.`ID` JOIN `Laboratory` l ON p.`ID` = l.`ID` WHERE l.`SM` IN ('-', '0') AND e.`Thrombosis` = 0;
SELECT `ID` FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Laboratory` WHERE `SM` NOT IN ('negative', '0')) ORDER BY `Birthday` DESC LIMIT 3
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Examination Date` > '1997-01-01' AND `Laboratory`.`SC170` IN ('negative', '0')
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`SC170` IN ('negative', '0') AND `Patient`.`SEX` = 'F' AND `Examination`.`Symptoms` IS NULL;
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`SSA` IN ('-', '+-') AND strftime('%Y', `Patient`.`First Date`) < '2000';
SELECT `p`.`ID` FROM `Patient` p JOIN `Laboratory` l ON `p`.`ID` = `l`.`ID` WHERE `l`.`SSA` NOT IN ('negative', '0') ORDER BY `p`.`First Date` ASC LIMIT 1
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`SSB` IN ('-', '0') AND `Examination`.`Diagnosis` = 'SLE';
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`SSB` IN ('negative', '0') AND `Examination`.`Symptoms` IS NOT NULL;
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`CENTROMEA` IN ('-', '+-') AND `Laboratory`.`SSB` IN ('-', '+-')
SELECT DISTINCT `Patient`.`Diagnosis` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`DNA` >= 8
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`DNA` < 8 AND `Patient`.`Description` IS NULL;
SELECT COUNT(*) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`IGG` > 900 AND `Laboratory`.`IGG` < 2000 AND `Patient`.`Admission` = '+'
SELECT 100.0 * (SELECT COUNT(`ID`) FROM `Laboratory` WHERE `GOT` >= 60 AND `Diagnosis` = 'SLE') / (SELECT COUNT(`ID`) FROM `Laboratory` WHERE `GOT` >= 60) AS percentage;
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`GOT` < 60
SELECT `Birthday` FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Laboratory` WHERE `GOT` >= 60) ORDER BY `Birthday` DESC LIMIT 1
SELECT `Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `GPT` < 60 ORDER BY `GPT` DESC LIMIT 3
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GOT` < 60 AND `Patient`.`SEX` = 'M'
SELECT `First Date` FROM `Patient` WHERE `ID` = (SELECT `ID` FROM `Laboratory` WHERE `LDH` < 500 ORDER BY `LDH` DESC LIMIT 1) ORDER BY `First Date` ASC LIMIT 1;
SELECT MAX(`Date`) FROM `Laboratory` WHERE `ID` = (SELECT `ID` FROM `Patient` WHERE `First Date` = (SELECT MAX(`First Date`) FROM `Patient`)) AND `LDH` >= 500
SELECT COUNT(DISTINCT `Laboratory`.`ID`) FROM `Laboratory` JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`ALP` >= 300 AND `Patient`.`Admission` = '+'
SELECT COUNT(*) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '-' AND `Laboratory`.`ALP` < 300;
SELECT DISTINCT `Diagnosis` FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Laboratory` WHERE `TP` < 6.0)
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'SJS' AND `Laboratory`.`TP` > 6.0 AND `Laboratory`.`TP` < 8.5;
SELECT `Examination Date` FROM `Examination` WHERE `ID` = (SELECT `ID` FROM `Laboratory` WHERE `ALB` = (SELECT MAX(`ALB`) FROM `Laboratory` WHERE `ALB` > 3.5 AND `ALB` < 5.5))
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`ALB` > 3.5 AND `Laboratory`.`ALB` < 5.5 AND `Laboratory`.`TP` BETWEEN 6.0 AND 8.5;
SELECT `Examination`.`aCL IgG`, `Examination`.`aCL IgM`, `Examination`.`aCL IgA` FROM `Examination` JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'F' AND `Laboratory`.`UA` <= 6.50 ORDER BY `Laboratory`.`UA` DESC LIMIT 1
SELECT MAX(`ANA`) FROM `Examination` WHERE `ID` IN (SELECT `ID` FROM `Laboratory` WHERE `CRE` < 1.5);
SELECT `e`.`ID` FROM `Examination` e JOIN `Laboratory` l ON `e`.`ID` = `l`.`ID` WHERE `l`.`CRE` < 1.5 AND `e`.`aCL IgA` = (SELECT MAX(`aCL IgA`) FROM `Examination`)
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`T-BIL` >= 2.0 AND `Examination`.`ANA Pattern` LIKE '%P%'
SELECT `e`.`ANA` FROM `Examination` e JOIN `Laboratory` l ON `e`.`ID` = `l`.`ID` WHERE `l`.`T-BIL` = (SELECT MAX(`T-BIL`) FROM `Laboratory` WHERE `T-BIL` < 2.0)
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`T-CHO` >= 250 AND `Examination`.`KCT` = '-'
SELECT COUNT(*) FROM `Patient` p JOIN `Examination` e ON p.`ID` = e.`ID` JOIN `Laboratory` l ON p.`ID` = l.`ID` WHERE l.`T-CHO` < 250 AND e.`ANA Pattern` = 'P'
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TG` < 200 AND `Examination`.`Symptoms` IS NOT NULL;
SELECT `Diagnosis` FROM `Patient` WHERE `ID` = (SELECT `ID` FROM `Laboratory` WHERE `TG` < 200 ORDER BY `TG` DESC LIMIT 1)
SELECT DISTINCT `Patient`.`ID` FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Thrombosis` = 0 AND `Laboratory`.`CPK` < 250
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`CPK` < 250 AND (`Examination`.`KCT` = '+' OR `Examination`.`RVVT` = '+' OR `Examination`.`LAC` = '+')
SELECT `Birthday` FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Laboratory` WHERE `GLU` > 180) ORDER BY `Birthday` ASC LIMIT 1
SELECT COUNT(*) FROM `Patient` p JOIN `Laboratory` l ON p.`ID` = l.`ID` JOIN `Examination` e ON p.`ID` = e.`ID` WHERE l.`GLU` < 180 AND e.`Thrombosis` = 0;
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '+' AND `Laboratory`.`WBC` BETWEEN 3.5 AND 9.0;
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'SLE' AND `Laboratory`.`WBC` BETWEEN 3.5 AND 9.0;
SELECT `Patient`.`ID` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE (`Laboratory`.`RBC` <= 3.5 OR `Laboratory`.`RBC` >= 6.0) AND `Patient`.`Admission` = '-'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`PLT` > 100 AND `Laboratory`.`PLT` < 400 AND `Patient`.`Diagnosis` IS NOT NULL;
SELECT `Laboratory`.`PLT` FROM `Laboratory` JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`PLT` > 100 AND `Laboratory`.`PLT` < 400 AND `Patient`.`Diagnosis` = 'MCTD'
SELECT AVG(`Laboratory`.`PT`) AS `average_prothrombin_time` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`PT` < 14;
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Examination` JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Thrombosis` IN (1, 2) AND `Laboratory`.`PT` < 14;
SELECT `major`.`major_name` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Angela' AND `member`.`last_name` = 'Sanders'
SELECT COUNT(*) FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`college` = 'College of Engineering'
SELECT `first_name`, `last_name` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`department` = 'Art and Design'
SELECT COUNT(DISTINCT `link_to_member`) FROM `attendance` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'Women''s Soccer')
SELECT DISTINCT `m`.`phone` FROM `member` AS `m` JOIN `attendance` AS `a` ON `m`.`member_id` = `a`.`link_to_member` JOIN `event` AS `e` ON `a`.`link_to_event` = `e`.`event_id` WHERE `e`.`event_name` = 'Women's Soccer'
SELECT COUNT(*) FROM `attendance` a JOIN `member` m ON a.`link_to_member` = m.`member_id` JOIN `event` e ON a.`link_to_event` = e.`event_id` WHERE e.`event_name` = 'Women's Soccer' AND m.`t_shirt_size` = 'Medium'
SELECT `e`.`event_id`, `e`.`event_name`, `e`.`event_date`, `e`.`type`, `e`.`notes`, `e`.`location`, `e`.`status` FROM `event` AS `e` JOIN `attendance` AS `a` ON `e`.`event_id` = `a`.`link_to_event` GROUP BY `e`.`event_id` ORDER BY COUNT(`a`.`link_to_member`) DESC LIMIT 1;
SELECT `major`.`college` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'Vice President'
SELECT DISTINCT `e`.`event_name` FROM `event` e JOIN `attendance` a ON `e`.`event_id` = `a`.`link_to_event` JOIN `member` m ON `a`.`link_to_member` = `m`.`member_id` WHERE `m`.`first_name` = 'Maya' AND `m`.`last_name` = 'Mclean'
SELECT COUNT(*) FROM `attendance` a JOIN `member` m ON a.`link_to_member` = m.`member_id` JOIN `event` e ON a.`link_to_event` = e.`event_id` WHERE m.`first_name` = 'Sacha' AND m.`last_name` = 'Harrison' AND strftime('%Y', e.`event_date`) = '2019'
SELECT COUNT(DISTINCT `e`.`event_id`) FROM `event` e JOIN `attendance` a ON `e`.`event_id` = `a`.`link_to_event` WHERE `e`.`type` = 'Meeting' GROUP BY `e`.`event_id` HAVING COUNT(`a`.`link_to_member`) > 10
SELECT `event_name` FROM `event` WHERE `event_id` IN (SELECT `link_to_event` FROM `attendance` GROUP BY `link_to_event` HAVING COUNT(`link_to_member`) > 20) AND `type` != 'fundraiser'
SELECT COUNT(a.link_to_member) * 1.0 / COUNT(DISTINCT e.event_name) AS average_attendance FROM `attendance` a JOIN `event` e ON a.link_to_event = e.event_id WHERE e.type = 'Meeting' AND strftime('%Y', e.event_date) = '2020'
SELECT `expense_description` FROM `expense` WHERE `cost` = (SELECT MAX(`cost`) FROM `expense`)
SELECT COUNT(*) FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Environmental Engineering'
SELECT `m`.`first_name`, `m`.`last_name` FROM `member` AS `m` JOIN `attendance` AS `a` ON `m`.`member_id` = `a`.`link_to_member` JOIN `event` AS `e` ON `a`.`link_to_event` = `e`.`event_id` WHERE `e`.`event_name` = 'Laugh Out Loud'
SELECT `last_name` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Law and Constitutional Studies'
SELECT `z`.`county` FROM `member` AS `m` JOIN `zip_code` AS `z` ON `m`.`zip` = `z`.`zip_code` WHERE `m`.`first_name` = 'Sherri' AND `m`.`last_name` = 'Ramsey'
SELECT `major`.`college` FROM `major` JOIN `member` ON `major`.`major_id` = `member`.`link_to_major` WHERE `member`.`first_name` = 'Tyler' AND `member`.`last_name` = 'Hewitt'
SELECT SUM(`amount`) FROM `income` WHERE `link_to_member` IN (SELECT `member_id` FROM `member` WHERE `position` = 'Vice President')
SELECT SUM(`spent`) FROM `budget` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `budget`.`category` = 'Food' AND `event`.`event_name` = 'September Meeting'
SELECT `zip_code`.`city`, `zip_code`.`state` FROM `member` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`position` = 'President'
SELECT `first_name` || ' ' || `last_name` AS `full_name` FROM `member` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`state` = 'Illinois'
SELECT SUM(`spent`) FROM `budget` WHERE `category` = 'Advertisement' AND `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'September Meeting')
SELECT DISTINCT `major`.`department` FROM `major` JOIN `member` ON `major`.`major_id` = `member`.`link_to_major` WHERE (`member`.`first_name` = 'Pierce' AND `member`.`last_name` = 'Guidi');
SELECT SUM(`amount`) FROM `budget` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'October Speaker')
SELECT e.`expense_id`, e.`approved` FROM `expense` e JOIN `budget` b ON e.`link_to_budget` = b.`budget_id` JOIN `event` ev ON b.`link_to_event` = ev.`event_id` WHERE ev.`event_name` = 'October Meeting' AND ev.`event_date` = '2019-10-08';
SELECT AVG(`cost`) AS `total_average_cost` FROM `expense` WHERE `link_to_member` = (SELECT `member_id` FROM `member` WHERE `first_name` = 'Elijah' AND `last_name` = 'Allen') AND (SUBSTR(`expense_date`, 6, 2) = '09' OR SUBSTR(`expense_date`, 6, 2) = '10')
SELECT (SELECT IFNULL(SUM(`spent`), 0) FROM `budget` WHERE `link_to_event` IN (SELECT `event_id` FROM `event` WHERE `event_date` LIKE '2019%' AND `event_name` = 'Student_Club')) - (SELECT IFNULL(SUM(`spent`), 0) FROM `budget` WHERE `link_to_event` IN (SELECT `event_id` FROM `event` WHERE `event_date` LIKE '2020%' AND `event_name` = 'Student_Club')) AS `difference`
SELECT `location` FROM `event` WHERE `event_name` = 'Spring Budget Review'
SELECT SUM(`cost`) FROM `expense` WHERE `expense_description` = 'Posters' AND `expense_date` = '2019-09-04'
SELECT `remaining` FROM `budget` WHERE `category` = 'Food' ORDER BY `amount` DESC LIMIT 1
SELECT `notes` FROM `income` WHERE `source` = 'Fundraising' AND `date_received` = '2019-09-14'
SELECT COUNT(DISTINCT `major_id`) FROM `major` WHERE `college` = 'College of Humanities and Social Sciences';
SELECT `phone` FROM `member` WHERE `first_name` = 'Carlo' AND `last_name` = 'Jacobs'
SELECT `zip_code`.`county` FROM `member` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`first_name` = 'Adela' AND `member`.`last_name` = "O'Gallagher"
SELECT COUNT(*) FROM `budget` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'November Meeting' AND `budget`.`remaining` < 0
SELECT SUM(`amount`) FROM `budget` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'September Speaker')
SELECT `e`.`status` FROM `event` e JOIN `budget` b ON `e`.`event_id` = `b`.`link_to_event` JOIN `expense` ex ON `b`.`budget_id` = `ex`.`link_to_budget` WHERE `ex`.`expense_description` = 'Post Cards, Posters' AND `ex`.`expense_date` = '2019-8-20'
SELECT `major`.`major_name` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Brent' AND `member`.`last_name` = 'Thomason'
SELECT COUNT(*) FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business' AND `member`.`t_shirt_size` = 'Medium'
SELECT `zip_code`.`type` FROM `member` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`first_name` = 'Christof' AND `member`.`last_name` = 'Nielson'
SELECT `major`.`major_name` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'Vice President'
SELECT `z`.`state` FROM `member` AS `m` JOIN `zip_code` AS `z` ON `m`.`zip` = `z`.`zip_code` WHERE `m`.`first_name` = 'Sacha' AND `m`.`last_name` = 'Harrison'
SELECT `major`.`department` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'President'
SELECT `date_received` FROM `income` JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Connor' AND `member`.`last_name` = 'Hilton' AND `income`.`source` = 'Dues'
SELECT `first_name`, `last_name` FROM `member` WHERE `member_id` = (SELECT `link_to_member` FROM `income` WHERE `source` = 'Dues' ORDER BY `date_received` ASC LIMIT 1)
SELECT SUM(CASE WHEN `event_name` = 'Yearly Kickoff' THEN `amount` ELSE 0 END) / SUM(CASE WHEN `event_name` = 'October Meeting' THEN `amount` ELSE 0 END) AS `times` FROM `budget` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `budget`.`category` = 'Advertisement';
SELECT (SUM(CASE WHEN `category` = 'Parking' THEN `amount` ELSE 0 END) / SUM(`amount`)) * 100 AS percentage FROM `budget` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'November Speaker'
SELECT SUM(`cost`) AS `total_pizza_cost` FROM `expense` WHERE `expense_description` = 'Pizza'
SELECT COUNT(DISTINCT `city`) FROM `zip_code` WHERE `county` = 'Orange County' AND `state` = 'Virginia'
SELECT DISTINCT `department` FROM `major` WHERE `college` = 'College of Humanities and Social Sciences'
SELECT `city`, `county`, `state` FROM `member` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `first_name` = 'Amy' AND `last_name` = 'Firth'
SELECT `expense_description` FROM `expense` WHERE `link_to_budget` = (SELECT `budget_id` FROM `budget` WHERE `remaining` = (SELECT MIN(`remaining`) FROM `budget`))
SELECT `m`.`member_id`, `m`.`first_name`, `m`.`last_name` FROM `member` AS `m` JOIN `attendance` AS `a` ON `m`.`member_id` = `a`.`link_to_member` JOIN `event` AS `e` ON `a`.`link_to_event` = `e`.`event_id` WHERE `e`.`event_name` = 'October Meeting'
SELECT `major`.`college` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` GROUP BY `major`.`college` ORDER BY COUNT(`member`.`member_id`) DESC LIMIT 1;
SELECT `major`.`major_name` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`phone` = '809-555-3360'
SELECT `event`.`event_name` FROM `event` JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` ORDER BY `budget`.`amount` DESC LIMIT 1
SELECT `e`.`expense_description` FROM `expense` e JOIN `member` m ON `e`.`link_to_member` = `m`.`member_id` WHERE `m`.`position` = 'Vice President'
SELECT COUNT(DISTINCT `attendance`.`link_to_member`) FROM `attendance` JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Women''s Soccer'
SELECT `income`.`date_received` FROM `income` JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Casey' AND `member`.`last_name` = 'Mason'
SELECT COUNT(DISTINCT `member`.`member_id`) FROM `member` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`state` = 'Maryland'
SELECT COUNT(*) FROM `attendance` JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `member`.`phone` = '954-555-6240'
SELECT `first_name`, `last_name` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`department` = 'School of Applied Sciences, Technology and Education'
SELECT e.`event_name` FROM `event` e JOIN `budget` b ON e.`event_id` = b.`link_to_event` WHERE e.`status` = 'Closed' ORDER BY (b.`spent` / b.`amount`) DESC LIMIT 1
SELECT COUNT(*) FROM `member` WHERE `position` = 'President'
SELECT MAX(`spent`) AS `highest_spent` FROM `budget`
SELECT COUNT(*) FROM `event` WHERE `type` = 'Meeting' AND strftime('%Y', `event_date`) = '2020'
SELECT SUM(`spent`) FROM `budget` WHERE `category` = 'Food'
SELECT `first_name` || ' ' || `last_name` AS `full_name` FROM `member` WHERE `member_id` IN (SELECT `link_to_member` FROM `attendance` GROUP BY `link_to_member` HAVING COUNT(`link_to_event`) > 7)
SELECT `m`.`first_name`, `m`.`last_name` FROM `member` m JOIN `attendance` a ON `m`.`member_id` = `a`.`link_to_member` JOIN `event` e ON `a`.`link_to_event` = `e`.`event_id` JOIN `major` ma ON `m`.`link_to_major` = `ma`.`major_id` WHERE `ma`.`major_name` = 'Interior Design' AND `e`.`event_name` = 'Community Theater'
SELECT `first_name`, `last_name` FROM `member` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`city` = 'Georgetown' AND `zip_code`.`state` = 'South Carolina'
SELECT SUM(`income`.`amount`) FROM `income` JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Grant' AND `member`.`last_name` = 'Gilmour'
SELECT `first_name`, `last_name` FROM `member` INNER JOIN `income` ON `member`.`member_id` = `income`.`link_to_member` WHERE `income`.`amount` > 40
SELECT SUM(`cost`) AS `total_expense` FROM `expense` JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Yearly Kickoff'
SELECT `first_name`, `last_name` FROM `member` WHERE `member_id` IN (SELECT `link_to_member` FROM `expense` WHERE `link_to_budget` IN (SELECT `budget_id` FROM `budget` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'Yearly Kickoff')));
SELECT `m`.`first_name` || ' ' || `m`.`last_name` AS `full_name`, `i`.`source` FROM `member` m JOIN `income` i ON `m`.`member_id` = `i`.`link_to_member` WHERE `i`.`amount` = (SELECT MAX(`amount`) FROM `income`)
SELECT `event_name` FROM `event` JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` ORDER BY `cost` ASC LIMIT 1
SELECT (SUM(e1.`cost`) * 100.0 / SUM(e2.`cost`)) AS `percentage` FROM `expense` e1 JOIN `budget` b1 ON e1.`link_to_budget` = b1.`budget_id` JOIN `event` ev1 ON b1.`link_to_event` = ev1.`event_id`, `expense` e2 WHERE ev1.`event_name` = 'Yearly Kickoff'
SELECT CAST(SUM(m.`link_to_major` = (SELECT `major_id` FROM `major` WHERE `major_name` = 'Finance')) AS FLOAT) / SUM(m.`link_to_major` = (SELECT `major_id` FROM `major` WHERE `major_name` = 'Physics')) AS ratio FROM `member` m
SELECT `source` FROM `income` WHERE `date_received` BETWEEN '2019-09-01' AND '2019-09-30' ORDER BY `amount` DESC LIMIT 1
SELECT `first_name`, `last_name`, `email` FROM `member` WHERE `position` = 'Secretary'
SELECT COUNT(*) FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Physics Teaching'
SELECT COUNT(DISTINCT `link_to_member`) FROM `attendance` WHERE `link_to_event` IN (SELECT `event_id` FROM `event` WHERE `event_name` = 'Community Theater' AND strftime('%Y', `event_date`) = '2019')
SELECT COUNT(DISTINCT `attendance`.`link_to_event`) AS `number_of_events`, `major`.`major_name` AS `major` FROM `member` JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Luisa' AND `member`.`last_name` = 'Guidi'
SELECT SUM(`spent`) / COUNT(`spent`) AS `average_spent_on_food` FROM `budget` WHERE `category` = 'Food' AND `event_status` = 'Closed';
SELECT `event_name` FROM `event` JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`category` = 'Advertisement' ORDER BY `budget`.`spent` DESC LIMIT 1
SELECT EXISTS (SELECT 1 FROM `attendance` a JOIN `member` m ON a.`link_to_member` = m.`member_id` JOIN `event` e ON a.`link_to_event` = e.`event_id` WHERE m.`first_name` = 'Maya' AND m.`last_name` = 'Mclean' AND e.`event_name` = 'Women''s Soccer') AS attended
SELECT (SUM(`type` = 'Community Service') * 100.0 / COUNT(`event_id`)) AS percentage_share FROM `event` WHERE `event_date` BETWEEN '2019-01-01' AND '2019-12-31'
SELECT `e`.`cost` FROM `expense` e JOIN `budget` b ON e.`link_to_budget` = b.`budget_id` JOIN `event` ev ON b.`link_to_event` = ev.`event_id` WHERE e.`expense_description` = 'Posters' AND ev.`event_name` = 'September Speaker'
SELECT `t_shirt_size` FROM `member` GROUP BY `t_shirt_size` ORDER BY COUNT(`t_shirt_size`) DESC LIMIT 1
SELECT `event`.`event_name` FROM `event` JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`status` = 'Closed' AND `budget`.`remaining` = (SELECT MIN(`remaining`) FROM `budget` WHERE `remaining` < 0)
SELECT `expense_description`, SUM(`cost`) AS `total_value` FROM `expense` JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'October Meeting' AND `expense`.`approved` = 1 GROUP BY `expense_description`
SELECT `category`, SUM(`amount`) AS `amount_budgeted` FROM `budget` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'April Speaker') GROUP BY `category` ORDER BY `amount_budgeted` ASC
SELECT MAX(`amount`) FROM `budget` WHERE `category` = 'Food'
SELECT `budget_id`, `amount` FROM `budget` WHERE `category` = 'Advertisement' ORDER BY `amount` DESC LIMIT 3
SELECT SUM(`cost`) FROM `expense` WHERE `expense_description` = 'Parking'
SELECT SUM(`cost`) AS `total_expense` FROM `expense` WHERE `expense_date` = '2019-08-20'
SELECT `first_name` || ' ' || `last_name` AS `full_name`, SUM(`cost`) AS `total_cost` FROM `member` JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` WHERE `member`.`member_id` = 'rec4BLdZHS2Blfp4v' GROUP BY `member`.`member_id`
SELECT DISTINCT `expense`.`expense_description` FROM `expense` JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Sacha' AND `member`.`last_name` = 'Harrison'
SELECT DISTINCT `expense`.`expense_description` FROM `expense` JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`t_shirt_size` = 'X-Large'
SELECT DISTINCT `zip` FROM `member` WHERE `member_id` IN (SELECT `link_to_member` FROM `expense` WHERE `cost` < 50)
SELECT `major`.`major_name` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Phillip' AND `member`.`last_name` = 'Cullen'
SELECT DISTINCT `position` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business'
SELECT COUNT(*) FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business' AND `member`.`t_shirt_size` = 'Medium'
SELECT DISTINCT `e`.`type` FROM `event` e JOIN `budget` b ON `e`.`event_id` = `b`.`link_to_event` WHERE `b`.`remaining` > 30
SELECT DISTINCT `category` FROM `budget` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`location` = 'MU 215'
SELECT `category` FROM `budget` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_date` = '2020-03-24T12:00:00')
SELECT DISTINCT `major`.`major_name` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'Vice President'
SELECT (SUM(CASE WHEN `position` = 'Member' AND `major_name` = 'Business' THEN 1 ELSE 0 END) * 100.0 / COUNT(`member_id`)) AS percentage FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id`
SELECT DISTINCT `category` FROM `budget` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`location` = 'MU 215'
SELECT COUNT(*) FROM `income` WHERE `amount` = 50
SELECT COUNT(*) FROM `member` WHERE `position` = 'Member' AND `t_shirt_size` = 'X-Large'
SELECT COUNT(*) FROM `major` WHERE `college` = 'College of Agriculture and Applied Sciences' AND `department` = 'School of Applied Sciences, Technology and Education'
SELECT `m`.`last_name`, `maj`.`department`, `maj`.`college` FROM `member` AS `m` JOIN `major` AS `maj` ON `m`.`link_to_major` = `maj`.`major_id` WHERE `maj`.`major_name` = 'Environmental Engineering'
SELECT DISTINCT `budget`.`category` FROM `budget` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`location` = 'MU 215' AND `event`.`type` = 'Guest Speaker' AND `budget`.`spent` = 0
SELECT DISTINCT `zip_code`.`city`, `zip_code`.`state` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `major`.`department` = 'Electrical and Computer Engineering Department' AND `member`.`position` = 'Member'
SELECT e.`event_name` FROM `event` e JOIN `attendance` a ON e.`event_id` = a.`link_to_event` JOIN `member` m ON a.`link_to_member` = m.`member_id` WHERE e.`type` = 'Social' AND m.`position` = 'Vice President' AND e.`location` = '900 E. Washington St.'
SELECT `m`.`last_name`, `m`.`position` FROM `member` AS `m` JOIN `expense` AS `e` ON `m`.`member_id` = `e`.`link_to_member` WHERE `e`.`expense_description` = 'Pizza' AND `e`.`expense_date` = '2019-09-10'
SELECT DISTINCT `m`.`last_name` FROM `member` m JOIN `attendance` a ON `m`.`member_id` = `a`.`link_to_member` JOIN `event` e ON `a`.`link_to_event` = `e`.`event_id` WHERE `m`.`position` = 'Member' AND `e`.`event_name` = 'Women''s Soccer'
SELECT (COUNT(CASE WHEN `i`.`amount` = 50 THEN 1 END) * 100.0 / COUNT(`m`.`member_id`)) AS `percentage` FROM `member` AS `m` JOIN `income` AS `i` ON `m`.`member_id` = `i`.`link_to_member` WHERE `m`.`t_shirt_size` = 'Medium' AND `m`.`position` = 'Member';
SELECT DISTINCT `county` FROM `zip_code` WHERE `type` = 'PO Box'
SELECT `zip_code` FROM `zip_code` WHERE `type` = 'PO Box' AND `city` = 'San Juan Municipio' AND `state` = 'Puerto Rico'
SELECT `event_name` FROM `event` WHERE `type` = 'Game' AND `status` = 'Closed' AND `event_date` BETWEEN '2019-03-15' AND '2020-03-20'
SELECT DISTINCT `attendance`.`link_to_event` FROM `attendance` JOIN `expense` ON `attendance`.`link_to_member` = `expense`.`link_to_member` WHERE `expense`.`cost` > 50
SELECT DISTINCT `m`.`member_id`, `m`.`first_name`, `m`.`last_name`, `a`.`link_to_event` FROM `member` m JOIN `expense` e ON `m`.`member_id` = `e`.`link_to_member` JOIN `attendance` a ON `m`.`member_id` = `a`.`link_to_member` WHERE `e`.`approved` = 'true' AND `e`.`expense_date` BETWEEN '2019-01-10' AND '2019-11-19'
SELECT `major`.`college` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Katy' AND `member`.`link_to_major` = 'rec1N0upiVLy5esTO'
SELECT `m`.`phone` FROM `member` AS `m` JOIN `major` AS `ma` ON `m`.`link_to_major` = `ma`.`major_id` WHERE `ma`.`major_name` = 'Business' AND `ma`.`college` = 'College of Agriculture and Applied Sciences'
SELECT DISTINCT `m`.`email` FROM `expense` e JOIN `member` m ON `e`.`link_to_member` = `m`.`member_id` WHERE `e`.`expense_date` BETWEEN '2019-09-10' AND '2019-11-19' AND `e`.`cost` > 20;
SELECT COUNT(*) FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'education' AND `major`.`college` = 'Education & Human Services'
SELECT (SUM(CASE WHEN `remaining` < 0 THEN 1 ELSE 0 END) * 100.0 / COUNT(`event_id`)) AS `percentage` FROM `budget`
SELECT `event_id`, `location`, `status` FROM `event` WHERE `event_date` BETWEEN '2019-11-01' AND '2020-03-31'
SELECT `expense_description` FROM `expense` GROUP BY `expense_description` HAVING AVG(`cost`) > 50
SELECT `first_name`, `last_name` FROM `member` WHERE `t_shirt_size` = 'X-Large'
SELECT (SUM(`type` = 'PO Box') * 100.0 / COUNT(`zip_code`)) AS percentage_po_box FROM `zip_code`
SELECT `event`.`event_name`, `event`.`location` FROM `event` JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`remaining` > 0
SELECT DISTINCT `e`.`event_name`, `e`.`event_date` FROM `event` e JOIN `budget` b ON `e`.`event_id` = `b`.`link_to_event` JOIN `expense` ex ON `b`.`budget_id` = `ex`.`link_to_budget` WHERE `ex`.`expense_description` = 'Pizza' AND `ex`.`cost` > 50 AND `ex`.`cost` < 100
SELECT `member`.`first_name`, `member`.`last_name`, `major`.`major_name` FROM `member` JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `expense`.`cost` > 100
SELECT DISTINCT `zip_code`.`city`, `zip_code`.`county` FROM `event` JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `event`.`event_id` IN (SELECT `link_to_event` FROM `income` GROUP BY `link_to_event` HAVING COUNT(`income_id`) > 40)
SELECT `m`.`first_name`, `m`.`last_name`, SUM(`e`.`cost`) AS `total_cost` FROM `member` AS `m` JOIN `expense` AS `e` ON `m`.`member_id` = `e`.`link_to_member` JOIN `budget` AS `b` ON `e`.`link_to_budget` = `b`.`budget_id` GROUP BY `m`.`member_id` HAVING COUNT(DISTINCT `b`.`link_to_event`) > 1 ORDER BY `total_cost` DESC LIMIT 1;
SELECT AVG(`cost`) FROM `expense` JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`position` != 'Member'
SELECT `event_name` FROM `event` JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`category` = 'Parking' AND `budget`.`spent` < (SELECT AVG(`spent`) FROM `budget` WHERE `category` = 'Parking');
SELECT (SUM(`e`.`cost`) * 100.0 / COUNT(DISTINCT `ev`.`event_id`)) AS `percentage` FROM `expense` AS `e` JOIN `budget` AS `b` ON `e`.`link_to_budget` = `b`.`budget_id` JOIN `event` AS `ev` ON `b`.`link_to_event` = `ev`.`event_id` WHERE `ev`.`type` = 'Meeting'
SELECT `b`.`budget_id`, `b`.`category`, `b`.`amount` FROM `budget` b JOIN `expense` e ON `b`.`budget_id` = `e`.`link_to_budget` WHERE `e`.`expense_description` = 'Water, chips, cookies' ORDER BY `e`.`cost` DESC LIMIT 1
SELECT `m`.`first_name`, `m`.`last_name` FROM `member` AS `m` JOIN `expense` AS `e` ON `m`.`member_id` = `e`.`link_to_member` GROUP BY `m`.`member_id` ORDER BY SUM(`e`.`cost`) DESC LIMIT 5
SELECT `m`.`first_name`, `m`.`last_name`, `m`.`phone` FROM `member` AS `m` JOIN `expense` AS `e` ON `m`.`member_id` = `e`.`link_to_member` GROUP BY `m`.`member_id` HAVING AVG(`e`.`cost`) < (SELECT AVG(`cost`) FROM `expense`)
SELECT (CAST(SUM(`z`.`state` = 'New Jersey') AS FLOAT) / COUNT(`m`.`position` = 'Member')) - (CAST(SUM(`z`.`state` = 'Vermont') AS FLOAT) / COUNT(`m`.`position` = 'Member')) AS difference FROM `member` `m` JOIN `zip_code` `z` ON `m`.`zip` = `z`.`zip_code`
SELECT `major`.`major_name`, `major`.`department` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Garrett' AND `member`.`last_name` = 'Gerke'
SELECT `m`.`first_name` || ' ' || `m`.`last_name` AS `full_name`, `e`.`cost` FROM `member` AS `m` JOIN `expense` AS `e` ON `m`.`member_id` = `e`.`link_to_member` WHERE `e`.`expense_description` = 'Water, Veggie tray, supplies'
SELECT `m`.`last_name`, `m`.`phone` FROM `member` AS `m` JOIN `major` AS `maj` ON `m`.`link_to_major` = `maj`.`major_id` WHERE `maj`.`major_name` = 'Elementary Education'
SELECT `budget`.`category`, `budget`.`amount` FROM `budget` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'January Speaker'
SELECT `event_name` FROM `event` JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`category` = 'Food'
SELECT `first_name` || ' ' || `last_name` AS `full_name`, `amount` FROM `member` INNER JOIN `income` ON `member`.`member_id` = `income`.`link_to_member` WHERE `date_received` = '9/9/2019'
SELECT `budget`.`category` FROM `expense` JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` WHERE `expense`.`expense_description` = 'Posters'
SELECT `first_name` || ' ' || `last_name` AS `full_name`, `college` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `position` = 'Secretary'
SELECT e.`event_name`, SUM(b.`spent`) AS total_spent FROM `budget` b JOIN `event` e ON b.`link_to_event` = e.`event_id` WHERE b.`category` = 'Speaker Gifts' GROUP BY e.`event_name`
SELECT `city` FROM `member` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `first_name` = 'Garrett' AND `last_name` = 'Gerke'
SELECT `first_name`, `last_name`, `position` FROM `member` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`city` = 'Lincolnton' AND `zip_code`.`state` = 'North Carolina' AND `zip_code`.`zip_code` = '28092'
SELECT COUNT(DISTINCT `g`.`GasStationID`) FROM `gasstations` AS `g` JOIN `transactions_1k` AS `t` ON `g`.`GasStationID` = `t`.`GasStationID` JOIN `products` AS `p` ON `t`.`ProductID` = `p`.`ProductID` WHERE `g`.`Country` = 'CZE' AND `p`.`Description` LIKE '%Premium%'
SELECT (SELECT COUNT(*) FROM `customers` WHERE `Currency` = 'EUR') * 1.0 / (SELECT COUNT(*) FROM `customers` WHERE `Currency` = 'CZK') AS ratio
SELECT `CustomerID` FROM `yearmonth` WHERE SUBSTR(`Date`, 1, 4) BETWEEN '201201' AND '201212' AND `CustomerID` IN (SELECT `CustomerID` FROM `customers` WHERE `Segment` = 'LAM') ORDER BY `Consumption` ASC LIMIT 1;
SELECT AVG(`Consumption`) / 12 AS `Average_Monthly_Consumption` FROM `yearmonth` JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Segment` = 'SME' AND SUBSTR(`yearmonth`.`Date`, 1, 4) BETWEEN '201301' AND '201312';
SELECT `c`.`CustomerID`, SUM(`y`.`Consumption`) AS `TotalConsumption` FROM `customers` c JOIN `yearmonth` y ON `c`.`CustomerID` = `y`.`CustomerID` WHERE `c`.`Currency` = 'CZK' AND `y`.`Date` BETWEEN 201101 AND 201112 GROUP BY `c`.`CustomerID` ORDER BY `TotalConsumption` DESC LIMIT 1;
SELECT COUNT(DISTINCT `CustomerID`) FROM `yearmonth` WHERE `CustomerID` IN (SELECT `CustomerID` FROM `customers` WHERE `Segment` = 'KAM') AND `Date` BETWEEN 201201 AND 201212 GROUP BY `CustomerID` HAVING SUM(`Consumption`) < 30000
SELECT COALESCE(SUM(CASE WHEN c.Currency = 'CZK' THEN y.Consumption ELSE 0 END), 0) - COALESCE(SUM(CASE WHEN c.Currency = 'EUR' THEN y.Consumption ELSE 0 END), 0) AS ConsumptionDifference FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE SUBSTR(y.Date, 1, 6) BETWEEN '201201' AND '201212';
SELECT strftime('%Y', `Date`) AS `Year`, SUM(`Consumption`) AS `TotalConsumption` FROM `yearmonth` JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Currency` = 'EUR' GROUP BY `Year` ORDER BY `TotalConsumption` DESC LIMIT 1;
SELECT `Segment` FROM `customers` JOIN `yearmonth` ON `customers`.`CustomerID` = `yearmonth`.`CustomerID` GROUP BY `Segment` ORDER BY SUM(`Consumption`) ASC LIMIT 1;
SELECT SUBSTR(`Date`, 1, 4) AS `Year`, SUM(`Consumption`) AS `TotalConsumption` FROM `yearmonth` JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Currency` = 'CZK' GROUP BY `Year` ORDER BY `TotalConsumption` DESC LIMIT 1
SELECT SUBSTR(`Date`, 5, 2) AS `Month`, SUM(`Consumption`) AS `TotalConsumption` FROM `yearmonth` JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Segment` = 'SME' AND SUBSTR(`Date`, 1, 4) BETWEEN '201301' AND '201312' GROUP BY `Month` ORDER BY `TotalConsumption` DESC LIMIT 1;
WITH min_consumption AS (SELECT `Segment`, MIN(`Consumption`) AS min_cons FROM `yearmonth` JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `yearmonth`.`Date` BETWEEN 201301 AND 201312 AND `customers`.`Currency` = 'CZK' GROUP BY `Segment`), annual_avg AS (SELECT `Segment`, SUM(`Consumption`) / COUNT(DISTINCT `CustomerID`) AS avg_cons FROM `yearmonth` JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `yearmonth`.`Date` BETWEEN 201301 AND 201312 AND `customers`.`Currency` = 'CZK' AND `Consumption` IN (SELECT min_cons FROM min_consumption WHERE min_consumption.`Segment` = `customers`.`Segment`) GROUP BY `Segment`) SELECT (SELECT avg_cons FROM annual_avg WHERE `Segment` = 'SME') - (SELECT avg_cons FROM annual_avg WHERE `Segment` = 'LAM') AS SME_LAM_diff, (SELECT avg_cons FROM annual_avg WHERE `Segment` = 'LAM') - (SELECT avg_cons FROM annual_avg WHERE `Segment` = 'KAM') AS LAM_KAM_diff, (SELECT avg_cons FROM annual_avg WHERE `Segment` = 'KAM') - (SELECT avg_cons FROM annual_avg WHERE `Segment` = 'SME') AS KAM_SME_diff
SELECT `Segment`, MAX(`PercentageIncrease`) AS `MaxPercentageIncrease`, MIN(`PercentageIncrease`) AS `MinPercentageIncrease` FROM (SELECT c.`Segment`, (SUM(CASE WHEN SUBSTR(y.`Date`, 1, 4) = '2013' THEN y.`Consumption` ELSE 0 END) - SUM(CASE WHEN SUBSTR(y.`Date`, 1, 4) = '2012' THEN y.`Consumption` ELSE 0 END)) * 100.0 / SUM(CASE WHEN SUBSTR(y.`Date`, 1, 4) = '2013' THEN y.`Consumption` ELSE 0 END) AS `PercentageIncrease` FROM `yearmonth` y JOIN `customers` c ON y.`CustomerID` = c.`CustomerID` WHERE c.`Currency` = 'EUR' GROUP BY c.`Segment`) GROUP BY `Segment`
SELECT SUM(`Consumption`) AS total_consumption FROM `yearmonth` WHERE `CustomerID` = 6 AND `Date` BETWEEN 201308 AND 201311;
SELECT (SELECT COUNT(*) FROM `gasstations` WHERE `Country` = 'CZE' AND `Segment` = 'discount') - (SELECT COUNT(*) FROM `gasstations` WHERE `Country` = 'SVK' AND `Segment` = 'discount') AS `More_Discount_Gas_Stations`
SELECT (SELECT `Consumption` FROM `yearmonth` WHERE `CustomerID` = 7 AND `Date` = 201304) - (SELECT `Consumption` FROM `yearmonth` WHERE `CustomerID` = 5 AND `Date` = 201304) AS `ConsumptionDifference`
SELECT (SELECT COUNT(*) FROM customers WHERE `Segment` = 'SME' AND `Currency` = 'CZK') - (SELECT COUNT(*) FROM customers WHERE `Segment` = 'SME' AND `Currency` = 'EUR') AS `Amount of more SMEs`
SELECT `CustomerID` FROM `customers` WHERE `Segment` = 'LAM' AND `Currency` = 'Euro' AND `CustomerID` = (SELECT `CustomerID` FROM `yearmonth` WHERE `Date` = 201310 ORDER BY `Consumption` DESC LIMIT 1)
SELECT `CustomerID`, SUM(`Consumption`) AS `TotalConsumption` FROM `yearmonth` WHERE `CustomerID` IN (SELECT `CustomerID` FROM `customers` WHERE `Segment` = 'KAM') GROUP BY `CustomerID` ORDER BY `TotalConsumption` DESC LIMIT 1;
SELECT SUM(`Consumption`) FROM `yearmonth` JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `yearmonth`.`Date` = 201305 AND `customers`.`Segment` = 'KAM'
SELECT (COUNT(DISTINCT y.`CustomerID`) * 100.0 / (SELECT COUNT(DISTINCT `CustomerID`) FROM `customers` WHERE `Segment` = 'LAM')) AS percentage FROM `yearmonth` y JOIN `customers` c ON y.`CustomerID` = c.`CustomerID` WHERE c.`Segment` = 'LAM' AND y.`Consumption` > 46.73;
SELECT `Country`, COUNT(*) AS `ValueForMoneyGasStations` FROM `gasstations` WHERE `Segment` = 'value for money' GROUP BY `Country` ORDER BY `ValueForMoneyGasStations` DESC
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM `customers` WHERE `Segment` = 'KAM')) AS percentage_of_kam_uses_euro FROM `customers` WHERE `Segment` = 'KAM' AND `Currency` = 'Euro';
SELECT (COUNT(DISTINCT `CustomerID`) * 100.0 / (SELECT COUNT(DISTINCT `CustomerID`) FROM `yearmonth` WHERE SUBSTR(`Date`, 1, 6) = '201202')) AS percentage FROM `yearmonth` WHERE `Consumption` > 528.3 AND SUBSTR(`Date`, 1, 6) = '201202';
SELECT (COUNT(DISTINCT g1.`GasStationID`) * 100.0 / COUNT(DISTINCT g2.`GasStationID`)) AS percentage_of_premium FROM `gasstations` g1 JOIN `gasstations` g2 ON g1.`Country` = g2.`Country` WHERE g1.`Country` = 'Slovakia' AND g1.`Segment` = 'premium' AND g2.`Country` = 'Slovakia';
SELECT `CustomerID` FROM `yearmonth` WHERE `Date` = '201309' GROUP BY `CustomerID` ORDER BY SUM(`Consumption`) DESC LIMIT 1;
SELECT `Segment` FROM `customers` WHERE `CustomerID` = (SELECT `CustomerID` FROM `yearmonth` WHERE `Date` = '201309' GROUP BY `CustomerID` ORDER BY SUM(`Consumption`) ASC LIMIT 1)
SELECT `CustomerID` FROM `yearmonth` WHERE `Date` = '201206' AND `CustomerID` IN (SELECT `CustomerID` FROM `customers` WHERE `Segment` = 'SME') ORDER BY `Consumption` ASC LIMIT 1
SELECT MAX(`Consumption`) AS `HighestMonthlyConsumption` FROM `yearmonth` WHERE SUBSTR(`Date`, 1, 4) = '2012'
SELECT MAX(SUM(`Consumption`) / 12) AS `BiggestMonthlyConsumption` FROM `yearmonth` JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Currency` = 'euro' GROUP BY `yearmonth`.`CustomerID`
SELECT DISTINCT `p`.`Description` FROM `products` p JOIN `transactions_1k` t ON `p`.`ProductID` = `t`.`ProductID` JOIN `yearmonth` y ON `t`.`CustomerID` = `y`.`CustomerID` WHERE `y`.`Date` LIKE '201309%';
SELECT DISTINCT `g`.`Country` FROM `gasstations` g JOIN `transactions_1k` t ON `g`.`GasStationID` = `t`.`GasStationID` WHERE `t`.`Date` LIKE '201306%';
SELECT DISTINCT `g`.`ChainID` FROM `gasstations` g JOIN `transactions_1k` t ON `g`.`GasStationID` = `t`.`GasStationID` JOIN `customers` c ON `t`.`CustomerID` = `c`.`CustomerID` WHERE `c`.`Currency` = 'euro'
SELECT DISTINCT `p`.`Description` FROM `transactions_1k` AS `t` JOIN `customers` AS `c` ON `t`.`CustomerID` = `c`.`CustomerID` JOIN `products` AS `p` ON `t`.`ProductID` = `p`.`ProductID` WHERE `c`.`Currency` = 'euro'
SELECT AVG(`Amount` * `Price`) AS `average_total_price` FROM `transactions_1k` WHERE `Date` LIKE '2012-01%';
SELECT COUNT(DISTINCT `y`.`CustomerID`) FROM `yearmonth` y JOIN `customers` c ON `y`.`CustomerID` = `c`.`CustomerID` WHERE `c`.`Currency` = 'EUR' AND `y`.`Consumption` > 1000;
SELECT DISTINCT `p`.`Description` FROM `transactions_1k` AS `t` JOIN `gasstations` AS `g` ON `t`.`GasStationID` = `g`.`GasStationID` JOIN `products` AS `p` ON `t`.`ProductID` = `p`.`ProductID` WHERE `g`.`Country` = 'CZE'
SELECT DISTINCT `Time` FROM `transactions_1k` WHERE `GasStationID` IN (SELECT `GasStationID` FROM `gasstations` WHERE `ChainID` = 11)
SELECT COUNT(*) FROM `transactions_1k` t JOIN `gasstations` g ON t.`GasStationID` = g.`GasStationID` WHERE g.`Country` = 'CZE' AND t.`Price` > 1000;
SELECT COUNT(*) FROM `transactions_1k` t JOIN `gasstations` g ON t.`GasStationID` = g.`GasStationID` WHERE g.`Country` = 'CZE' AND t.`Date` > '2012-01-01'
SELECT AVG(`Amount` * `Price`) AS `AverageTotalPrice` FROM `transactions_1k` JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `gasstations`.`Country` = 'CZE'
SELECT AVG(t1.total_price) AS average_total_price FROM (SELECT `CustomerID`, SUM(`Price`) AS total_price FROM `transactions_1k` WHERE `CustomerID` IN (SELECT `CustomerID` FROM `customers` WHERE `Currency` = 'euro') GROUP BY `CustomerID`) t1;
SELECT `CustomerID` FROM `transactions_1k` WHERE `Date` = '2012-08-25' GROUP BY `CustomerID` ORDER BY SUM(`Amount` * `Price`) DESC LIMIT 1;
SELECT `g`.`Country` FROM `transactions_1k` AS `t` JOIN `gasstations` AS `g` ON `t`.`GasStationID` = `g`.`GasStationID` WHERE `t`.`Date` = '2012-08-25' ORDER BY `t`.`Time` ASC LIMIT 1;
SELECT `c`.`Currency` FROM `transactions_1k` AS `t` JOIN `customers` AS `c` ON `t`.`CustomerID` = `c`.`CustomerID` WHERE `t`.`Date` = '2012-08-24' AND `t`.`Time` = '16:25:00'
SELECT `Segment` FROM `customers` WHERE `CustomerID` = (SELECT `CustomerID` FROM `transactions_1k` WHERE `Date` = '2012-08-23' AND `Time` = '21:20:00' LIMIT 1)
SELECT COUNT(*) FROM `transactions_1k` t JOIN `customers` c ON t.`CustomerID` = c.`CustomerID` WHERE t.`Date` = '2012-08-26' AND t.`Time` < '13:00:00' AND c.`Currency` = 'CZK'
SELECT `Segment` FROM `customers` WHERE `CustomerID` = (SELECT `CustomerID` FROM `yearmonth` ORDER BY `Date` ASC LIMIT 1)
SELECT `g`.`Country` FROM `transactions_1k` AS `t` JOIN `gasstations` AS `g` ON `t`.`GasStationID` = `g`.`GasStationID` WHERE `t`.`Date` = '2012-08-24' AND `t`.`Time` = '12:42:00'
SELECT `ProductID` FROM `transactions_1k` WHERE `Date` = '2012-08-23' AND `Time` = '21:20:00'
SELECT `y`.`Date`, `y`.`Consumption` FROM `yearmonth` y JOIN `transactions_1k` t ON `y`.`CustomerID` = `t`.`CustomerID` WHERE `t`.`Date` = '2012-08-24' AND `t`.`Amount` = 124.05 AND strftime('%Y-%m', `y`.`Date`) = '2012-01'
SELECT COUNT(*) FROM `transactions_1k` t JOIN `gasstations` g ON t.`GasStationID` = g.`GasStationID` WHERE t.`Date` = '2012-08-26' AND t.`Time` BETWEEN '08:00:00' AND '09:00:00' AND g.`Country` = 'CZE'
SELECT `c`.`Currency` FROM `customers` c JOIN `yearmonth` y ON `c`.`CustomerID` = `y`.`CustomerID` WHERE `y`.`Date` LIKE '201306%' AND `y`.`Consumption` = 214582.17
SELECT `g`.`Country` FROM `transactions_1k` AS `t` JOIN `gasstations` AS `g` ON `t`.`GasStationID` = `g`.`GasStationID` WHERE `t`.`CardID` = 667467 LIMIT 1
SELECT `gasstations`.`Country` FROM `transactions_1k` JOIN `customers` ON `transactions_1k`.`CustomerID` = `customers`.`CustomerID` JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `transactions_1k`.`Date` = '2012-08-24' AND `transactions_1k`.`Amount` = 548.4 LIMIT 1
SELECT (COUNT(DISTINCT y.`CustomerID`) * 100.0 / (SELECT COUNT(DISTINCT `CustomerID`) FROM `yearmonth` WHERE `Date` = '2012-08-25')) AS percentage FROM `yearmonth` y JOIN `customers` c ON y.`CustomerID` = c.`CustomerID` WHERE y.`Date` = '2012-08-25' AND c.`Currency` = 'EUR';
SELECT (y2012.Consumption - y2013.Consumption) / y2012.Consumption AS decrease_rate FROM (SELECT `CustomerID`, SUM(`Consumption`) AS Consumption FROM `yearmonth` WHERE `Date` LIKE '2012-%' GROUP BY `CustomerID`) y2012 JOIN (SELECT `CustomerID`, SUM(`Consumption`) AS Consumption FROM `yearmonth` WHERE `Date` LIKE '2013-%' GROUP BY `CustomerID`) y2013 ON y2012.`CustomerID` = y2013.`CustomerID` WHERE y2012.`CustomerID` = (SELECT `CustomerID` FROM `transactions_1k` WHERE `Date` = '2012-08-25' AND `Amount` = 634.8 LIMIT 1)
SELECT `GasStationID`, SUM(`Amount` * `Price`) AS `Revenue` FROM `transactions_1k` GROUP BY `GasStationID` ORDER BY `Revenue` DESC LIMIT 1
SELECT (COUNT(DISTINCT t.`CustomerID`) * 100.0 / (SELECT COUNT(DISTINCT t2.`CustomerID`) FROM `transactions_1k` t2 JOIN `gasstations` g2 ON t2.`GasStationID` = g2.`GasStationID` WHERE g2.`Country` = 'SVK')) AS percentage FROM `transactions_1k` t JOIN `gasstations` g ON t.`GasStationID` = g.`GasStationID` JOIN `customers` c ON t.`CustomerID` = c.`CustomerID` WHERE g.`Country` = 'SVK' AND c.`Segment` = 'premium'
SELECT SUM(t.`Amount`) AS total_spent_gas_stations, (SELECT SUM(y.`Consumption`) FROM `yearmonth` y WHERE y.`CustomerID` = '38508' AND y.`Date` = '201201') AS total_spent_january_2012 FROM `transactions_1k` t WHERE t.`CustomerID` = '38508';
SELECT `p`.`Description`, SUM(`t`.`Amount`) AS `TotalAmount` FROM `transactions_1k` AS `t` JOIN `products` AS `p` ON `t`.`ProductID` = `p`.`ProductID` GROUP BY `p`.`Description` ORDER BY `TotalAmount` DESC LIMIT 5;
SELECT `t`.`CustomerID`, SUM(`t`.`Price`) AS `TotalSpending`, SUM(`t`.`Price`) / SUM(`t`.`Amount`) AS `AvgPricePerItem`, `c`.`Currency` FROM `transactions_1k` AS `t` JOIN `customers` AS `c` ON `t`.`CustomerID` = `c`.`CustomerID` GROUP BY `t`.`CustomerID` ORDER BY `TotalSpending` DESC LIMIT 1;
SELECT `g`.`Country` FROM `gasstations` AS `g` JOIN `transactions_1k` AS `t` ON `g`.`GasStationID` = `t`.`GasStationID` WHERE `t`.`ProductID` = 2 ORDER BY `t`.`Price` DESC LIMIT 1
SELECT `y`.`CustomerID`, `y`.`Consumption` FROM `transactions_1k` AS `t` JOIN `yearmonth` AS `y` ON `t`.`CustomerID` = `y`.`CustomerID` WHERE `t`.`ProductID` = 5 AND (`t`.`Price` / `t`.`Amount`) > 29.00 AND `y`.`Date` = '201208'
