SELECT MAX(`free meal count (k-12)` / `enrollment (k-12)`) FROM frpm INNER JOIN schools ON frpm.`cdscode` = schools.`cdscode` WHERE schools.`county` = 'Alameda'
SELECT `cdscode`, (`free meal count (ages 5-17)` / `enrollment (ages 5-17)`) AS eligible_free_rate FROM frpm WHERE `school type` = 'Continuation Schools (Public)' ORDER BY eligible_free_rate LIMIT 3
SELECT `schools`.`zip` FROM `schools` INNER JOIN `frpm` ON `schools`.`cdscode` = `frpm`.`cdscode` WHERE `frpm`.`charter school (y/n)` = 1 AND `schools`.`district` = 'Fresno County Office of Education'
SELECT `schools`.`mailstreet` FROM `frpm` INNER JOIN `schools` ON `frpm`.`cdscode` = `schools`.`cdscode` ORDER BY `frpm`.`frpm count (k-12)` DESC LIMIT 1
SELECT `schools`.`phone` FROM `schools` INNER JOIN `frpm` ON `schools`.`cdscode` = `frpm`.`cdscode` WHERE `frpm`.`charter school (y/n)` = 1 AND `frpm`.`charter funding type` = 'Directly funded' AND `schools`.`opendate` > '2000-01-01'
SELECT COUNT(DISTINCT `schools`.`cdscode`) FROM `schools` INNER JOIN `satscores` ON `schools`.`cdscode` = `satscores`.`cds` WHERE `satscores`.`avgscrmath` > 400 AND `schools`.`virtual` = 'F'
SELECT `schools`.`school` FROM `schools` INNER JOIN `satscores` ON `schools`.`cdscode` = `satscores`.`cds` WHERE `satscores`.`numtsttakr` > 500 AND `schools`.`magnet` = 1
SELECT T3.phone FROM satscores AS T1 INNER JOIN schools AS T3 ON T1.cds = T3.cdscode ORDER BY T1.numge1500 DESC LIMIT 1
SELECT `satscores`.`numtsttakr` FROM `satscores` INNER JOIN `frpm` ON `satscores`.`cds` = `frpm`.`cdscode` ORDER BY `frpm`.`frpm count (k-12)` DESC LIMIT 1
SELECT COUNT(DISTINCT `schools`.`cdscode`) FROM `schools` INNER JOIN `satscores` ON `schools`.`cdscode` = `satscores`.`cds` WHERE `satscores`.`avgscrmath` > 560 AND `schools`.`fundingtype` = 'Directly funded'
SELECT `frpm count (ages 5-17)` FROM frpm INNER JOIN satscores ON frpm.`cdscode` = satscores.`cds` ORDER BY satscores.`avgscrread` DESC LIMIT 1
SELECT DISTINCT `frpm`.`cdscode` FROM `frpm` WHERE (`frpm`.`enrollment (k-12)` + `frpm`.`enrollment (ages 5-17)`) > 500
SELECT MAX(frpm.`free meal count (ages 5-17)` / frpm.`enrollment (ages 5-17)`) FROM frpm INNER JOIN satscores ON frpm.`cdscode` = satscores.`cds` WHERE satscores.`numge1500` / satscores.`numtsttakr` > 0.3
SELECT T1.phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.cdscode = T2.cds ORDER BY (CAST(T2.numge1500 AS FLOAT) / T2.numtsttakr) DESC LIMIT 3
SELECT `schools`.`ncesschool` FROM `frpm` INNER JOIN `schools` ON `frpm`.`cdscode` = `schools`.`cdscode` ORDER BY `frpm`.`enrollment (ages 5-17)` DESC LIMIT 5
SELECT T.district FROM ( SELECT S.district, AVG(SS.avgscrread) AS avg_score FROM schools AS S INNER JOIN satscores AS SS ON S.cdscode = SS.cds WHERE S.statustype = 'Active' GROUP BY S.district ) T ORDER BY T.avg_score DESC LIMIT 1
SELECT COUNT(DISTINCT `schools`.`cdscode`) FROM `schools` INNER JOIN `satscores` ON `schools`.`cdscode` = `satscores`.`cds` WHERE `schools`.`county` = 'Alameda' AND `satscores`.`numtsttakr` < 100
SELECT `schools`.`charternum`, AVG(`satscores`.`avgscrwrite`) AS avg_score FROM `schools` INNER JOIN `satscores` ON `schools`.`cdscode` = `satscores`.`cds` WHERE `satscores`.`avgscrwrite` > 499 AND `schools`.`charternum` IS NOT NULL GROUP BY `schools`.`charternum` ORDER BY avg_score DESC
SELECT COUNT(DISTINCT `schools`.`cdscode`) FROM `schools` INNER JOIN `satscores` ON `schools`.`cdscode` = `satscores`.`cds` WHERE `schools`.`city` = 'Fresno' AND `schools`.`fundingtype` = 'Directly funded' AND `satscores`.`numtsttakr` <= 250
SELECT `schools`.`phone` FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`cdscode` ORDER BY `satscores`.`avgscrmath` DESC LIMIT 1
SELECT COUNT(`schools`.`cdscode`) FROM `schools` JOIN `frpm` ON `schools`.`cdscode` = `frpm`.`cdscode` WHERE `schools`.`county` = 'Amador' AND `frpm`.`low grade` = '9' AND `frpm`.`high grade` = '12'
SELECT COUNT(*) FROM frpm INNER JOIN schools ON frpm.`cdscode` = schools.`cdscode` WHERE schools.`county` = 'Los Angeles' AND `free meal count (k-12)` > 500 AND `frpm count (k-12)` < 700
SELECT T.school FROM ( SELECT S.school, COUNT(SS.numtsttakr) AS num FROM schools AS S INNER JOIN satscores AS SS ON S.cdscode = SS.cds WHERE S.county = 'Contra Costa' GROUP BY S.school ) T ORDER BY T.num DESC LIMIT 1
SELECT `schools`.`school`, `schools`.`street` FROM `frpm` INNER JOIN `schools` ON `frpm`.`cdscode` = `schools`.`cdscode` WHERE (`frpm`.`enrollment (k-12)` - `frpm`.`enrollment (ages 5-17)`) > 30
SELECT T1.`school name` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`cdscode` = T2.cds WHERE (T1.`free meal count (k-12)` / T1.`enrollment (k-12)`) > 0.1 AND T2.numge1500 > 0
SELECT `schools`.`school`, `schools`.`fundingtype` FROM `schools` INNER JOIN `satscores` ON `schools`.`cdscode` = `satscores`.`cds` WHERE `schools`.`county` = 'Riverside' AND `satscores`.`avgscrmath` > 400
SELECT `schools`.`school`, `schools`.`street`, `schools`.`city`, `schools`.`state`, `schools`.`zip` FROM `frpm` INNER JOIN `schools` ON `frpm`.`cdscode` = `schools`.`cdscode` WHERE `frpm`.`school type` = 'High Schools (Public)' AND `schools`.`city` = 'Monterey' AND `frpm`.`free meal count (ages 5-17)` > 800
SELECT s.school, ss.avgscrwrite, s.phone FROM schools AS s INNER JOIN satscores AS ss ON s.cdscode = ss.cds WHERE s.opendate > '1991-01-01' OR s.closeddate < '2000-01-01'
SELECT s.`school`, s.`doctype` FROM schools AS s INNER JOIN frpm AS f ON s.`cdscode` = f.`cdscode` WHERE s.`fundingtype` = 'Directly funded' AND (f.`enrollment (k-12)` - f.`enrollment (ages 5-17)`) > (SELECT AVG(f2.`enrollment (k-12)` - f2.`enrollment (ages 5-17)`) FROM frpm AS f2 INNER JOIN schools AS s2 ON f2.`cdscode` = s2.`cdscode` WHERE s2.`fundingtype` = 'Directly funded')
SELECT `opendate` FROM `schools` WHERE `cdscode` = (SELECT `cdscode` FROM `frpm` ORDER BY `enrollment (k-12)` DESC LIMIT 1)
SELECT T2.city FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`cdscode` = T2.`cdscode` ORDER BY T1.`enrollment (k-12)` LIMIT 5
SELECT `free meal count (k-12)` / `enrollment (k-12)` AS eligible_free_rate FROM frpm ORDER BY `enrollment (k-12)` DESC LIMIT 2 OFFSET 8
SELECT `frpm`.`frpm count (k-12)` / `frpm`.`enrollment (k-12)` AS frpm_rate FROM `frpm` INNER JOIN `schools` ON `frpm`.`cdscode` = `schools`.`cdscode` WHERE `schools`.`soc` = 66 ORDER BY `frpm`.`frpm count (k-12)` DESC LIMIT 5
SELECT `schools`.`school`, `schools`.`website` FROM `frpm` INNER JOIN `schools` ON `frpm`.`cdscode` = `schools`.`cdscode` WHERE `frpm`.`free meal count (ages 5-17)` BETWEEN 1900 AND 2000
SELECT `free meal count (ages 5-17)` / `enrollment (ages 5-17)` AS free_rate FROM `frpm` INNER JOIN `schools` ON `frpm`.`cdscode` = `schools`.`cdscode` WHERE `schools`.`admfname1` = 'Kacey' AND `schools`.`admlname1` = 'Gibson'
SELECT `schools`.`admemail1` FROM `frpm` INNER JOIN `schools` ON `frpm`.`cdscode` = `schools`.`cdscode` WHERE `frpm`.`charter school (y/n)` = 1 ORDER BY `frpm`.`enrollment (k-12)` ASC LIMIT 1
SELECT t1.admfname1, t1.admlname1, t1.admfname2, t1.admlname2, t1.admfname3, t1.admlname3 FROM schools AS t1 INNER JOIN satscores AS t2 ON t1.cdscode = t2.cds ORDER BY t2.numge1500 DESC LIMIT 1
SELECT `schools`.`street`, `schools`.`city`, `schools`.`zip`, `schools`.`state` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`cdscode` ORDER BY (`satscores`.`numge1500` * 1.0 / `satscores`.`numtsttakr`) ASC LIMIT 1
SELECT `schools`.`website` FROM `schools` INNER JOIN `satscores` ON `schools`.`cdscode` = `satscores`.`cds` WHERE `schools`.`county` = 'Los Angeles' AND `satscores`.`numtsttakr` BETWEEN 2000 AND 3000
SELECT AVG(`numtsttakr`) FROM `satscores` AS T1 INNER JOIN `schools` AS T2 ON T1.`cds` = T2.`cdscode` WHERE T2.`county` = 'Fresno' AND T2.`opendate` BETWEEN '1980-01-01' AND '1980-12-31'
SELECT `schools`.`phone` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`cdscode` WHERE `schools`.`district` = 'Fresno Unified' ORDER BY `satscores`.`avgscrread` ASC LIMIT 1
SELECT T1.school FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.cdscode = T2.cds WHERE T1.virtual = 'F' ORDER BY T2.avgscrread DESC LIMIT 5
SELECT `frpm`.`educational option type` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`cdscode` INNER JOIN `frpm` ON `schools`.`cdscode` = `frpm`.`cdscode` ORDER BY `satscores`.`avgscrmath` DESC LIMIT 1
SELECT AVG(`avgscrmath`), `county` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`cdscode` ORDER BY (`avgscrread` + `avgscrmath` + `avgscrwrite`) ASC LIMIT 1
SELECT AVG(`avgscrwrite`), `city` FROM `satscores` AS T1 INNER JOIN `schools` AS T2 ON T1.`cds` = T2.`cdscode` WHERE `numge1500` = (SELECT MAX(`numge1500`) FROM `satscores`) GROUP BY `city`
SELECT T1.school, T2.avgscrwrite FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.cdscode = T2.cds WHERE T1.admfname1 = 'Ricci' AND T1.admlname1 = 'Ulrich' ORDER BY T2.avgscrwrite
SELECT `schools`.`state`, SUM(`frpm`.`enrollment (k-12)`) AS total_enrollment FROM `frpm` INNER JOIN `schools` ON `frpm`.`cdscode` = `schools`.`cdscode` WHERE `schools`.`doc` = '31' GROUP BY `schools`.`state` ORDER BY total_enrollment DESC LIMIT 1
SELECT COUNT(`cdscode`) / 12 FROM `schools` WHERE `county` = 'Alameda' AND `doc` = '52' AND `opendate` LIKE '1980-%'
SELECT COUNT(`schools`.`cdscode`) FILTER (WHERE `schools`.`doc` = 54) * 1.0 / COUNT(`schools`.`cdscode`) FILTER (WHERE `schools`.`doc` = 52) AS ratio FROM `schools` JOIN `frpm` ON `schools`.`cdscode` = `frpm`.`cdscode` WHERE `frpm`.`county name` = 'Orange' AND `schools`.`statustype` = 'Merged'
SELECT `county`, `school`, `closeddate` FROM `schools` WHERE `statustype` = 'Closed' ORDER BY `county`
SELECT T2.school, T2.street FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.cdscode ORDER BY T1.avgscrmath DESC LIMIT 1 OFFSET 6
SELECT T2.school, T2.mailstreet FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.cdscode ORDER BY T1.avgscrread ASC LIMIT 1
SELECT COUNT(*) FROM schools AS s INNER JOIN satscores AS ss ON s.cdscode = ss.cds WHERE s.mailcity = 'Lakeport' AND (ss.avgscrread + ss.avgscrmath + ss.avgscrwrite) >= 1500
SELECT SUM(numtsttakr) FROM satscores JOIN schools ON satscores.cds = schools.cdscode WHERE schools.mailcity = 'Fresno'
SELECT `school`, `mailzip` FROM `schools` WHERE `admfname1` = 'Avetik' AND `admlname1` = 'Atoian'
SELECT CAST((SELECT COUNT(*) FROM `schools` WHERE `county` = 'Colusa' AND `mailstate` = 'CA') AS REAL) / (SELECT COUNT(*) FROM `schools` WHERE `county` = 'Humboldt' AND `mailstate` = 'CA') AS ratio
SELECT COUNT(`cdscode`) FROM `schools` WHERE `mailstate` = 'CA' AND `city` = 'San Joaquin' AND `statustype` = 'Active'
SELECT `schools`.`phone`, `schools`.`ext` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`cdscode` ORDER BY `satscores`.`avgscrwrite` LIMIT 1 OFFSET 332
SELECT `school`, `phone`, `ext` FROM `schools` WHERE `zip` = '95203-3704'
SELECT `website` FROM `schools` WHERE (`admfname1` = 'Mike' AND `admlname1` = 'Larson') OR (`admfname2` = 'Dante' AND `admlname2` = 'Alvarez')
SELECT `website` FROM `schools` WHERE `virtual` = 'P' AND `charter` = 1 AND `city` = 'San Joaquin'
SELECT COUNT(*) FROM `schools` WHERE `city` = 'Hickman' AND `charter` = 1 AND `doc` = 52
SELECT COUNT(`schools`.`cdscode`) FROM `schools` INNER JOIN `frpm` ON `schools`.`cdscode` = `frpm`.`cdscode` WHERE `schools`.`county` = 'Los Angeles' AND `schools`.`charter` = 0 AND (`frpm`.`free meal count (k-12)` * 100.0 / `frpm`.`enrollment (k-12)`) < 0.18
SELECT `school`, `city`, `admfname1`, `admlname1`, `admfname2`, `admlname2`, `admfname3`, `admlname3` FROM `schools` WHERE `charter` = 1 AND `charternum` = '00D2'
SELECT COUNT(*) FROM `schools` WHERE `mailcity` = 'Hickman' AND `charternum` = '00D4'
SELECT CAST(SUM(CASE WHEN `fundingtype` = 'Locally funded' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `schools` WHERE `county` = 'Santa Clara'
SELECT COUNT(`cdscode`) FROM `schools` WHERE `fundingtype` = 'Directly funded' AND `county` = 'Stanislaus' AND `opendate` BETWEEN '2000-01-01' AND '2005-12-31'
SELECT COUNT(*) FROM schools WHERE statustype = 'Closed' AND closeddate LIKE '1989-%' AND city = 'San Francisco'
SELECT county FROM schools WHERE statustype = 'Closed' AND strftime('%Y', closeddate) BETWEEN '1980' AND '1989' AND soc = 11 GROUP BY county ORDER BY COUNT(cdscode) DESC LIMIT 1
SELECT `ncesdist` FROM `schools` WHERE `soc` = 31
SELECT COUNT(`cdscode`) FROM `schools` WHERE `county` = 'Alpine' AND `statustype` IN ('Active', 'Closed') AND `school` LIKE '%District Community Day School%'
SELECT `district` FROM `schools` WHERE `city` = 'Fresno' AND `magnet` = 0
SELECT SUM(`enrollment (ages 5-17)`) FROM frpm INNER JOIN schools ON frpm.`cdscode` = schools.`cdscode` WHERE schools.`edopscode` = 'SSS' AND schools.`city` = 'Fremont' AND frpm.`academic year` = '2014-2015'
SELECT `free meal count (ages 5-17)` FROM frpm INNER JOIN schools ON frpm.`cdscode` = schools.`cdscode` WHERE schools.`mailstreet` = 'PO Box 1040' AND schools.`school` = 'Youth Authority School'
SELECT `low grade` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`cdscode` WHERE `schools`.`ncesdist` = '0613360' AND `schools`.`edopscode` = 'SPECON' ORDER BY `low grade` ASC LIMIT 1
SELECT `frpm`.`school name` FROM `frpm` INNER JOIN `schools` ON `frpm`.`cdscode` = `schools`.`cdscode` WHERE `frpm`.`county code` = '37' AND `frpm`.`nslp provision status` = 'Breakfast Provision 2'
SELECT `schools`.`city` FROM `frpm` INNER JOIN `schools` ON `frpm`.`cdscode` = `schools`.`cdscode` WHERE `frpm`.`nslp provision status` = 'Lunch Provision 2' AND `frpm`.`low grade` = '9' AND `frpm`.`high grade` = '12' AND `frpm`.`county name` = 'Merced' AND `schools`.`eilcode` = 'HS'
SELECT `schools`.`school`, (`frpm`.`frpm count (ages 5-17)` / `frpm`.`enrollment (ages 5-17)` * 100) AS `Percent (%) Eligible FRPM (Ages 5-17)` FROM `schools` JOIN `frpm` ON `schools`.`cdscode` = `frpm`.`cdscode` WHERE `schools`.`county` = 'Los Angeles' AND `schools`.`gsoffered` = 'K-9'
SELECT `gsoffered` FROM `schools` WHERE `city` = 'Adelanto' GROUP BY `gsoffered` ORDER BY COUNT(*) DESC LIMIT 1
SELECT COUNT(`schools`.`cdscode`) AS `school_count`, `schools`.`county` FROM `schools` WHERE `schools`.`virtual` = 'F' AND `schools`.`county` IN ('San Diego', 'Santa Barbara') GROUP BY `schools`.`county` ORDER BY `school_count` DESC LIMIT 1
SELECT T1.`school type`, T2.school, T2.latitude FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.cdscode = T2.cdscode WHERE T2.latitude = (SELECT MAX(latitude) FROM schools)
SELECT T1.school, T1.city, T2.low_grade FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.cdscode = T2.cdscode WHERE T1.state = 'CA' ORDER BY T1.latitude ASC LIMIT 1
SELECT `gsoffered` FROM `schools` ORDER BY ABS(`longitude`) DESC LIMIT 1
SELECT COUNT(DISTINCT `schools`.`cdscode`) AS `schools_count`, `schools`.`city` FROM `schools` INNER JOIN `frpm` ON `schools`.`cdscode` = `frpm`.`cdscode` WHERE `schools`.`magnet` = 1 AND `schools`.`gsoffered` = 'K-8' AND `frpm`.`nslp provision status` = 'Multiple Provision Types' GROUP BY `schools`.`city`
SELECT admfname1, district FROM schools GROUP BY admfname1, district ORDER BY COUNT(admfname1) DESC LIMIT 2
SELECT `frpm`.`district code`, (`frpm`.`free meal count (k-12)` / `frpm`.`enrollment (k-12)` * 100) AS `Percent (%) Eligible Free (k-12)` FROM `frpm` INNER JOIN `schools` ON `frpm`.`cdscode` = `schools`.`cdscode` WHERE `schools`.`admfname1` = 'Alusine'
SELECT `admlname1`, `district`, `county`, `school` FROM `schools` WHERE `charternum` = '40'
SELECT admemail1, admemail2, admemail3 FROM schools WHERE county = 'San Bernardino' AND city = 'San Bernardino City Unified' AND opendate BETWEEN '2009-01-01' AND '2010-12-31' AND (soc = 62 OR doc = 54)
SELECT `schools`.`admemail1`, `schools`.`school` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`cdscode` ORDER BY `satscores`.`numge1500` DESC LIMIT 1
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `account`.`frequency` = 'POPLATEK PO OBRATU' AND `district`.`a3` = 'East Bohemia'
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`a3` = 'Prague'
SELECT CASE WHEN AVG(`a12`) > AVG(`a13`) THEN '1995' ELSE '1996' END AS higher_percentage FROM `district`
SELECT COUNT(DISTINCT `district`.`district_id`) FROM `district` JOIN `client` ON `district`.`district_id` = `client`.`district_id` WHERE `client`.`gender` = 'F' AND `district`.`a11` > 6000 AND `district`.`a11` < 10000
SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.a3 = 'North Bohemia' AND T2.a11 > 8000
SELECT T1.account_id, (MAX(T4.a11) - MIN(T4.a11)) AS gap FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id INNER JOIN district AS T4 ON T1.district_id = T4.district_id WHERE T3.gender = 'F' GROUP BY T1.account_id ORDER BY T3.birth_date ASC, T4.a11 ASC LIMIT 1
SELECT `account`.`account_id` FROM `account` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` ORDER BY `client`.`birth_date` DESC, `district`.`a11` DESC LIMIT 1
SELECT COUNT(*) FROM `account` AS a INNER JOIN `disp` AS d ON a.`account_id` = d.`account_id` WHERE a.`frequency` = 'POPLATEK TYDNE' AND d.`type` = 'OWNER'
SELECT T1.`client_id` FROM `disp` AS T1 INNER JOIN `account` AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`frequency` = 'POPLATEK PO OBRATU' AND T1.`type` = 'DISPONENT'
SELECT `account_id` FROM `loan` WHERE `date` LIKE '1997-%' AND `account_id` IN (SELECT `account_id` FROM `account` WHERE `frequency` = 'POPLATEK TYDNE') ORDER BY `amount` ASC LIMIT 1
SELECT `account_id` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `loan`.`duration` > 12 AND STRFTIME('%Y', `account`.`date`) = '1993' ORDER BY `loan`.`amount` DESC LIMIT 1
SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T1.birth_date < '1950-01-01' AND T2.a2 = 'Sokolov'
SELECT `account_id` FROM `trans` WHERE strftime('%Y', `date`) = '1995' ORDER BY `date` ASC LIMIT 1
SELECT `account_id` FROM `account` WHERE `date` < '1997-01-01' AND `account_id` IN (SELECT `account_id` FROM `trans` WHERE `amount` > 3000)
SELECT `client`.`client_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`issued` = '1994-03-03'
SELECT `account`.`date` FROM `account` INNER JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `trans`.`amount` = 840 AND `trans`.`date` = '1998-10-14'
SELECT `account`.`district_id` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `loan`.`date` = '1994-08-25'
SELECT MAX(`trans`.`amount`) FROM `trans` INNER JOIN `disp` ON `trans`.`account_id` = `disp`.`account_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`issued` = '1996-10-21'
SELECT `client`.`gender` FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` INNER JOIN `account` ON `client`.`district_id` = `account`.`district_id` ORDER BY `client`.`birth_date`, `district`.`a11` DESC LIMIT 1
SELECT MIN(`t`.`amount`) FROM `trans` AS `t` INNER JOIN `account` AS `a` ON `t`.`account_id` = `a`.`account_id` WHERE `t`.`account_id` = (SELECT `account_id` FROM `loan` ORDER BY `amount` DESC LIMIT 1) AND `t`.`date` > `a`.`date`
SELECT COUNT(DISTINCT T1.client_id) FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.a2 = 'Jesenik' AND T1.gender = 'F'
SELECT T1.disp_id FROM `trans` AS T1 INNER JOIN `disp` AS T2 ON T1.account_id = T2.account_id WHERE T1.date = '1998-09-02' AND T1.amount = 5100
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`a2` = 'Litomerice' AND STRFTIME('%Y', `account`.`date`) = '1996'
SELECT d.`a2` FROM `client` AS c INNER JOIN `account` AS a ON c.`client_id` = a.`client_id` INNER JOIN `district` AS d ON a.`district_id` = d.`district_id` WHERE c.`gender` = 'F' AND c.`birth_date` = '1976-01-29'
SELECT `client`.`birth_date` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `loan` ON `disp`.`account_id` = `loan`.`account_id` WHERE `loan`.`amount` = 98832 AND `loan`.`date` = '1996-01-03'
SELECT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.a3 = 'Prague' ORDER BY T1.date LIMIT 1
SELECT CAST(SUM(CASE WHEN `client`.`gender` = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`client`.`client_id`) FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `district`.`a3` = 'south Bohemia' ORDER BY `district`.`a4` DESC LIMIT 1
SELECT ((SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = '1998-12-27' AND status = 'A' ORDER BY date ASC LIMIT 1) AND date = '1998-12-27') - (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = '1993-07-05' AND status = 'A' ORDER BY date ASC LIMIT 1) AND date = '1993-03-22')) * 100.0 / (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = '1993-07-05' AND status = 'A' ORDER BY date ASC LIMIT 1) AND date = '1993-03-22') AS increase_rate
SELECT SUM(CASE WHEN `status` = 'A' THEN `amount` ELSE 0 END) * 100.0 / SUM(`amount`) FROM `loan`
SELECT CAST(SUM(IIF(`loan`.`status` = 'C', 1, 0)) AS REAL) * 100 / COUNT(`loan`.`loan_id`) FROM `loan` WHERE `loan`.`amount` < 100000
SELECT `account`.`account_id`, `district`.`a2`, `district`.`a3` FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `account`.`date` LIKE '1993-%' AND `account`.`frequency` = 'POPLATEK PO OBRATU'
SELECT T1.account_id, T1.frequency FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.a3 = 'east Bohemia' AND T1.date BETWEEN '1995-01-01' AND '2000-12-31'
SELECT `account_id`, `date` FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`a2` = 'Prachatice'
SELECT `district`.`a2`, `district`.`a3` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`loan_id` = '4990'
SELECT `account`.`account_id`, `district`.`a2`, `district`.`a3` FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `loan`.`amount` > 300000
SELECT T1.loan_id, T2.a3, T2.a11 FROM loan AS T1 INNER JOIN account AS T3 ON T1.account_id = T3.account_id INNER JOIN district AS T2 ON T3.district_id = T2.district_id WHERE T1.duration = 60
SELECT `district`.`a2`, ((`district`.`a13` - `district`.`a12`) / `district`.`a12`) * 100 AS unemployment_increment_rate FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`status` = 'D'
SELECT CAST(COUNT(CASE WHEN `district`.`a2` = 'Decin' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `account`.`date` LIKE '1993-%'
SELECT `account_id` FROM `account` WHERE `frequency` = 'POPLATEK MESICNE'
SELECT `district`.`a2` FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' GROUP BY `district`.`a2` ORDER BY COUNT(`client`.`client_id`) DESC LIMIT 9
SELECT d.`a2`, SUM(t.`amount`) AS total_withdrawals FROM `trans` AS t INNER JOIN `account` AS a ON t.`account_id` = a.`account_id` INNER JOIN `district` AS d ON a.`district_id` = d.`district_id` WHERE t.`type` = 'VYDAJ' AND t.`date` LIKE '1996-01%' GROUP BY d.`a2` ORDER BY total_withdrawals DESC LIMIT 10
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` LEFT JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` LEFT JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `district`.`a3` = 'South Bohemia' AND `card`.`card_id` IS NULL
SELECT `district`.`a3` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`status` = 'C' GROUP BY `district`.`a3` ORDER BY COUNT(`district`.`a3`) DESC LIMIT 1
SELECT AVG(`loan`.`amount`) FROM `loan` INNER JOIN `disp` ON `loan`.`account_id` = `disp`.`account_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `client`.`gender` = 'M'
SELECT `district`.`a2`, `district`.`district_id` FROM `district` ORDER BY `district`.`a13` DESC
SELECT COUNT(`account_id`) FROM `account` WHERE `district_id` = (SELECT `district_id` FROM `district` ORDER BY `a16` DESC LIMIT 1)
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `trans`.`operation` = 'VYBER KARTOU' AND `trans`.`balance` < 0 AND `account`.`frequency` = 'POPLATEK MESICNE'
SELECT COUNT(*) FROM loan AS l INNER JOIN account AS a ON l.account_id = a.account_id WHERE l.amount >= 250000 AND a.frequency = 'POPLATEK MESICNE' AND l.date BETWEEN '1995-01-01' AND '1997-12-31'
SELECT COUNT(*) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.status IN ('C', 'D') AND T1.district_id = 1
SELECT COUNT(`client`.`client_id`) FROM `district` INNER JOIN `client` ON `district`.`district_id` = `client`.`district_id` WHERE `client`.`gender` = 'M' AND `district`.`district_id` = (SELECT `district_id` FROM `district` ORDER BY `a15` DESC LIMIT 1 OFFSET 1)
SELECT COUNT(*) FROM `card` INNER JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` WHERE `card`.`type` = 'gold' AND `disp`.`type` = 'OWNER'
SELECT COUNT(*) FROM `account` AS T1 INNER JOIN `district` AS T2 ON T1.district_id = T2.district_id WHERE T2.a2 = 'Pisek'
SELECT DISTINCT `district`.`district_id`, `district`.`a2` FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `trans`.`date` LIKE '1997-%' AND `trans`.`amount` > 10000
SELECT `account`.`account_id` FROM `account` INNER JOIN `order` ON `account`.`account_id` = `order`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `order`.`k_symbol` = 'SIPO' AND `district`.`a2` = 'Pisek'
SELECT `account`.`account_id` FROM `account` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`type` = 'gold'
SELECT AVG(amount) FROM `trans` WHERE `operation` = 'VYBER KARTOU' AND STRFTIME('%Y', `date`) = '2021'
SELECT DISTINCT T1.`account_id` FROM `trans` AS T1 INNER JOIN `card` AS T2 ON T1.`account_id` = T2.`disp_id` WHERE T1.`operation` = 'VYBER KARTOU' AND STRFTIME('%Y', T1.`date`) = '1998' AND T1.`amount` < (SELECT AVG(`amount`) FROM `trans` WHERE `operation` = 'VYBER KARTOU' AND STRFTIME('%Y', `date`) = '1998')
SELECT DISTINCT c.`client_id` FROM `client` AS c INNER JOIN `disp` AS d ON c.`client_id` = d.`client_id` INNER JOIN `card` AS ca ON d.`disp_id` = ca.`disp_id` INNER JOIN `loan` AS l ON d.`account_id` = l.`account_id` WHERE c.`gender` = 'F' AND d.`type` = 'OWNER' AND ca.`type` = 'credit card'
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' AND `district`.`a3` = 'south Bohemia'
SELECT `account_id` FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`a2` = 'Tabor' AND `account`.`account_id` IN (SELECT `account_id` FROM `disp` WHERE `type` = 'OWNER')
SELECT `disp`.`type` FROM `disp` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `disp`.`type` != 'OWNER' AND `district`.`a11` > 8000 AND `district`.`a11` <= 9000
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` INNER JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `district`.`a3` = 'North Bohemia' AND `trans`.`bank` = 'AB'
SELECT DISTINCT `district`.`a2` FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `trans`.`type` = 'VYDAJ'
SELECT AVG(T1.a15) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.a15 > 4000 AND T2.date >= '1997-01-01'
SELECT COUNT(DISTINCT `card`.`card_id`) FROM `card` JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` WHERE `card`.`type` = 'classic' AND `disp`.`type` = 'OWNER'
SELECT COUNT(`client`.`client_id`) FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `district`.`a2` = 'Hl.m. Praha' AND `client`.`gender` = 'M'
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM card)) AS PercentOfGold FROM card WHERE `type` = 'gold' AND `issued` < '1998-01-01'
SELECT c.`client_id` FROM `client` c JOIN `disp` d ON c.`client_id` = d.`client_id` JOIN `loan` l ON d.`account_id` = l.`account_id` WHERE d.`type` = 'OWNER' ORDER BY l.`amount` DESC LIMIT 1
SELECT `district`.`a15` FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `account`.`account_id` = 532
SELECT `account`.`district_id` FROM `account` INNER JOIN `order` ON `account`.`account_id` = `order`.`account_id` WHERE `order`.`order_id` = 33333
SELECT t.`trans_id`, t.`amount`, t.`date` FROM `trans` AS t INNER JOIN `disp` AS d ON t.`account_id` = d.`account_id` WHERE d.`client_id` = 3356 AND t.`operation` = 'VYBER'
SELECT COUNT(`loan`.`loan_id`) FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `account`.`frequency` = 'POPLATEK TYDNE' AND `loan`.`amount` < 200000
SELECT `type` FROM `card` WHERE `disp_id` = (SELECT `disp_id` FROM `disp` WHERE `client_id` = 13539)
SELECT `district`.`a3` FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`client_id` = 3541
SELECT `district`.`a2` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`status` = 'A' GROUP BY `district`.`a2` ORDER BY COUNT(`district`.`a2`) DESC LIMIT 1
SELECT T1.client_id FROM disp AS T1 INNER JOIN `order` AS T2 ON T1.account_id = T2.account_id WHERE T2.order_id = 32423
SELECT * FROM `trans` WHERE `account_id` IN (SELECT `account_id` FROM `account` WHERE `district_id` = 5)
SELECT COUNT(*) FROM `account` AS T1 INNER JOIN `district` AS T2 ON T1.district_id = T2.district_id WHERE T2.a2 = 'Jesenik'
SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.type = 'junior' AND T3.issued >= '1997-01-01'
SELECT CAST(SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.gender) FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.a11 > 10000
SELECT CAST((SUM(CASE WHEN STRFTIME('%Y', loan.date) = '1997' THEN loan.amount ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', loan.date) = '1996' THEN loan.amount ELSE 0 END)) AS REAL) / SUM(CASE WHEN STRFTIME('%Y', loan.date) = '1996' THEN loan.amount ELSE 0 END) * 100 AS GrowthRate FROM loan INNER JOIN disp ON loan.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'M' AND (STRFTIME('%Y', loan.date) = '1996' OR STRFTIME('%Y', loan.date) = '1997')
SELECT COUNT(*) FROM `trans` WHERE `operation` = 'VYBER KARTOU' AND `date` > '1995-12-31'
SELECT ABS(MAX(CASE WHEN `a3` = 'North Bohemia' THEN `a16` END) - MAX(CASE WHEN `a3` = 'East Bohemia' THEN `a16` END)) AS difference FROM district
SELECT COUNT(*) FROM disp WHERE `account_id` BETWEEN 1 AND 10
SELECT `frequency` FROM `account` WHERE `account_id` = 3; SELECT `k_symbol` FROM `trans` WHERE `account_id` = 3 AND `amount` = 3539
SELECT `client`.`birth_date` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` WHERE `disp`.`disp_id` = 130
SELECT COUNT(*) FROM `account` AS T1 INNER JOIN `disp` AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'OWNER' AND T1.frequency = 'POPLATEK PO OBRATU'
SELECT l.`amount`, l.`status` FROM `loan` l JOIN `account` a ON l.`account_id` = a.`account_id` JOIN `disp` d ON a.`account_id` = d.`account_id` WHERE d.`client_id` = 992
SELECT SUM(`trans`.`amount`), `client`.`gender` FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `trans`.`trans_id` > 851 AND `disp`.`client_id` = 4 AND `disp`.`type` = 'OWNER' GROUP BY `client`.`gender`
SELECT `type` FROM `card` WHERE `disp_id` = 9
SELECT SUM(`amount`) FROM `trans` WHERE `account_id` IN (SELECT `account_id` FROM `disp` WHERE `client_id` = 617) AND `date` LIKE '1998-%'
SELECT `client`.`client_id`, `client`.`birth_date` FROM `client` JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`birth_date` BETWEEN '1983-01-01' AND '1987-12-31' AND `district`.`a3` = 'East Bohemia'
SELECT d.client_id FROM disp d INNER JOIN client c ON d.client_id = c.client_id INNER JOIN loan l ON d.account_id = l.account_id WHERE c.gender = 'F' ORDER BY l.amount DESC LIMIT 3
SELECT COUNT(DISTINCT c.client_id) FROM client c INNER JOIN disp d ON c.client_id = d.client_id INNER JOIN trans t ON d.account_id = t.account_id WHERE c.gender = 'M' AND c.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND t.k_symbol = 'SIPO' AND t.amount > 4000
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`a2` = 'Beroun' AND `account`.`date` > '1996-12-31'
SELECT COUNT(`client`.`client_id`) FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `client`.`gender` = 'F' AND `card`.`type` = 'junior'
SELECT CAST(COUNT(CASE WHEN `client`.`gender` = 'F' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`a3` = 'Prague'
SELECT CAST(SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.gender) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'POPLATEK TYDNE'
SELECT COUNT(*) FROM disp WHERE type = 'OWNER' AND account_id IN (SELECT account_id FROM account WHERE frequency = 'POPLATEK TYDNE')
SELECT `account_id` FROM `loan` WHERE `duration` > 24 AND `account_id` IN (SELECT `account_id` FROM `account` WHERE `date` < '1997-01-01') ORDER BY `amount` ASC LIMIT 1
SELECT `account`.`account_id` FROM `account` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' ORDER BY `client`.`birth_date`, `district`.`a11` LIMIT 1
SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.birth_date = '1920-01-01' AND T2.a3 = 'East Bohemia'
SELECT COUNT(`loan`.`account_id`) FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `loan`.`duration` = 24 AND `account`.`frequency` = 'POPLATEK TYDNE'
SELECT AVG(amount) FROM loan WHERE status = 'C' AND account_id IN (SELECT account_id FROM account WHERE frequency = 'POPLATEK PO OBRATU')
SELECT `client`.`client_id`, `client`.`district_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` WHERE `disp`.`type` = 'OWNER'
SELECT T1.client_id, strftime('%Y', 'now') - strftime('%Y', T1.birth_date) AS age FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.type = 'gold' AND T2.type = 'OWNER'
SELECT `bond_type` FROM `bond` GROUP BY `bond_type` ORDER BY COUNT(`bond_type`) DESC LIMIT 1
SELECT COUNT(DISTINCT `atom`.`molecule_id`) FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'cl' AND `molecule`.`label` = '-'
SELECT CAST(SUM(CASE WHEN `element` = 'o' THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT `atom`.`molecule_id`) FROM `atom` JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '-'
SELECT CAST(SUM(CASE WHEN `bond`.`bond_type` = '-' THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT `atom`.`atom_id`) FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` INNER JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'na' AND `molecule`.`label` = '-'
SELECT DISTINCT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '#' AND `molecule`.`label` = '+'
SELECT SUM(CASE WHEN `element` = 'c' THEN 1 ELSE 0 END) * 1.0 / COUNT(`atom_id`) AS percentage FROM `atom` INNER JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '='
SELECT COUNT(`bond_id`) FROM `bond` WHERE `bond_type` = '#'
SELECT COUNT(`atom_id`) FROM `atom` WHERE `element` != 'br'
SELECT COUNT(`molecule_id`) FROM `molecule` WHERE `molecule_id` BETWEEN 'TR000' AND 'TR099' AND `label` = '+'
SELECT DISTINCT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'c'
SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR004_8_9'
SELECT DISTINCT `atom`.`element` FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '='
SELECT `molecule`.`label` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'h' GROUP BY `molecule`.`label` ORDER BY COUNT(`molecule`.`label`) DESC LIMIT 1
SELECT DISTINCT `bond`.`bond_type` FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `atom`.`element` = 'cl'
SELECT T1.atom_id, T2.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '-'
SELECT T1.atom_id, T2.atom_id2 FROM connected AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN molecule ON T1.molecule_id = molecule.molecule_id WHERE molecule.label = '-'
SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(T1.element) ASC LIMIT 1
SELECT `bond`.`bond_type` FROM `connected` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE (`connected`.`atom_id` = 'TR004_8' AND `connected`.`atom_id2` = 'TR004_20') OR (`connected`.`atom_id` = 'TR004_20' AND `connected`.`atom_id2` = 'TR004_8')
SELECT DISTINCT `molecule`.`label` FROM `molecule` WHERE `molecule`.`label` NOT IN (SELECT `molecule`.`label` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'sn')
SELECT COUNT(DISTINCT T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE (T1.element = 'i' OR T1.element = 's') AND T3.bond_type = '-'
SELECT DISTINCT `connected`.`atom_id`, `connected`.`atom_id2` FROM `connected` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '#'
SELECT DISTINCT T3.atom_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN atom AS T3 ON T2.atom_id2 = T3.atom_id WHERE T1.molecule_id = 'TR181'
SELECT CAST(SUM(CASE WHEN `element` != 'f' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT `atom`.`molecule_id`) FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT CAST(SUM(CASE WHEN `bond`.`bond_type` = '#' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`bond`.`bond_id`) AS percent FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+' AND `bond`.`bond_type` = '#'
SELECT `element` FROM `atom` WHERE `molecule_id` = 'TR000' ORDER BY `element` ASC LIMIT 3
SELECT T1.atom_id, T2.atom_id2 FROM connected AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_id = 'TR001_2_6' AND T1.atom_id <> T2.atom_id2
SELECT SUM(CASE WHEN `label` = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN `label` = '-' THEN 1 ELSE 0 END) AS difference FROM `molecule`
SELECT `atom_id`, `atom_id2` FROM `connected` WHERE `bond_id` = 'TR000_2_5'
SELECT `bond_id` FROM `connected` WHERE `atom_id2` = 'TR000_2'
SELECT T1.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = ' = ' GROUP BY T1.molecule_id ORDER BY T1.label ASC LIMIT 5
SELECT CAST(SUM(CASE WHEN `bond_type` = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`bond_id`) AS percent FROM `bond` WHERE `molecule_id` = 'TR008'
SELECT CAST(SUM(CASE WHEN `label` = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(`molecule_id`) * 100 AS percent FROM `molecule`
SELECT CAST(SUM(CASE WHEN `element` = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `atom` WHERE `molecule_id` = 'TR206'
SELECT `bond`.`bond_type` FROM `bond` WHERE `bond`.`molecule_id` = 'TR000'
SELECT `atom`.`element`, `molecule`.`label` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`molecule_id` = 'TR060'
SELECT `bond`.`bond_type`, `molecule`.`label` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`molecule_id` = 'TR010' GROUP BY `bond`.`bond_type` ORDER BY COUNT(`bond`.`bond_type`) DESC LIMIT 1
SELECT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `molecule`.`label` = '-' AND `bond`.`bond_type` = '-' GROUP BY `molecule`.`molecule_id` ORDER BY `molecule`.`molecule_id` ASC LIMIT 3
SELECT `bond_id` FROM `bond` WHERE `molecule_id` = 'TR006' ORDER BY `bond_id` ASC LIMIT 2
SELECT COUNT(`connected`.`bond_id`) FROM `connected` WHERE (`connected`.`atom_id` = 'TR009_12' OR `connected`.`atom_id2` = 'TR009_12') AND `connected`.`bond_id` IN (SELECT `bond`.`bond_id` FROM `bond` WHERE `bond`.`molecule_id` = 'TR009')
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+' AND `atom`.`element` = 'br'
SELECT T1.bond_type, T2.element AS atom1, T3.element AS atom2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id2 = T3.atom_id WHERE T1.bond_id = 'TR001_6_9'
SELECT `molecule`.`molecule_id`, `molecule`.`label` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`atom_id` = 'TR001_10'
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '#'
SELECT COUNT(`bond_id`) FROM `connected` WHERE `atom_id` LIKE 'TR%_19' OR `atom_id2` LIKE 'TR%_19'
SELECT `element` FROM `atom` WHERE `molecule_id` = 'TR004'
SELECT COUNT(`molecule_id`) FROM `molecule` WHERE `label` = '-'
SELECT DISTINCT `molecule`.`molecule_id` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE SUBSTR(`atom`.`atom_id`, 7, 2) BETWEEN '21' AND '25' AND `molecule`.`label` = '+'
SELECT T3.bond_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'p' AND EXISTS (SELECT 1 FROM atom AS T4 INNER JOIN connected AS T5 ON T4.atom_id = T5.atom_id2 WHERE T4.element = 'n' AND T5.bond_id = T3.bond_id)
SELECT T1.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = ' = ' GROUP BY T1.molecule_id ORDER BY COUNT(T2.bond_id) DESC LIMIT 1
SELECT CAST(COUNT(`bond`.`bond_id`) AS REAL) / COUNT(DISTINCT `atom`.`atom_id`) FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `atom`.`element` = 'i'
SELECT `bond`.`bond_type`, `bond`.`bond_id` FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE SUBSTR(`atom`.`atom_id`, 7, 2) + 0 = 45
SELECT `element` FROM `atom` WHERE `atom_id` NOT IN (SELECT `atom_id` FROM `connected` UNION SELECT `atom_id2` FROM `connected`)
SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.molecule_id = 'TR041' AND T3.bond_type = '#'
SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR144_8_19'
SELECT T1.molecule_id, COUNT(T2.bond_id) AS double_bond_count FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type = '=' GROUP BY T1.molecule_id ORDER BY double_bond_count DESC LIMIT 1
SELECT `element` FROM `atom` WHERE `molecule_id` IN (SELECT `molecule_id` FROM `molecule` WHERE `label` = '+') GROUP BY `element` ORDER BY COUNT(`atom_id`) ASC LIMIT 1
SELECT T2.atom_id2 FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'pb'
SELECT `atom`.`element` FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '#'
SELECT CAST(COUNT(CASE WHEN `atom`.`element` = (SELECT `element` FROM `atom` GROUP BY `element` ORDER BY COUNT(`atom_id`) DESC LIMIT 1) THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(`bond`.`bond_id`) FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id`
SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.bond_id) AS proportion FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-'
SELECT COUNT(*) FROM `atom` WHERE `element` IN ('c', 'h')
SELECT `connected`.`atom_id2` FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` WHERE `atom`.`element` = 's'
SELECT `bond`.`bond_type` FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `atom`.`element` = 'sn'
SELECT COUNT(DISTINCT `atom`.`element`) FROM `atom` INNER JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '-'
SELECT COUNT(DISTINCT `atom`.`atom_id`) FROM `atom` INNER JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '#' AND (`atom`.`element` = 'p' OR `atom`.`element` = 'br')
SELECT `bond`.`bond_id` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT DISTINCT `bond`.`molecule_id` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '-' AND `molecule`.`label` = '-'
SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) AS 'percentage' FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'
SELECT `label` FROM `molecule` WHERE `molecule_id` IN ('TR000', 'TR001', 'TR002')
SELECT `molecule_id` FROM `molecule` WHERE `label` = '-'
SELECT COUNT(`molecule`.`molecule_id`) FROM `molecule` WHERE `molecule`.`label` = '+' AND `molecule`.`molecule_id` BETWEEN 'TR000' AND 'TR030'
SELECT T1.bond_type FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id BETWEEN 'TR000' AND 'TR050'
SELECT T1.element AS Element1, T2.element AS Element2 FROM connected AS T3 INNER JOIN atom AS T1 ON T3.atom_id = T1.atom_id INNER JOIN atom AS T2 ON T3.atom_id2 = T2.atom_id WHERE T3.bond_id = 'TR001_10_11'
SELECT COUNT(DISTINCT `connected`.`bond_id`) FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` WHERE `atom`.`element` = 'i'
SELECT MAX(`molecule`.`label`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'ca'
SELECT COUNT(*) FROM `connected` AS T1 INNER JOIN `atom` AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN `atom` AS T3 ON T1.`atom_id2` = T3.`atom_id` WHERE T1.`bond_id` = 'TR001_1_8' AND ((T2.`element` = 'cl' AND T3.`element` = 'c') OR (T2.`element` = 'c' AND T3.`element` = 'cl'))
SELECT T1.molecule_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.element = 'c' AND T2.bond_type = '#' AND T3.label = '-' LIMIT 2
SELECT CAST(SUM(CASE WHEN `atom`.`element` = 'cl' THEN 1 ELSE 0 END) AS REAL) / COUNT(`atom`.`molecule_id`) AS percentage FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT `element` FROM `atom` WHERE `molecule_id` = 'TR001'
SELECT `molecule_id` FROM `bond` WHERE `bond_type` = ' = '
SELECT `connected`.`atom_id`, `connected`.`atom_id2` FROM `connected` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '#'
SELECT `element` FROM `atom` WHERE `atom_id` IN (SELECT `atom_id` FROM `connected` WHERE `bond_id` = 'TR000_1_2')
SELECT COUNT(*) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-'
SELECT `molecule`.`label` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_id` = 'TR001_10_11'
SELECT T1.bond_id, T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'
SELECT `atom`.`element`, COUNT(*) AS `count` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+' AND SUBSTR(`atom`.`atom_id`, 7, 1) = '4' GROUP BY `atom`.`element`
SELECT CAST(SUM(CASE WHEN `element` = 'h' THEN 1 ELSE 0 END) AS REAL) / COUNT(`element`) AS ratio, `label` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`molecule_id` = 'TR006' GROUP BY `atom`.`molecule_id`, `label`
SELECT CASE WHEN EXISTS (SELECT 1 FROM `atom` AS T1 INNER JOIN `molecule` AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'ca' AND T2.`label` = '+') THEN 'Carcinogenic' ELSE 'Non-carcinogenic' END AS `Carcinogenicity`
SELECT T2.bond_type FROM atom AS T1 INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN bond AS T2 ON T3.bond_id = T2.bond_id WHERE T1.element = 'c'
SELECT T1.element AS Element1, T2.element AS Element2 FROM connected AS T3 INNER JOIN atom AS T1 ON T3.atom_id = T1.atom_id INNER JOIN atom AS T2 ON T3.atom_id2 = T2.atom_id WHERE T3.bond_id = 'TR001_10_11'
SELECT CAST(COUNT(DISTINCT T1.molecule_id) AS REAL) * 100 / (SELECT COUNT(DISTINCT molecule_id) FROM molecule) FROM bond AS T1 WHERE T1.bond_type = '#'
SELECT CAST(SUM(CASE WHEN T1.bond_type = ' = ' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.bond_id) AS percentage FROM bond AS T1 WHERE T1.molecule_id = 'TR047'
SELECT `molecule`.`label` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`atom_id` = 'TR001_1'
SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR151' AND `label` = '+'
SELECT `element` FROM `atom` WHERE `molecule_id` = 'TR151' AND `element` IN ('cl', 'br', 'i', 'pb', 'te')
SELECT COUNT(*) FROM `molecule` WHERE `label` = '+'
SELECT `atom_id` FROM `atom` WHERE `element` = 'c' AND substr(`molecule_id`, 3, 3) >= 10 AND substr(`molecule_id`, 3, 3) <= 50
SELECT COUNT(`atom`.`atom_id`) FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT `connected`.`bond_id` FROM `connected` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = ' = ' AND `molecule`.`label` = '+'
SELECT COUNT(`atom`.`atom_id`) FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'h' AND `molecule`.`label` = '+'
SELECT T1.molecule_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_id = 'TR000_1_2' AND T2.atom_id = 'TR000_1'
SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-'
SELECT CAST(SUM(CASE WHEN `molecule`.`label` = '+' AND `atom`.`element` = 'h' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id`
SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR124'
SELECT `element` FROM `atom` WHERE `molecule_id` = 'TR186'
SELECT `bond_type` FROM `bond` WHERE `bond_id` = 'TR007_4_19'
SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR001_2_4'
SELECT COUNT(`bond_id`), `label` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`molecule_id` = 'TR006' AND `bond`.`bond_type` = ' = ' GROUP BY `bond`.`molecule_id`
SELECT `molecule`.`molecule_id`, `atom`.`element` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT T1.`bond_id`, T2.`atom_id`, T2.`atom_id2` FROM `bond` AS T1 INNER JOIN `connected` AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T1.`bond_type` = '-'
SELECT DISTINCT m.`label`, a.`element` FROM `molecule` AS m INNER JOIN `bond` AS b ON m.`molecule_id` = b.`molecule_id` INNER JOIN `atom` AS a ON m.`molecule_id` = a.`molecule_id` WHERE b.`bond_type` = '#'
SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR000_2_3'
SELECT COUNT(`bond_id`) FROM `connected` WHERE `atom_id` IN (SELECT `atom_id` FROM `atom` WHERE `element` = 'cl') OR `atom_id2` IN (SELECT `atom_id` FROM `atom` WHERE `element` = 'cl')
SELECT `atom_id`, COUNT(DISTINCT `bond_type`) AS bond_type_count FROM `atom` INNER JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`molecule_id` = 'TR346' GROUP BY `atom_id`
SELECT COUNT(DISTINCT T1.molecule_id) AS total_double_bond_molecules, SUM(CASE WHEN T3.label = '+' THEN 1 ELSE 0 END) AS carcinogenic_double_bond_molecules FROM bond AS T1 INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.bond_type = ' = '
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` LEFT JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` LEFT JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`element` != 's' AND (`bond`.`bond_type` != ' = ' OR `bond`.`bond_type` IS NULL)
SELECT `molecule`.`label` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_id` = 'TR001_2_4' AND `molecule`.`label` = '+'
SELECT COUNT(`atom_id`) FROM `atom` WHERE `molecule_id` = 'TR001'
SELECT COUNT(*) FROM `bond` WHERE `bond_type` = '-'
SELECT DISTINCT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'cl' AND `molecule`.`label` = '+'
SELECT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'c' AND `molecule`.`label` = '-'
SELECT CAST(SUM(CASE WHEN `molecule`.`label` = '+' AND `atom`.`element` = 'cl' THEN 1 ELSE 0 END) AS REAL) / COUNT(`molecule`.`molecule_id`) AS percentage FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id`
SELECT `molecule_id` FROM `bond` WHERE `bond_id` = 'TR001_1_7'
SELECT COUNT(DISTINCT `atom`.`element`) FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` OR `atom`.`atom_id` = `connected`.`atom_id2` WHERE `connected`.`bond_id` = 'TR001_3_4'
SELECT `bond_type` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` WHERE `connected`.`atom_id` = 'TR000_1' AND `connected`.`atom_id2` = 'TR000_2'
SELECT T1.molecule_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.atom_id = 'TR000_2' AND T2.atom_id2 = 'TR000_4'
SELECT `element` FROM `atom` WHERE `atom_id` = 'TR000_1'
SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR000'
SELECT CAST(SUM(CASE WHEN `bond`.`bond_type` = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id`
SELECT COUNT(DISTINCT `atom`.`molecule_id`) FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'n' AND `molecule`.`label` = '+'
SELECT DISTINCT `molecule`.`label` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`element` = 's' AND `bond`.`bond_type` = ' = '
SELECT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '-' GROUP BY `molecule`.`molecule_id` HAVING COUNT(`atom`.`atom_id`) > 5
SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR024' AND T2.bond_type = '='
SELECT T1.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' GROUP BY T1.molecule_id ORDER BY COUNT(T1.atom_id) DESC LIMIT 1
SELECT CAST(SUM(CASE WHEN `molecule`.`label` = '+' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(`molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`element` = 'h' AND `bond`.`bond_type` = '#'
SELECT COUNT(`molecule_id`) FROM `molecule` WHERE `label` = '+'
SELECT COUNT(DISTINCT `bond`.`molecule_id`) FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '-' AND `molecule`.`molecule_id` BETWEEN 'TR004' AND 'TR010'
SELECT COUNT(`atom_id`) FROM `atom` WHERE `molecule_id` = 'TR008' AND `element` = 'c'
SELECT `element` FROM `atom` WHERE `atom_id` = 'TR004_7' AND `molecule_id` IN (SELECT `molecule_id` FROM `molecule` WHERE `label` = '-')
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`element` = 'o' AND `bond`.`bond_type` = ' = ' AND `atom`.`atom_id` IN (SELECT `atom_id` FROM `atom` WHERE `element` = 'o' AND `atom_id` IN (SELECT `bond_id` FROM `bond` WHERE `bond_type` = ' = '))
SELECT COUNT(`molecule`.`molecule_id`) FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '#' AND `molecule`.`label` = '-'
SELECT `atom`.`element`, `bond`.`bond_type` FROM `atom` INNER JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`molecule_id` = 'TR002'
SELECT `atom`.`atom_id` FROM `atom` JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`element` = 'c' AND `bond`.`bond_type` = ' = ' AND `atom`.`molecule_id` = 'TR012'
SELECT `atom`.`atom_id` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+' AND `atom`.`element` = 'o'
SELECT `name` FROM `cards` WHERE `cardkingdomfoilid` IS NOT NULL AND `cardkingdomid` IS NOT NULL
SELECT `name` FROM `cards` WHERE `bordercolor` = 'borderless' AND (`cardkingdomfoilid` IS NULL OR `cardkingdomid` IS NULL)
SELECT `name` FROM `cards` WHERE `faceconvertedmanacost` IS NOT NULL ORDER BY `faceconvertedmanacost` DESC
SELECT `name` FROM `cards` WHERE `frameversion` = 2015 AND `edhrecrank` < 100
SELECT `cards`.`name` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`rarity` = 'mythic' AND `legalities`.`status` = 'Banned' AND `legalities`.`format` = 'gladiator'
SELECT T1.name, T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.types = 'Artifact' AND T1.side IS NULL AND T2.format = 'vintage'
SELECT `cards`.`id`, `cards`.`artist` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE (`cards`.`power` = '*' OR `cards`.`power` IS NULL) AND `legalities`.`format` = 'commander' AND `legalities`.`status` = 'Legal'
SELECT `cards`.`id`, `rulings`.`text`, `cards`.`hascontentwarning` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`artist` = 'Stephen Daniele'
SELECT T2.date, T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Sublime Epiphany' AND T1.number = '74s'
SELECT T1.name, T1.artist, T1.ispromo FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid GROUP BY T1.uuid ORDER BY COUNT(T2.uuid) DESC LIMIT 1
SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'annul' AND T1.number = '29'
SELECT `cards`.`name` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Japanese'
SELECT CAST(SUM(CASE WHEN T1.language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid
SELECT `sets`.`code`, `sets`.`totalsetsize` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setcode` WHERE `set_translations`.`language` = 'Italian'
SELECT COUNT(DISTINCT `type`) FROM `cards` WHERE `artist` = 'Aaron Boyd'
SELECT `keywords` FROM `cards` WHERE `name` = 'Angel of Mercy'
SELECT COUNT(*) FROM `cards` WHERE `power` = '*'
SELECT `promotypes` FROM `cards` WHERE `name` = 'Duress'
SELECT `bordercolor` FROM `cards` WHERE `name` = 'Ancestor''s Chosen'
SELECT `originaltype` FROM `cards` WHERE `name` = 'Ancestor\'s Chosen'
SELECT DISTINCT T3.language FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setcode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setcode WHERE T1.name = 'Angel of Mercy'
SELECT COUNT(`cards`.`id`) FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`status` = 'restricted' AND `cards`.`istextless` = 0
SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Condemn'
SELECT COUNT(`cards`.`id`) FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`status` = 'restricted' AND `cards`.`isstarter` = 1
SELECT T1.status FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Aven Cloudchaser'
SELECT `type` FROM `cards` WHERE `name` = 'Benalish Knight'
SELECT `format` FROM `legalities` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Benalish Knight')
SELECT DISTINCT `cards`.`artist` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Phyrexian'
SELECT CAST(COUNT(CASE WHEN `bordercolor` = 'borderless' THEN `id` ELSE NULL END) AS REAL) * 100 / COUNT(`id`) FROM `cards`
SELECT COUNT(*) FROM `cards` AS T1 INNER JOIN `foreign_data` AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.isreprint = 1
SELECT COUNT(*) FROM `cards` AS T1 INNER JOIN `foreign_data` AS T2 ON T1.uuid = T2.uuid WHERE T1.bordercolor = 'borderless' AND T2.language = 'Russian'
SELECT CAST(SUM(CASE WHEN `foreign_data`.`language` = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`isstoryspotlight` = 1
SELECT COUNT(`id`) FROM `cards` WHERE `toughness` = 99
SELECT `name` FROM `cards` WHERE `artist` = 'Aaron Boyd'
SELECT COUNT(`id`) FROM `cards` WHERE `bordercolor` = 'black' AND `availability` = 'mtgo'
SELECT `id` FROM `cards` WHERE `convertedmanacost` = 0
SELECT `layout` FROM `cards` WHERE `keywords` LIKE '%Flying%'
SELECT COUNT(*) FROM `cards` WHERE `originaltype` = 'Summon - Angel' AND `subtypes` NOT LIKE '%Angel%'
SELECT c1.id FROM cards AS c1 INNER JOIN cards AS c2 ON c1.cardkingdomfoilid = c2.cardkingdomid WHERE c1.cardkingdomfoilid IS NOT NULL AND c2.cardkingdomid IS NOT NULL
SELECT `id` FROM `cards` WHERE `dueldeck` = 'a'
SELECT `edhrecrank` FROM `cards` WHERE `frameversion` = 2015
SELECT `cards`.`artist` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Chinese Simplified'
SELECT `cards`.`name` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`availability` = 'paper' AND `foreign_data`.`language` = 'Japanese'
SELECT COUNT(`cards`.`id`) FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`status` = 'Banned' AND `cards`.`bordercolor` = 'white'
SELECT `legalities`.`uuid`, `foreign_data`.`language` FROM `legalities` INNER JOIN `foreign_data` ON `legalities`.`uuid` = `foreign_data`.`uuid` WHERE `legalities`.`format` = 'legacy'
SELECT `text` FROM `rulings` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Beacon of Immortality')
SELECT COUNT(`cards`.`id`), `legalities`.`status` FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`frameversion` = 'future' GROUP BY `legalities`.`status`
SELECT `colors`, `name` FROM `cards` WHERE `setcode` = 'OGW'
SELECT DISTINCT `cards`.`name`, `set_translations`.`language` FROM `cards` INNER JOIN `set_translations` ON `cards`.`setcode` = `set_translations`.`setcode` WHERE `cards`.`setcode` = '10E' AND `cards`.`convertedmanacost` = 5
SELECT `cards`.`name`, `rulings`.`date` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`originaltype` = 'Creature - Elf'
SELECT `cards`.`colors`, `legalities`.`format` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`id` BETWEEN 1 AND 20
SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.originaltype = 'Artifact' AND T1.colors = 'B' AND T2.language IS NOT NULL
SELECT `cards`.`name` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`rarity` = 'uncommon' GROUP BY `cards`.`name` ORDER BY MIN(`rulings`.`date`) ASC LIMIT 3
SELECT COUNT(*) FROM `cards` WHERE `artist` = 'John Avon' AND `cardkingdomfoilid` IS NULL
SELECT COUNT(*) FROM `cards` WHERE `bordercolor` = 'white' AND `cardkingdomfoilid` IS NOT NULL AND `cardkingdomid` IS NOT NULL
SELECT COUNT(*) FROM `cards` WHERE `artist` = 'UDON' AND `availability` = 'mtgo' AND `hand` = -1
SELECT COUNT(`id`) FROM `cards` WHERE `frameversion` = 1993 AND `availability` = 'paper' AND `hascontentwarning` = 1
SELECT `manacost` FROM `cards` WHERE `layout` = 'normal' AND `frameversion` = '2003' AND `bordercolor` = 'black' AND `availability` = 'mtgo,paper'
SELECT SUM(`manacost`) FROM `cards` WHERE `artist` = 'Rob Alexander'
SELECT DISTINCT `subtypes`, `supertypes` FROM `cards` WHERE `availability` = 'arena'
SELECT `set_translations`.`setcode` FROM `set_translations` WHERE `set_translations`.`language` = 'Spanish'
SELECT (COUNT(`cards`.`id` WHERE `cards`.`isonlineonly` = 1) * 1.0 / COUNT(`cards`.`id`)) * 100 AS percentage FROM `cards` WHERE `cards`.`frameeffects` = 'legendary'
SELECT CAST(SUM(CASE WHEN `isstoryspotlight` = 1 AND `istextless` = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`id`) FROM `cards`
SELECT CAST(COUNT(CASE WHEN `foreign_data`.`language` = 'Spanish' THEN `foreign_data`.`id` ELSE NULL END) AS REAL) * 100 / COUNT(`foreign_data`.`id`) FROM `foreign_data` INNER JOIN `cards` ON `foreign_data`.`uuid` = `cards`.`uuid`
SELECT DISTINCT T1.language FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setcode = T2.code WHERE T2.basesetsize = 309
SELECT COUNT(DISTINCT `set_translations`.`setcode`) FROM `set_translations` INNER JOIN `sets` ON `set_translations`.`setcode` = `sets`.`code` WHERE `set_translations`.`language` = 'Portuguese (Brasil)' AND `sets`.`block` = 'Commander'
SELECT `cards`.`id` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`types` = 'Creature' AND `legalities`.`status` = 'Legal'
SELECT `foreign_data`.`type` FROM `foreign_data` WHERE `foreign_data`.`language` = 'German'
SELECT COUNT(`id`) FROM `cards` WHERE (`power` IS NULL OR `power` = '*') AND `text` LIKE '%triggered ability%'
SELECT COUNT(`cards`.`id`) FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `legalities`.`format` = 'premodern' AND `rulings`.`text` = 'This is a triggered mana ability.' AND `cards`.`side` IS NULL
SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Erica Yang' AND T2.format = 'pauper' AND T1.availability = 'paper'
SELECT `cards`.`artist` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`text` = 'Das perfekte Gegenmittel zu einer dichten Formation'
SELECT T2.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Matthew D. Wilson' AND T1.layout = 'normal' AND T1.bordercolor = 'black' AND T2.language = 'French'
SELECT COUNT(DISTINCT `cards`.`id`) FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`rarity` = 'rare' AND `rulings`.`date` = '2007-02-01'
SELECT DISTINCT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setcode WHERE T1.basesetsize = 180 AND T1.block = 'Ravnica'
SELECT CAST(SUM(CASE WHEN `cards`.`hascontentwarning` = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`cards`.`id`) FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`format` = 'commander' AND `legalities`.`status` = 'Legal'
SELECT CAST(SUM(CASE WHEN `foreign_data`.`language` = 'French' AND (`cards`.`power` IS NULL OR `cards`.`power` = '*') THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(CASE WHEN `cards`.`power` IS NULL OR `cards`.`power` = '*' THEN 1 END) FROM `cards` LEFT JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`power` IS NULL OR `cards`.`power` = '*'
SELECT CAST(SUM(CASE WHEN T1.type = 'expansion' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setcode WHERE T2.language = 'Japanese'
SELECT `availability` FROM `cards` WHERE `artist` = 'Daren Bader'
SELECT COUNT(`id`) FROM `cards` WHERE `bordercolor` = 'borderless' AND `edhrecrank` > 12000
SELECT COUNT(*) FROM `cards` WHERE `isoversized` = 1 AND `isreprint` = 1 AND `ispromo` = 1
SELECT `name` FROM `cards` WHERE `power` IS NULL OR `power` = '*' AND `promotypes` = 'arenaleague' ORDER BY `name` ASC LIMIT 3
SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.multiverseid = T2.multiverseid WHERE T1.multiverseid = 149934
SELECT `id` FROM `cards` WHERE `cardkingdomfoilid` IS NOT NULL AND `cardkingdomid` IS NOT NULL ORDER BY `cardkingdomfoilid` ASC LIMIT 3
SELECT CAST(COUNT(CASE WHEN `istextless` = 1 AND `layout` = 'normal' THEN `id` ELSE NULL END) AS REAL) * 100 / COUNT(`id`) FROM `cards`
SELECT `number` FROM `cards` WHERE `side` IS NULL AND `subtypes` LIKE '%Angel%' AND `subtypes` LIKE '%Wizard%'
SELECT `name` FROM `sets` WHERE `isonlineonly` = 0 AND (`mtgocode` IS NULL OR `mtgocode` = '') ORDER BY `name` ASC LIMIT 3
SELECT DISTINCT T1.language FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setcode = T2.code WHERE T2.mcmname = 'Archenemy' AND T2.code = 'ARC'
SELECT T1.name, T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setcode WHERE T1.id = 5
SELECT `set_translations`.`language`, `sets`.`type` FROM `sets` INNER JOIN `set_translations` ON `sets`.`id` = `set_translations`.`id` WHERE `sets`.`id` = 206
SELECT `cards`.`id`, `cards`.`setcode` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`id` = `foreign_data`.`id` INNER JOIN `sets` ON `cards`.`setcode` = `sets`.`code` WHERE `foreign_data`.`language` = 'Italian' AND `sets`.`block` = 'Shadowmoor' ORDER BY `cards`.`setcode` ASC LIMIT 2
SELECT `sets`.`id` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setcode` WHERE `sets`.`isforeignonly` = 1 AND `sets`.`isfoilonly` = 1 AND `set_translations`.`language` = 'Japanese'
SELECT s.`name` FROM sets AS s INNER JOIN set_translations AS st ON s.`code` = st.`setcode` WHERE st.`language` = 'Russian' ORDER BY s.`basesetsize` DESC LIMIT 1
SELECT CAST(SUM(CASE WHEN `cards`.`isonlineonly` = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `cards` INNER JOIN `set_translations` ON `cards`.`setcode` = `set_translations`.`setcode` WHERE `set_translations`.`language` = 'Chinese Simplified'
SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setcode WHERE T2.language = 'Japanese' AND (T1.mtgocode IS NULL OR T1.mtgocode = '')
SELECT `id` FROM `cards` WHERE `bordercolor` = 'black'
SELECT `id` FROM `cards` WHERE `frameeffects` = 'extendedart'
SELECT `name` FROM `cards` WHERE `bordercolor` = 'black' AND `isfullart` = 1
SELECT `set_translations`.`language` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setcode` WHERE `sets`.`id` = '174'
SELECT `name` FROM `sets` WHERE `code` = 'ALL'
SELECT `foreign_data`.`language` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`name` = 'A Pedra Fellwar'
SELECT `code` FROM `sets` WHERE `releasedate` = '2007-07-13'
SELECT `basesetsize`, `code` FROM `sets` WHERE `block` IN ('Masques', 'Mirage')
SELECT `code` FROM `sets` WHERE `type` = 'expansion'
SELECT T2.name, T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'boros'
SELECT `language`, `flavortext`, `type` FROM `foreign_data` WHERE `uuid` IN (SELECT `uuid` FROM `cards` WHERE `watermark` = 'colorpie')
SELECT CAST(SUM(CASE WHEN `convertedmanacost` = 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`id`) FROM `cards` WHERE `name` = 'Abyssal Horror'
SELECT `code` FROM `sets` WHERE `type` = 'expansion commander'
SELECT T2.name, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'abzan'
SELECT `foreign_data`.`language`, `cards`.`type` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'azorius'
SELECT COUNT(*) FROM `cards` WHERE `artist` = 'Aaron Miller' AND `cardkingdomfoilid` IS NOT NULL AND `cardkingdomid` IS NOT NULL
SELECT COUNT(`id`) FROM `cards` WHERE `availability` LIKE '%paper%' AND `hand` = '3'
SELECT `name` FROM `cards` WHERE `istextless` = 0
SELECT `manacost` FROM `cards` WHERE `name` = 'Ancestor`s Chosen'
SELECT COUNT(*) FROM `cards` WHERE `bordercolor` = 'white' AND (`power` = '*' OR `power` IS NULL)
SELECT `name` FROM `cards` WHERE `ispromo` = 1 AND `side` IS NOT NULL
SELECT `subtypes`, `supertypes` FROM `cards` WHERE `name` = 'Molimo, Maro-Sorcerer'
SELECT `purchaseurls` FROM `cards` WHERE `promotypes` = 'bundle'
SELECT COUNT(DISTINCT `artist`) FROM `cards` WHERE `bordercolor` = 'black' AND `availability` LIKE '%arena,mtgo%'
SELECT `name` FROM `cards` WHERE `name` IN ('Serra Angel', 'Shrine Keeper') ORDER BY `convertedmanacost` DESC LIMIT 1
SELECT `artist` FROM `cards` WHERE `flavorname` = 'Battra, Dark Destroyer'
SELECT `name` FROM `cards` WHERE `frameversion` = '2003' ORDER BY `convertedmanacost` DESC LIMIT 3
SELECT set_translations.translation FROM cards INNER JOIN sets ON cards.setcode = sets.code INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE cards.name = 'Ancestor''s Chosen' AND set_translations.language = 'Italian'
SELECT COUNT(*) FROM set_translations WHERE setcode = (SELECT setcode FROM cards WHERE name = 'Angel of Mercy')
SELECT c.`name` FROM cards AS c INNER JOIN set_translations AS st ON c.`setcode` = st.`setcode` WHERE st.`translation` = 'Hauptset Zehnte Edition'
SELECT EXISTS (SELECT 1 FROM `foreign_data` WHERE `name` = 'Ancestor''s Chosen' AND `language` = 'Korean') AS `has_korean_version`
SELECT COUNT(*) FROM `cards` INNER JOIN `set_translations` ON `cards`.`setcode` = `set_translations`.`setcode` WHERE `set_translations`.`translation` = 'Hauptset Zehnte Edition' AND `cards`.`artist` = 'Adam Rex'
SELECT `basesetsize` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = 'Hauptset Zehnte Edition'
SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setcode WHERE T1.name = 'Eighth Edition' AND T2.language = 'Chinese Simplified'
SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.name = T2.name WHERE T1.name = 'Angel of Mercy' AND T2.mtgocode IS NOT NULL
SELECT sets.releasedate FROM sets INNER JOIN cards ON sets.code = cards.setcode WHERE cards.name = 'Ancestor''s Chosen'
SELECT T2.type FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setcode = T2.code WHERE T1.translation = 'Hauptset Zehnte Edition'
SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setcode WHERE T1.block = 'Ice Age' AND T2.language = 'Italian'
SELECT `sets`.`isforeignonly` FROM `cards` INNER JOIN `sets` ON `cards`.`setcode` = `sets`.`code` WHERE `cards`.`name` = 'Adarkar Valkyrie' AND `sets`.`isforeignonly` = 1
SELECT COUNT(*) FROM sets AS s INNER JOIN set_translations AS st ON s.code = st.setcode WHERE st.language = 'Italian' AND s.basesetsize < 100
SELECT COUNT(`cards`.`id`) FROM `cards` INNER JOIN `sets` ON `cards`.`setcode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap' AND `cards`.`bordercolor` = 'black'
SELECT `name` FROM `cards` WHERE `setcode` = (SELECT `code` FROM `sets` WHERE `name` = 'Coldsnap') ORDER BY `convertedmanacost` DESC LIMIT 1
SELECT DISTINCT `artist` FROM `cards` WHERE `setcode` IN (SELECT `code` FROM `sets` WHERE `name` = 'Coldsnap') AND `artist` IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')
SELECT `name` FROM `cards` WHERE `number` = 4 AND `setcode` = (SELECT `code` FROM `sets` WHERE `name` = 'Coldsnap')
SELECT COUNT(*) FROM `cards` WHERE `setcode` = (SELECT `code` FROM `sets` WHERE `name` = 'Coldsnap') AND `convertedmanacost` > 5 AND (`power` = '*' OR `power` IS NULL)
SELECT `flavortext` FROM `foreign_data` WHERE `language` = 'Italian' AND `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Ancestor''s Chosen')
SELECT `foreign_data`.`language` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`name` = 'Ancestor''s Chosen' AND `foreign_data`.`flavortext` IS NOT NULL
SELECT T1.type FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Ancestor''s Chosen' AND T1.language = 'German'
SELECT T1.text FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid INNER JOIN foreign_data AS T3 ON T2.uuid = T3.uuid INNER JOIN sets AS T4 ON T2.setcode = T4.code WHERE T4.name = 'Coldsnap' AND T3.language = 'Italian'
SELECT fd.name FROM cards AS c INNER JOIN foreign_data AS fd ON c.uuid = fd.uuid INNER JOIN sets AS s ON c.setcode = s.code WHERE s.name = 'Coldsnap' AND fd.language = 'Italian' ORDER BY c.convertedmanacost DESC LIMIT 1
SELECT `date` FROM `rulings` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Reminisce')
SELECT CAST(SUM(CASE WHEN `cards`.`convertedmanacost` = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `cards` INNER JOIN `sets` ON `cards`.`setcode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap'
SELECT CAST(SUM(CASE WHEN `cardkingdomfoilid` IS NOT NULL AND `cardkingdomid` IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `cards` WHERE `name` = 'Coldsnap'
SELECT `code` FROM `sets` WHERE `releasedate` = '2017-07-14'
SELECT `keyrunecode` FROM `sets` WHERE `code` = 'PKHC'
SELECT `mcmid` FROM `sets` WHERE `code` = 'SS2'
SELECT `mcmname` FROM `sets` WHERE `releasedate` = '2017-06-09'
SELECT `type` FROM `sets` WHERE `name` = 'From the Vault: Lore'
SELECT `parentcode` FROM `sets` WHERE `name` = 'Commander 2014 Oversized'
SELECT `cards`.`text`, `rulings`.`text` AS `ruling_text`, `cards`.`hascontentwarning` FROM `cards` LEFT JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`artist` = 'Jim Pavelec'
SELECT sets.`releasedate` FROM cards INNER JOIN sets ON cards.`setcode` = sets.`code` WHERE cards.`name` = 'Evacuation'
SELECT basesetsize FROM sets WHERE code = (SELECT setcode FROM set_translations WHERE translation = 'Rinascita di Alara' LIMIT 1)
SELECT `type` FROM sets WHERE `code` = (SELECT `setcode` FROM set_translations WHERE `translation` = 'Huitième édition' LIMIT 1)
SELECT T2.translation FROM set_translations AS T2 INNER JOIN sets AS T1 ON T2.setcode = T1.code WHERE T2.language = 'French' AND T1.name = 'Tendo Ice Bridge'
SELECT COUNT(*) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setcode = T2.code WHERE T2.name = 'Tenth Edition' AND T1.translation IS NOT NULL
SELECT ST.`translation` FROM cards AS C INNER JOIN sets AS S ON C.`setcode` = S.`code` INNER JOIN set_translations AS ST ON S.`code` = ST.`setcode` WHERE C.`name` = 'Fellwar Stone' AND ST.`language` = 'Japanese'
SELECT `name` FROM `cards` WHERE `setcode` = (SELECT `code` FROM `sets` WHERE `name` = 'Journey into Nyx Hero''s Path') ORDER BY `convertedmanacost` DESC LIMIT 1
SELECT `sets`.`releasedate` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setcode` WHERE `set_translations`.`translation` = 'Ola de frío'
SELECT DISTINCT T1.type FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setcode WHERE T2.name = 'Samite Pilgrim'
SELECT COUNT(`cards`.`id`) FROM `cards` INNER JOIN `sets` ON `cards`.`setcode` = `sets`.`code` WHERE `sets`.`name` = 'World Championship Decks 2004' AND `cards`.`convertedmanacost` = '3'
SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setcode WHERE T1.name = 'Mirrodin' AND T2.language = 'Chinese Simplified'
SELECT CAST(SUM(CASE WHEN `sets`.`isnonfoilonly` = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `set_translations` INNER JOIN `sets` ON `set_translations`.`setcode` = `sets`.`code` WHERE `set_translations`.`language` = 'Japanese'
SELECT CAST(SUM(CASE WHEN `cards`.`isonlineonly` = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Portuguese (Brazil)'
SELECT `availability` FROM `cards` WHERE `artist` = 'Aleksi Briclot' AND `istextless` = 1
SELECT `id` FROM `sets` ORDER BY `basesetsize` DESC LIMIT 1
SELECT `artist` FROM `cards` WHERE `side` IS NULL ORDER BY `convertedmanacost` DESC LIMIT 1
SELECT `frameeffects` FROM `cards` WHERE `cardkingdomfoilid` IS NOT NULL AND `cardkingdomid` IS NOT NULL ORDER BY `frameeffects` DESC LIMIT 1
SELECT COUNT(`id`) FROM `cards` WHERE (`power` IS NULL OR `power` = '*') AND `hasfoil` = 0 AND `dueldeck` = 'a'
SELECT `id` FROM `sets` WHERE `type` = 'commander' ORDER BY `totalsetsize` DESC LIMIT 1
SELECT `cards`.`name` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`format` = 'duel' ORDER BY `cards`.`convertedmanacost` DESC LIMIT 10
SELECT T1.originalreleasedate, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' ORDER BY T1.originalreleasedate ASC LIMIT 1
SELECT COUNT(*) FROM `cards` AS T1 INNER JOIN `foreign_data` AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`artist` = 'Volkan Baǵa' AND T2.`language` = 'French'
SELECT COUNT(`cards`.`id`) FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`rarity` = 'rare' AND `cards`.`types` = 'Enchantment' AND `cards`.`name` = 'Abundance' AND `legalities`.`status` = 'Legal'
SELECT `format`, GROUP_CONCAT(`name`) AS card_names FROM `legalities` INNER JOIN `cards` ON `legalities`.`uuid` = `cards`.`uuid` WHERE `status` = 'Banned' GROUP BY `format` ORDER BY COUNT(`status`) DESC LIMIT 1
SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setcode WHERE T1.name = 'Battlebond' LIMIT 1
SELECT `cards`.`artist`, `legalities`.`format` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` GROUP BY `cards`.`artist` ORDER BY COUNT(`cards`.`uuid`) ASC LIMIT 1
SELECT T1.status FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.frameversion = '1997' AND T2.artist = 'D. Alexander Gregory' AND T2.hascontentwarning = 1 AND T1.format = 'legacy'
SELECT `cards`.`name`, `legalities`.`format` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`edhrecrank` = 1 AND `legalities`.`status` = 'Banned'
SELECT CAST(COUNT(`sets`.`id`) AS REAL) / 4 AS annual_avg, (SELECT `language` FROM `set_translations` GROUP BY `language` ORDER BY COUNT(`language`) DESC LIMIT 1) AS common_language FROM `sets` WHERE `releasedate` BETWEEN '2012-01-01' AND '2015-12-31'
SELECT DISTINCT `artist` FROM `cards` WHERE `bordercolor` = 'black' AND `availability` = 'arena'
SELECT `cards`.`uuid` FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`format` = 'oldschool' AND `legalities`.`status` IN ('banned', 'restricted')
SELECT COUNT(*) FROM `cards` WHERE `artist` = 'Matthew D. Wilson' AND `availability` = 'paper'
SELECT `rulings`.`text` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`artist` = 'Kev Walker' ORDER BY `rulings`.`date` DESC
SELECT `cards`.`name`, `legalities`.`format` FROM `cards` INNER JOIN `sets` ON `cards`.`setcode` = `sets`.`code` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `sets`.`name` = 'Hour of Devastation' AND `legalities`.`status` = 'Legal'
SELECT DISTINCT `sets`.`name` FROM `sets` LEFT JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setcode` WHERE `sets`.`code` NOT IN (SELECT `setcode` FROM `set_translations` WHERE `language` LIKE '%Japanese%') AND `sets`.`code` IN (SELECT `setcode` FROM `set_translations` WHERE `language` = 'Korean')
SELECT `cards`.`frameversion`, `cards`.`name` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`artist` = 'Allen Williams' AND `legalities`.`status` = 'Banned'
SELECT displayname, reputation FROM users WHERE displayname IN ('Harlan', 'Jarrod Dixon') ORDER BY reputation DESC LIMIT 1
SELECT `displayname` FROM `users` WHERE STRFTIME('%Y', `creationdate`) = '2011'
SELECT COUNT(`id`) FROM `users` WHERE `lastaccessdate` > '2014-09-01'
SELECT `displayname` FROM `users` ORDER BY `views` DESC LIMIT 1
SELECT COUNT(id) FROM users WHERE upvotes > 100 AND downvotes > 1
SELECT COUNT(`id`) FROM `users` WHERE `views` > 10 AND strftime('%Y', `creationdate`) > '2013'
SELECT COUNT(`posts`.`id`) FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` WHERE `users`.`displayname` = 'csgillespie'
SELECT `title` FROM `posts` WHERE `owneruserid` IN (SELECT `id` FROM `users` WHERE `displayname` = 'csgillespie')
SELECT T2.displayname FROM posts AS T1 INNER JOIN users AS T2 ON T1.owneruserid = T2.id WHERE T1.title = 'Eliciting priors from experts'
SELECT `title` FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` WHERE `users`.`displayname` = 'csgillespie' ORDER BY `posts`.`viewcount` DESC LIMIT 1
SELECT `users`.`displayname` FROM `users` JOIN `posts` ON `users`.`id` = `posts`.`owneruserid` ORDER BY `posts`.`favoritecount` DESC LIMIT 1
SELECT SUM(`posts`.`commentcount`) FROM `users` INNER JOIN `posts` ON `users`.`id` = `posts`.`owneruserid` WHERE `users`.`displayname` = 'csgillespie'
SELECT MAX(`answercount`) FROM `posts` WHERE `owneruserid` = (SELECT `id` FROM `users` WHERE `displayname` = 'csgillespie')
SELECT T2.displayname FROM posts AS T1 INNER JOIN users AS T2 ON T1.lasteditoruserid = T2.id WHERE T1.title = 'Examples for teaching: Correlation does not mean causation'
SELECT COUNT(`posts`.`id`) FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` WHERE `users`.`displayname` = 'csgillespie' AND `posts`.`parentid` IS NULL
SELECT DISTINCT `users`.`displayname` FROM `users` INNER JOIN `posts` ON `users`.`id` = `posts`.`owneruserid` WHERE `posts`.`closeddate` IS NOT NULL
SELECT COUNT(*) FROM posts AS p INNER JOIN users AS u ON p.owneruserid = u.id WHERE u.age > 65 AND p.score >= 20
SELECT T2.location FROM posts AS T1 INNER JOIN users AS T2 ON T1.owneruserid = T2.id WHERE T1.title = 'Eliciting priors from experts'
SELECT `posts`.`body` FROM `tags` INNER JOIN `posts` ON `tags`.`excerptpostid` = `posts`.`id` WHERE `tags`.`tagname` = 'bayesian'
SELECT `posts`.`body` FROM `tags` INNER JOIN `posts` ON `tags`.`excerptpostid` = `posts`.`id` ORDER BY `tags`.`count` DESC LIMIT 1
SELECT COUNT(`id`) FROM `badges` WHERE `userid` = (SELECT `id` FROM `users` WHERE `displayname` = 'csgillespie')
SELECT `name` FROM `badges` WHERE `userid` = (SELECT `id` FROM `users` WHERE `displayname` = 'csgillespie')
SELECT COUNT(`badges`.`id`) FROM `badges` INNER JOIN `users` ON `badges`.`userid` = `users`.`id` WHERE `users`.`displayname` = 'csgillespie' AND strftime('%Y', `badges`.`date`) = '2011'
SELECT `users`.`displayname` FROM `users` INNER JOIN `badges` ON `users`.`id` = `badges`.`userid` GROUP BY `users`.`id` ORDER BY COUNT(`badges`.`id`) DESC LIMIT 1
SELECT AVG(`T2`.`score`) FROM `users` AS `T1` INNER JOIN `posts` AS `T2` ON `T1`.`id` = `T2`.`owneruserid` WHERE `T1`.`displayname` = 'csgillespie'
SELECT COUNT(`badges`.`id`) / COUNT(DISTINCT `users`.`displayname`) AS average_badges FROM `users` INNER JOIN `badges` ON `users`.`id` = `badges`.`userid` WHERE `users`.`views` > 200
SELECT (SUM(IIF(`users`.`age` > 65, 1.0, 0)) / COUNT(`posts`.`id`)) * 100 AS percentage FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` WHERE `posts`.`score` > 5
SELECT COUNT(`id`) FROM `votes` WHERE `userid` = 58 AND `creationdate` = '2010-07-19'
SELECT `creationdate` FROM `votes` GROUP BY `creationdate` ORDER BY COUNT(`id`) DESC LIMIT 1;
SELECT COUNT(`id`) FROM `badges` WHERE `name` = 'Revival'
SELECT `posts`.`title` FROM `comments` INNER JOIN `posts` ON `comments`.`postid` = `posts`.`id` ORDER BY `comments`.`score` DESC LIMIT 1
SELECT `commentcount` FROM `posts` WHERE `viewcount` = 1910
SELECT `posts`.`favoritecount` FROM `comments` INNER JOIN `posts` ON `comments`.`postid` = `posts`.`id` WHERE `comments`.`userid` = 3025 AND `comments`.`creationdate` = '2014-04-23 20:29:39.0'
SELECT `text` FROM `comments` WHERE `postid` = (SELECT `id` FROM `posts` WHERE `parentid` = 107829 AND `commentcount` = 1) LIMIT 1
SELECT `closeddate` FROM `posts` WHERE `id` = (SELECT `postid` FROM `comments` WHERE `userid` = '23853' AND `creationdate` = '2013-07-12 09:08:18.0')
SELECT `reputation` FROM `users` WHERE `id` = (SELECT `owneruserid` FROM `posts` WHERE `id` = 65041)
SELECT COUNT(`posts`.`id`) FROM `users` INNER JOIN `posts` ON `users`.`id` = `posts`.`owneruserid` WHERE `users`.`displayname` = 'Tiago Pasqualini'
SELECT T2.displayname FROM votes AS T1 INNER JOIN users AS T2 ON T1.userid = T2.id WHERE T1.id = '6347'
SELECT COUNT(`votes`.`id`) FROM `votes` INNER JOIN `posts` ON `votes`.`postid` = `posts`.`id` WHERE `posts`.`title` LIKE '%data visualization%';
SELECT `name` FROM `badges` WHERE `userid` = (SELECT `id` FROM `users` WHERE `displayname` = 'DatEpicCoderGuyWhoPrograms')
SELECT COUNT(`posts`.`id`) / COUNT(`votes`.`id`) FROM `posts` LEFT JOIN `votes` ON `posts`.`id` = `votes`.`postid` WHERE `posts`.`owneruserid` = 24
SELECT `viewcount` FROM `posts` WHERE `title` = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'
SELECT `text` FROM `comments` WHERE `score` = 17
SELECT `displayname` FROM `users` WHERE `websiteurl` = 'http://stackoverflow.com'
SELECT DISTINCT T1.name FROM badges AS T1 INNER JOIN users AS T2 ON T1.userid = T2.id WHERE T2.displayname = 'SilentGhost'
SELECT `users`.`displayname` FROM `comments` INNER JOIN `users` ON `comments`.`userid` = `users`.`id` WHERE `comments`.`text` = 'thank you user93!'
SELECT `text` FROM `comments` JOIN `users` ON `comments`.`userid` = `users`.`id` WHERE `users`.`displayname` = 'A Lion'
SELECT `users`.`displayname`, `users`.`reputation` FROM `users` INNER JOIN `posts` ON `users`.`id` = `posts`.`owneruserid` WHERE `posts`.`title` = 'Understanding what Dassault iSight is doing?'
SELECT `comments`.`text` FROM `comments` INNER JOIN `posts` ON `comments`.`postid` = `posts`.`id` WHERE `posts`.`title` = 'How does gentle boosting differ from AdaBoost?'
SELECT `users`.`displayname` FROM `badges` INNER JOIN `users` ON `badges`.`userid` = `users`.`id` WHERE `badges`.`name` = 'Necromancer' LIMIT 10
SELECT T2.displayname FROM posts AS T1 INNER JOIN users AS T2 ON T1.lasteditoruserid = T2.id WHERE T1.title = 'Open source tools for visualizing multi-dimensional data'
SELECT `posts`.`title` FROM `posts` INNER JOIN `users` ON `posts`.`lasteditoruserid` = `users`.`id` WHERE `users`.`displayname` = 'Vebjorn Ljosa'
SELECT SUM(`posts`.`score`), `users`.`websiteurl` FROM `posts` INNER JOIN `users` ON `posts`.`lasteditoruserid` = `users`.`id` WHERE `users`.`displayname` = 'Yevgeny' GROUP BY `users`.`websiteurl`
SELECT T1.text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.postid = T2.id INNER JOIN posthistory AS T3 ON T2.id = T3.postid WHERE T2.title = 'Why square the difference instead of taking the absolute value in standard deviation?' AND T3.userid = T1.userid
SELECT SUM(`bountyamount`) FROM `votes` INNER JOIN `posts` ON `votes`.`postid` = `posts`.`id` WHERE `posts`.`title` LIKE '%data%'
SELECT `users`.`displayname` FROM `votes` INNER JOIN `posts` ON `votes`.`postid` = `posts`.`id` INNER JOIN `users` ON `votes`.`userid` = `users`.`id` WHERE `votes`.`bountyamount` = 50 AND `posts`.`title` LIKE '%variance%'
SELECT `posts`.`title`, `comments`.`text`, AVG(`posts`.`viewcount`) AS avg_view_count FROM `posts` LEFT JOIN `comments` ON `posts`.`id` = `comments`.`postid` WHERE `posts`.`tags` LIKE '%<humor>%' GROUP BY `posts`.`id`
SELECT COUNT(`id`) FROM `comments` WHERE `userid` = 13
SELECT `id` FROM `users` ORDER BY `reputation` DESC LIMIT 1
SELECT `id` FROM `users` ORDER BY `views` LIMIT 1
SELECT COUNT(DISTINCT `userid`) FROM `badges` WHERE `name` = 'Supporter' AND `date` LIKE '2011-%'
SELECT COUNT(DISTINCT `userid`) FROM `badges` GROUP BY `userid` HAVING COUNT(`name`) > 5
SELECT COUNT(DISTINCT T1.userid) FROM badges AS T1 INNER JOIN badges AS T2 ON T1.userid = T2.userid INNER JOIN users AS T3 ON T1.userid = T3.id WHERE T1.name = 'Teacher' AND T2.name = 'Supporter' AND T3.location = 'New York, NY'
SELECT T2.reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.owneruserid = T2.id WHERE T1.id = 1
SELECT T1.userid FROM users AS T1 INNER JOIN posthistory AS T2 ON T1.id = T2.userid WHERE T1.views >= 1000 GROUP BY T2.postid, T1.userid HAVING COUNT(T2.id) = 1
SELECT `users`.`id`, `users`.`displayname`, `badges`.`name` FROM `users` INNER JOIN `comments` ON `users`.`id` = `comments`.`userid` INNER JOIN `badges` ON `users`.`id` = `badges`.`userid` GROUP BY `users`.`id` ORDER BY COUNT(`comments`.`id`) DESC LIMIT 1
SELECT COUNT(*) FROM badges AS T1 INNER JOIN users AS T2 ON T1.userid = T2.id WHERE T2.location = 'India' AND T1.name = 'Teacher'
SELECT (COUNT(CASE WHEN strftime('%Y', `badges`.`date`) = '2010' THEN 1 END) * 100.0 / COUNT(*)) - (COUNT(CASE WHEN strftime('%Y', `badges`.`date`) = '2011' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_difference FROM `badges` WHERE `badges`.`name` = 'Student'
SELECT posthistorytypeid, COUNT(DISTINCT userid) FROM posthistory WHERE postid = 3720
SELECT `posts`.`id`, `posts`.`viewcount` FROM `postlinks` INNER JOIN `posts` ON `postlinks`.`relatedpostid` = `posts`.`id` WHERE `postlinks`.`postid` = 61217
SELECT `posts`.`score`, `postlinks`.`linktypeid` FROM `posts` INNER JOIN `postlinks` ON `posts`.`id` = `postlinks`.`postid` WHERE `posts`.`id` = 395
SELECT `posts`.`id`, `posts`.`owneruserid` FROM `posts` WHERE `posts`.`score` > 60
SELECT SUM(`favoritecount`) FROM `posts` WHERE `owneruserid` = 686 AND strftime('%Y', `creaiondate`) = '2011'
SELECT CAST(SUM(`users`.`upvotes`) AS REAL) / COUNT(DISTINCT `users`.`id`) AS `average_upvotes`, CAST(SUM(`users`.`age`) AS REAL) / COUNT(DISTINCT `users`.`id`) AS `average_age` FROM `users` INNER JOIN `posts` ON `users`.`id` = `posts`.`owneruserid` GROUP BY `users`.`id` HAVING COUNT(`posts`.`id`) > 10
SELECT COUNT(DISTINCT `userid`) FROM `badges` WHERE `name` = 'Announcer'
SELECT `name` FROM `badges` WHERE `date` = '2010-07-19 19:39:08.0'
SELECT COUNT(`score`) FROM `comments` WHERE `score` > 60
SELECT `text` FROM `comments` WHERE `creationdate` = '2010-07-19 19:25:47.0'
SELECT COUNT(*) FROM `posts` WHERE `score` = 10;
SELECT T1.name FROM badges AS T1 INNER JOIN users AS T2 ON T1.userid = T2.id WHERE T2.reputation = (SELECT MAX(reputation) FROM users)
SELECT `users`.`reputation` FROM `badges` INNER JOIN `users` ON `badges`.`userid` = `users`.`id` WHERE `badges`.`date` = '2010-07-19 19:39:08.0'
SELECT DISTINCT T1.name FROM badges AS T1 INNER JOIN users AS T2 ON T1.userid = T2.id WHERE T2.displayname = 'Pierre'
SELECT `date` FROM `badges` WHERE `userid` IN (SELECT `id` FROM `users` WHERE `location` = 'Rochester, NY')
SELECT CAST(SUM(CASE WHEN `name` = 'Teacher' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage FROM `badges`
SELECT CAST(COUNT(CASE WHEN `users`.`age` BETWEEN 13 AND 18 THEN 1 END) AS REAL) * 100 / COUNT(`users`.`id`) FROM `badges` INNER JOIN `users` ON `badges`.`userid` = `users`.`id` WHERE `badges`.`name` = 'Organizer'
SELECT `comments`.`score` FROM `comments` INNER JOIN `posts` ON `comments`.`postid` = `posts`.`id` WHERE `posts`.`creaiondate` = '2010-07-19 19:19:56.0'
SELECT `comments`.`text` FROM `comments` INNER JOIN `posts` ON `comments`.`postid` = `posts`.`id` WHERE `posts`.`creaiondate` = '2010-07-19 19:37:33.0'
SELECT `users`.`age` FROM `users` INNER JOIN `badges` ON `users`.`id` = `badges`.`userid` WHERE `users`.`location` = 'Vienna, Austria'
SELECT COUNT(`users`.`id`) FROM `users` INNER JOIN `badges` ON `users`.`id` = `badges`.`userid` WHERE `badges`.`name` = 'Supporter' AND `users`.`age` BETWEEN 19 AND 65
SELECT SUM(`users`.`views`) FROM `users` INNER JOIN `badges` ON `users`.`id` = `badges`.`userid` WHERE `badges`.`date` = '2010-07-19 19:39:08.0'
SELECT T1.name FROM badges AS T1 INNER JOIN users AS T2 ON T1.userid = T2.id WHERE T2.reputation = (SELECT MIN(reputation) FROM users)
SELECT DISTINCT `badges`.`name` FROM `badges` INNER JOIN `users` ON `badges`.`userid` = `users`.`id` WHERE `users`.`displayname` = 'Sharpie'
SELECT COUNT(*) FROM badges AS b INNER JOIN users AS u ON b.userid = u.id WHERE b.name = 'Supporter' AND u.age > 65
SELECT `displayname` FROM `users` WHERE `id` = 30
SELECT COUNT(*) FROM `users` WHERE `location` LIKE '%New York, NY%'
SELECT COUNT(*) FROM `votes` WHERE `creationdate` LIKE '2010-%';
SELECT COUNT(`id`) FROM `users` WHERE `age` BETWEEN 19 AND 65
SELECT `displayname` FROM `users` ORDER BY `views` DESC LIMIT 1
SELECT CAST(COUNT(CASE WHEN strftime('%Y', `creationdate`) = '2010' THEN `id` ELSE NULL END) AS REAL) / COUNT(CASE WHEN strftime('%Y', `creationdate`) = '2011' THEN `id` ELSE NULL END) FROM `votes`
SELECT `tags`.`tagname` FROM `users` INNER JOIN `posts` ON `users`.`id` = `posts`.`owneruserid` INNER JOIN `tags` ON `posts`.`id` = `tags`.`id` WHERE `users`.`displayname` = 'John Salvatier'
SELECT COUNT(`posts`.`id`) FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` WHERE `users`.`displayname` = 'Daniel Vassallo'
SELECT COUNT(`votes`.`id`) FROM `votes` INNER JOIN `users` ON `votes`.`userid` = `users`.`id` WHERE `users`.`displayname` = 'Harlan';
SELECT `posts`.`id` FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` WHERE `users`.`displayname` = 'slashnick' ORDER BY `posts`.`answercount` DESC LIMIT 1
SELECT `posts`.`owneruserid`, SUM(`posts`.`viewcount`) AS total_views FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` WHERE `users`.`displayname` IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY `posts`.`owneruserid` ORDER BY total_views DESC LIMIT 1
SELECT COUNT(`posts`.`id`) FROM `posts` JOIN `users` ON `posts`.`owneruserid` = `users`.`id` JOIN `votes` ON `posts`.`id` = `votes`.`postid` WHERE `users`.`displayname` = 'Matt Parker' AND `votes`.`postid` > 4 GROUP BY `posts`.`id`
SELECT COUNT(*) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.postid = T2.id INNER JOIN users AS T3 ON T2.owneruserid = T3.id WHERE T3.displayname = 'Neil McGuigan' AND T1.score < 60
SELECT DISTINCT `tags` FROM `posts` WHERE `owneruserid` = (SELECT `id` FROM `users` WHERE `displayname` = 'Mark Meckes') AND `commentcount` = 0
SELECT `users`.`displayname` FROM `badges` INNER JOIN `users` ON `badges`.`userid` = `users`.`id` WHERE `badges`.`name` = 'Organizer'
SELECT CAST(SUM(CASE WHEN `tags`.`tagname` = 'r' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`posts`.`id`) FROM `posts` INNER JOIN `tags` ON `posts`.`id` = `tags`.`excerptpostid` WHERE `posts`.`ownerdisplayname` = 'Community'
SELECT SUM(CASE WHEN `users`.`displayname` = 'Mornington' THEN `posts`.`viewcount` ELSE 0 END) - SUM(CASE WHEN `users`.`displayname` = 'Amos' THEN `posts`.`viewcount` ELSE 0 END) AS difference FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id`
SELECT COUNT(DISTINCT `userid`) FROM `badges` WHERE `name` = 'Commentator' AND strftime('%Y', `date`) = '2014'
SELECT COUNT(`id`) FROM `posts` WHERE `creaiondate` BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59'
SELECT `displayname`, `age` FROM `users` ORDER BY `views` DESC LIMIT 1
SELECT `lasteditdate`, `lasteditoruserid` FROM `posts` WHERE `title` = 'Detecting a given face in a database of facial images'
SELECT COUNT(`comments`.`id`) FROM `comments` WHERE `comments`.`userid` = 13 AND `comments`.`score` < 60
SELECT `posts`.`title`, `users`.`displayname` FROM `comments` INNER JOIN `posts` ON `comments`.`postid` = `posts`.`id` INNER JOIN `users` ON `comments`.`userid` = `users`.`id` WHERE `comments`.`score` > 60
SELECT `name` FROM `badges` WHERE `userid` IN (SELECT `id` FROM `users` WHERE `location` = 'North Pole') AND STRFTIME('%Y', `date`) = '2011'
SELECT `users`.`displayname`, `users`.`websiteurl` FROM `users` INNER JOIN `posts` ON `users`.`id` = `posts`.`owneruserid` WHERE `posts`.`favoritecount` > 150
SELECT COUNT(`posthistory`.`id`), `posts`.`lasteditdate` FROM `posts` LEFT JOIN `posthistory` ON `posts`.`id` = `posthistory`.`postid` WHERE `posts`.`title` = 'What is the best introductory Bayesian statistics textbook?' GROUP BY `posts`.`id`
SELECT `users`.`lastaccessdate`, `users`.`location` FROM `users` INNER JOIN `badges` ON `users`.`id` = `badges`.`userid` WHERE `badges`.`name` = 'Outliers'
SELECT `posts`.`title` FROM `postlinks` INNER JOIN `posts` ON `postlinks`.`relatedpostid` = `posts`.`id` WHERE `postlinks`.`postid` = (SELECT `id` FROM `posts` WHERE `title` = 'How to tell if something happened in a data set which monitors a value over time')
SELECT `posts`.`id` AS `post_id`, `badges`.`name` AS `badge_name` FROM `users` INNER JOIN `posts` ON `users`.`id` = `posts`.`owneruserid` INNER JOIN `badges` ON `users`.`id` = `badges`.`userid` WHERE `users`.`displayname` = 'Samuel' AND YEAR(`posts`.`creationdate`) = 2013 AND YEAR(`badges`.`date`) = 2013
SELECT `users`.`displayname` FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` ORDER BY `posts`.`viewcount` DESC LIMIT 1
SELECT `users`.`displayname`, `users`.`location` FROM `users` INNER JOIN `posts` ON `users`.`id` = `posts`.`owneruserid` INNER JOIN `tags` ON `posts`.`id` = `tags`.`excerptpostid` WHERE `tags`.`tagname` = 'hypothesis-testing'
SELECT T2.title, T1.linktypeid FROM postlinks AS T1 INNER JOIN posts AS T2 ON T1.relatedpostid = T2.id WHERE T1.postid = (SELECT id FROM posts WHERE title = 'What are principal component scores?')
SELECT u.`displayname` FROM `users` AS u INNER JOIN `posts` AS p ON u.`id` = p.`parentid` WHERE p.`score` = (SELECT MAX(`score`) FROM `posts` WHERE `parentid` IS NOT NULL)
SELECT `users`.`displayname`, `users`.`websiteurl` FROM `votes` INNER JOIN `users` ON `votes`.`userid` = `users`.`id` WHERE `votes`.`votetypeid` = 8 ORDER BY `votes`.`bountyamount` DESC LIMIT 1
SELECT `title` FROM `posts` ORDER BY `viewcount` DESC LIMIT 5
SELECT COUNT(*) FROM `tags` WHERE `count` BETWEEN 5000 AND 7000
SELECT `owneruserid` FROM `posts` ORDER BY `favoritecount` DESC LIMIT 1
SELECT age FROM users WHERE reputation = (SELECT MAX(reputation) FROM users)
SELECT COUNT(`posts`.`id`) FROM `posts` INNER JOIN `votes` ON `posts`.`id` = `votes`.`postid` WHERE `posts`.`creaiondate` >= '2011-01-01' AND `posts`.`creaiondate` < '2012-01-01' AND `votes`.`bountyamount` = 50
SELECT `id` FROM `users` WHERE `age` = (SELECT MIN(`age`) FROM `users`)
SELECT SUM(`score`) FROM `posts` WHERE `lasactivitydate` LIKE '2010-07-19%'
SELECT CAST(COUNT(`postlinks`.`id`) AS REAL) / 12 FROM `postlinks` JOIN `posts` ON `postlinks`.`postid` = `posts`.`id` WHERE YEAR(`postlinks`.`creationdate`) = 2010 AND `posts`.`answercount` <= 2
SELECT `posts`.`id` FROM `posts` JOIN `votes` ON `posts`.`id` = `votes`.`postid` WHERE `votes`.`userid` = 1465 ORDER BY `posts`.`favoritecount` DESC LIMIT 1
SELECT `posts`.`title` FROM `posts` INNER JOIN `postlinks` ON `posts`.`id` = `postlinks`.`postid` ORDER BY `postlinks`.`creationdate` LIMIT 1
SELECT `users`.`displayname` FROM `users` INNER JOIN `badges` ON `users`.`id` = `badges`.`userid` GROUP BY `users`.`id` ORDER BY COUNT(`badges`.`name`) DESC LIMIT 1
SELECT MIN(`creationdate`) FROM `votes` WHERE `userid` = (SELECT `id` FROM `users` WHERE `displayname` = 'chl')
SELECT `posts`.`creaiondate` FROM `users` INNER JOIN `posts` ON `users`.`id` = `posts`.`owneruserid` WHERE `users`.`age` = (SELECT MIN(`age`) FROM `users`) ORDER BY `posts`.`creaiondate` ASC LIMIT 1
SELECT `users`.`displayname` FROM `badges` INNER JOIN `users` ON `badges`.`userid` = `users`.`id` WHERE `badges`.`name` = 'Autobiographer' ORDER BY `badges`.`date` ASC LIMIT 1
SELECT COUNT(DISTINCT `posts`.`owneruserid`) FROM `users` INNER JOIN `posts` ON `users`.`id` = `posts`.`owneruserid` WHERE `users`.`location` = 'United Kingdom' AND `posts`.`favoritecount` >= 4
SELECT AVG(`votes`.`postid`) FROM `votes` INNER JOIN `users` ON `votes`.`userid` = `users`.`id` WHERE `users`.`age` = (SELECT MAX(`age`) FROM `users`)
SELECT `displayname` FROM `users` ORDER BY `reputation` DESC LIMIT 1
SELECT COUNT(`id`) FROM `users` WHERE `reputation` > 2000 AND `views` > 1000
SELECT `displayname` FROM `users` WHERE `age` BETWEEN 19 AND 65
SELECT COUNT(`posts`.`id`) FROM `users` INNER JOIN `posts` ON `users`.`id` = `posts`.`owneruserid` WHERE `users`.`displayname` = 'Jay Stevens' AND YEAR(`posts`.`creaiondate`) = 2010
SELECT `posts`.`id`, `posts`.`title` FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` WHERE `users`.`displayname` = 'Harvey Motulsky' ORDER BY `posts`.`viewcount` DESC LIMIT 1
SELECT `id`, `title` FROM `posts` ORDER BY `score` DESC LIMIT 1
SELECT AVG(`posts`.`score`) FROM `users` INNER JOIN `posts` ON `users`.`id` = `posts`.`owneruserid` WHERE `users`.`displayname` = 'Stephen Turner'
SELECT `users`.`displayname` FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` WHERE `posts`.`viewcount` > 20000 AND strftime('%Y', `posts`.`creaiondate`) = '2011'
SELECT `posts`.`id`, `users`.`displayname` FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` WHERE STRFTIME('%Y', `posts`.`creationdate`) = '2010' ORDER BY `posts`.`favoritecount` DESC LIMIT 1
SELECT CAST(COUNT(DISTINCT `posts`.`id`) AS REAL) * 100 / COUNT(*) FROM `posts` INNER JOIN `users` ON `posts`.`owneruserid` = `users`.`id` WHERE `users`.`reputation` > 1000 AND strftime('%Y', `posts`.`creationdate`) = '2011'
SELECT CAST(COUNT(IIF(`age` BETWEEN 13 AND 19, 1, NULL)) AS REAL) / COUNT(`id`) * 100 AS percentage FROM `users`
SELECT `users`.`displayname`, `posts`.`viewcount` FROM `posts` INNER JOIN `users` ON `posts`.`lasteditoruserid` = `users`.`id` WHERE `posts`.`text` = 'Computer Game Datasets'
SELECT COUNT(*) FROM posts WHERE `viewcount` > (SELECT AVG(`viewcount`) FROM posts)
SELECT COUNT(`comments`.`id`) FROM `comments` INNER JOIN `posts` ON `comments`.`postid` = `posts`.`id` WHERE `posts`.`score` = (SELECT MAX(`score`) FROM `posts`)
SELECT COUNT(`id`) FROM `posts` WHERE `viewcount` > 35000 AND `commentcount` = 0
SELECT `users`.`displayname`, `users`.`location` FROM `users` INNER JOIN `posts` ON `users`.`id` = `posts`.`lasteditoruserid` WHERE `posts`.`id` = 183 ORDER BY `posts`.`lasteditdate` DESC LIMIT 1
SELECT T1.name FROM badges AS T1 INNER JOIN users AS T2 ON T1.userid = T2.id WHERE T2.displayname = 'Emmett' ORDER BY T1.date DESC LIMIT 1
SELECT COUNT(`users`.`id`) FROM `users` WHERE `users`.`age` BETWEEN 19 AND 65 AND `users`.`upvotes` > 5000
SELECT JULIANDAY(`badges`.`date`) - JULIANDAY(`users`.`creationdate`) AS days_to_badge FROM `users` INNER JOIN `badges` ON `users`.`id` = `badges`.`userid` WHERE `users`.`displayname` = 'Zolomon'
SELECT COUNT(`posts`.`id`) AS post_count, COUNT(`comments`.`id`) AS comment_count FROM `users` LEFT JOIN `posts` ON `users`.`id` = `posts`.`owneruserid` LEFT JOIN `comments` ON `users`.`id` = `comments`.`userid` WHERE `users`.`creationdate` = (SELECT MAX(`creationdate`) FROM `users`)
SELECT `comments`.`text`, `users`.`displayname` FROM `comments` INNER JOIN `posts` ON `comments`.`postid` = `posts`.`id` INNER JOIN `users` ON `comments`.`userid` = `users`.`id` WHERE `posts`.`title` = 'Analysing wind data with R' ORDER BY `comments`.`creationdate` DESC LIMIT 10
SELECT COUNT(DISTINCT `userid`) FROM `badges` WHERE `name` = 'Citizen Patrol'
SELECT COUNT(*) FROM posts WHERE tags LIKE '%<careers>%'
SELECT `reputation`, `views` FROM `users` WHERE `displayname` = 'Jarrod Dixon'
SELECT SUM(`posts`.`commentcount`) + SUM(`posts`.`answercount`) FROM `posts` WHERE `posts`.`title` = 'Clustering 1D data'
SELECT `creationdate` FROM `users` WHERE `displayname` = 'IrishStat' LIMIT 1
SELECT COUNT(DISTINCT `postid`) FROM `votes` WHERE `bountyamount` >= 30
SELECT CAST(SUM(CASE WHEN T1.score > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.owneruserid = T2.id WHERE T2.reputation = (SELECT MAX(reputation) FROM users)
SELECT COUNT(*) FROM `posts` WHERE `score` < 20
SELECT COUNT(`id`) FROM `tags` WHERE `id` < 15 AND `count` <= 20
SELECT excerptpostid, wikipostid FROM tags WHERE tagname = 'sample'
SELECT T2.reputation, T2.upvotes FROM comments AS T1 INNER JOIN users AS T2 ON T1.userid = T2.id WHERE T1.text = 'fine, you win :)'
SELECT T1.text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.postid = T2.id WHERE T2.title LIKE '%linear regression%'
SELECT `comments`.`text` FROM `comments` INNER JOIN `posts` ON `comments`.`postid` = `posts`.`id` WHERE `posts`.`viewcount` BETWEEN 100 AND 150 ORDER BY `comments`.`score` DESC LIMIT 1
SELECT `users`.`creationdate`, `users`.`age` FROM `users` INNER JOIN `comments` ON `users`.`id` = `comments`.`userid` WHERE `comments`.`text` LIKE '%http://%'
SELECT COUNT(DISTINCT `comments`.`postid`) FROM `comments` INNER JOIN `posts` ON `comments`.`postid` = `posts`.`id` WHERE `comments`.`score` = 0 AND `posts`.`viewcount` < 5
SELECT COUNT(`comments`.`id`) FROM `posts` INNER JOIN `comments` ON `posts`.`id` = `comments`.`postid` WHERE `posts`.`commentcount` = 1 AND `comments`.`score` = 0
SELECT COUNT(DISTINCT `users`.`id`) FROM `comments` INNER JOIN `users` ON `comments`.`userid` = `users`.`id` WHERE `comments`.`score` = 0 AND `users`.`age` = 40
SELECT `comments`.`postid`, `comments`.`text` FROM `comments` INNER JOIN `posts` ON `comments`.`postid` = `posts`.`id` WHERE `posts`.`title` = 'Group differences on a five point Likert item'
SELECT `users`.`upvotes` FROM `comments` INNER JOIN `users` ON `comments`.`userid` = `users`.`id` WHERE `comments`.`text` = 'R is also lazy evaluated.'
SELECT `text` FROM `comments` JOIN `users` ON `comments`.`userid` = `users`.`id` WHERE `users`.`displayname` = 'Harvey Motulsky'
SELECT u.`displayname` FROM `comments` c JOIN `users` u ON c.`userid` = u.`id` WHERE c.`score` BETWEEN 1 AND 5 AND u.`downvotes` = 0
SELECT (COUNT(CASE WHEN `users`.`upvotes` = 0 THEN 1 ELSE NULL END) * 100.0) / COUNT(*) FROM `comments` INNER JOIN `users` ON `comments`.`userid` = `users`.`id` WHERE `comments`.`score` BETWEEN 5 AND 10
SELECT `superpower`.`power_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`superhero_name` = '3-D Man'
SELECT COUNT(DISTINCT `hero_power`.`hero_id`) FROM `hero_power` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Super Strength'
SELECT COUNT(`superhero`.`id`) FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Super Strength' AND `superhero`.`height_cm` > 200
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` GROUP BY `superhero`.`id` HAVING COUNT(`hero_power`.`power_id`) > 15
SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue'
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` WHERE `superhero`.`superhero_name` = 'Apocalypse'
SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.colour = 'Blue' AND T4.power_name = 'Agility'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `colour` AS `eye_colour` ON `superhero`.`eye_colour_id` = `eye_colour`.`id` INNER JOIN `colour` AS `hair_colour` ON `superhero`.`hair_colour_id` = `hair_colour`.`id` WHERE `eye_colour`.`colour` = 'Blue' AND `hair_colour`.`colour` = 'Blond'
SELECT COUNT(DISTINCT `superhero`.`id`) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics'
SELECT `superhero_name`, `height_cm` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics' ORDER BY `height_cm` DESC
SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T1.superhero_name = 'Sauron'
SELECT `superhero`.`superhero_name`, `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics' GROUP BY `colour`.`colour` ORDER BY COUNT(`superhero`.`id`) DESC
SELECT AVG(`height_cm`) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics'
SELECT T1.`superhero_name` FROM `superhero` AS T1 INNER JOIN `hero_power` AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN `superpower` AS T3 ON T2.`power_id` = T3.`id` INNER JOIN `publisher` AS T4 ON T1.`publisher_id` = T4.`id` WHERE T4.`publisher_name` = 'Marvel Comics' AND T3.`power_name` = 'Super Strength'
SELECT COUNT(DISTINCT `superhero`.`id`) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'DC Comics'
SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T4.attribute_name = 'Speed' ORDER BY T3.attribute_value ASC LIMIT 1
SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.colour = 'Gold' AND T3.publisher_name = 'Marvel Comics'
SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T1.superhero_name = 'Blue Beetle II'
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `colour` AS T2 ON T1.`hair_colour_id` = T2.`id` WHERE T2.`colour` = 'Blond'
SELECT T1.`superhero_name` FROM `superhero` AS T1 INNER JOIN `hero_attribute` AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN `attribute` AS T3 ON T2.`attribute_id` = T3.`id` WHERE T3.`attribute_name` = 'Intelligence' ORDER BY T2.`attribute_value` ASC LIMIT 1
SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Copycat'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Durability' AND `hero_attribute`.`attribute_value` < 50
SELECT `superhero_name` FROM `superhero` AS T1 INNER JOIN `hero_power` AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN `superpower` AS T3 ON T2.`power_id` = T3.`id` WHERE T3.`power_name` = 'Death Touch'
SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T2.gender = 'Female' AND T4.attribute_name = 'Strength' AND T3.attribute_value = 100
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` GROUP BY `superhero`.`id` ORDER BY COUNT(`hero_power`.`power_id`) DESC LIMIT 1
SELECT COUNT(`id`) FROM `superhero` WHERE `race_id` = (SELECT `id` FROM `race` WHERE `race` = 'Vampire')
SELECT CAST(COUNT(CASE WHEN `alignment`.`alignment` = 'Bad' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(`superhero`.`id`) AS percentage_bad_alignment, COUNT(CASE WHEN `publisher`.`publisher_name` = 'Marvel Comics' AND `alignment`.`alignment` = 'Bad' THEN 1 ELSE NULL END) AS marvel_bad_alignment FROM `superhero` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id`
SELECT COUNT(CASE WHEN T1.publisher_name = 'Marvel Comics' THEN T1.id ELSE NULL END) - COUNT(CASE WHEN T1.publisher_name = 'DC Comics' THEN T1.id ELSE NULL END) AS difference FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id
SELECT `id` FROM `publisher` WHERE `publisher_name` = 'Star Trek'
SELECT AVG(`T2`.`attribute_value`) FROM `superhero` AS `T1` INNER JOIN `hero_attribute` AS `T2` ON `T1`.`id` = `T2`.`hero_id`
SELECT COUNT(*) FROM `superhero` WHERE `full_name` IS NULL
SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.id = 75
SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = 'Deathlok'
SELECT AVG(`superhero`.`weight_kg`) FROM `superhero` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `gender`.`gender` = 'Female'
SELECT DISTINCT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id WHERE T4.gender = 'Male' LIMIT 5
SELECT `superhero_name` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Alien'
SELECT `superhero_name` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `height_cm` BETWEEN 170 AND 190 AND `colour`.`colour` = 'No Colour'
SELECT T2.`power_name` FROM `hero_power` AS T1 INNER JOIN `superpower` AS T2 ON T1.`power_id` = T2.`id` WHERE T1.`hero_id` = 56
SELECT `full_name` FROM `superhero` WHERE `race_id` IN (SELECT `id` FROM `race` WHERE `race` = 'Demi-God') LIMIT 5
SELECT COUNT(*) FROM `superhero` WHERE `alignment_id` = (SELECT `id` FROM `alignment` WHERE `alignment` = 'Bad')
SELECT `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`weight_kg` = 169
SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T1.height_cm = 185 AND T3.race = 'human'
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` ORDER BY `superhero`.`weight_kg` DESC LIMIT 1
SELECT CAST(COUNT(CASE WHEN `publisher`.`publisher_name` = 'Marvel Comics' THEN `superhero`.`id` ELSE NULL END) AS REAL) * 100 / COUNT(`superhero`.`id`) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`height_cm` BETWEEN 150 AND 180
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `gender`.`gender` = 'Male' AND `superhero`.`weight_kg` > (SELECT 0.79 * AVG(`weight_kg`) FROM `superhero`)
SELECT `power_name` FROM `superpower` WHERE `id` IN (SELECT `power_id` FROM `hero_power` GROUP BY `power_id` ORDER BY COUNT(`power_id`) DESC LIMIT 1)
SELECT T2.attribute_value FROM `superhero` AS T1 INNER JOIN `hero_attribute` AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Abomination'
SELECT `superpower`.`power_name` FROM `hero_power` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `hero_power`.`hero_id` = 1
SELECT COUNT(DISTINCT `hero_power`.`hero_id`) FROM `hero_power` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'stealth'
SELECT T1.`full_name` FROM `superhero` AS T1 INNER JOIN `hero_attribute` AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN `attribute` AS T3 ON T2.`attribute_id` = T3.`id` WHERE T3.`attribute_name` = 'Strength' ORDER BY T2.`attribute_value` DESC LIMIT 1
SELECT CAST(COUNT(`superhero`.`id`) AS REAL) / SUM(CASE WHEN `skin_colour_id` = 1 THEN 1 ELSE 0 END) AS average FROM `superhero` WHERE `skin_colour_id` = 1
SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics'
SELECT T1.`superhero_name` FROM `superhero` AS T1 INNER JOIN `hero_attribute` AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN `attribute` AS T3 ON T2.`attribute_id` = T3.`id` INNER JOIN `publisher` AS T4 ON T1.`publisher_id` = T4.`id` WHERE T3.`attribute_name` = 'durability' AND T4.`publisher_name` = 'Dark Horse Comics' ORDER BY T2.`attribute_value` DESC LIMIT 1
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`full_name` = 'Abraham Sapien'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Flight'
SELECT T1.eye_colour_id AS eyes, T1.hair_colour_id AS hair, T1.skin_colour_id AS `skin colour` FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Dark Horse Comics'
SELECT T1.`superhero_name`, T2.`publisher_name` FROM `superhero` AS T1 INNER JOIN `publisher` AS T2 ON T1.`publisher_id` = T2.`id` WHERE T1.`hair_colour_id` = T1.`skin_colour_id` AND T1.`hair_colour_id` = T1.`eye_colour_id`
SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'A-Bomb'
SELECT CAST(SUM(CASE WHEN `colour`.`colour` = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `superhero` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` INNER JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` WHERE `gender`.`gender` = 'Female'
SELECT `superhero`.`superhero_name`, `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`full_name` = 'Charles Chandler'
SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.gender_id WHERE T1.superhero_name = 'Agent 13'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Adaptation';
SELECT COUNT(*) FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Amazo'
SELECT T2.power_name FROM `superhero` AS T1 INNER JOIN `hero_power` AS T3 ON T1.id = T3.hero_id INNER JOIN `superpower` AS T2 ON T3.power_id = T2.id WHERE T1.full_name = 'Hunter Zolomon'
SELECT `superhero`.`height_cm` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `colour`.`colour` = 'Amber'
SELECT `superhero_name` FROM `superhero` AS T1 INNER JOIN `colour` AS T2 ON T1.`eye_colour_id` = T2.`id` INNER JOIN `colour` AS T3 ON T1.`hair_colour_id` = T3.`id` WHERE T2.`colour` = 'Black' AND T3.`colour` = 'Black'
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`skin_colour_id` = (SELECT `id` FROM `colour` WHERE `colour` = 'Gold')
SELECT `full_name` FROM `superhero` WHERE `race_id` IN (SELECT `id` FROM `race` WHERE `race` = 'Vampire')
SELECT `superhero_name` FROM `superhero` WHERE `alignment_id` = (SELECT `id` FROM `alignment` WHERE `alignment` = 'Neutral')
SELECT COUNT(DISTINCT ha.`hero_id`) FROM `hero_attribute` AS ha INNER JOIN `attribute` AS a ON ha.`attribute_id` = a.`id` WHERE a.`attribute_name` = 'Strength' AND ha.`attribute_value` = (SELECT MAX(`attribute_value`) FROM `hero_attribute` AS ha2 INNER JOIN `attribute` AS a2 ON ha2.`attribute_id` = a2.`id` WHERE a2.`attribute_name` = 'Strength')
SELECT T2.race, T1.alignment FROM `superhero` AS T1 INNER JOIN `race` AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Cameron Hicks'
SELECT CAST(COUNT(CASE WHEN T1.gender = 'Female' THEN T1.id ELSE NULL END) AS REAL) * 100.0 / COUNT(T1.id) AS percent FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'
SELECT AVG(`superhero`.`weight_kg`) FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Alien'
SELECT (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler')
SELECT `id`, `height_cm` FROM `superhero`
SELECT `superpower`.`power_name` FROM `superhero` JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`superhero_name` = 'Abomination'
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `gender` AS T2 ON T1.gender_id = T2.id WHERE T1.race_id = 21 AND T2.gender = 'Male'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Speed' ORDER BY `hero_attribute`.`attribute_value` DESC LIMIT 1
SELECT COUNT(*) FROM superhero WHERE alignment_id = 3
SELECT `attribute`.`attribute_name`, `hero_attribute`.`attribute_value` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `superhero`.`superhero_name` = '3-D Man'
SELECT `superhero_name` FROM `superhero` INNER JOIN `colour` AS `eye_colour` ON `superhero`.`eye_colour_id` = `eye_colour`.`id` INNER JOIN `colour` AS `hair_colour` ON `superhero`.`hair_colour_id` = `hair_colour`.`id` WHERE `eye_colour`.`colour` = 'Blue' AND `hair_colour`.`colour` = 'Brown'
SELECT T3.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT COUNT(*) FROM `superhero` WHERE `publisher_id` = 1
SELECT CAST(SUM(CASE WHEN T1.eye_colour_id = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1
SELECT CAST(COUNT(CASE WHEN T1.gender_id = 2 THEN 1 ELSE NULL END) AS REAL) / COUNT(CASE WHEN T1.gender_id = 1 THEN 1 ELSE NULL END) AS RATIO FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id
SELECT `superhero_name` FROM `superhero` ORDER BY `height_cm` DESC LIMIT 1
SELECT `id` FROM `superpower` WHERE `power_name` = 'cryokinesis'
SELECT `superhero_name` FROM `superhero` WHERE `id` = 294
SELECT `full_name` FROM `superhero` WHERE `weight_kg` = 0 OR `weight_kg` IS NULL
SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Karen Beecher-Duncan'
SELECT `superpower`.`power_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`full_name` = 'Helen Parr'
SELECT `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`weight_kg` = 108 AND `superhero`.`height_cm` = 188
SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T1.id = 38
SELECT race.race FROM hero_attribute INNER JOIN superhero ON hero_attribute.hero_id = superhero.id INNER JOIN race ON superhero.race_id = race.id ORDER BY hero_attribute.attribute_value DESC LIMIT 1
SELECT `alignment`.`alignment`, `superpower`.`power_name` FROM `superhero` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`superhero_name` = 'Atom IV'
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `colour`.`colour` = 'Blue' LIMIT 5
SELECT AVG(`T2`.`attribute_value`) FROM `superhero` AS `T1` INNER JOIN `hero_attribute` AS `T2` ON `T1`.`id` = `T2`.`hero_id` WHERE `T1`.`alignment_id` = 3
SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id WHERE T3.attribute_value = 100
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `gender` AS T2 ON T1.`gender_id` = T2.`id` INNER JOIN `alignment` AS T3 ON T1.`alignment_id` = T3.`id` WHERE T2.`gender` = 'Female' AND T3.`alignment` = 'Good'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` WHERE `hero_attribute`.`attribute_value` BETWEEN 75 AND 80
SELECT T2.`race` FROM `superhero` AS T1 INNER JOIN `race` AS T2 ON T1.`race_id` = T2.`id` INNER JOIN `colour` AS T3 ON T1.`hair_colour_id` = T3.`id` INNER JOIN `gender` AS T4 ON T1.`gender_id` = T4.`id` WHERE T3.`colour` = 'blue' AND T4.`gender` = 'male'
SELECT (CAST(COUNT(CASE WHEN `gender`.`id` = 2 THEN 1 ELSE NULL END) AS REAL) / COUNT(*)) * 100.0 FROM `superhero` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `alignment`.`id` = 2
SELECT COUNT(CASE WHEN T2.id = 7 THEN 1 ELSE NULL END) - COUNT(CASE WHEN T2.id = 1 THEN 1 ELSE NULL END) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL
SELECT `attribute_value` FROM `hero_attribute` AS T1 INNER JOIN `attribute` AS T2 ON T1.`attribute_id` = T2.`id` INNER JOIN `superhero` AS T3 ON T1.`hero_id` = T3.`id` WHERE T2.`attribute_name` = 'Strength' AND T3.`superhero_name` = 'Hulk'
SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = 'Ajax'
SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.colour = 'Green' AND T3.alignment = 'Bad'
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `gender` AS T2 ON T1.`gender_id` = T2.`id` INNER JOIN `publisher` AS T3 ON T1.`publisher_id` = T3.`id` WHERE T2.`gender` = 'Female' AND T3.`publisher_name` = 'Marvel Comics'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Wind Control' ORDER BY `superhero`.`superhero_name` ASC
SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.gender_id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T4.power_name = 'Phoenix Force'
SELECT `superhero_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher_name` = 'DC Comics' ORDER BY `weight_kg` DESC LIMIT 1
SELECT AVG(`superhero`.`height_cm`) FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `race`.`race` <> 'Human' AND `publisher`.`publisher_name` = 'Dark Horse Comics';
SELECT COUNT(*) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Speed' AND T1.attribute_value = 100
SELECT COUNT(CASE WHEN T1.publisher_name = 'DC Comics' THEN T1.id ELSE NULL END) - COUNT(CASE WHEN T1.publisher_name = 'Marvel Comics' THEN T1.id ELSE NULL END) AS difference FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id
SELECT T2.attribute_name FROM superhero AS T1 INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T2 ON T3.attribute_id = T2.id WHERE T1.superhero_name = 'Black Panther' ORDER BY T3.attribute_value ASC LIMIT 1
SELECT `colour`.`colour` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`superhero_name` = 'Abomination'
SELECT `superhero_name` FROM superhero ORDER BY `height_cm` DESC LIMIT 1
SELECT `superhero_name` FROM superhero WHERE `full_name` = 'Charles Chandler'
SELECT CAST(COUNT(CASE WHEN T1.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.gender) FROM gender AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.gender_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id WHERE T3.publisher_name = 'George Lucas'
SELECT CAST(SUM(CASE WHEN `alignment`.`alignment` = 'Good' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics'
SELECT COUNT(*) FROM `superhero` WHERE `full_name` LIKE 'John%'
SELECT hero_id FROM hero_attribute ORDER BY attribute_value LIMIT 1
SELECT `full_name` FROM `superhero` WHERE `superhero_name` = 'Alien'
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`weight_kg` < 100 AND `colour`.`colour` = 'Auburn'
SELECT T2.`attribute_value` FROM `superhero` AS T1 INNER JOIN `hero_attribute` AS T2 ON T1.`id` = T2.`hero_id` WHERE T1.`superhero_name` = 'Aquababy'
SELECT `superhero`.`weight_kg`, `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`id` = 40
SELECT AVG(`height_cm`) FROM `superhero` WHERE `alignment_id` = 3
SELECT `hero_power`.`hero_id` FROM `hero_power` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Intelligence'
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`superhero_name` = 'Blackwulf'
SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.height_cm > (SELECT AVG(height_cm) * 0.8 FROM superhero)
SELECT T2.driverref FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverid = T2.driverid WHERE T1.raceid = 20 ORDER BY T1.q1 DESC LIMIT 5
SELECT T1.surname FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverid = T2.driverid WHERE T2.raceid = 19 ORDER BY T2.q2 LIMIT 1
SELECT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.location = 'Shanghai'
SELECT races.url FROM races INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.name = 'Circuit de Barcelona-Catalunya'
SELECT T1.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = 'Germany'
SELECT DISTINCT `circuits`.`name` FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitid` = `races`.`circuitid` INNER JOIN `results` ON `races`.`raceid` = `results`.`raceid` INNER JOIN `constructors` ON `results`.`constructorid` = `constructors`.`constructorid` WHERE `constructors`.`name` = 'Renault'
SELECT COUNT(*) FROM `races` AS r INNER JOIN `circuits` AS c ON r.circuitid = c.circuitid WHERE r.year = 2010 AND c.country NOT IN ('Asia', 'Europe')
SELECT `races`.`name` FROM `races` INNER JOIN `circuits` ON `races`.`circuitid` = `circuits`.`circuitid` WHERE `circuits`.`country` = 'Spain'
SELECT `lat`, `lng` FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitid` = `races`.`circuitid` WHERE `races`.`name` = 'Australian Grand Prix'
SELECT `url` FROM `races` WHERE `circuitid` = (SELECT `circuitid` FROM `circuits` WHERE `name` = 'Sepang International Circuit')
SELECT `time` FROM `races` WHERE `circuitid` = (SELECT `circuitid` FROM `circuits` WHERE `name` = 'Sepang International Circuit')
SELECT `lat`, `lng` FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitid` = `races`.`circuitid` WHERE `races`.`name` = 'Abu Dhabi Grand Prix'
SELECT T1.nationality FROM constructors AS T1 INNER JOIN constructorresults AS T2 ON T1.constructorid = T2.constructorid WHERE T2.raceid = 24 AND T2.points = 1
SELECT q1 FROM qualifying INNER JOIN drivers ON qualifying.driverid = drivers.driverid WHERE qualifying.raceid = 354 AND drivers.forename = 'Bruno' AND drivers.surname = 'Senna'
SELECT T1.nationality FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverid = T2.driverid WHERE T2.raceid = 355 AND T2.q2 = '0:01:40'
SELECT `drivers`.`number` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverid` = `drivers`.`driverid` WHERE `qualifying`.`raceid` = 903 AND `qualifying`.`q3` LIKE '1:54%'
SELECT COUNT(DISTINCT `results`.`driverid`) FROM `results` INNER JOIN `races` ON `results`.`raceid` = `races`.`raceid` WHERE `races`.`name` = 'Bahrain Grand Prix' AND `races`.`year` = 2007 AND `results`.`time` IS NULL
SELECT `seasons`.`url` FROM `races` INNER JOIN `seasons` ON `races`.`year` = `seasons`.`year` WHERE `races`.`raceid` = 901
SELECT COUNT(DISTINCT `driverid`) FROM `results` WHERE `raceid` IN (SELECT `raceid` FROM `races` WHERE `date` = '2015-11-29') AND `statusid` = 1
SELECT `forename`, `surname`, `dob` FROM `drivers` WHERE `driverid` IN (SELECT `driverid` FROM `results` WHERE `raceid` = 592 AND `time` IS NOT NULL) ORDER BY `dob` ASC LIMIT 1
SELECT T1.url FROM drivers AS T1 INNER JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.raceid = 161 AND T2.time LIKE '1:27%'
SELECT T2.nationality FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverid = T2.driverid WHERE T1.raceid = 933 ORDER BY T1.fastestlapspeed DESC LIMIT 1
SELECT `circuits`.`lat`, `circuits`.`lng` FROM `races` INNER JOIN `circuits` ON `races`.`circuitid` = `circuits`.`circuitid` WHERE `races`.`name` = 'Malaysian Grand Prix'
SELECT T1.url FROM constructors AS T1 INNER JOIN constructorresults AS T2 ON T1.constructorid = T2.constructorid WHERE T2.raceid = 9 ORDER BY T2.points DESC LIMIT 1
SELECT q1 FROM qualifying WHERE raceid = 345 AND driverid = (SELECT driverid FROM drivers WHERE driverref = 'digrassi')
SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverid = T2.driverid WHERE T1.raceid = 347 AND T1.q2 = '0:01:15'
SELECT T1.code FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverid = T2.driverid WHERE T2.raceid = 45 AND T2.q3 LIKE '1:33%'
SELECT T1.time FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverid = T2.driverid WHERE T2.driverref = 'mclaren' AND T1.raceid = 743
SELECT T3.forename, T3.surname FROM results AS T1 INNER JOIN races AS T2 ON T1.raceid = T2.raceid INNER JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T2.name = 'San Marino Grand Prix' AND T2.year = 2006 AND T1.position = 2
SELECT `seasons`.`url` FROM `races` INNER JOIN `seasons` ON `races`.`year` = `seasons`.`year` WHERE `races`.`raceid` = 901
SELECT COUNT(DISTINCT `driverid`) FROM `results` WHERE `raceid` IN (SELECT `raceid` FROM `races` WHERE `date` = '2015-11-29') AND `statusid` != 1
SELECT `forename`, `surname` FROM `drivers` WHERE `driverid` IN (SELECT `driverid` FROM `results` WHERE `raceid` = 872 AND `time` IS NOT NULL) ORDER BY `dob` DESC LIMIT 1
SELECT d.forename, d.surname FROM drivers AS d INNER JOIN laptimes AS l ON d.driverid = l.driverid WHERE l.raceid = 348 ORDER BY l.time ASC LIMIT 1
SELECT T2.nationality FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverid = T2.driverid ORDER BY T1.fastestlapspeed DESC LIMIT 1
SELECT CAST((`results`.`fastestlapspeed` - (SELECT `results`.`fastestlapspeed` FROM `results` INNER JOIN `drivers` ON `results`.`driverid` = `drivers`.`driverid` WHERE `drivers`.`forename` = 'Paul' AND `drivers`.`surname` = 'di Resta' AND `results`.`raceid` = 854)) * 100 / (SELECT `results`.`fastestlapspeed` FROM `results` INNER JOIN `drivers` ON `results`.`driverid` = `drivers`.`driverid` WHERE `drivers`.`forename` = 'Paul' AND `drivers`.`surname` = 'di Resta' AND `results`.`raceid` = 854) AS REAL) AS percentage FROM `results` INNER JOIN `drivers` ON `results`.`driverid` = `drivers`.`driverid` WHERE `drivers`.`forename` = 'Paul' AND `drivers`.`surname` = 'di Resta' AND `results`.`raceid` = 853
SELECT CAST(SUM(CASE WHEN `results`.`time` IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`results`.`driverid`) AS completion_rate FROM `results` INNER JOIN `races` ON `results`.`raceid` = `races`.`raceid` WHERE `races`.`date` = '1983-07-16'
SELECT MIN(`year`) FROM `races` WHERE `name` = 'Singapore Grand Prix'
SELECT `name` FROM `races` WHERE `year` = 2005 ORDER BY `name` DESC
SELECT `name` FROM `races` WHERE `year` = (SELECT MIN(`year`) FROM `races`) AND strftime('%m', `date`) = (SELECT strftime('%m', MIN(`date`)) FROM `races` WHERE `year` = (SELECT MIN(`year`) FROM `races`))
SELECT `name`, `date` FROM `races` WHERE `year` = 1999 AND `round` = (SELECT MAX(`round`) FROM `races` WHERE `year` = 1999)
SELECT `year` FROM `races` GROUP BY `year` ORDER BY MAX(`round`) DESC LIMIT 1
SELECT `races`.`name` FROM `races` WHERE `races`.`year` = 2017 AND `races`.`name` NOT IN (SELECT `races`.`name` FROM `races` WHERE `races`.`year` = 2000)
SELECT T1.country, T2.name, T2.location FROM seasons AS T1 INNER JOIN races AS T3 ON T1.year = T3.year INNER JOIN circuits AS T2 ON T3.circuitid = T2.circuitid WHERE T3.name = 'European Grand Prix' ORDER BY T1.year LIMIT 1
SELECT MAX(`races`.`year`) FROM `races` INNER JOIN `circuits` ON `races`.`circuitid` = `circuits`.`circuitid` WHERE `circuits`.`name` = 'Brands Hatch' AND `races`.`name` = 'British Grand Prix'
SELECT COUNT(DISTINCT T1.year) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.name = 'Silverstone Circuit' AND T1.name = 'British Grand Prix'
SELECT T2.forename, T2.surname FROM driverstandings AS T1 INNER JOIN drivers AS T2 ON T1.driverid = T2.driverid INNER JOIN races AS T3 ON T1.raceid = T3.raceid WHERE T3.year = 2010 AND T3.name = 'Singapore Grand Prix' ORDER BY T1.position
SELECT `forename`, `surname`, `points` FROM `driverstandings` INNER JOIN `drivers` ON `driverstandings`.`driverid` = `drivers`.`driverid` ORDER BY `points` DESC LIMIT 1
SELECT T1.forename, T1.surname, T2.points FROM drivers AS T1 INNER JOIN driverstandings AS T2 ON T1.driverid = T2.driverid INNER JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year = 2017 AND T3.name = 'Chinese Grand Prix' ORDER BY T2.points DESC LIMIT 3
SELECT T1.forename, T1.surname, T2.name, T3.milliseconds FROM `drivers` AS T1 INNER JOIN `laptimes` AS T3 ON T1.driverid = T3.driverid INNER JOIN `races` AS T2 ON T3.raceid = T2.raceid ORDER BY T3.milliseconds ASC LIMIT 1
SELECT AVG(`l`.`milliseconds`) FROM `drivers` AS `d` INNER JOIN `laptimes` AS `l` ON `d`.`driverid` = `l`.`driverid` INNER JOIN `races` AS `r` ON `l`.`raceid` = `r`.`raceid` WHERE `d`.`forename` = 'Lewis' AND `d`.`surname` = 'Hamilton' AND `r`.`name` = 'Malaysian Grand Prix' AND `r`.`year` = 2009
SELECT CAST(SUM(CASE WHEN `results`.`position` > 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`results`.`raceid`) FROM `results` INNER JOIN `drivers` ON `results`.`driverid` = `drivers`.`driverid` INNER JOIN `races` ON `results`.`raceid` = `races`.`raceid` WHERE `drivers`.`surname` = 'Hamilton' AND `races`.`year` >= 2010
SELECT T1.forename, T1.surname, T1.nationality, MAX(T2.points) FROM drivers AS T1 INNER JOIN driverstandings AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid ORDER BY SUM(T2.wins) DESC LIMIT 1
SELECT forename, surname, (strftime('%Y', 'now') - strftime('%Y', dob)) AS age FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1
SELECT `circuits`.`name` FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitid` = `races`.`circuitid` WHERE `races`.`year` BETWEEN 1990 AND 2000 GROUP BY `circuits`.`circuitid` HAVING COUNT(`races`.`raceid`) = 4
SELECT `circuits`.`name`, `circuits`.`location`, `races`.`name` FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitid` = `races`.`circuitid` WHERE `circuits`.`country` = 'USA' AND `races`.`year` = 2006
SELECT T1.name AS race_name, T2.name AS circuit_name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T1.date LIKE '2005-09-%'
SELECT T3.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverid = T2.driverid INNER JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T1.forename = 'Alex' AND T1.surname = 'Yoong' AND T2.position < 20
SELECT COUNT(*) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceid = T2.raceid INNER JOIN circuits AS T3 ON T2.circuitid = T3.circuitid INNER JOIN drivers AS T4 ON T1.driverid = T4.driverid WHERE T3.name = 'Sepang International Circuit' AND T4.driverref = 'michael_schumacher' AND T1.points = (SELECT MAX(points) FROM results AS T5 WHERE T5.raceid = T1.raceid)
SELECT `races`.`name`, `races`.`year` FROM `laptimes` INNER JOIN `drivers` ON `laptimes`.`driverid` = `drivers`.`driverid` INNER JOIN `races` ON `laptimes`.`raceid` = `races`.`raceid` WHERE `drivers`.`forename` = 'Michael' AND `drivers`.`surname` = 'Schumacher' ORDER BY `laptimes`.`milliseconds` ASC LIMIT 1
SELECT AVG(`points`) FROM `results` INNER JOIN `drivers` ON `results`.`driverid` = `drivers`.`driverid` WHERE `drivers`.`driverref` = 'eddiemurray' AND `results`.`year` = 2000
SELECT T2.name, T3.points FROM drivers AS T1 INNER JOIN races AS T2 ON T1.driverid = T3.driverid INNER JOIN results AS T3 ON T2.raceid = T3.raceid WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' ORDER BY T2.year, T2.round LIMIT 1
SELECT `races`.`name`, `circuits`.`country` FROM `races` INNER JOIN `circuits` ON `races`.`circuitid` = `circuits`.`circuitid` WHERE `races`.`year` = 2017 ORDER BY `races`.`date`
SELECT R.`name`, R.`year`, C.`location` FROM races AS R INNER JOIN circuits AS C ON R.`circuitid` = C.`circuitid` INNER JOIN results AS Res ON R.`raceid` = Res.`raceid` ORDER BY Res.`laps` DESC LIMIT 1
SELECT CAST(SUM(CASE WHEN `circuits`.`country` = 'Germany' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `races` INNER JOIN `circuits` ON `races`.`circuitid` = `circuits`.`circuitid` WHERE `races`.`name` = 'European Grand Prix'
SELECT `lat`, `lng` FROM `circuits` WHERE `name` = 'Silverstone Circuit'
SELECT `name`, `lat` FROM `circuits` WHERE `name` IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY `lat` DESC LIMIT 1
SELECT `circuitref` FROM `circuits` WHERE `name` = 'Marina Bay Street Circuit'
SELECT `country` FROM `circuits` ORDER BY `alt` DESC LIMIT 1
SELECT COUNT(*) FROM drivers WHERE `code` IS NULL
SELECT `nationality` FROM `drivers` ORDER BY `dob` LIMIT 1
SELECT `surname` FROM `drivers` WHERE `nationality` = 'Italian'
SELECT `url` FROM `drivers` WHERE `forename` = 'Anthony' AND `surname` = 'Davidson'
SELECT `driverref` FROM `drivers` WHERE `forename` = 'Lewis' AND `surname` = 'Hamilton'
SELECT `circuits`.`name` FROM `races` INNER JOIN `circuits` ON `races`.`circuitid` = `circuits`.`circuitid` WHERE `races`.`year` = 2009 AND `races`.`name` = 'Spanish Grand Prix'
SELECT DISTINCT `races`.`year` FROM `races` INNER JOIN `circuits` ON `races`.`circuitid` = `circuits`.`circuitid` WHERE `circuits`.`name` = 'Silverstone Circuit'
SELECT `races`.`url` FROM `races` INNER JOIN `circuits` ON `races`.`circuitid` = `circuits`.`circuitid` WHERE `circuits`.`circuitref` = 'silverstone'
SELECT `time` FROM `races` INNER JOIN `circuits` ON `races`.`circuitid` = `circuits`.`circuitid` WHERE `circuits`.`name` = 'Abu Dhabi Circuit' AND `races`.`year` = 2010
SELECT COUNT(*) FROM races AS r INNER JOIN circuits AS c ON r.circuitid = c.circuitid WHERE c.country = 'Italy' AND r.name LIKE '%Formula_1%'
SELECT `date` FROM `races` WHERE `circuitid` = (SELECT `circuitid` FROM `circuits` WHERE `name` = 'Circuit de Barcelona-Catalunya')
SELECT `circuits`.`url` FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitid` = `races`.`circuitid` WHERE `races`.`name` = 'Spanish Grand Prix' AND `races`.`year` = 2009
SELECT MIN(`fastestlaptime`) FROM `results` INNER JOIN `drivers` ON `results`.`driverid` = `drivers`.`driverid` WHERE `drivers`.`driverref` = 'hamilton'
SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverid = T2.driverid ORDER BY T2.fastestlapspeed DESC LIMIT 1
SELECT T2.driverref FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverid = T2.driverid INNER JOIN races AS T3 ON T1.raceid = T3.raceid WHERE T3.name = 'Canadian Grand Prix' AND T3.year = '2007' AND T1.position = 1 LIMIT 1
SELECT T2.name FROM drivers AS T1 INNER JOIN results AS T3 ON T1.driverid = T3.driverid INNER JOIN races AS T2 ON T3.raceid = T2.raceid WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'
SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceid = T2.raceid INNER JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' ORDER BY T2.rank ASC LIMIT 1
SELECT MAX(`fastestlapspeed`) FROM `results` INNER JOIN `races` ON `results`.`raceid` = `races`.`raceid` WHERE `races`.`name` = 'Spanish Grand Prix' AND `races`.`year` = 2009
SELECT DISTINCT T2.year FROM drivers AS T1 INNER JOIN results AS T3 ON T1.driverid = T3.driverid INNER JOIN races AS T2 ON T3.raceid = T2.raceid WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'
SELECT `positionorder` FROM `results` INNER JOIN `drivers` ON `results`.`driverid` = `drivers`.`driverid` INNER JOIN `races` ON `results`.`raceid` = `races`.`raceid` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' AND `races`.`name` = 'Chinese Grand Prix' AND `races`.`year` = 2008
SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverid = T2.driverid INNER JOIN races AS T3 ON T1.raceid = T3.raceid WHERE T1.grid = 4 AND T3.year = 1989 AND T3.name = 'Australian Grand Prix'
SELECT COUNT(DISTINCT `driverid`) FROM `results` WHERE `raceid` IN (SELECT `raceid` FROM `races` WHERE `year` = 2008 AND `name` = 'Australian Grand Prix') AND `time` IS NOT NULL
SELECT MIN(`time`) FROM `laptimes` WHERE `driverid` = (SELECT `driverid` FROM `drivers` WHERE `forename` = 'Lewis' AND `surname` = 'Hamilton') AND `raceid` = (SELECT `raceid` FROM `races` WHERE `year` = 2008 AND `name` = 'Australian Grand Prix')
SELECT `results`.`time` FROM `results` INNER JOIN `races` ON `results`.`raceid` = `races`.`raceid` WHERE `races`.`name` = 'Australian Grand Prix' AND `races`.`year` = 2008 AND `results`.`position` = 2
SELECT T1.forename, T1.surname, T1.url FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverid = T2.driverid INNER JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year = 2008 AND T3.name = 'Australian Grand Prix' AND T2.position = 1
SELECT COUNT(`drivers`.`driverid`) FROM `drivers` INNER JOIN `results` ON `drivers`.`driverid` = `results`.`driverid` INNER JOIN `races` ON `results`.`raceid` = `races`.`raceid` WHERE `drivers`.`nationality` = 'British' AND `races`.`year` = 2008 AND `races`.`name` = 'Australian Grand Prix'
SELECT COUNT(DISTINCT `driverstandings`.`driverid`) FROM `driverstandings` INNER JOIN `races` ON `driverstandings`.`raceid` = `races`.`raceid` WHERE `races`.`year` = 2008 AND `races`.`name` = 'Chinese Grand Prix' AND `driverstandings`.`driverid` IN (SELECT DISTINCT `results`.`driverid` FROM `results` INNER JOIN `races` ON `results`.`raceid` = `races`.`raceid` WHERE `races`.`year` = 2008 AND `races`.`name` = 'Chinese Grand Prix' AND `results`.`time` IS NOT NULL)
SELECT SUM(`points`) FROM `results` JOIN `drivers` ON `results`.`driverid` = `drivers`.`driverid` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT AVG(CAST(SUBSTR(`fastestlaptime`, 1, 2) AS INTEGER) * 60 + CAST(SUBSTR(`fastestlaptime`, 4) AS REAL)) AS avg_fastest_lap_time FROM `results` INNER JOIN `drivers` ON `results`.`driverid` = `drivers`.`driverid` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT CAST(COUNT(`T1`.`raceid`) AS REAL) / (SELECT COUNT(`T2`.`raceid`) FROM `results` AS `T2` WHERE `T2`.`raceid` = (SELECT `raceid` FROM `races` WHERE `year` = 2008 AND `name` = 'Australian Grand Prix')) AS rate FROM `results` AS `T1` WHERE `T1`.`raceid` = (SELECT `raceid` FROM `races` WHERE `year` = 2008 AND `name` = 'Australian Grand Prix') AND `T1`.`time` IS NOT NULL
SELECT CAST((julianday(r.time) - julianday(l.time)) * 100 / (julianday(r.time) - julianday(l.time)) AS REAL) AS percentage_faster FROM results AS r INNER JOIN races ON r.raceid = races.raceid INNER JOIN (SELECT raceid, MAX(time) AS last_time FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND time IS NOT NULL) AS l ON r.raceid = l.raceid WHERE r.position = 1 AND races.year = 2008 AND races.name = 'Australian Grand Prix'
SELECT COUNT(`circuitid`) FROM `circuits` WHERE `location` = 'Adelaide' AND `country` = 'Australia'
SELECT `lat`, `lng` FROM `circuits` WHERE `country` = 'USA'
SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND STRFTIME('%Y', dob) > '1980'
SELECT MAX(`points`) FROM `constructors` WHERE `nationality` = 'British'
SELECT `constructorid` FROM `constructorresults` ORDER BY `points` DESC LIMIT 1
SELECT `constructors`.`name` FROM `constructorresults` INNER JOIN `constructors` ON `constructorresults`.`constructorid` = `constructors`.`constructorid` WHERE `constructorresults`.`raceid` = 291 AND `constructorresults`.`points` = 0
SELECT COUNT(*) FROM (SELECT `constructorid` FROM `constructorresults` WHERE `points` = 0 GROUP BY `constructorid` HAVING COUNT(`raceid`) = 2) AS T1 INNER JOIN `constructors` AS T2 ON T1.`constructorid` = T2.`constructorid` WHERE T2.`nationality` = 'Japanese'
SELECT DISTINCT `constructors`.`name` FROM `constructors` INNER JOIN `constructorstandings` ON `constructors`.`constructorid` = `constructorstandings`.`constructorid` WHERE `constructorstandings`.`position` = 1
SELECT COUNT(*) FROM constructors AS T1 INNER JOIN results AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = 'French' AND T2.laps > 50
SELECT CAST(SUM(CASE WHEN T1.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverid = T2.driverid INNER JOIN races AS T3 ON T1.raceid = T3.raceid WHERE T2.nationality = 'Japanese' AND T3.year BETWEEN 2007 AND 2009
SELECT AVG(strftime('%s', `results`.`time`)) AS average_time FROM `results` JOIN `driverstandings` ON `results`.`raceid` = `driverstandings`.`raceid` AND `results`.`driverid` = `driverstandings`.`driverid` JOIN `races` ON `results`.`raceid` = `races`.`raceid` WHERE `driverstandings`.`position` = 1 AND `races`.`year` < 1975
SELECT `forename`, `surname` FROM `drivers` WHERE `driverid` IN (SELECT `driverid` FROM `driverstandings` WHERE `position` = 2) AND `dob` > '1975-12-31'
SELECT COUNT(`drivers`.`driverid`) FROM `drivers` LEFT JOIN `results` ON `drivers`.`driverid` = `results`.`driverid` WHERE `drivers`.`nationality` = 'Italian' AND `results`.`time` IS NULL
SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds ASC LIMIT 1
SELECT T1.lap FROM laptimes AS T1 INNER JOIN driverstandings AS T2 ON T1.raceid = T2.raceid AND T1.driverid = T2.driverid INNER JOIN races AS T3 ON T1.raceid = T3.raceid WHERE T3.year = 2009 AND T2.position = 1 ORDER BY T1.time ASC LIMIT 1
SELECT AVG(`fastestlapspeed`) FROM `results` INNER JOIN `races` ON `results`.`raceid` = `races`.`raceid` WHERE `races`.`name` = 'Spanish Grand Prix' AND `races`.`year` = 2009
SELECT T1.name, T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceid = T2.raceid ORDER BY T2.milliseconds ASC LIMIT 1
SELECT CAST(COUNT(CASE WHEN T1.dob < '1985-01-01' AND T2.laps > 50 THEN T1.driverid ELSE NULL END) AS REAL) * 100 / COUNT(T1.driverid) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverid = T2.driverid INNER JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year BETWEEN 2000 AND 2005
SELECT COUNT(DISTINCT l.`driverid`) FROM laptimes AS l INNER JOIN drivers AS d ON l.`driverid` = d.`driverid` WHERE l.`milliseconds` < 120000 AND d.`nationality` = 'French'
SELECT `code` FROM `drivers` WHERE `nationality` = 'America'
SELECT `raceid` FROM `races` WHERE `year` = '2009'
SELECT COUNT(DISTINCT `driverid`) FROM `results` WHERE `raceid` = 18
SELECT T1.code, COUNT(*) OVER () AS total_netherlandic FROM drivers AS T1 WHERE T1.nationality IN ('Dutch', 'Netherlandic') ORDER BY T1.dob DESC LIMIT 3
SELECT `driverref` FROM `drivers` WHERE `forename` = 'Robert' AND `surname` = 'Kubica'
SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND SUBSTR(dob, 1, 4) = '1980'
SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T1.nationality = 'German' AND T1.dob BETWEEN '1980-01-01' AND '1990-12-31' ORDER BY T2.time ASC LIMIT 3
SELECT T1.driverref FROM drivers AS T1 WHERE T1.nationality = 'German' ORDER BY T1.dob ASC LIMIT 1
SELECT `drivers`.`driverid`, `drivers`.`code` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverid` = `results`.`driverid` WHERE `drivers`.`dob` LIKE '1971-%' ORDER BY `results`.`fastestlaptime` ASC LIMIT 1
SELECT `forename`, `surname` FROM `drivers` WHERE `nationality` = 'Spanish' AND `dob` < '1982-01-01' ORDER BY `dob` DESC LIMIT 10
SELECT T1.year FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year INNER JOIN results AS T3 ON T2.raceid = T3.raceid ORDER BY T3.fastestlaptime ASC LIMIT 1
SELECT T1.year FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year INNER JOIN laptimes AS T3 ON T2.raceid = T3.raceid ORDER BY T3.time DESC LIMIT 1
SELECT `driverid` FROM `laptimes` WHERE `lap` = 1 ORDER BY `time` ASC LIMIT 5
SELECT COUNT(*) FROM results AS T1 INNER JOIN status AS T2 ON T1.statusid = T2.statusid WHERE T1.raceid > 50 AND T1.raceid < 100 AND T1.time IS NOT NULL AND T2.status = 'Disqualified'
SELECT COUNT(`races`.`raceid`), `circuits`.`location`, `circuits`.`lat`, `circuits`.`lng` FROM `races` INNER JOIN `circuits` ON `races`.`circuitid` = `circuits`.`circuitid` WHERE `circuits`.`country` = 'Austria' GROUP BY `circuits`.`location`, `circuits`.`lat`, `circuits`.`lng`
SELECT `raceid`, COUNT(`raceid`) AS finisher_count FROM `results` WHERE `time` IS NOT NULL GROUP BY `raceid` ORDER BY finisher_count DESC LIMIT 1
SELECT `drivers`.`driverref`, `drivers`.`nationality`, `drivers`.`dob` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverid` = `drivers`.`driverid` WHERE `qualifying`.`raceid` = 23 AND `qualifying`.`q2` IS NOT NULL
SELECT T1.year, T2.driverref, T3.date, T3.time FROM seasons AS T1 INNER JOIN races AS T3 ON T1.year = T3.year INNER JOIN qualifying AS T4 ON T3.raceid = T4.raceid INNER JOIN drivers AS T2 ON T4.driverid = T2.driverid WHERE T2.dob = (SELECT MAX(dob) FROM drivers) AND T3.date = (SELECT MIN(date) FROM races WHERE raceid IN (SELECT raceid FROM qualifying WHERE driverid = T2.driverid))
SELECT COUNT(DISTINCT T1.driverid) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverid = T2.driverid INNER JOIN status AS T3 ON T2.statusid = T3.statusid WHERE T1.nationality = 'American' AND T3.status = 'Puncture'
SELECT T1.url FROM constructors AS T1 INNER JOIN constructorresults AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = 'Italian' ORDER BY T2.points DESC LIMIT 1
SELECT `url` FROM `constructors` WHERE `constructorid` = (SELECT `constructorid` FROM `constructorstandings` ORDER BY `wins` DESC LIMIT 1)
SELECT T1.driverid FROM laptimes AS T1 INNER JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = 'French Grand Prix' AND T1.lap = 3 ORDER BY T1.time DESC LIMIT 1
SELECT `races`.`name`, `laptimes`.`milliseconds` FROM `laptimes` INNER JOIN `races` ON `laptimes`.`raceid` = `races`.`raceid` WHERE `laptimes`.`lap` = 1 ORDER BY `laptimes`.`milliseconds` ASC LIMIT 1
SELECT AVG(`fastestlaptime`) FROM `results` WHERE `raceid` = (SELECT `raceid` FROM `races` WHERE `year` = 2006 AND `name` = 'United States Grand Prix') AND `rank` < 11
SELECT T1.driverid, T1.forename, T1.surname, AVG(T2.duration) AS avg_duration FROM drivers AS T1 INNER JOIN pitstops AS T2 ON T1.driverid = T2.driverid WHERE T1.nationality = 'German' AND T1.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY T1.driverid ORDER BY avg_duration ASC LIMIT 3
SELECT T2.forename, T2.surname, T1.time FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverid = T2.driverid INNER JOIN races AS T3 ON T1.raceid = T3.raceid WHERE T3.name = 'Canadian Grand Prix' AND T3.year = 2008 AND T1.position = 1
SELECT T1.constructorref, T1.url FROM constructors AS T1 INNER JOIN results AS T2 ON T1.constructorid = T2.constructorid INNER JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year = 2009 AND T3.name = 'Singapore Grand Prix' ORDER BY T2.position LIMIT 1
SELECT `forename`, `surname`, `dob` FROM `drivers` WHERE `nationality` = 'Austrian' AND `dob` BETWEEN '1981-01-01' AND '1991-12-31'
SELECT `forename` || ' ' || `surname` AS full_name, `url`, `dob` FROM `drivers` WHERE `nationality` = 'German' AND `dob` BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY `dob` DESC
SELECT `location`, `country`, `lat`, `lng` FROM `circuits` WHERE `name` = 'Hungaroring'
SELECT T1.points, T2.name, T2.nationality FROM constructorresults AS T1 INNER JOIN constructors AS T2 ON T1.constructorid = T2.constructorid INNER JOIN races AS T3 ON T1.raceid = T3.raceid WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 ORDER BY T1.points DESC LIMIT 1
SELECT AVG(`T1`.`points`) FROM `driverstandings` AS `T1` INNER JOIN `drivers` AS `T2` ON `T1`.`driverid` = `T2`.`driverid` INNER JOIN `races` AS `T3` ON `T1`.`raceid` = `T3`.`raceid` WHERE `T2`.`forename` = 'Lewis' AND `T2`.`surname` = 'Hamilton' AND `T3`.`name` = 'Turkish Grand Prix'
SELECT AVG(race_count) FROM (SELECT COUNT(`raceid`) AS race_count FROM `races` WHERE `date` BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY `year`) AS subquery
SELECT `nationality` FROM `drivers` GROUP BY `nationality` ORDER BY COUNT(*) DESC LIMIT 1
SELECT wins FROM driverstandings WHERE points = 91
SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceid = T2.raceid ORDER BY T2.fastestlaptime ASC LIMIT 1
SELECT circuits.location || ', ' || circuits.country AS full_location FROM circuits INNER JOIN races ON circuits.circuitid = races.circuitid WHERE races.date = (SELECT MAX(date) FROM races)
SELECT T3.forename || ' ' || T3.surname AS full_name FROM qualifying AS T1 INNER JOIN races AS T2 ON T1.raceid = T2.raceid INNER JOIN drivers AS T3 ON T1.driverid = T3.driverid INNER JOIN circuits AS T4 ON T2.circuitid = T4.circuitid WHERE T2.year = 2008 AND T4.name = 'Marina Bay Street Circuit' ORDER BY T1.q3 LIMIT 1
SELECT `drivers`.`forename` || ' ' || `drivers`.`surname` AS full_name, `drivers`.`nationality`, `races`.`name` AS race_name FROM `drivers` INNER JOIN `results` ON `drivers`.`driverid` = `results`.`driverid` INNER JOIN `races` ON `results`.`raceid` = `races`.`raceid` ORDER BY `drivers`.`dob` DESC LIMIT 1
SELECT COUNT(*) FROM results AS T1 INNER JOIN status AS T2 ON T1.statusid = T2.statusid WHERE T1.raceid = (SELECT raceid FROM races WHERE name = 'Canadian Grand Prix') AND T2.status = 'Accident' GROUP BY T1.driverid ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.forename || ' ' || T1.surname AS full_name, T2.wins FROM drivers AS T1 INNER JOIN driverstandings AS T2 ON T1.driverid = T2.driverid ORDER BY T1.dob LIMIT 1
SELECT MAX(`duration`) FROM `pitstops`
SELECT MIN(`time`) FROM `laptimes`
SELECT MAX(`duration`) FROM `pitstops` WHERE `driverid` = (SELECT `driverid` FROM `drivers` WHERE `forename` = 'Lewis' AND `surname` = 'Hamilton')
SELECT `pitstops`.`lap` FROM `pitstops` INNER JOIN `drivers` ON `pitstops`.`driverid` = `drivers`.`driverid` INNER JOIN `races` ON `pitstops`.`raceid` = `races`.`raceid` WHERE `drivers`.`driverref` = 'hamilton' AND `races`.`name` = 'Australian Grand Prix' AND `races`.`year` = 2011
SELECT `pitstops`.`driverid`, `pitstops`.`duration` FROM `pitstops` INNER JOIN `races` ON `pitstops`.`raceid` = `races`.`raceid` WHERE `races`.`year` = 2011 AND `races`.`name` = 'Australian Grand Prix'
SELECT MIN(`time`) FROM `laptimes` WHERE `driverid` = (SELECT `driverid` FROM `drivers` WHERE `forename` = 'Lewis' AND `surname` = 'Hamilton')
SELECT d.forename, d.surname FROM drivers d INNER JOIN laptimes l ON d.driverid = l.driverid ORDER BY l.milliseconds ASC LIMIT 20
SELECT T3.position FROM laptimes AS T1 INNER JOIN drivers AS T2 ON T1.driverid = T2.driverid INNER JOIN circuits AS T3 ON T1.raceid = T3.circuitid WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' ORDER BY T1.time ASC LIMIT 1
SELECT MIN(`time`) FROM laptimes AS T1 INNER JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = 'Austrian Grand Prix'
SELECT T1.name, MIN(T2.time) AS lap_record FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitid = T2.circuitid INNER JOIN laptimes AS T3 ON T2.raceid = T3.raceid WHERE T1.country = 'Italy' GROUP BY T1.name
SELECT `races`.`name` FROM `laptimes` INNER JOIN `races` ON `laptimes`.`raceid` = `races`.`raceid` INNER JOIN `circuits` ON `races`.`circuitid` = `circuits`.`circuitid` WHERE `circuits`.`name` = 'Austrian Grand Prix Circuit' ORDER BY `laptimes`.`time` ASC LIMIT 1
SELECT pitstops.`duration` FROM laptimes INNER JOIN races ON laptimes.`raceid` = races.`raceid` INNER JOIN pitstops ON pitstops.`raceid` = races.`raceid` AND pitstops.`driverid` = laptimes.`driverid` WHERE races.`name` = 'Austrian Grand Prix' ORDER BY laptimes.`time` ASC LIMIT 1
SELECT `circuits`.`lat`, `circuits`.`lng` FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitid` = `races`.`circuitid` INNER JOIN `laptimes` ON `races`.`raceid` = `laptimes`.`raceid` WHERE `laptimes`.`time` = '1:29.488'
SELECT AVG(`milliseconds`) FROM `pitstops` WHERE `driverid` = (SELECT `driverid` FROM `drivers` WHERE `forename` = 'Lewis' AND `surname` = 'Hamilton')
SELECT AVG(`milliseconds`) FROM `laptimes` AS `T1` INNER JOIN `races` AS `T2` ON `T1`.`raceid` = `T2`.`raceid` INNER JOIN `circuits` AS `T3` ON `T2`.`circuitid` = `T3`.`circuitid` WHERE `T3`.`country` = 'Italy'
SELECT `player_api_id` FROM `player_attributes` ORDER BY `overall_rating` DESC LIMIT 1
SELECT `player_name`, `height` FROM `player` ORDER BY `height` DESC LIMIT 1
SELECT preferred_foot FROM player_attributes WHERE potential = (SELECT MIN(potential) FROM player_attributes)
SELECT COUNT(`player_attributes`.`player_api_id`) FROM `player_attributes` WHERE `overall_rating` >= 60 AND `overall_rating` < 65 AND `defensive_work_rate` = 'low'
SELECT `player_api_id` FROM `player_attributes` ORDER BY `crossing` DESC LIMIT 5
SELECT T1.name FROM league AS T1 INNER JOIN match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2015/2016' GROUP BY T1.name ORDER BY SUM(T2.home_team_goal + T2.away_team_goal) DESC LIMIT 1
SELECT `team`.`team_long_name` FROM `match` INNER JOIN `team` ON `match`.`home_team_api_id` = `team`.`team_api_id` WHERE `match`.`season` = '2015/2016' AND `match`.`home_team_goal` < `match`.`away_team_goal` GROUP BY `match`.`home_team_api_id` ORDER BY COUNT(*) ASC LIMIT 1
SELECT `player`.`player_name` FROM `player_attributes` INNER JOIN `player` ON `player_attributes`.`player_api_id` = `player`.`player_api_id` ORDER BY `player_attributes`.`penalties` DESC LIMIT 10
SELECT T2.team_long_name FROM match AS T1 INNER JOIN team AS T2 ON T1.away_team_api_id = T2.team_api_id INNER JOIN league AS T3 ON T1.league_id = T3.id WHERE T3.name = 'Scotland Premier League' AND T1.season = '2009/2010' AND T1.away_team_goal > T1.home_team_goal GROUP BY T1.away_team_api_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT `buildupplayspeed` FROM `team_attributes` ORDER BY `buildupplayspeed` DESC LIMIT 4
SELECT T1.name FROM league AS T1 INNER JOIN match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2015/2016' GROUP BY T1.name ORDER BY SUM(T2.home_team_goal = T2.away_team_goal) DESC LIMIT 1
SELECT STRFTIME('%Y', 'now') - STRFTIME('%Y', `player`.`birthday`) AS age FROM `player_attributes` INNER JOIN `player` ON `player_attributes`.`player_api_id` = `player`.`player_api_id` WHERE `player_attributes`.`sprint_speed` >= 97 AND STRFTIME('%Y', `player_attributes`.`date`) BETWEEN '2013' AND '2015'
SELECT `league`.`name`, COUNT(`match`.`id`) AS match_count FROM `match` INNER JOIN `league` ON `match`.`league_id` = `league`.`id` GROUP BY `match`.`league_id` ORDER BY match_count DESC LIMIT 1
SELECT AVG(`height`) FROM `player` WHERE `birthday` >= '1990-01-01 00:00:00' AND `birthday` < '1996-01-01 00:00:00'
SELECT `player_api_id` FROM `player_attributes` WHERE `overall_rating` = (SELECT MAX(`overall_rating`) FROM `player_attributes` WHERE substr(`date`, 1, 4) = '2010') AND substr(`date`, 1, 4) = '2010'
SELECT `team_fifa_api_id` FROM `team_attributes` WHERE `buildupplayspeed` > 50 AND `buildupplayspeed` < 60
SELECT T.team_long_name FROM team_attributes AS TA INNER JOIN team AS T ON TA.team_api_id = T.team_api_id WHERE strftime('%Y', TA.date) = '2012' AND TA.buildupplaypassing > (SELECT SUM(buildupplaypassing) / COUNT(*) FROM team_attributes WHERE buildupplaypassing IS NOT NULL AND strftime('%Y', date) = '2012')
SELECT CAST(SUM(CASE WHEN T1.preferred_foot = 'left' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.player_fifa_api_id) FROM player_attributes AS T1 INNER JOIN player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE STRFTIME('%Y', T2.birthday) BETWEEN '1987' AND '1992'
SELECT L.`name` FROM league AS L INNER JOIN match AS M ON L.`id` = M.`league_id` GROUP BY L.`name` ORDER BY SUM(M.`home_team_goal` + M.`away_team_goal`) ASC LIMIT 5
SELECT CAST(SUM(`long_shots`) AS REAL) / COUNT(`player_fifa_api_id`) FROM `player_attributes` WHERE `player_fifa_api_id` = (SELECT `player_fifa_api_id` FROM `player` WHERE `player_name` = 'Ahmed Samir Farag')
SELECT T1.player_name, AVG(T2.heading_accuracy) AS avg_heading_accuracy FROM player AS T1 INNER JOIN player_attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.height > 180 GROUP BY T1.player_name ORDER BY avg_heading_accuracy DESC LIMIT 10
SELECT `team_long_name` FROM `team_attributes` INNER JOIN `team` ON `team_attributes`.`team_api_id` = `team`.`team_api_id` WHERE `buildupplaydribblingclass` = 'Normal' AND `date` >= '2014-01-01 00:00:00' AND `date` <= '2014-01-31 00:00:00' AND `chancecreationpassing` < (SELECT SUM(`chancecreationpassing`) / COUNT(`id`) FROM `team_attributes`) ORDER BY `chancecreationpassing` DESC
SELECT L.name FROM league AS L INNER JOIN match AS M ON L.id = M.league_id WHERE M.season = '2009/2010' GROUP BY L.name HAVING AVG(M.home_team_goal) > AVG(M.away_team_goal)
SELECT `team_short_name` FROM `team` WHERE `team_long_name` = 'Queens Park Rangers'
SELECT `player_name` FROM `player` WHERE `birthday` LIKE '1970-10%'
SELECT T1.attacking_work_rate FROM player_attributes AS T1 INNER JOIN player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Franco Zennaro' ORDER BY T1.date DESC LIMIT 1
SELECT `buildupplaypositioningclass` FROM `team_attributes` WHERE `team_api_id` = (SELECT `team_api_id` FROM `team` WHERE `team_long_name` = 'ADO Den Haag' LIMIT 1)
SELECT `heading_accuracy` FROM `player_attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `player` WHERE `player_name` = 'Francois Affolter') AND `date` = '2014-09-18 00:00:00'
SELECT `overall_rating` FROM `player_attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `player` WHERE `player_name` = 'Gabriel Tamas') AND strftime('%Y', `date`) = '2011' ORDER BY `date` DESC LIMIT 1
SELECT COUNT(`match`.`id`) FROM `match` INNER JOIN `league` ON `match`.`league_id` = `league`.`id` WHERE `league`.`name` = 'Scotland Premier League' AND `match`.`season` = '2015/2016'
SELECT T1.preferred_foot FROM player_attributes AS T1 INNER JOIN player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.birthday DESC LIMIT 1
SELECT `player_name` FROM `player` WHERE `player_api_id` IN (SELECT `player_api_id` FROM `player_attributes` WHERE `potential` = (SELECT MAX(`potential`) FROM `player_attributes`))
SELECT COUNT(`player`.`id`) FROM `player` INNER JOIN `player_attributes` ON `player`.`player_api_id` = `player_attributes`.`player_api_id` WHERE `player`.`weight` < 130 AND `player_attributes`.`preferred_foot` = 'left'
SELECT `team_short_name` FROM `team_attributes` WHERE `chancecreationpassingclass` = 'Risky'
SELECT `defensive_work_rate` FROM `player_attributes` AS T1 INNER JOIN `player` AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'David Wilson'
SELECT T2.birthday FROM player_attributes AS T1 INNER JOIN player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.overall_rating DESC LIMIT 1
SELECT `name` FROM `league` WHERE `country_id` = (SELECT `id` FROM `country` WHERE `name` = 'Netherlands')
SELECT CAST(SUM(`home_team_goal`) AS REAL) / COUNT(DISTINCT `match`.`id`) AS average_home_team_goal FROM `match` INNER JOIN `country` ON `match`.`country_id` = `country`.`id` WHERE `country`.`name` = 'Poland' AND `match`.`season` = '2010/2011'
SELECT p1.player_name FROM player p1 INNER JOIN player_attributes pa1 ON p1.player_api_id = pa1.player_api_id WHERE p1.height = (SELECT MAX(height) FROM player) GROUP BY p1.player_name ORDER BY AVG(pa1.finishing) DESC LIMIT 1 UNION ALL SELECT p2.player_name FROM player p2 INNER JOIN player_attributes pa2 ON p2.player_api_id = pa2.player_api_id WHERE p2.height = (SELECT MIN(height) FROM player) GROUP BY p2.player_name ORDER BY AVG(pa2.finishing) DESC LIMIT 1
SELECT `player_name` FROM `player` WHERE `height` > 180
SELECT COUNT(`id`) FROM `player` WHERE strftime('%Y', `birthday`) > '1990'
SELECT COUNT(`player`.`id`) FROM `player` WHERE `player`.`player_name` LIKE 'Adam %' AND `player`.`weight` > 170
SELECT `player`.`player_name` FROM `player_attributes` INNER JOIN `player` ON `player_attributes`.`player_api_id` = `player`.`player_api_id` WHERE `player_attributes`.`overall_rating` > 80 AND strftime('%Y', `player_attributes`.`date`) BETWEEN '2008' AND '2010'
SELECT T1.potential FROM player_attributes AS T1 INNER JOIN player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Doran'
SELECT `player_name` FROM `player` WHERE `player_api_id` IN (SELECT `player_api_id` FROM `player_attributes` WHERE `preferred_foot` = 'left')
SELECT `team_long_name` FROM `team` INNER JOIN `team_attributes` ON `team`.`team_api_id` = `team_attributes`.`team_api_id` WHERE `buildupplayspeedclass` = 'Fast'
SELECT `buildupplaypassingclass` FROM `team_attributes` WHERE `team_api_id` = (SELECT `team_api_id` FROM `team` WHERE `team_short_name` = 'CLB' LIMIT 1)
SELECT `team_short_name` FROM `team_attributes` WHERE `buildupplaypassing` > 70
SELECT SUM(`t2`.`overall_rating`) / COUNT(`t2`.`id`) FROM `player_attributes` AS `t2` INNER JOIN `player` AS `t1` ON `t2`.`player_api_id` = `t1`.`player_api_id` WHERE `t2`.`date` >= '2010-01-01 00:00:00' AND `t2`.`date` <= '2015-12-31 23:59:59' AND `t1`.`height` > 170
SELECT `player_name` FROM `player` ORDER BY `height` ASC LIMIT 1
SELECT T2.name FROM league AS T1 INNER JOIN country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Italy Serie A'
SELECT `team_short_name` FROM `team_attributes` INNER JOIN `team` ON `team_attributes`.`team_api_id` = `team`.`team_api_id` WHERE `buildupplayspeed` = 31 AND `buildupplaydribbling` = 53 AND `buildupplaypassing` = 32
SELECT AVG(`overall_rating`) FROM `player_attributes` AS T1 INNER JOIN `player` AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Aaron Doran'
SELECT COUNT(`id`) FROM `match` WHERE `league_id` IN (SELECT `id` FROM `league` WHERE `name` = 'Germany 1. Bundesliga') AND strftime('%Y-%m', `date`) BETWEEN '2008-08' AND '2008-10'
SELECT `team_short_name` FROM `team` WHERE `team_api_id` IN (SELECT `home_team_api_id` FROM `match` WHERE `home_team_goal` = 10)
SELECT T1.player_api_id FROM player_attributes AS T1 INNER JOIN (SELECT player_api_id, MAX(balance) AS max_balance FROM player_attributes WHERE potential = 61 GROUP BY player_api_id) AS T2 ON T1.player_api_id = T2.player_api_id AND T1.balance = T2.max_balance WHERE T1.potential = 61
SELECT (SUM(CASE WHEN T1.player_name = 'Abdou Diallo' THEN T2.ball_control ELSE 0 END) / COUNT(CASE WHEN T1.player_name = 'Abdou Diallo' THEN T1.id ELSE NULL END)) - (SUM(CASE WHEN T1.player_name = 'Aaron Appindangoye' THEN T2.ball_control ELSE 0 END) / COUNT(CASE WHEN T1.player_name = 'Aaron Appindangoye' THEN T1.id ELSE NULL END)) AS difference FROM player AS T1 INNER JOIN player_attributes AS T2 ON T1.player_api_id = T2.player_api_id
SELECT `team_long_name` FROM `team` WHERE `team_short_name` = 'GEN'
SELECT `player_name` FROM `player` WHERE `player_name` IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY `birthday` ASC LIMIT 1
SELECT `player_name` FROM `player` ORDER BY `height` DESC LIMIT 1
SELECT COUNT(`player_attributes`.`id`) FROM `player_attributes` WHERE `preferred_foot` = 'left' AND `attacking_work_rate` = 'low'
SELECT `country`.`name` FROM `league` INNER JOIN `country` ON `league`.`country_id` = `country`.`id` WHERE `league`.`name` = 'Belgium Jupiler League'
SELECT `name` FROM `league` INNER JOIN `country` ON `league`.`country_id` = `country`.`id` WHERE `country`.`name` = 'Germany'
SELECT `player_name` FROM `player` WHERE `player_api_id` = (SELECT `player_api_id` FROM `player_attributes` ORDER BY `overall_rating` DESC LIMIT 1)
SELECT COUNT(DISTINCT `player`.`id`) FROM `player` JOIN `player_attributes` ON `player`.`player_api_id` = `player_attributes`.`player_api_id` WHERE strftime('%Y', `player`.`birthday`) < '1986' AND `player_attributes`.`defensive_work_rate` = 'high'
SELECT T2.player_name FROM player_attributes AS T1 INNER JOIN player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY T1.crossing DESC LIMIT 1
SELECT T1.heading_accuracy FROM player_attributes AS T1 INNER JOIN player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Ariel Borysiuk' ORDER BY T1.date DESC LIMIT 1
SELECT COUNT(`player`.`id`) FROM `player` INNER JOIN `player_attributes` ON `player`.`player_api_id` = `player_attributes`.`player_api_id` WHERE `player`.`height` > 180 AND `player_attributes`.`volleys` > 70
SELECT `player`.`player_name` FROM `player` INNER JOIN `player_attributes` ON `player`.`player_api_id` = `player_attributes`.`player_api_id` WHERE `player_attributes`.`volleys` > 70 AND `player_attributes`.`dribbling` > 70
SELECT COUNT(*) FROM `match` WHERE `season` = '2008/2009' AND `country_id` = (SELECT `id` FROM `country` WHERE `name` = 'Belgium')
SELECT `long_passing` FROM `player_attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `player` ORDER BY `birthday` ASC LIMIT 1)
SELECT COUNT(`match`.`id`) FROM `match` INNER JOIN `league` ON `match`.`league_id` = `league`.`id` WHERE `league`.`name` = 'Belgium Jupiler League' AND SUBSTR(`match`.`date`, 1, 7) = '2009-04'
SELECT T2.name FROM match AS T1 INNER JOIN league AS T2 ON T1.league_id = T2.id WHERE T1.season = '2008/2009' GROUP BY T2.name ORDER BY COUNT(T1.id) DESC LIMIT 1
SELECT SUM(`overall_rating`) / COUNT(`id`) FROM `player_attributes` WHERE `player_api_id` IN (SELECT `player_api_id` FROM `player` WHERE strftime('%Y', `birthday`) < '1986')
SELECT (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Ariel Borysiuk')) - (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel')) * 100.0 / (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel')) AS percentage_difference
SELECT AVG(`buildupplayspeed`) FROM `team_attributes` WHERE `team_api_id` = (SELECT `team_api_id` FROM `team` WHERE `team_long_name` = 'Heart of Midlothian')
SELECT AVG(`T1`.`overall_rating`) FROM `player_attributes` AS `T1` INNER JOIN `player` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T2`.`player_name` = 'Pietro Marino'
SELECT SUM(`crossing`) FROM `player_attributes` AS T1 INNER JOIN `player` AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Aaron Lennox'
SELECT MAX(`chancecreationpassing`), `chancecreationpassingclass` FROM `team_attributes` WHERE `team_api_id` = (SELECT `team_api_id` FROM `team` WHERE `team_long_name` = 'Ajax')
SELECT `preferred_foot` FROM `player_attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `player` WHERE `player_name` = 'Abdou Diallo')
SELECT MAX(`overall_rating`) FROM `player_attributes` AS T1 INNER JOIN `player` AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Dorlan Pabon'
SELECT AVG(`away_team_goal`) FROM `match` INNER JOIN `team` ON `match`.`away_team_api_id` = `team`.`team_api_id` INNER JOIN `country` ON `match`.`country_id` = `country`.`id` WHERE `team`.`team_long_name` = 'Parma' AND `country`.`name` = 'Italy'
SELECT `player`.`player_name` FROM `player_attributes` INNER JOIN `player` ON `player_attributes`.`player_api_id` = `player`.`player_api_id` WHERE `player_attributes`.`overall_rating` = 77 AND `player_attributes`.`date` LIKE '2016-06-23%' ORDER BY `player`.`birthday` ASC LIMIT 1
SELECT `overall_rating` FROM `player_attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `player` WHERE `player_name` = 'Aaron Mooy') AND `date` LIKE '2016-02-04%' LIMIT 1
SELECT `potential` FROM `player_attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `player` WHERE `player_name` = 'Francesco Parravicini') AND `date` = '2010-08-30 00:00:00'
SELECT `attacking_work_rate` FROM `player_attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `player` WHERE `player_name` = 'Francesco Migliore') AND `date` LIKE '2015-05-01%'
SELECT `defensive_work_rate` FROM `player_attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `player` WHERE `player_name` = 'Kevin Berigaud') AND `date` = '2013-02-22 00:00:00'
SELECT `date` FROM `player_attributes` INNER JOIN `player` ON `player_attributes`.`player_api_id` = `player`.`player_api_id` WHERE `player`.`player_name` = 'Kevin Constant' ORDER BY `crossing` DESC, `date` ASC LIMIT 1
SELECT `buildupplayspeedclass` FROM `team_attributes` WHERE `team_api_id` = (SELECT `team_api_id` FROM `team` WHERE `team_long_name` = 'Willem II') AND `date` = '2011-02-22'
SELECT `buildupplaydribblingclass` FROM `team_attributes` WHERE `team_api_id` = (SELECT `team_api_id` FROM `team` WHERE `team_short_name` = 'LEI') AND `date` = '2015-09-10 00:00:00'
SELECT `buildupplaypassingclass` FROM `team_attributes` WHERE `team_api_id` = (SELECT `team_api_id` FROM `team` WHERE `team_long_name` = 'FC Lorient') AND `date` LIKE '2010-02-22%' LIMIT 1
SELECT `chancecreationpassingclass` FROM `team_attributes` WHERE `team_long_name` = 'PEC Zwolle' AND `date` = '2013-09-20 00:00:00'
SELECT `chancecreationcrossingclass` FROM `team_attributes` WHERE `team_long_name` = 'Hull City' AND `date` = '2010-02-22 00:00:00'
SELECT `defenceaggressionclass` FROM `team_attributes` WHERE `team_api_id` = (SELECT `team_api_id` FROM `team` WHERE `team_long_name` = 'Hannover 96') AND `date` LIKE '2015-09-10%' LIMIT 1
SELECT AVG(`overall_rating`) AS avg_rating FROM `player_attributes` WHERE `player_fifa_api_id` = (SELECT `player_fifa_api_id` FROM `player` WHERE `player_name` = 'Marko Arnautovic' LIMIT 1) AND SUBSTR(`date`, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'
SELECT CAST((SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Landon Donovan') AND date = '2013-07-12') - (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Jordan Bowery') AND date = '2013-07-12') AS REAL) * 100 / (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Landon Donovan') AND date = '2013-07-12') AS percentage
SELECT `player_name` FROM `player` ORDER BY `height` DESC LIMIT 1
SELECT `player_api_id` FROM `player` ORDER BY `weight` DESC LIMIT 10
SELECT `player_name` FROM `player` WHERE datetime(CURRENT_TIMESTAMP,'localtime') - datetime(`birthday`) > 34
SELECT COUNT(`match`.`home_team_goal`) FROM `match` INNER JOIN `player` ON `match`.`home_player_1` = `player`.`player_api_id` OR `match`.`home_player_2` = `player`.`player_api_id` OR `match`.`home_player_3` = `player`.`player_api_id` OR `match`.`home_player_4` = `player`.`player_api_id` OR `match`.`home_player_5` = `player`.`player_api_id` OR `match`.`home_player_6` = `player`.`player_api_id` OR `match`.`home_player_7` = `player`.`player_api_id` OR `match`.`home_player_8` = `player`.`player_api_id` OR `match`.`home_player_9` = `player`.`player_api_id` OR `match`.`home_player_10` = `player`.`player_api_id` OR `match`.`home_player_11` = `player`.`player_api_id` WHERE `player`.`player_name` = 'Aaron Lennon'
SELECT SUM(T1.away_team_goal) FROM match AS T1 INNER JOIN player AS T2 ON T1.away_player_1 = T2.player_api_id OR T1.away_player_2 = T2.player_api_id OR T1.away_player_3 = T2.player_api_id OR T1.away_player_4 = T2.player_api_id OR T1.away_player_5 = T2.player_api_id OR T1.away_player_6 = T2.player_api_id OR T1.away_player_7 = T2.player_api_id OR T1.away_player_8 = T2.player_api_id OR T1.away_player_9 = T2.player_api_id OR T1.away_player_10 = T2.player_api_id OR T1.away_player_11 = T2.player_api_id WHERE T2.player_name IN ('Daan Smith', 'Filipe Ferreira')
SELECT SUM(`match`.`home_team_goal`) FROM `match` INNER JOIN `player` ON `match`.`home_player_1` = `player`.`player_api_id` OR `match`.`home_player_2` = `player`.`player_api_id` OR `match`.`home_player_3` = `player`.`player_api_id` OR `match`.`home_player_4` = `player`.`player_api_id` OR `match`.`home_player_5` = `player`.`player_api_id` OR `match`.`home_player_6` = `player`.`player_api_id` OR `match`.`home_player_7` = `player`.`player_api_id` OR `match`.`home_player_8` = `player`.`player_api_id` OR `match`.`home_player_9` = `player`.`player_api_id` OR `match`.`home_player_10` = `player`.`player_api_id` OR `match`.`home_player_11` = `player`.`player_api_id` WHERE (STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', `player`.`birthday`)) < 31
SELECT `player`.`player_name` FROM `player` INNER JOIN `player_attributes` ON `player`.`player_api_id` = `player_attributes`.`player_api_id` ORDER BY `player_attributes`.`overall_rating` DESC LIMIT 1
SELECT `player_name` FROM `player` WHERE `player_api_id` IN (SELECT `player_api_id` FROM `player_attributes` WHERE `potential` = (SELECT MAX(`potential`) FROM `player_attributes`))
SELECT `player`.`player_name` FROM `player` INNER JOIN `player_attributes` ON `player`.`player_api_id` = `player_attributes`.`player_api_id` WHERE `player_attributes`.`attacking_work_rate` = 'high'
SELECT `player_name` FROM `player` WHERE `id` IN (SELECT `player_api_id` FROM `player_attributes` WHERE `finishing` = 1) ORDER BY `birthday` LIMIT 1
SELECT `player`.`player_name` FROM `player` INNER JOIN `country` ON `player`.`id` = `country`.`id` WHERE `country`.`name` = 'Belgium'
SELECT T2.name FROM player_attributes AS T1 INNER JOIN player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.vision > 89
SELECT T2.name FROM player AS T1 INNER JOIN country AS T2 ON T1.id = T2.id GROUP BY T2.name ORDER BY AVG(T1.weight) DESC LIMIT 1
SELECT `team_long_name` FROM `team_attributes` INNER JOIN `team` ON `team_attributes`.`team_api_id` = `team`.`team_api_id` WHERE `buildupplayspeedclass` = 'Slow'
SELECT `team_short_name` FROM `team` INNER JOIN `team_attributes` ON `team`.`team_api_id` = `team_attributes`.`team_api_id` WHERE `chancecreationpassingclass` = 'Safe'
SELECT AVG(`height`) FROM `player` WHERE `player_api_id` IN (SELECT `player_api_id` FROM `player_attributes` WHERE `id` IN (SELECT `id` FROM `country` WHERE `name` = 'Italy'))
SELECT `player_name` FROM `player` WHERE `height` > 180 ORDER BY `player_name` ASC LIMIT 3
SELECT COUNT(`id`) FROM `player` WHERE `player_name` LIKE 'Aaron%' AND `birthday` > '1990'
SELECT (SELECT jumping FROM player_attributes WHERE id = 6) - (SELECT jumping FROM player_attributes WHERE id = 23) AS jumping_difference
SELECT `player_api_id` FROM `player_attributes` WHERE `preferred_foot` = 'right' ORDER BY `potential` ASC LIMIT 5
SELECT COUNT(*) FROM player_attributes WHERE crossing = (SELECT MAX(crossing) FROM player_attributes) AND preferred_foot = 'left'
SELECT CAST(SUM(CASE WHEN `stamina` > 80 AND `strength` > 80 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `player_attributes`
SELECT `country`.`name` FROM `league` INNER JOIN `country` ON `league`.`country_id` = `country`.`id` WHERE `league`.`name` = 'Poland Ekstraklasa'
SELECT `home_team_goal`, `away_team_goal` FROM `match` WHERE `date` LIKE '2008-09-24%' AND `league_id` = (SELECT `id` FROM `league` WHERE `name` = 'Belgium Jupiler League')
SELECT `acceleration`, `sprint_speed`, `agility` FROM `player_attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `player` WHERE `player_name` = 'Alexis Blin' LIMIT 1)
SELECT `buildupplayspeedclass` FROM `team_attributes` WHERE `team_api_id` = (SELECT `team_api_id` FROM `team` WHERE `team_long_name` = 'KSV Cercle Brugge')
SELECT COUNT(`match`.`id`) FROM `match` INNER JOIN `league` ON `match`.`league_id` = `league`.`id` WHERE `match`.`season` = '2015/2016' AND `league`.`name` = 'Italy Serie A'
SELECT MAX(`home_team_goal`) FROM `match` WHERE `league_id` = (SELECT `id` FROM `league` WHERE `name` = 'Netherlands Eredivisie')
SELECT `player_attributes`.`finishing`, `player_attributes`.`curve` FROM `player` INNER JOIN `player_attributes` ON `player`.`player_api_id` = `player_attributes`.`player_api_id` WHERE `player`.`weight` = (SELECT MAX(`weight`) FROM `player`)
SELECT L.`name` FROM `match` M INNER JOIN `league` L ON M.`league_id` = L.`id` WHERE M.`season` = '2015/2016' GROUP BY L.`name` ORDER BY COUNT(M.`id`) DESC LIMIT 4
SELECT T1.team_long_name FROM team AS T1 INNER JOIN match AS T2 ON T1.team_api_id = T2.away_team_api_id ORDER BY T2.away_team_goal DESC LIMIT 1
SELECT `player_name` FROM `player` WHERE `player_api_id` = (SELECT `player_api_id` FROM `player_attributes` ORDER BY `overall_rating` DESC LIMIT 1)
SELECT CAST(COUNT(CASE WHEN T1.height < 180 AND T2.overall_rating > 70 THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM player AS T1 INNER JOIN player_attributes AS T2 ON T1.player_api_id = T2.player_api_id
SELECT CAST(SUM(CASE WHEN `sex` = 'M' AND `admission` = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`id`) AS in_patient_percentage, CAST(SUM(CASE WHEN `sex` = 'M' AND `admission` = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`id`) AS out_patient_percentage, ABS(CAST(SUM(CASE WHEN `sex` = 'M' AND `admission` = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`id`) - CAST(SUM(CASE WHEN `sex` = 'M' AND `admission` = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`id`)) AS deviation_percentage FROM patient WHERE `sex` = 'M'
SELECT CAST(SUM(CASE WHEN strftime('%Y', `birthday`) > '1930' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage FROM `patient` WHERE `sex` = 'F'
SELECT CAST(SUM(CASE WHEN `admission` = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `patient` WHERE `birthday` BETWEEN '1930-01-01' AND '1940-12-31'
SELECT CAST(COUNT(CASE WHEN `admission` = '-' THEN 1 END) AS REAL) / COUNT(CASE WHEN `admission` = '+' THEN 1 END) FROM `patient` WHERE `diagnosis` = 'SLE'
SELECT `patient`.`diagnosis`, `laboratory`.`date` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`id` = '30609'
SELECT `patient`.`sex`, `patient`.`birthday`, `examination`.`examination date`, `examination`.`symptoms` FROM `patient` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE `patient`.`id` = '163109'
SELECT T1.id, T1.sex, T1.birthday FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.ldh > 500
SELECT T1.id, strftime('%Y', 'now') - strftime('%Y', T2.birthday) AS age FROM examination AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id WHERE T1.rvvt = '+'
SELECT T2.id, T2.sex, T2.diagnosis FROM examination AS T1 INNER JOIN patient AS T2 ON T1.diagnosis = T2.diagnosis WHERE T1.thrombosis = 2
SELECT DISTINCT T1.id FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.birthday LIKE '1937-%' AND T2.`t-cho` >= 250
SELECT T1.`id`, T1.`sex`, T1.`diagnosis` FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.`id` = T2.`id` WHERE T2.`alb` < 3.5
SELECT CAST(SUM(CASE WHEN `patient`.`sex` = 'F' AND (`laboratory`.`tp` < '6.0' OR `laboratory`.`tp` > '8.5') THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id`
SELECT AVG(`examination`.`acl igg`) FROM `examination` INNER JOIN `patient` ON `examination`.`id` = `patient`.`id` WHERE `patient`.`admission` = '+' AND (strftime('%Y', 'now') - strftime('%Y', `patient`.`birthday`)) >= 50
SELECT COUNT(*) FROM `patient` WHERE `sex` = 'F' AND strftime('%Y', `description`) = '1997' AND `admission` = '-'
SELECT MIN(strftime('%Y', `first date`) - strftime('%Y', `birthday`)) FROM `patient` WHERE `first date` IS NOT NULL
SELECT COUNT(DISTINCT `examination`.`id`) FROM `examination` INNER JOIN `patient` ON `examination`.`id` = `patient`.`id` WHERE `examination`.`thrombosis` = 1 AND `patient`.`sex` = 'F' AND strftime('%Y', `examination`.`examination date`) = '1997'
SELECT MAX(strftime('%Y', `birthday`)) - MIN(strftime('%Y', `birthday`)) AS age_gap FROM `patient` WHERE `id` IN (SELECT `id` FROM `laboratory` WHERE `tg` >= 200)
SELECT T1.symptoms, T2.diagnosis FROM examination AS T1 INNER JOIN patient AS T2 ON T1.diagnosis = T2.diagnosis WHERE T1.symptoms IS NOT NULL ORDER BY T2.birthday DESC LIMIT 1
SELECT COUNT(`patient`.`id`) / 12 FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`sex` = 'M' AND `laboratory`.`date` BETWEEN '1998-01-01' AND '1998-12-31'
SELECT laboratory.`date`, strftime('%Y', patient.`first date`) - strftime('%Y', patient.`birthday`) AS age FROM patient INNER JOIN laboratory ON patient.`id` = laboratory.`id` WHERE patient.`diagnosis` = 'SJS' ORDER BY patient.`birthday` LIMIT 1
SELECT CAST(SUM(CASE WHEN `sex` = 'M' AND `ua` <= '8.0' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN `sex` = 'F' AND `ua` <= '6.5' THEN 1 ELSE 0 END) AS ratio FROM laboratory INNER JOIN patient ON laboratory.`id` = patient.`id`
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` LEFT JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE (`examination`.`examination date` IS NULL OR strftime('%Y', `examination`.`examination date`) - strftime('%Y', `patient`.`first date`) >= 1)
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE strftime('%Y', `patient`.`birthday`) < '18' AND strftime('%Y', `examination`.`examination date`) BETWEEN '1990' AND '1993'
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`sex` = 'M' AND `laboratory`.`t-bil` >= '2.0'
SELECT `diagnosis` FROM `examination` WHERE `examination date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY `diagnosis` ORDER BY COUNT(`diagnosis`) DESC LIMIT 1
SELECT AVG(1999 - strftime('%Y', `patient`.`birthday`)) FROM `laboratory` INNER JOIN `examination` ON `laboratory`.`id` = `examination`.`id` INNER JOIN `patient` ON `examination`.`id` = `patient`.`id` WHERE `laboratory`.`date` BETWEEN '1991-10-01' AND '1991-10-30'
SELECT T1.diagnosis, (strftime('%Y', T2.date) - strftime('%Y', T3.birthday)) AS age FROM examination AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id INNER JOIN patient AS T3 ON T1.id = T3.id WHERE T2.hgb = (SELECT MAX(hgb) FROM laboratory) LIMIT 1
SELECT `ana` FROM `examination` WHERE `id` = 3605340 AND `examination date` = '1996-12-02'
SELECT CASE WHEN `t-cho` < 250 THEN 'Normal' ELSE 'Abnormal' END AS status FROM `laboratory` WHERE `id` = 2927464 AND `date` = '1995-09-04'
SELECT T2.sex FROM examination AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id WHERE T1.diagnosis = 'AORTITIS' ORDER BY T1.examination date LIMIT 1
SELECT `acl igm` FROM `examination` INNER JOIN `patient` ON `examination`.`diagnosis` = `patient`.`diagnosis` WHERE `patient`.`description` = '1994-02-19' AND `examination`.`examination date` = '1993-11-12'
SELECT `patient`.`sex` FROM `laboratory` INNER JOIN `patient` ON `laboratory`.`id` = `patient`.`id` WHERE `laboratory`.`date` = '1992-06-12' AND `laboratory`.`got` = 9
SELECT strftime('%Y', '1991-10-21') - strftime('%Y', T2.birthday) AS age FROM laboratory AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id WHERE T1.date = '1991-10-21' AND T1.ua = '8.4'
SELECT COUNT(`laboratory`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`first date` = '1991-06-13' AND `patient`.`diagnosis` = 'SJS' AND `laboratory`.`date` LIKE '1995-%'
SELECT T2.diagnosis FROM examination AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id WHERE T1.`examination date` = '1997-01-27' AND T1.diagnosis = 'SLE'
SELECT `symptoms` FROM `examination` WHERE `examination date` = '1993-09-27' AND `id` IN (SELECT `id` FROM `patient` WHERE `birthday` = '1959-03-01')
SELECT (SUM(CASE WHEN `date` LIKE '1981-11-%' THEN `t-cho` END) - SUM(CASE WHEN `date` LIKE '1981-12-%' THEN `t-cho` END)) / SUM(CASE WHEN `date` LIKE '1981-11-%' THEN `t-cho` END) * 100 AS decrease_rate FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE patient.birthday = '1959-02-18'
SELECT `patient`.`id` FROM `patient` INNER JOIN `examination` ON `patient`.`diagnosis` = `examination`.`diagnosis` WHERE `patient`.`diagnosis` = 'Behcet' AND `examination`.`examination date` >= '1997-01-01' AND `examination`.`examination date` <= '1997-12-31'
SELECT DISTINCT `patient`.`id` FROM `patient` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` INNER JOIN `laboratory` ON `examination`.`id` = `laboratory`.`id` WHERE `laboratory`.`date` BETWEEN '1987-07-06' AND '1996-01-31' AND `laboratory`.`gpt` > 30 AND `laboratory`.`alb` < 4
SELECT `id` FROM `patient` WHERE `sex` = 'F' AND strftime('%Y', `birthday`) = '1964' AND `admission` = '+'
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE `examination`.`thrombosis` = 2 AND `examination`.`ana pattern` = 'S' AND `examination`.`acl igm` > (SELECT AVG(`acl igm`) * 1.2 FROM `examination`)
SELECT CAST(SUM(CASE WHEN `laboratory`.`ua` <= 6.5 AND `laboratory`.`u-pro` > 0 AND `laboratory`.`u-pro` < 30 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `laboratory` WHERE `laboratory`.`u-pro` > 0 AND `laboratory`.`u-pro` < 30
SELECT (COUNT(DISTINCT CASE WHEN `diagnosis` = 'BEHCET' THEN `id` END) * 100.0 / COUNT(DISTINCT `id`)) AS percentage FROM patient WHERE `sex` = 'M' AND YEAR(`first date`) = '1981'
SELECT DISTINCT T1.`id` FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.`id` = T2.`id` WHERE T1.`admission` = '-' AND T2.`date` LIKE '1991-10%' AND T2.`t-bil` < 2.0
SELECT COUNT(*) FROM examination AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id WHERE T1.`ana pattern` != 'P' AND T2.sex = 'F' AND T2.birthday BETWEEN '1980-01-01' AND '1989-12-31'
SELECT T1.sex FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T2.id = T3.id WHERE T2.diagnosis = 'PSS' AND T3.crp > 2 AND T3.cre = 1 AND T3.ldh = 123
SELECT AVG(`alb`) FROM `laboratory` AS T1 INNER JOIN `patient` AS T2 ON T1.`id` = T2.`id` WHERE T2.`sex` = 'F' AND T1.`plt` > 400 AND T2.`diagnosis` = 'SLE'
SELECT `symptoms` FROM `examination` WHERE `diagnosis` = 'SLE' GROUP BY `symptoms` ORDER BY COUNT(`symptoms`) DESC LIMIT 1
SELECT `patient`.`description`, `examination`.`diagnosis` FROM `patient` INNER JOIN `examination` ON `patient`.`diagnosis` = `examination`.`diagnosis` WHERE `patient`.`id` = 48473
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` WHERE `patient`.`sex` = 'F' AND `patient`.`diagnosis` = 'APS'
SELECT COUNT(DISTINCT `laboratory`.`id`) FROM `laboratory` INNER JOIN `patient` ON `laboratory`.`id` = `patient`.`id` WHERE YEAR(`laboratory`.`date`) = '1997' AND (`laboratory`.`tp` <= 6 OR `laboratory`.`tp` >= 8.5)
SELECT CAST(SUM(CASE WHEN `examination`.`symptoms` LIKE '%thrombocytopenia%' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `examination` INNER JOIN `patient` ON `examination`.`diagnosis` = `patient`.`diagnosis` WHERE `patient`.`diagnosis` LIKE '%SLE%'
SELECT CAST(SUM(CASE WHEN `patient`.`sex` = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`patient`.`id`) AS percentage FROM `patient` WHERE `patient`.`birthday` LIKE '1980-%' AND `patient`.`diagnosis` = 'RA'
SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id WHERE T1.sex = 'M' AND T2.`examination date` BETWEEN '1995-01-01' AND '1997-12-31' AND T1.diagnosis = 'Behcet' AND T1.admission = '-'
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`sex` = 'F' AND `laboratory`.`wbc` < 3.5
SELECT DATEDIFF(`examination`.`examination date`, `patient`.`first date`) AS time_difference FROM examination INNER JOIN patient ON `examination`.`id` = `patient`.`id` WHERE `patient`.`id` = 821298
SELECT CASE WHEN (`sex` = 'M' AND `ua` > 8.0) OR (`sex` = 'F' AND `ua` > 6.5) THEN 'Yes' ELSE 'No' END AS `within_normal_range` FROM `laboratory` INNER JOIN `patient` ON `laboratory`.`id` = `patient`.`id` WHERE `patient`.`id` = 57266
SELECT `date` FROM `laboratory` WHERE `id` = 48473 AND `got` >= 60
SELECT T1.id, T1.sex, T1.birthday FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.got < 60 AND strftime('%Y', T2.date) = '1994'
SELECT DISTINCT T1.id FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.sex = 'M' AND T2.gpt >= 60
SELECT T1.diagnosis FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.gpt > 60 ORDER BY T1.birthday ASC
SELECT AVG(`ldh`) FROM `laboratory` WHERE `ldh` < 500
SELECT `patient`.`id`, (strftime('%Y', 'now') - strftime('%Y', `patient`.`birthday`)) AS age FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`ldh` BETWEEN 600 AND 800
SELECT `patient`.`admission` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`alp` < 300
SELECT `patient`.`id`, `laboratory`.`alp` FROM `patient` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` INNER JOIN `laboratory` ON `examination`.`id` = `laboratory`.`id` WHERE `patient`.`birthday` = '1982-04-01' AND `laboratory`.`alp` < 300
SELECT `patient`.`id`, `patient`.`sex`, `patient`.`birthday` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`tp` < 6.0
SELECT `patient`.`id`, (`laboratory`.`tp` - 8.5) AS deviation FROM `patient` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` INNER JOIN `laboratory` ON `examination`.`id` = `laboratory`.`id` WHERE `patient`.`sex` = 'F' AND `laboratory`.`tp` > 8.5
SELECT T1.id, T1.birthday FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.sex = 'M' AND (T2.alb <= 3.5 OR T2.alb >= 5.5) ORDER BY T1.birthday DESC
SELECT T1.id, CASE WHEN T2.alb BETWEEN 3.5 AND 5.5 THEN 'Within Normal Range' ELSE 'Not Within Normal Range' END AS albumin_status FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE strftime('%Y', T1.birthday) = '1982'
SELECT CAST(SUM(CASE WHEN T1.ua > 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM laboratory AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id WHERE T2.sex = 'F'
SELECT AVG(`T1`.`ua`) FROM (SELECT `T2`.`id`, `T2`.`ua`, MAX(`T3`.`date`) AS `latest_date` FROM `patient` AS `T1` INNER JOIN `laboratory` AS `T2` ON `T1`.`id` = `T2`.`id` INNER JOIN `examination` AS `T3` ON `T2`.`id` = `T3`.`id` WHERE (`T1`.`sex` = 'M' AND `T2`.`ua` < 8.0) OR (`T1`.`sex` = 'F' AND `T2`.`ua` < 6.5) GROUP BY `T2`.`id`) AS `T1`
SELECT `patient`.`id`, `patient`.`sex`, `patient`.`birthday` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`un` = 29
SELECT T1.`id`, T1.`sex`, T1.`birthday` FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.`id` = T2.`id` WHERE T1.`diagnosis` = 'RA' AND T2.`un` < 30
SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.sex = 'M' AND T2.cre >= 1.5
SELECT (SUM(CASE WHEN `sex` = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN `sex` = 'F' THEN 1 ELSE 0 END)) AS result FROM `laboratory` WHERE `cre` >= 1.5
SELECT T1.id, T1.sex, T1.birthday FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.`t-bil` = (SELECT MAX(`t-bil`) FROM laboratory WHERE `t-bil` IS NOT NULL)
SELECT T1.sex, GROUP_CONCAT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.`t-bil` >= 2.0 GROUP BY T1.sex
SELECT T1.id, T2.`t-cho` FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.birthday = (SELECT MIN(birthday) FROM patient) AND T2.`t-cho` = (SELECT MAX(`t-cho`) FROM laboratory WHERE `t-cho` IS NOT NULL) LIMIT 1
SELECT SUM(CASE WHEN T2.deathdate IS NULL THEN ROUND((strftime('%J', date('now')) - strftime('%J', T2.birthdate)) / 365) ELSE ROUND((strftime('%J', T2.deathdate) - strftime('%J', T2.birthdate)) / 365) END) / COUNT(T2.patient) FROM laboratory AS T1 INNER JOIN patient AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Hypertension' AND T2.gender = 'M' AND T1.`T-CHO` >= 250
SELECT T1.id, T1.diagnosis FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.tg > 300
SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.tg >= 200 AND (strftime('%Y', 'now') - strftime('%Y', T1.birthday)) > 50
SELECT DISTINCT T1.id FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.admission = '-' AND T2.cpk < 250
SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.sex = 'M' AND T1.birthday BETWEEN '1936-01-01' AND '1956-12-31' AND T2.cpk >= 250
SELECT T1.id, T1.sex, (strftime('%Y', 'now') - strftime('%Y', T1.birthday)) AS age FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.glu >= 180 AND T2.`t-cho` < 250
SELECT T1.id, T2.glu FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.description LIKE '1991-%' AND T2.glu < 180
SELECT T1.id, T1.sex, T1.birthday FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.wbc <= 3.5 OR T2.wbc >= 9.0 ORDER BY T1.sex, T1.birthday ASC
SELECT T1.id, (strftime('%Y', 'now') - strftime('%Y', T1.birthday)) AS age FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.rbc < 3.5
SELECT T1.id, T1.admission FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.sex = 'F' AND (strftime('%Y', 'now') - strftime('%Y', T1.birthday)) >= 50 AND (T2.rbc <= 3.5 OR T2.rbc >= 6.0)
SELECT T1.id, T1.sex FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.admission = '-' AND T2.hgb < 10
SELECT T1.id, T1.sex FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.diagnosis = 'SLE' AND T2.hgb > 10 AND T2.hgb < 17 ORDER BY T1.birthday ASC LIMIT 1
SELECT T1.id, strftime('%Y', 'now') - strftime('%Y', T1.birthday) AS age FROM patient AS T1 INNER JOIN (SELECT id FROM laboratory WHERE hct >= 52 GROUP BY id HAVING COUNT(id) > 2) AS T2 ON T1.id = T2.id
SELECT AVG(`hct`) FROM `laboratory` WHERE `date` LIKE '1991%' AND `hct` < 29
SELECT SUM(CASE WHEN `plt` < 100 THEN 1 ELSE 0 END) AS lower_than_normal, SUM(CASE WHEN `plt` > 400 THEN 1 ELSE 0 END) AS higher_than_normal FROM laboratory WHERE `plt` <= 100 OR `plt` >= 400
SELECT DISTINCT T1.id FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE strftime('%Y', T2.date) = '1984' AND (strftime('%Y', 'now') - strftime('%Y', T1.birthday)) < 50 AND T2.plt BETWEEN 100 AND 400
SELECT (CAST(SUM(CASE WHEN `patient`.`sex` = 'F' AND `laboratory`.`pt` >= 14 THEN 1 ELSE 0 END) AS REAL) / COUNT(CASE WHEN `laboratory`.`pt` >= 14 THEN 1 END)) * 100 AS percentage FROM `patient` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` INNER JOIN `laboratory` ON `examination`.`id` = `laboratory`.`id` WHERE (strftime('%Y', 'now') - strftime('%Y', `patient`.`birthday`)) > 55
SELECT `patient`.`id` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE strftime('%Y', `patient`.`first date`) > '1992' AND `laboratory`.`pt` < 14
SELECT COUNT(*) FROM `examination` WHERE `examination date` > '1997-01-01' AND `aptt` IS NOT NULL
SELECT COUNT(DISTINCT T1.id) FROM examination AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.aptt > 45 AND T1.thrombosis = 0
SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.sex = 'M' AND T2.wbc > 3.5 AND T2.wbc < 9.0 AND (T2.fg <= 150 OR T2.fg >= 450)
SELECT COUNT(DISTINCT T1.`id`) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.`id` = T2.`id` WHERE T1.`birthday` > '1980-01-01' AND (T2.`fg` < 150 OR T2.`fg` > 450)
SELECT DISTINCT `patient`.`diagnosis` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`u-pro` >= 30
SELECT T1.id FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.diagnosis = 'SLE' AND T2.`u-pro` > 0 AND T2.`u-pro` < 30
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`igg` >= 2000
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE `laboratory`.`igg` > 900 AND `laboratory`.`igg` < 2000 AND `examination`.`symptoms` IS NOT NULL
SELECT T2.diagnosis FROM laboratory AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id WHERE T1.iga = (SELECT MAX(iga) FROM laboratory WHERE iga BETWEEN 80 AND 500)
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`first date` >= '1990-01-01' AND `laboratory`.`iga` > 80 AND `laboratory`.`iga` < 500
SELECT T1.diagnosis FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.igm <= 40 OR T2.igm >= 400 GROUP BY T1.diagnosis ORDER BY COUNT(T1.diagnosis) DESC LIMIT 1
SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.crp = '+' AND T1.description IS NULL
SELECT COUNT(*) FROM `patient` AS T1 INNER JOIN `laboratory` AS T2 ON T1.id = T2.id WHERE T2.cre >= 1.5 AND (strftime('%Y', 'now') - strftime('%Y', T1.birthday)) < 70
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE `laboratory`.`ra` IN ('-', '+-') AND `examination`.`kct` = '+'
SELECT DISTINCT `patient`.`diagnosis` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE YEAR(`patient`.`birthday`) >= 1985 AND `laboratory`.`ra` IN ('-', '+-')
SELECT T1.`id` FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.`id` = T2.`id` WHERE T2.`rf` < 20 AND (strftime('%Y', 'now') - strftime('%Y', T1.`birthday`)) > 60
SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id INNER JOIN examination AS T3 ON T1.id = T3.id WHERE T2.rf < 20 AND T3.thrombosis = '0'
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE `laboratory`.`c3` > 35 AND `examination`.`ana pattern` = 'P'
SELECT T1.id FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id INNER JOIN examination AS T3 ON T2.id = T3.id WHERE T2.hct <= 29 OR T2.hct >= 52 ORDER BY T3.`acl iga` DESC LIMIT 1
SELECT COUNT(DISTINCT T1.id) FROM examination AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.thrombosis = 1 AND T2.c4 > 10
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`admission` = '+' AND (`laboratory`.`rnp` = '-' OR `laboratory`.`rnp` = '+-')
SELECT `patient`.`birthday` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`rnp` NOT IN ('-', '+-') ORDER BY `patient`.`birthday` DESC LIMIT 1
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`sm` IN ('-', '+-') AND `patient`.`thrombosis` = 0
SELECT T1.id FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.sm NOT IN ('negative', '0') ORDER BY T1.birthday DESC LIMIT 3
SELECT DISTINCT `patient`.`id` FROM `patient` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `examination`.`examination date` > '1997-01-01' AND `laboratory`.`sc170` IN ('negative', '0')
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` LEFT JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE `laboratory`.`sc170` IN ('negative', '0') AND `patient`.`sex` = 'F' AND `examination`.`symptoms` IS NULL
SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.ssa IN ('-', '+-') AND strftime('%Y', T1.`first date`) < '2000'
SELECT T1.id FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.ssa NOT IN ('negative', '0') ORDER BY T1.`first date` LIMIT 1
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `examination` ON `patient`.`diagnosis` = `examination`.`diagnosis` WHERE `patient`.`diagnosis` = 'SLE' AND `examination`.`id` IN (SELECT `id` FROM `laboratory` WHERE `ssb` IN ('-', '+-'))
SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id INNER JOIN examination AS T3 ON T1.id = T3.id WHERE T2.ssb IN ('negative', '0') AND T3.symptoms IS NOT NULL
SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.centromea IN('-', '+-') AND T2.ssb IN('-', '+-') AND T1.sex = 'M'
SELECT DISTINCT `patient`.`diagnosis` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`dna` >= 8
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`dna` < 8 AND `patient`.`description` IS NULL
SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.igg > 900 AND T2.igg < 2000 AND T1.admission = '+'
SELECT (COUNT(DISTINCT T1.id) * 1.0) / COUNT(DISTINCT T2.id) * 100 AS percentage FROM laboratory AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id WHERE T1.got >= 60 AND T2.diagnosis = 'SLE'
SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.sex = 'M' AND T2.got < 60
SELECT MIN(`birthday`) FROM `patient` WHERE `id` IN (SELECT `id` FROM `laboratory` WHERE `got` >= 60)
SELECT T1.birthday FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.gpt < 60 ORDER BY T2.gpt DESC LIMIT 3
SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.got < 60 AND T1.sex = 'M'
SELECT T2.`first date` FROM laboratory AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id WHERE T1.ldh < 500 ORDER BY T1.ldh DESC, T2.`first date` ASC LIMIT 1
SELECT MAX(`laboratory`.`date`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`ldh` >= 500 AND `patient`.`first date` = (SELECT MAX(`first date`) FROM `patient`)
SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.alp >= 300 AND T1.admission = '+'
SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.admission = '-' AND T2.alp < 300
SELECT DISTINCT `patient`.`diagnosis` FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`tp` < 6.0
SELECT COUNT(*) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.diagnosis = 'SJS' AND T2.tp > 6.0 AND T2.tp < 8.5
SELECT `examination date` FROM examination WHERE `examination date` IN (SELECT `date` FROM laboratory WHERE `alb` = (SELECT MAX(`alb`) FROM laboratory WHERE `alb` > 3.5 AND `alb` < 5.5))
SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.sex = 'M' AND T2.alb > 3.5 AND T2.alb < 5.5 AND T2.tp BETWEEN 6.0 AND 8.5
SELECT T1.`acl igg`, T1.`acl igm`, T1.`acl iga` FROM examination AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE T2.sex = 'F' AND T3.ua > 6.50 ORDER BY T3.ua DESC LIMIT 1
SELECT MAX(`examination`.`ana`) FROM `examination` INNER JOIN `laboratory` ON `examination`.`id` = `laboratory`.`id` WHERE `laboratory`.`cre` < 1.5
SELECT T1.id FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id INNER JOIN examination AS T3 ON T1.id = T3.id WHERE T2.cre < 1.5 AND T3.`acl iga` = (SELECT MAX(`acl iga`) FROM examination)
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`t-bil` >= 2.0 AND `examination`.`ana pattern` LIKE '%P%'
SELECT T1.ana FROM examination AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.`t-bil` < 2.0 ORDER BY T2.`t-bil` DESC LIMIT 1
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE `laboratory`.`t-cho` >= 250 AND `examination`.`kct` = '-'
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE `laboratory`.`t-cho` < 250 AND `examination`.`ana pattern` = 'P'
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` WHERE `laboratory`.`tg` < 200 AND `examination`.`symptoms` IS NOT NULL
SELECT `patient`.`diagnosis` FROM `laboratory` INNER JOIN `patient` ON `laboratory`.`id` = `patient`.`id` WHERE `laboratory`.`tg` < 200 ORDER BY `laboratory`.`tg` DESC LIMIT 1
SELECT T1.id FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE T2.thrombosis = 0 AND T3.cpk < 250
SELECT COUNT(DISTINCT e.`id`) FROM `examination` AS e INNER JOIN `laboratory` AS l ON e.`id` = l.`id` WHERE l.`cpk` < 250 AND (e.`kct` = '+' OR e.`rvvt` = '+' OR e.`lac` = '+')
SELECT MIN(`patient`.`birthday`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`glu` > 180
SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE T3.glu < 180 AND T2.thrombosis = 0
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `patient`.`admission` = '+' AND `laboratory`.`wbc` BETWEEN 3.5 AND 9.0
SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.diagnosis = 'SLE' AND T2.wbc BETWEEN 3.5 AND 9.0
SELECT T1.id FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE (T2.rbc <= 3.5 OR T2.rbc >= 6.0) AND T1.admission = '-'
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `laboratory`.`plt` > 100 AND `laboratory`.`plt` < 400 AND `patient`.`diagnosis` IS NOT NULL
SELECT T1.plt FROM laboratory AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id WHERE T1.plt > 100 AND T1.plt < 400 AND T2.diagnosis = 'MCTD'
SELECT AVG(`laboratory`.`pt`) FROM `laboratory` INNER JOIN `patient` ON `laboratory`.`pt` = `patient`.`id` WHERE `patient`.`sex` = 'M' AND `laboratory`.`pt` < 14
SELECT COUNT(DISTINCT `patient`.`id`) FROM `patient` INNER JOIN `examination` ON `patient`.`id` = `examination`.`id` INNER JOIN `laboratory` ON `patient`.`id` = `laboratory`.`id` WHERE `examination`.`thrombosis` IN (1, 2) AND (`laboratory`.`pt` < 14 OR `laboratory`.`pt` IS NULL)
SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`college` = 'College of Engineering'
SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Art and Design Department'
SELECT COUNT(DISTINCT `attendance`.`link_to_member`) FROM `attendance` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Women\'s Soccer'
SELECT `member`.`phone` FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `event`.`event_name` = 'Women\'s Soccer'
SELECT COUNT(*) FROM `attendance` AS a INNER JOIN `member` AS m ON a.`link_to_member` = m.`member_id` INNER JOIN `event` AS e ON a.`link_to_event` = e.`event_id` WHERE e.`event_name` = 'Women\'s Soccer' AND m.`t_shirt_size` = 'Medium'
SELECT `event_name` FROM `event` WHERE `event_id` = (SELECT `link_to_event` FROM `attendance` GROUP BY `link_to_event` ORDER BY COUNT(`link_to_event`) DESC LIMIT 1)
SELECT `major`.`college` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'Vice President'
SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.first_name = 'Maya' AND T3.last_name = 'Mclean'
SELECT COUNT(DISTINCT T1.link_to_event) FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T2.first_name = 'Sacha' AND T2.last_name = 'Harrison' AND strftime('%Y', T3.event_date) = '2019'
SELECT COUNT(DISTINCT `event`.`event_id`) FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` WHERE `event`.`type` = 'Meeting' GROUP BY `event`.`event_id` HAVING COUNT(`attendance`.`link_to_member`) > 10
SELECT `event`.`event_name` FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` WHERE `event`.`type` <> 'Fundraiser' GROUP BY `event`.`event_id` HAVING COUNT(`attendance`.`link_to_event`) > 20
SELECT CAST(COUNT(`attendance`.`link_to_member`) AS REAL) / COUNT(DISTINCT `event`.`event_name`) FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` WHERE `event`.`type` = 'Meeting' AND strftime('%Y', `event`.`event_date`) = '2020'
SELECT expense_description FROM expense WHERE cost = (SELECT MAX(cost) FROM expense)
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Environmental Engineering'
SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Laugh Out Loud'
SELECT `last_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Law and Constitutional Studies'
SELECT T2.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sherri' AND T1.last_name = 'Ramsey'
SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Tyler' AND T1.last_name = 'Hewitt'
SELECT income.amount FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE member.position = 'Vice President'
SELECT SUM(`expense`.`cost`) FROM `expense` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'September Meeting' AND `budget`.`category` = 'Food'
SELECT T1.city, T1.state FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.position = 'President'
SELECT `first_name`, `last_name` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`state` = 'Illinois'
SELECT SUM(`spent`) FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'September Meeting' AND `budget`.`category` = 'Advertisement'
SELECT T1.department FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.last_name IN ('Pierce', 'Guidi')
SELECT SUM(`amount`) FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'October Speaker'
SELECT expense.`approved` FROM `expense` INNER JOIN `budget` ON expense.`link_to_budget` = budget.`budget_id` INNER JOIN `event` ON budget.`link_to_event` = event.`event_id` WHERE event.`event_name` = 'October Meeting' AND event.`event_date` = '2019-10-08'
SELECT AVG(T1.cost) FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Elijah' AND T2.last_name = 'Allen' AND (STRFTIME('%m', T1.expense_date) = '09' OR STRFTIME('%m', T1.expense_date) = '10')
SELECT SUM(CASE WHEN strftime('%Y', `event_date`) = '2019' THEN `spent` ELSE 0 END) - SUM(CASE WHEN strftime('%Y', `event_date`) = '2020' THEN `spent` ELSE 0 END) FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id`
SELECT `location` FROM `event` WHERE `event_name` = 'Spring Budget Review'
SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04'
SELECT `remaining` FROM `budget` WHERE `category` = 'Food' ORDER BY `amount` DESC LIMIT 1
SELECT `notes` FROM `income` WHERE `source` = 'Fundraising' AND `date_received` = '2019-09-14'
SELECT COUNT(*) FROM `major` WHERE `college` = 'College of Humanities and Social Sciences'
SELECT `phone` FROM `member` WHERE `first_name` = 'Carlo' AND `last_name` = 'Jacobs'
SELECT T1.county FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.first_name = 'Adela' AND T2.last_name = 'O\'Gallagher'
SELECT COUNT(*) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'November Meeting' AND T1.remaining < 0
SELECT SUM(`amount`) FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'September Speaker'
SELECT T1.event_status FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = 'Post Cards, Posters' AND T2.expense_date = '2019-08-20'
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Brent' AND `member`.`last_name` = 'Thomason'
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business' AND `member`.`t_shirt_size` = 'Medium'
SELECT T2.type FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson'
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'Vice President'
SELECT `zip_code`.`state` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`first_name` = 'Sacha' AND `member`.`last_name` = 'Harrison'
SELECT `major`.`department` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'President'
SELECT T2.date_received FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Connor' AND T1.last_name = 'Hilton' AND T2.source = 'Dues'
SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.source = 'Dues' ORDER BY T2.date_received LIMIT 1
SELECT CAST(SUM(CASE WHEN `event`.`event_name` = 'Yearly Kickoff' THEN `budget`.`amount` ELSE 0 END) AS REAL) / SUM(CASE WHEN `event`.`event_name` = 'October Meeting' THEN `budget`.`amount` ELSE 0 END) FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `budget`.`category` = 'Advertisement'
SELECT (SUM(CASE WHEN `category` = 'Parking' THEN `amount` ELSE 0 END) / SUM(`amount`)) * 100 AS percentage FROM `budget` WHERE `link_to_event` IN (SELECT `event_id` FROM `event` WHERE `event_name` = 'November Speaker')
SELECT SUM(`cost`) FROM `expense` WHERE `expense_description` = 'Pizza'
SELECT COUNT(DISTINCT `city`) FROM `zip_code` WHERE `county` = 'Orange County' AND `state` = 'Virginia'
SELECT `department` FROM `major` WHERE `college` = 'College of Humanities and Social Sciences'
SELECT T2.city, T2.county, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Amy' AND T1.last_name = 'Firth'
SELECT `expense_description` FROM `expense` WHERE `link_to_budget` = (SELECT `budget_id` FROM `budget` ORDER BY `remaining` LIMIT 1)
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'October Meeting'
SELECT T.college FROM ( SELECT T1.college, COUNT(T2.member_id) AS num FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major GROUP BY T1.college ) T ORDER BY T.num DESC LIMIT 1
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`phone` = '809-555-3360'
SELECT `event_name` FROM `event` WHERE `event_id` = (SELECT `link_to_event` FROM `budget` ORDER BY `amount` DESC LIMIT 1)
SELECT `expense`.`expense_description`, `expense`.`expense_date`, `expense`.`cost` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`position` = 'Vice President'
SELECT COUNT(DISTINCT `attendance`.`link_to_member`) FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` WHERE `event`.`event_name` = 'Women\'s Soccer'
SELECT `date_received` FROM `income` INNER JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Casey' AND `member`.`last_name` = 'Mason'
SELECT COUNT(DISTINCT `member`.`member_id`) FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`state` = 'Maryland'
SELECT COUNT(DISTINCT `link_to_event`) FROM `attendance` WHERE `link_to_member` = (SELECT `member_id` FROM `member` WHERE `phone` = '954-555-6240')
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`department` = 'School of Applied Sciences, Technology and Education'
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`status` = 'Closed' ORDER BY (`budget`.`spent` / `budget`.`amount`) DESC LIMIT 1
SELECT COUNT(*) FROM `member` WHERE `position` = 'President'
SELECT MAX(`spent`) FROM `budget`
SELECT COUNT(`event_id`) FROM `event` WHERE `type` = 'Meeting' AND SUBSTR(`event_date`, 1, 4) = '2020'
SELECT SUM(`spent`) FROM `budget` WHERE `category` = 'Food'
SELECT `member`.`first_name`, `member`.`last_name` FROM `attendance` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` GROUP BY `attendance`.`link_to_member` HAVING COUNT(`attendance`.`link_to_event`) > 7
SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id INNER JOIN attendance AS T3 ON T1.member_id = T3.link_to_member INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id WHERE T2.major_name = 'Interior Design' AND T4.event_name = 'Community Theater'
SELECT `first_name`, `last_name` FROM `member` WHERE `zip` IN (SELECT `zip_code` FROM `zip_code` WHERE `city` = 'Georgetown' AND `state` = 'South Carolina')
SELECT COUNT(`income`.`amount`) FROM `income` INNER JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Grant' AND `member`.`last_name` = 'Gilmour'
SELECT `first_name`, `last_name` FROM `member` WHERE `member_id` IN (SELECT `link_to_member` FROM `income` WHERE `amount` > 40)
SELECT SUM(`expense`.`cost`) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `event`.`event_name` = 'Yearly Kickoff'
SELECT T3.first_name, T3.last_name FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'Yearly Kickoff'
SELECT T1.first_name, T1.last_name, T2.source FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.amount = (SELECT MAX(amount) FROM income)
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` ORDER BY `expense`.`cost` LIMIT 1
SELECT CAST(SUM(CASE WHEN `event`.`event_name` = 'Yearly Kickoff' THEN `expense`.`cost` ELSE 0 END) AS REAL) * 100 / SUM(`expense`.`cost`) FROM `expense` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id`
SELECT CAST(SUM(CASE WHEN `major`.`major_name` = 'Finance' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN `major`.`major_name` = 'Physics' THEN 1 ELSE 0 END) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id`
SELECT `source` FROM `income` WHERE `date_received` BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY `source` ORDER BY SUM(`amount`) DESC LIMIT 1
SELECT `first_name`, `last_name`, `email` FROM `member` WHERE `position` = 'Secretary'
SELECT COUNT(m.`member_id`) FROM `member` AS m INNER JOIN `major` AS maj ON m.`link_to_major` = maj.`major_id` WHERE maj.`major_name` = 'Physics Teaching'
SELECT COUNT(DISTINCT `attendance`.`link_to_member`) FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` WHERE `event`.`event_name` = 'Community Theater' AND YEAR(`event`.`event_date`) = 2019
SELECT COUNT(T1.link_to_event) AS event_count, T3.major_name FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN major AS T3 ON T2.link_to_major = T3.major_id WHERE T2.first_name = 'Luisa' AND T2.last_name = 'Guidi' GROUP BY T3.major_name
SELECT SUM(`spent`) / COUNT(`spent`) FROM `budget` WHERE `category` = 'Food' AND `event_status` = 'Closed'
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`category` = 'Advertisement' ORDER BY `budget`.`spent` DESC LIMIT 1
SELECT COUNT(*) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.event_name = 'Women''s Soccer' AND T3.first_name = 'Maya' AND T3.last_name = 'Mclean'
SELECT CAST(SUM(CASE WHEN `type` = 'Community Service' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`event_id`) FROM `event` WHERE `event_date` BETWEEN '2019-01-01' AND '2019-12-31'
SELECT T3.cost FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T1.event_name = 'September Speaker' AND T3.expense_description = 'Posters'
SELECT `t_shirt_size` FROM `member` GROUP BY `t_shirt_size` ORDER BY COUNT(`t_shirt_size`) DESC LIMIT 1
SELECT `event_name` FROM `event` WHERE `status` = 'Closed' AND `event_id` = (SELECT `link_to_event` FROM `budget` WHERE `remaining` = (SELECT MIN(`remaining`) FROM `budget` WHERE `remaining` < 0))
SELECT `expense`.`expense_description`, SUM(`expense`.`cost`) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `event`.`event_name` = 'October Meeting' AND `expense`.`approved` = 'true' GROUP BY `expense`.`expense_description`
SELECT `category`, SUM(`amount`) AS `amount_budgeted` FROM `budget` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'April Speaker') GROUP BY `category` ORDER BY `amount_budgeted` ASC
SELECT MAX(`amount`) FROM `budget` WHERE `category` = 'Food'
SELECT `amount` FROM `budget` WHERE `category` = 'Advertisement' ORDER BY `amount` DESC LIMIT 3
SELECT SUM(`cost`) FROM `expense` WHERE `expense_description` = 'Parking'
SELECT SUM(`cost`) FROM `expense` WHERE `expense_date` = '2019-08-20'
SELECT `member`.`first_name`, `member`.`last_name`, SUM(`expense`.`cost`) AS total_cost FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `expense`.`link_to_member` = 'rec4BLdZHS2Blfp4v' GROUP BY `member`.`first_name`, `member`.`last_name`
SELECT `expense_description` FROM `expense` AS T1 INNER JOIN `member` AS T2 ON T1.`link_to_member` = T2.`member_id` WHERE T2.`first_name` = 'Sacha' AND T2.`last_name` = 'Harrison'
SELECT DISTINCT `expense`.`expense_description` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`t_shirt_size` = 'X-Large'
SELECT DISTINCT `zip_code`.`zip_code` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `expense`.`cost` < 50
SELECT T1.`major_name` FROM major AS T1 INNER JOIN member AS T2 ON T1.`major_id` = T2.`link_to_major` WHERE T2.`first_name` = 'Phillip' AND T2.`last_name` = 'Cullen'
SELECT `member`.`position` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business'
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business' AND `member`.`t_shirt_size` = 'Medium'
SELECT DISTINCT `event`.`type` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`remaining` > 30
SELECT `type` FROM `event` WHERE `location` = 'MU 215'
SELECT `type` FROM `event` WHERE `event_date` = '2020-03-24T12:00:00'
SELECT `major`.`major_name` FROM `major` INNER JOIN `member` ON `major`.`major_id` = `member`.`link_to_major` WHERE `member`.`position` = 'Vice President'
SELECT CAST(SUM(CASE WHEN `major`.`major_name` = 'Business' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id`
SELECT `type` FROM `event` WHERE `location` = 'MU 215'
SELECT COUNT(*) FROM `income` WHERE `amount` = 50
SELECT COUNT(`member_id`) FROM `member` WHERE `position` = 'Member' AND `t_shirt_size` = 'X-Large'
SELECT COUNT(*) FROM `major` WHERE `college` = 'College of Agriculture and Applied Sciences' AND `department` = 'School of Applied Sciences, Technology and Education'
SELECT T1.last_name, T2.department, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'
SELECT `budget`.`category` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`location` = 'MU 215' AND `event`.`type` = 'Guest Speaker' AND `budget`.`spent` = 0
SELECT T2.city, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code INNER JOIN major AS T3 ON T1.link_to_major = T3.major_id WHERE T1.position = 'Member' AND T3.department = 'Electrical and Computer Engineering Department'
SELECT `event`.`event_name` FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `event`.`type` = 'Social' AND `member`.`position` = 'Vice President' AND `event`.`location` = '900 E. Washington St.'
SELECT T2.last_name, T2.position FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Pizza' AND T1.expense_date = '2019-09-10'
SELECT T2.last_name FROM `event` AS T1 INNER JOIN `attendance` AS T2 ON T1.event_id = T2.link_to_event INNER JOIN `member` AS T3 ON T2.link_to_member = T3.member_id WHERE T1.event_name = 'Women\'s Soccer' AND T3.position = 'Member'
SELECT CAST(COUNT(CASE WHEN `income`.`amount` = 50 THEN 1 END) AS REAL) * 100 / COUNT(`member`.`member_id`) FROM `member` LEFT JOIN `income` ON `member`.`member_id` = `income`.`link_to_member` WHERE `member`.`t_shirt_size` = 'Medium' AND `member`.`position` = 'Member'
SELECT DISTINCT `state` FROM `zip_code` WHERE `type` = 'PO Box'
SELECT `zip_code` FROM `zip_code` WHERE `type` = 'PO Box' AND `county` = 'San Juan Municipio' AND `state` = 'Puerto Rico'
SELECT `event_name` FROM `event` WHERE `type` = 'Game' AND `status` = 'Closed' AND `event_date` BETWEEN '2019-03-15' AND '2020-03-20'
SELECT DISTINCT T1.link_to_event FROM attendance AS T1 INNER JOIN expense AS T2 ON T1.link_to_member = T2.link_to_member WHERE T2.cost > 50
SELECT DISTINCT T1.link_to_member, T1.link_to_event FROM expense AS T1 INNER JOIN attendance AS T2 ON T1.link_to_member = T2.link_to_member WHERE T1.approved = 'true' AND T1.expense_date BETWEEN '2019-01-10' AND '2019-11-19'
SELECT `college` FROM `major` WHERE `major_id` = 'rec1N0upiVLy5esTO'
SELECT `member`.`phone` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business' AND `major`.`college` = 'College of Agriculture and Applied Sciences'
SELECT `member`.`email` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `expense`.`expense_date` BETWEEN '2019-09-10' AND '2019-11-19' AND `expense`.`cost` > 20
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'education' AND `major`.`college` = 'College of Education & Human Services' AND `member`.`position` = 'Member'
SELECT CAST(SUM(CASE WHEN `remaining` < 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`event_id`) FROM `budget`
SELECT `event_id`, `location`, `status` FROM `event` WHERE `event_date` BETWEEN '2019-11-01' AND '2020-03-31'
SELECT `expense_description` FROM `expense` GROUP BY `expense_description` HAVING SUM(`cost`) / COUNT(`expense_id`) > 50
SELECT `first_name`, `last_name` FROM `member` WHERE `t_shirt_size` = 'X-Large'
SELECT CAST(COUNT(CASE WHEN `type` = 'PO Box' THEN `zip_code` ELSE NULL END) AS REAL) * 100 / COUNT(`zip_code`) FROM `zip_code`
SELECT `event_name`, `location` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `remaining` > 0
SELECT `event`.`event_name`, `event`.`event_date` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`link_to_event` = `expense`.`link_to_budget` WHERE `expense`.`expense_description` = 'Pizza' AND `expense`.`cost` > 50 AND `expense`.`cost` < 100
SELECT `member`.`first_name`, `member`.`last_name`, `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` WHERE `expense`.`cost` > 100
SELECT z.`city`, z.`county` FROM `event` AS e INNER JOIN `income` AS i ON e.`event_id` = i.`link_to_member` INNER JOIN `member` AS m ON i.`link_to_member` = m.`member_id` INNER JOIN `zip_code` AS z ON m.`zip` = z.`zip_code` WHERE i.`amount` > 40 GROUP BY e.`event_id` HAVING COUNT(i.`income_id`) > 40
SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member INNER JOIN budget AS T3 ON T2.link_to_budget = T3.budget_id GROUP BY T1.member_id HAVING COUNT(DISTINCT T3.link_to_event) > 1 ORDER BY SUM(T2.cost) DESC LIMIT 1
SELECT SUM(`expense`.`cost`) / COUNT(DISTINCT `event`.`event_id`) AS average_amount_paid FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` INNER JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `member`.`position` != 'Member'
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `expense`.`cost` < (SELECT SUM(`expense`.`cost`) / COUNT(`event`.`event_id`) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `budget`.`category` = 'Parking') AND `budget`.`category` = 'Parking'
SELECT CAST(SUM(T3.cost) AS REAL) * 100 / (SELECT COUNT(DISTINCT T1.event_id) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T1.type = 'Meeting') FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T1.type = 'Meeting'
SELECT T1.budget_id FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = 'Water, chips, cookies' ORDER BY T2.cost DESC LIMIT 1
SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id ORDER BY SUM(T2.cost) DESC LIMIT 5
SELECT T1.first_name, T1.last_name, T1.phone FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > (SELECT AVG(cost) FROM expense)
SELECT CAST(SUM(CASE WHEN T1.state = 'New Jersey' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) - CAST(SUM(CASE WHEN T1.state = 'Vermont' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.zip_code = T2.zip
SELECT T1.major_name, T1.department FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Garrett' AND T2.last_name = 'Gerke'
SELECT `member`.`first_name`, `member`.`last_name`, `expense`.`cost` FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` WHERE `expense`.`expense_description` = 'Water, Veggie tray, supplies'
SELECT `member`.`last_name`, `member`.`phone` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Elementary Education'
SELECT `category`, `amount` FROM `budget` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'January Speaker')
SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Food'
SELECT `member`.`first_name`, `member`.`last_name`, `income`.`amount` FROM `income` INNER JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `income`.`date_received` = '2019-09-09'
SELECT T1.category FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = 'Posters'
SELECT CONCAT(`member`.`first_name`, ' ', `member`.`last_name`) AS full_name, `major`.`college` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'Secretary'
SELECT `event`.`event_name`, SUM(`budget`.`spent`) AS total_spent FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `budget`.`category` = 'Speaker Gifts' GROUP BY `event`.`event_name`
SELECT `zip_code`.`city` FROM `member` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`first_name` = 'Garrett' AND `member`.`last_name` = 'Gerke'
SELECT m.first_name, m.last_name, m.position FROM member AS m INNER JOIN zip_code AS z ON m.zip = z.zip_code WHERE z.city = 'Lincolnton' AND z.state = 'North Carolina' AND z.zip_code = 28092
SELECT COUNT(*) FROM `gasstations` WHERE `country` = 'CZE' AND `segment` = 'Premium'
SELECT CAST(SUM(IIF(`currency` = 'EUR', 1, 0)) AS REAL) / SUM(IIF(`currency` = 'CZK', 1, 0)) FROM `customers`
SELECT T1.customerid FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.customerid = T2.customerid WHERE T1.segment = 'LAM' AND T2.date BETWEEN 201201 AND 201212 ORDER BY T2.consumption ASC LIMIT 1
SELECT AVG(`yearmonth`.`consumption`) / 12 AS avg_monthly_consumption FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`customerid` = `customers`.`customerid` WHERE `customers`.`segment` = 'SME' AND `yearmonth`.`date` BETWEEN 201301 AND 201312
SELECT T1.customerid FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.customerid = T2.customerid WHERE T1.currency = 'CZK' AND T2.date BETWEEN 201101 AND 201112 ORDER BY T2.consumption DESC LIMIT 1
SELECT COUNT(`customers`.`customerid`) FROM `customers` INNER JOIN `yearmonth` ON `customers`.`customerid` = `yearmonth`.`customerid` WHERE `customers`.`segment` = 'KAM' AND `yearmonth`.`date` BETWEEN 201201 AND 201212 AND `yearmonth`.`consumption` < 30000
SELECT (SELECT SUM(`yearmonth`.`consumption`) FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`customerid` = `customers`.`customerid` WHERE `customers`.`currency` = 'CZK' AND `yearmonth`.`date` BETWEEN 201201 AND 201212) - (SELECT SUM(`yearmonth`.`consumption`) FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`customerid` = `customers`.`customerid` WHERE `customers`.`currency` = 'EUR' AND `yearmonth`.`date` BETWEEN 201201 AND 201212) AS `DifferenceInConsumption`
SELECT `yearmonth`.`date` FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`customerid` = `customers`.`customerid` WHERE `customers`.`currency` = 'EUR' ORDER BY `yearmonth`.`consumption` DESC LIMIT 1
SELECT T.segment FROM ( SELECT T1.segment, SUM(T2.consumption) AS total_consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.customerid = T2.customerid GROUP BY T1.segment ) AS T ORDER BY T.total_consumption ASC LIMIT 1
SELECT SUBSTR(`date`, 1, 4) AS Year FROM yearmonth INNER JOIN customers ON yearmonth.customerid = customers.customerid WHERE customers.currency = 'CZK' ORDER BY yearmonth.consumption DESC LIMIT 1
SELECT `yearmonth`.`date` FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`customerid` = `customers`.`customerid` WHERE `customers`.`segment` = 'SME' AND `yearmonth`.`date` BETWEEN 201301 AND 201312 ORDER BY `yearmonth`.`consumption` DESC LIMIT 1
WITH SegmentConsumption AS (SELECT T1.segment, MIN(T2.consumption) AS min_consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.customerid = T2.customerid WHERE T2.date BETWEEN 201301 AND 201312 GROUP BY T1.segment), AnnualAverage AS (SELECT T1.segment, SUM(T2.consumption) / COUNT(*) AS annual_avg FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.customerid = T2.customerid INNER JOIN SegmentConsumption AS T3 ON T1.segment = T3.segment AND T2.consumption = T3.min_consumption WHERE T2.date BETWEEN 201301 AND 201312 GROUP BY T1.segment) SELECT (SELECT annual_avg FROM AnnualAverage WHERE segment = 'SME') - (SELECT annual_avg FROM AnnualAverage WHERE segment = 'LAM') AS SME_LAM_diff, (SELECT annual_avg FROM AnnualAverage WHERE segment = 'LAM') - (SELECT annual_avg FROM AnnualAverage WHERE segment = 'KAM') AS LAM_KAM_diff, (SELECT annual_avg FROM AnnualAverage WHERE segment = 'KAM') - (SELECT annual_avg FROM AnnualAverage WHERE segment = 'SME') AS KAM_SME_diff;
SELECT c.`segment`, ((SUM(CASE WHEN SUBSTR(`date`, 1, 4) = '2013' THEN `consumption` ELSE 0 END) - SUM(CASE WHEN SUBSTR(`date`, 1, 4) = '2012' THEN `consumption` ELSE 0 END)) / SUM(CASE WHEN SUBSTR(`date`, 1, 4) = '2013' THEN `consumption` ELSE 0 END)) * 100 AS percentage_increase FROM `yearmonth` ym JOIN `customers` c ON ym.`customerid` = c.`customerid` WHERE c.`currency` = 'EUR' AND c.`segment` IN ('SME', 'LAM', 'KAM') GROUP BY c.`segment` ORDER BY percentage_increase DESC LIMIT 1
SELECT SUM(`yearmonth`.`consumption`) FROM `yearmonth` WHERE `yearmonth`.`customerid` = 6 AND `yearmonth`.`date` BETWEEN 201308 AND 201311
SELECT COUNT(CASE WHEN `gasstations`.`country` = 'CZE' AND `gasstations`.`segment` = 'Value for money' THEN 1 END) - COUNT(CASE WHEN `gasstations`.`country` = 'SVK' AND `gasstations`.`segment` = 'Value for money' THEN 1 END) FROM `gasstations`
SELECT T1.consumption - T2.consumption AS consumption_difference FROM yearmonth AS T1 INNER JOIN yearmonth AS T2 ON T1.date = 201304 AND T1.customerid = 7 AND T2.date = 201304 AND T2.customerid = 5
SELECT (SELECT COUNT(`customers`.`customerid`) FROM `customers` WHERE `customers`.`segment` = 'SME' AND `customers`.`currency` = 'CZK') - (SELECT COUNT(`customers`.`customerid`) FROM `customers` WHERE `customers`.`segment` = 'SME' AND `customers`.`currency` = 'EUR') AS `Amount_of_more_SMEs`
SELECT `customers`.`customerid`, MAX(`yearmonth`.`consumption`) FROM `customers` INNER JOIN `yearmonth` ON `customers`.`customerid` = `yearmonth`.`customerid` WHERE `customers`.`segment` = 'LAM' AND `customers`.`currency` = 'EUR' AND `yearmonth`.`date` = '201310' GROUP BY `customers`.`customerid` ORDER BY MAX(`yearmonth`.`consumption`) DESC LIMIT 1
SELECT T1.`customerid`, T1.`consumption` FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.`customerid` = T2.`customerid` WHERE T2.`segment` = 'KAM' ORDER BY T1.`consumption` DESC LIMIT 1
SELECT SUM(`yearmonth`.`consumption`) FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`customerid` = `customers`.`customerid` WHERE `yearmonth`.`date` = 201305 AND `customers`.`segment` = 'KAM'
SELECT (COUNT(DISTINCT T1.customerid) * 100.0 / (SELECT COUNT(DISTINCT customerid) FROM customers WHERE segment = 'LAM')) AS percentage FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.customerid = T2.customerid WHERE T1.segment = 'LAM' AND T2.consumption > 46.73
SELECT `country`, COUNT(*) AS total_stations FROM `gasstations` WHERE `segment` = 'Value for money' GROUP BY `country` ORDER BY total_stations DESC
SELECT CAST(SUM(IIF(`customers`.`currency` = 'EUR', 1, 0)) AS REAL) * 100 / COUNT(`customers`.`customerid`) FROM `customers` WHERE `customers`.`segment` = 'KAM'
SELECT CAST(SUM(IIF(`consumption` > 528.3, 1, 0)) AS REAL) * 100 / COUNT(`customerid`) FROM `yearmonth` WHERE `date` = '201202'
SELECT CAST(SUM(IIF(`gasstations`.`segment` = 'Premium', 1, 0)) AS REAL) * 100 / COUNT(`gasstations`.`gasstationid`) FROM `gasstations` WHERE `gasstations`.`country` = 'SVK'
SELECT `customerid` FROM `yearmonth` WHERE `date` = '201309' ORDER BY `consumption` DESC LIMIT 1
SELECT T.segment FROM ( SELECT T1.segment, SUM(T2.consumption) AS total_consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.customerid = T2.customerid WHERE T2.date = '201309' GROUP BY T1.segment ) AS T ORDER BY T.total_consumption ASC LIMIT 1
SELECT T1.`customerid` FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.`customerid` = T2.`customerid` WHERE T1.`date` = '201206' AND T2.`segment` = 'SME' ORDER BY T1.`consumption` ASC LIMIT 1
SELECT `consumption` FROM `yearmonth` WHERE `date` LIKE '2012%' ORDER BY `consumption` DESC LIMIT 1
SELECT MAX(SUM(`yearmonth`.`consumption`) / 12) AS MonthlyConsumption FROM `customers` INNER JOIN `yearmonth` ON `customers`.`customerid` = `yearmonth`.`customerid` WHERE `customers`.`currency` = 'EUR' GROUP BY `customers`.`customerid`
SELECT T2.`description` FROM yearmonth AS T1 INNER JOIN products AS T2 ON T1.`customerid` = T2.`productid` WHERE T1.`date` = '201309'
SELECT DISTINCT `gasstations`.`country` FROM `gasstations` INNER JOIN `transactions_1k` ON `gasstations`.`gasstationid` = `transactions_1k`.`gasstationid` WHERE `transactions_1k`.`date` LIKE '2013-06-%'
SELECT DISTINCT `gasstations`.`chainid` FROM `gasstations` INNER JOIN `transactions_1k` ON `gasstations`.`gasstationid` = `transactions_1k`.`gasstationid` INNER JOIN `customers` ON `transactions_1k`.`customerid` = `customers`.`customerid` WHERE `customers`.`currency` = 'EUR'
SELECT T2.description FROM customers AS T1 INNER JOIN transactions_1k AS T3 ON T1.customerid = T3.customerid INNER JOIN products AS T2 ON T3.productid = T2.productid WHERE T1.currency = 'EUR'
SELECT AVG(price * amount) FROM transactions_1k WHERE `date` LIKE '2012-01%'
SELECT COUNT(`customers`.`customerid`) FROM `customers` INNER JOIN `yearmonth` ON `customers`.`customerid` = `yearmonth`.`customerid` WHERE `customers`.`currency` = 'EUR' AND `yearmonth`.`consumption` > 1000
SELECT T2.description FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.gasstationid = T2.gasstationid INNER JOIN products AS T3 ON T2.productid = T3.productid WHERE T1.country = 'CZE'
SELECT DISTINCT `transactions_1k`.`time` FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`gasstationid` = `gasstations`.`gasstationid` WHERE `gasstations`.`chainid` = 11
SELECT COUNT(`transactionid`) FROM `transactions_1k` WHERE `gasstationid` IN (SELECT `gasstationid` FROM `gasstations` WHERE `country` = 'CZE') AND `price` > 1000
SELECT COUNT(T2.transactionid) FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.gasstationid = T2.gasstationid WHERE T1.country = 'CZE' AND T2.date > '2012-01-01'
SELECT AVG(T2.price) FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.gasstationid = T2.gasstationid WHERE T1.country = 'CZE'
SELECT AVG(T2.price) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.customerid = T2.customerid WHERE T1.currency = 'EUR'
SELECT T1.customerid FROM transactions_1k AS T1 WHERE T1.date = '2012-08-25' ORDER BY T1.amount * T1.price DESC LIMIT 1
SELECT T1.country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.gasstationid = T2.gasstationid WHERE T2.date = '2012-08-25' ORDER BY T2.time ASC LIMIT 1
SELECT c.`currency` FROM `customers` c INNER JOIN `transactions_1k` t ON c.`customerid` = t.`customerid` WHERE t.`date` = '2012-08-24' AND t.`time` = '16:25:00'
SELECT `segment` FROM `customers` WHERE `customerid` = (SELECT `customerid` FROM `transactions_1k` WHERE `date` = '2012-08-23' AND `time` = '21:20:00' LIMIT 1)
SELECT COUNT(`transactionid`) FROM `transactions_1k` WHERE `date` = '2012-08-26' AND `time` < '13:00:00' AND `currency` = 'CZK'
SELECT `segment` FROM `customers` ORDER BY `customerid` LIMIT 1
SELECT `gasstations`.`country` FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`gasstationid` = `gasstations`.`gasstationid` WHERE `transactions_1k`.`date` = '2012-08-24' AND `transactions_1k`.`time` = '12:42:00'
SELECT `productid` FROM `transactions_1k` WHERE `date` = '2012-08-23' AND `time` = '21:20:00'
SELECT T1.consumption FROM yearmonth AS T1 INNER JOIN transactions_1k AS T2 ON T1.customerid = T2.customerid WHERE T2.date = '2012-08-24' AND T2.amount = 124.05 AND T1.date = '201201'
SELECT COUNT(*) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.gasstationid = T2.gasstationid WHERE T1.date = '2012-08-26' AND T1.time BETWEEN '08:00:00' AND '09:00:00' AND T2.country = 'CZE'
SELECT `customers`.`currency` FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`customerid` = `customers`.`customerid` WHERE `yearmonth`.`date` = '201306' AND `yearmonth`.`consumption` = 214582.17
SELECT `gasstations`.`country` FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`gasstationid` = `gasstations`.`gasstationid` WHERE `transactions_1k`.`cardid` = 667467
SELECT T2.country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.gasstationid = T2.gasstationid WHERE T1.amount = 548.4 AND T1.date = '2012-08-24'
SELECT CAST(COUNT(DISTINCT T1.customerid) AS REAL) * 100 / (SELECT COUNT(DISTINCT customerid) FROM customers) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.customerid = T2.customerid WHERE T1.currency = 'EUR' AND T2.date = '2012-08-25'
SELECT CAST((SUM(CASE WHEN `yearmonth`.`date` = '201207' THEN `yearmonth`.`consumption` ELSE 0 END) - SUM(CASE WHEN `yearmonth`.`date` = '201302' THEN `yearmonth`.`consumption` ELSE 0 END)) AS REAL) / SUM(CASE WHEN `yearmonth`.`date` = '201207' THEN `yearmonth`.`consumption` ELSE 0 END) FROM `transactions_1k` INNER JOIN `yearmonth` ON `transactions_1k`.`customerid` = `yearmonth`.`customerid` WHERE `transactions_1k`.`price` = 634.8 AND `transactions_1k`.`date` = '2012-08-25'
SELECT T1.`gasstationid` FROM `transactions_1k` AS T1 INNER JOIN `gasstations` AS T2 ON T2.`gasstationid` = T1.`gasstationid` GROUP BY T1.`gasstationid` ORDER BY SUM(T1.`amount` * T1.`price`) DESC LIMIT 1
SELECT CAST(SUM(IIF(`gasstations`.`segment` = 'Premium', 1, 0)) AS REAL) * 100 / COUNT(`gasstations`.`segment`) FROM `gasstations` WHERE `gasstations`.`country` = 'SVK'
SELECT SUM(amount) FROM transactions_1k WHERE customerid = 38508 AND date = '2012-01-01'
SELECT `products`.`description` FROM `products` INNER JOIN `transactions_1k` ON `products`.`productid` = `transactions_k`.`productid` GROUP BY `products`.`description` ORDER BY SUM(`transactions_1k`.`amount`) DESC LIMIT 5
SELECT T1.customerid, T1.currency, SUM(T2.price) / SUM(T2.amount) AS average_price_per_item FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.customerid = T2.customerid GROUP BY T1.customerid ORDER BY SUM(T2.price) DESC LIMIT 1
SELECT T1.country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.gasstationid = T2.gasstationid WHERE T2.productid = 2 ORDER BY T2.price DESC LIMIT 1
SELECT ym.consumption FROM transactions_1k AS t INNER JOIN yearmonth AS ym ON t.customerid = ym.customerid WHERE t.productid = 5 AND (t.price / t.amount) > 29.00 AND ym.date = '201208'
