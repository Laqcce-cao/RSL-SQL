SELECT MAX(`Free Meal Count (K-12)` * 1.0 / `Enrollment (K-12)`) AS highest_eligible_free_rate FROM `frpm` WHERE `County Name` = 'Alameda'
SELECT `Percent (%) Eligible Free (Ages 5-17)` FROM `frpm` WHERE `School Type` = 'Continuation' ORDER BY `Percent (%) Eligible Free (Ages 5-17)` ASC LIMIT 3
SELECT `schools`.`Zip` FROM `schools` JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `frpm`.`Charter School (Y/N)` = 1 AND `schools`.`District` = 'Fresno County Office of Education';
SELECT `schools`.`MailStreet` FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` ORDER BY `frpm`.`FRPM Count (K-12)` DESC LIMIT 1
SELECT `schools`.`Phone` FROM `schools` JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `frpm`.`Charter School (Y/N)` = 1 AND `schools`.`OpenDate` > '2000-01-01' AND `frpm`.`Charter Funding Type` = 'Direct' AND `schools`.`ClosedDate` IS NULL
SELECT COUNT(*) FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `satscores`.`AvgScrMath` > 400 AND `schools`.`Virtual` = 'F';
SELECT `schools`.`School` FROM `schools` JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` WHERE `satscores`.`NumTstTakr` > 500 AND `schools`.`Magnet` = 1
SELECT `schools`.`Phone` FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `satscores`.`NumGE1500` = (SELECT MAX(`NumGE1500`) FROM `satscores`) LIMIT 1
SELECT `satscores`.`NumTstTakr` FROM `satscores` JOIN `frpm` ON `satscores`.`cds` = `frpm`.`CDSCode` ORDER BY `frpm`.`FRPM Count (K-12)` DESC LIMIT 1
SELECT COUNT(*) FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `AvgScrMath` > 560 AND `schools`.`FundingType` = 'Charter';
SELECT `frpm`.`FRPM Count (Ages 5-17)` FROM `satscores` JOIN `frpm` ON `satscores`.`cds` = `frpm`.`CDSCode` ORDER BY `satscores`.`AvgScrRead` DESC LIMIT 1
SELECT `CDSCode` FROM `frpm` WHERE (`Enrollment (K-12)` + `Enrollment (Ages 5-17)`) > 500
SELECT MAX(`Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`) AS max_eligible_free_rate FROM frpm JOIN satscores ON frpm.`CDSCode` = satscores.cds WHERE satscores.NumGE1500 / satscores.NumTstTakr > 0.3
SELECT `schools`.`Phone` FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY (`satscores`.`NumGE1500` / `satscores`.`NumTstTakr`) DESC LIMIT 3
SELECT `schools`.`NCESSchool` FROM `schools` ORDER BY `schools`.`Enrollment (Ages 5-17)` DESC LIMIT 5
SELECT `satscores`.`dname`, AVG(`satscores`.`AvgScrRead`) AS avg_reading_score FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`StatusType` = 'Active' GROUP BY `satscores`.`dname` ORDER BY avg_reading_score DESC LIMIT 1
SELECT COUNT(*) FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`County` = 'Alameda' AND `satscores`.`NumTstTakr` < 100
SELECT `sname`, `CharterNum`, `AvgScrWrite` FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `AvgScrWrite` > 499 AND `CharterNum` IS NOT NULL ORDER BY `AvgScrWrite` DESC
SELECT COUNT(*) FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`District` = 'Fresno' AND `satscores`.`NumTstTakr` <= 250 AND `schools`.`FundingType` = 'Directly Funded';
SELECT `schools`.`Phone` FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `AvgScrMath` DESC LIMIT 1
SELECT COUNT(*) FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`Low Grade` = 9 AND `frpm`.`High Grade` = 12 AND `schools`.`County` = 'Amador';
SELECT COUNT(*) FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`City` = 'Los Angeles' AND `frpm`.`Free Meal Count (K-12)` > 500 AND `frpm`.`FRPM Count (K-12)` < 700
SELECT `sname` FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `cname` = 'Contra Costa' ORDER BY `NumTstTakr` DESC LIMIT 1
SELECT `schools`.`School`, `schools`.`Street`, `schools`.`City`, `schools`.`Zip`, `schools`.`State` FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE (`frpm`.`Enrollment (K-12)` - `frpm`.`Enrollment (Ages 5-17)`) > 30;
SELECT DISTINCT `schools`.`School` FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` WHERE `frpm`.`Percent (%) Eligible Free (K-12)` > 0.1 AND `satscores`.`NumGE1500` > 0
SELECT `schools`.`School`, `schools`.`FundingType` FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `satscores`.`AvgScrMath` > 400 AND `schools`.`District` = 'Riverside'
SELECT `schools`.`School`, `schools`.`Street`, `schools`.`City`, `schools`.`State`, `schools`.`Zip` FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`County Name` = 'Monterey' AND `frpm`.`High Grade` = '12' AND `frpm`.`FRPM Count (Ages 5-17)` > 800
SELECT `satscores`.`sname`, `satscores`.`AvgScrWrite`, `schools`.`Phone` FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE (`schools`.`OpenDate` > '1991-01-01' OR `schools`.`ClosedDate` < '2000-01-01') AND `satscores`.`AvgScrWrite` IS NOT NULL
SELECT `schools`.`School`, `schools`.`DOCType` FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`FundingType` = 'Locally Funded' AND (`frpm`.`Enrollment (K-12)` - `frpm`.`Enrollment (Ages 5-17)`) > (SELECT AVG(`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) FROM `frpm` WHERE `schools`.`FundingType` = 'Locally Funded')
SELECT `OpenDate` FROM `schools` WHERE `CDSCode` = (SELECT `CDSCode` FROM `frpm` ORDER BY `Enrollment (K-12)` DESC LIMIT 1)
SELECT `City`, MIN(`Enrollment (K-12)`) AS min_enrollment FROM `frpm` GROUP BY `City` ORDER BY min_enrollment ASC LIMIT 5
SELECT `Percent (%) Eligible Free (K-12)` FROM (SELECT `CDSCode`, `Percent (%) Eligible Free (K-12)`, RANK() OVER (ORDER BY `Enrollment (K-12)` DESC) AS rank FROM `frpm`) WHERE rank IN (10, 11)
SELECT `School Name`, (`FRPM Count (K-12)` * 1.0 / `Enrollment (K-12)`) AS `Eligible Free or Reduced Price Meal Rate` FROM frpm WHERE `CDSCode` IN (SELECT `CDSCode` FROM schools WHERE `CharterNum` = 66) ORDER BY `FRPM Count (K-12)` DESC LIMIT 5
SELECT `schools`.`Website`, `schools`.`School` FROM `schools` JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `frpm`.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000
SELECT `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` AS free_rate FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `AdmFName1` = 'Kacey' AND `AdmLName1` = 'Gibson'
SELECT `AdmEmail1` FROM `schools` JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `Charter School (Y/N)` = 1 ORDER BY `Enrollment (K-12)` ASC LIMIT 1
SELECT `AdmFName1`, `AdmLName1`, `AdmFName2`, `AdmLName2`, `AdmFName3`, `AdmLName3` FROM `schools` WHERE `CDSCode` = (SELECT `cds` FROM `satscores` ORDER BY `NumGE1500` DESC LIMIT 1)
SELECT `Street`, `City`, `Zip`, `State` FROM `schools` WHERE `CDSCode` = (SELECT `cds` FROM `satscores` ORDER BY (`NumGE1500` / `NumTstTakr`) LIMIT 1)
SELECT `schools`.`Website` FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `satscores`.`NumTstTakr` BETWEEN 2000 AND 3000 AND `schools`.`County` = 'Los Angeles';
SELECT AVG(`satscores`.`NumTstTakr`) FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`OpenDate` BETWEEN '1980-01-01' AND '1980-12-31' AND `schools`.`City` = 'Fresno';
SELECT `schools`.`Phone` FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`District` = 'Fresno Unified' ORDER BY `satscores`.`AvgScrRead` ASC LIMIT 1
SELECT s.`School` FROM `satscores` s JOIN `schools` sc ON s.`cds` = sc.`CDSCode` WHERE sc.`Virtual` = 'F' AND s.`AvgScrRead` IS NOT NULL ORDER BY s.`AvgScrRead` DESC, sc.`County` LIMIT 5
SELECT `schools`.`EILName` FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `AvgScrMath` DESC LIMIT 1
SELECT s.County, ss.AvgScrMath FROM satscores ss JOIN schools s ON ss.cds = s.CDSCode ORDER BY (ss.AvgScrMath + ss.AvgScrRead + ss.AvgScrWrite) LIMIT 1
SELECT AVG(`AvgScrWrite`), `City` FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `NumGE1500` = (SELECT MAX(`NumGE1500`) FROM `satscores`)
SELECT `s`.`School`, AVG(`ss`.`AvgScrWrite`) AS `AverageWritingScore` FROM `satscores` AS `ss` JOIN `schools` AS `s` ON `ss`.`cds` = `s`.`CDSCode` WHERE `s`.`AdmLName1` = 'Ulrich' AND `s`.`AdmFName1` = 'Ricci' GROUP BY `s`.`School`
SELECT `frpm`.`School Name`, MAX(`frpm`.`Enrollment (K-12)`) AS max_enrollment FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`DOC` = 31 GROUP BY `frpm`.`School Name` ORDER BY max_enrollment DESC LIMIT 1;
SELECT COUNT(`CDSCode`) / 12.0 AS monthly_average FROM `schools` WHERE `County` = 'Alameda' AND `DOC` = 52 AND strftime('%Y', `OpenDate`) = '1980'
SELECT COUNT(CASE WHEN `schools`.`DOC` = 54 THEN 1 END) * 1.0 / COUNT(CASE WHEN `schools`.`DOC` = 52 THEN 1 END) AS ratio FROM `schools` WHERE `schools`.`County` = 'Orange' AND `schools`.`StatusType` = 'Merged'
SELECT `schools`.`School`, `schools`.`ClosedDate` FROM `schools` WHERE `schools`.`StatusType` = 'Closed' ORDER BY `schools`.`County` DESC LIMIT 1
SELECT `schools`.`Street`, `schools`.`School` FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `satscores`.`AvgScrMath` DESC LIMIT 1 OFFSET 6
SELECT `schools`.`MailStreet`, `schools`.`School` FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `satscores`.`AvgScrRead` ASC LIMIT 1
SELECT COUNT(*) FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`MailCity` = 'Lakeport' AND (`satscores`.`AvgScrRead` + `satscores`.`AvgScrMath` + `satscores`.`AvgScrWrite`) >= 1500
SELECT SUM(`satscores`.`NumTstTakr`) FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`MailCity` = 'Fresno';
SELECT `schools`.`School`, `schools`.`MailZip` FROM `schools` WHERE `schools`.`AdmFName1` = 'Avetik' AND `schools`.`AdmLName1` = 'Atoian'
SELECT COUNT(CASE WHEN `schools`.`County` = 'Colusa' THEN 1 END) * 1.0 / COUNT(CASE WHEN `schools`.`County` = 'Humboldt' THEN 1 END) AS ratio FROM `schools` WHERE `schools`.`MailState` = 'CA';
SELECT COUNT(*) FROM `schools` WHERE `State` = 'CA' AND `City` = 'San Joaquin' AND `StatusType` = 'Active';
SELECT `Phone`, `Ext` FROM `schools` WHERE `CDSCode` = (SELECT `cds` FROM `satscores` ORDER BY `AvgScrWrite` DESC LIMIT 1 OFFSET 332)
SELECT `schools`.`School`, `schools`.`Phone`, `schools`.`Ext` FROM `schools` WHERE `schools`.`Zip` = '95203-3704'
SELECT `schools`.`Website` FROM `schools` WHERE (`schools`.`AdmFName1` = 'Mike' AND `schools`.`AdmLName1` = 'Larson') OR (`schools`.`AdmFName1` = 'Dante' AND `schools`.`AdmLName1` = 'Alvarez')
SELECT `schools`.`Website` FROM `schools` WHERE `schools`.`Virtual` = 'P' AND `schools`.`Charter` = 1 AND `schools`.`County` = 'San Joaquin';
SELECT COUNT(*) FROM `schools` WHERE `City` = 'Hickman' AND `Charter` = 1 AND `DOC` = 52
SELECT COUNT(*) FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`Charter` = 0 AND `frpm`.`Percent (%) Eligible Free (K-12)` < 0.18 AND `schools`.`County` = 'Los Angeles';
SELECT `schools`.`School`, `schools`.`City`, `schools`.`AdmFName1`, `schools`.`AdmLName1`, `schools`.`AdmFName2`, `schools`.`AdmLName2`, `schools`.`AdmFName3`, `schools`.`AdmLName3` FROM `schools` WHERE `schools`.`Charter` = 1 AND `schools`.`CharterNum` = '00D2'
SELECT COUNT(*) FROM `schools` WHERE `MailCity` = 'Hickman' AND `CharterNum` = '00D4';
SELECT (COUNT(CASE WHEN `schools`.`FundingType` = 'Local' THEN 1 END) * 100.0 / COUNT(*)) AS ratio_percentage FROM `schools` WHERE `County` = 'Santa Clara'
SELECT COUNT(*) FROM `schools` WHERE `FundingType` = 'Directly Funded' AND `County` = 'Stanislaus' AND `OpenDate` BETWEEN '2000-01-01' AND '2005-12-31';
SELECT COUNT(*) FROM `schools` WHERE `ClosedDate` = '1989' AND `City` = 'San Francisco' AND `SchoolType` = 'Community College District';
SELECT `County`, COUNT(*) AS `ClosureCount` FROM `schools` WHERE `ClosedDate` BETWEEN '1980-01-01' AND '1989-12-31' AND `SOC` = 11 GROUP BY `County` ORDER BY `ClosureCount` DESC LIMIT 1
SELECT `NCESDist` FROM `schools` WHERE `SOC` = 31
SELECT COUNT(*) FROM `schools` WHERE `County` = 'Alpine' AND `StatusType` IN ('Active', 'Closed') AND `SchoolType` = 'District Community Day School';
SELECT `schools`.`District` FROM `schools` WHERE `schools`.`City` = 'Fresno' AND `schools`.`Magnet` = 0 LIMIT 1
SELECT `frpm`.`Enrollment (Ages 5-17)` FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`EdOpsCode` = 'SSS' AND `frpm`.`Academic Year` = '2014-2015' AND `schools`.`City` = 'Fremont';
SELECT `Free Meal Count (Ages 5-17)` FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`MailStreet` = 'PO Box 1040' AND `schools`.`School` = 'Youth Authority School'
SELECT `Low Grade` FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`NCESDist` = '0613360' AND `schools`.`EdOpsCode` = 'SPECON' ORDER BY `Low Grade` LIMIT 1
SELECT `frpm`.`School Name` FROM `frpm` WHERE `frpm`.`County Code` = 37 AND `frpm`.`NSLP Provision Status` = 'Breakfast Provision 2'
SELECT `schools`.`City` FROM `schools` JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `frpm`.`NSLP Provision Status` = 2 AND `frpm`.`Low Grade` = 9 AND `frpm`.`High Grade` = 12 AND `frpm`.`County Name` = 'Merced' AND `schools`.`EILCode` = 'HS';
SELECT `frpm`.`School Name`, (`frpm`.`FRPM Count (Ages 5-17)` * 100.0 / `frpm`.`Enrollment (Ages 5-17)`) AS `Percent (%) Eligible FRPM (Ages 5-17)` FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`Low Grade` = 'K' AND `frpm`.`High Grade` = '9' AND `schools`.`County` = 'Los Angeles';
SELECT `Low Grade` || '-' || `High Grade` AS GradeSpan, COUNT(*) AS Frequency FROM `frpm` WHERE `City` = 'Adelanto' GROUP BY GradeSpan ORDER BY Frequency DESC LIMIT 1
SELECT COUNT(*) AS num_schools, cname FROM schools WHERE Virtual = 'F' AND cname IN ('San Diego', 'Santa Barbara') GROUP BY cname ORDER BY num_schools DESC LIMIT 1
SELECT `School Type`, `School Name`, `Latitude` FROM `schools` ORDER BY `Latitude` DESC LIMIT 1
SELECT `schools`.`School`, `frpm`.`Low Grade` FROM `schools` JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `schools`.`State` = 'CA' ORDER BY `schools`.`Latitude` ASC LIMIT 1
SELECT `Low Grade`, `High Grade` FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` ORDER BY ABS(`Longitude`) DESC LIMIT 1
SELECT COUNT(DISTINCT `schools`.`City`) AS `Number of Cities`, COUNT(`schools`.`CDSCode`) AS `Number of Schools` FROM `schools` JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `schools`.`Magnet` = 1 AND `schools`.`GSserved` LIKE '%K-8%' AND `frpm`.`NSLP Provision Status` = 'Multiple Provision Types' GROUP BY `schools`.`City`
SELECT AdmFName1, COUNT(*) AS count, District FROM schools GROUP BY AdmFName1 ORDER BY count DESC, District LIMIT 2
SELECT `frpm`.`District Code`, (`frpm`.`Free Meal Count (K-12)` * 100.0 / `frpm`.`Enrollment (K-12)`) AS `Percent (%) Eligible Free (K-12)` FROM `frpm` JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`AdmFName1` = 'Alusine' OR `schools`.`AdmFName2` = 'Alusine' OR `schools`.`AdmFName3` = 'Alusine'
SELECT `schools`.`AdmLName1`, `schools`.`District`, `schools`.`County`, `schools`.`School` FROM `schools` WHERE `schools`.`CharterNum` = 40
SELECT `AdmEmail1`, `AdmEmail2`, `AdmEmail3` FROM `schools` WHERE `County` = 'San Bernardino' AND `District` = 'San Bernardino City Unified' AND `OpenDate` BETWEEN '2009-01-01' AND '12-31-2010' AND (`SOC` = 62 OR `DOC` = 54) AND `StatusType` = 'Active'
SELECT `schools`.`AdmEmail1`, `schools`.`School` FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `satscores`.`NumGE1500` DESC LIMIT 1
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `card`.`type` = 'POPLATEK PO OBRATU' AND `district`.`A3` = 'East Bohemia';
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A3` = 'Prague' AND `account`.`account_id` IN (SELECT `account_id` FROM `loan`)
SELECT CASE WHEN AVG(`A12`) > AVG(`A13`) THEN '1995' ELSE '1996' END AS higher_percentage FROM `district`
SELECT COUNT(DISTINCT `district_id`) FROM `district` WHERE `A11` > 6000 AND `A11` < 10000 AND `district_id` IN (SELECT `district_id` FROM `client` WHERE `gender` = 'F')
SELECT COUNT(*) FROM client JOIN district ON client.district_id = district.district_id WHERE client.gender = 'M' AND district.A3 = 'North Bohemia' AND district.A11 > 8000
SELECT a.`account_id`, (SELECT MAX(`A11`) FROM `district`) - MIN(`A11`) AS `gap` FROM `account` a JOIN `disp` d ON a.`account_id` = d.`account_id` JOIN `client` c ON d.`client_id` = c.`client_id` JOIN `district` di ON c.`district_id` = di.`district_id` WHERE c.`gender` = 'F' ORDER BY c.`birth_date` ASC, di.`A11` ASC LIMIT 1
SELECT `account`.`account_id` FROM `account` JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` JOIN `client` ON `disp`.`client_id` = `client`.`client_id` JOIN `district` ON `client`.`district_id` = `district`.`district_id` ORDER BY `client`.`birth_date` DESC, `district`.`A11` DESC LIMIT 1
SELECT COUNT(*) FROM `disp` JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `disp`.`type` = 'OWNER' AND `card`.`type` = 'POPLATEK TYDNE'
SELECT `client_id` FROM `disp` WHERE `type` = 'Disponent' AND `disp_id` IN (SELECT `disp_id` FROM `card` WHERE `type` = 'POPLATEK PO OBRATU')
SELECT `account_id` FROM `loan` WHERE `date` BETWEEN '1997-01-01' AND '1997-12-31' AND `status` = 'A' ORDER BY `amount` ASC LIMIT 1
SELECT `account_id` FROM `loan` WHERE `duration` > 12 AND `status` = 'A' AND `account_id` IN (SELECT `account_id` FROM `account` WHERE strftime('%Y', `date`) = '1993') ORDER BY `amount` DESC LIMIT 1
SELECT COUNT(*) FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `account` ON `disp`.`account_id` = `account`.`account_id` JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' AND `client`.`birth_date` < '1950-01-01' AND `district`.`A2` = 'Sokolov';
SELECT `account_id` FROM `account` WHERE strftime('%Y', `date`) = '1995' ORDER BY `date` ASC LIMIT 1
SELECT DISTINCT `account_id` FROM `account` WHERE `date` < '1997-01-01' AND `account_id` IN (SELECT `account_id` FROM `trans` WHERE `amount` > 3000) AND `account_id` IN (SELECT `account_id` FROM `loan` WHERE `amount` > 3000) AND `account_id` IN (SELECT `account_id` FROM `order` WHERE `amount` > 3000);
SELECT `client`.`client_id` FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`issued` = '1994-03-03';
SELECT `account`.`date` FROM `account` JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `trans`.`amount` = 840 AND `trans`.`date` = '1998-10-14';
SELECT `district_id` FROM `account` WHERE `account_id` IN (SELECT `account_id` FROM `loan` WHERE `date` = '1994-08-25')
SELECT MAX(`trans`.`amount`) FROM `trans` JOIN `account` ON `trans`.`account_id` = `account`.`account_id` JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`issued` = '1996-10-21';
SELECT c.`gender` FROM `client` c JOIN `account` a ON c.`client_id` = a.`account_id` JOIN `district` d ON a.`district_id` = d.`district_id` ORDER BY c.`birth_date`, d.`A11` DESC LIMIT 1
SELECT MIN(`trans`.`amount`) FROM `trans` JOIN `account` ON `trans`.`account_id` = `account`.`account_id` JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `loan`.`amount` = (SELECT MAX(`amount`) FROM `loan`) AND `trans`.`date` > `account`.`date`
SELECT COUNT(*) FROM `client` JOIN `account` ON `client`.`district_id` = `account`.`district_id` WHERE `client`.`gender` = 'F' AND `account`.`district_id` = (SELECT `district_id` FROM `district` WHERE `A2` = 'Jesenik');
SELECT `disp_id` FROM `trans` JOIN `disp` ON `trans`.`account_id` = `disp`.`account_id` WHERE `trans`.`amount` = 5100 AND `trans`.`date` = '1998-09-02'
SELECT COUNT(*) FROM `account` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Litomerice' AND strftime('%Y', `account`.`date`) = '1996';
SELECT `district`.`A2` FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `account` ON `disp`.`account_id` = `account`.`account_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' AND `client`.`birth_date` = '1976-01-29' AND `disp`.`type` = 'OWNER'
SELECT `client`.`birth_date` FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `account` ON `disp`.`account_id` = `account`.`account_id` JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `loan`.`amount` = 98832 AND `loan`.`date` = '1996-01-03';
SELECT `account_id` FROM `account` WHERE `district_id` = (SELECT `district_id` FROM `district` WHERE `A3` = 'Prague' LIMIT 1) LIMIT 1
SELECT (COUNT(DISTINCT c.`client_id`) * 100.0 / (SELECT COUNT(*) FROM `client`)) AS percentage_male_clients FROM `client` c JOIN `district` d ON c.`district_id` = d.`district_id` WHERE c.`gender` = 'M' AND d.`A3` = 'south Bohemia' AND d.`district_id` = (SELECT `district_id` FROM `district` WHERE `A3` = 'south Bohemia' ORDER BY `A4` DESC LIMIT 1);
SELECT ((t2.balance - t1.balance) / t1.balance) * 100 AS increase_rate FROM (SELECT l.account_id, t.balance FROM loan l JOIN trans t ON l.account_id = t.account_id WHERE l.date = '1993-07-05' AND t.date = '1993-03-22' ORDER BY l.loan_id LIMIT 1) t1 JOIN (SELECT l.account_id, t.balance FROM loan l JOIN trans t ON l.account_id = t.account_id WHERE l.date = '1993-07-05' AND t.date = '1998-12-27' ORDER BY l.loan_id LIMIT 1) t2 ON t1.account_id = t2.account_id
SELECT (SUM(CASE WHEN `status` = 'A' THEN `amount` ELSE 0 END) * 100.0 / SUM(`amount`)) AS percentage FROM `loan`
SELECT (COUNT(DISTINCT CASE WHEN `loan`.`amount` < 100000 AND `loan`.`status` = 'C' THEN `loan`.`account_id` END) * 100.0 / COUNT(DISTINCT `loan`.`account_id`)) AS percentage FROM `loan` WHERE `loan`.`amount` < 100000;
SELECT `account`.`account_id`, `district`.`A2` AS district_name, `district`.`A3` AS district_region FROM `account` JOIN `district` ON `account`.`district_id` = `district`.`district_id` JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `account`.`date` BETWEEN '1993-01-01' AND '1993-12-31' AND `trans`.`k_symbol` = 'POPLATEK PO OBRATU' GROUP BY `account`.`account_id`, `district`.`A2`, `district`.`A3`
SELECT `account`.`account_id`, `account`.`frequency` FROM `account` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A3` = 'east Bohemia' AND `account`.`date` BETWEEN '1995-01-01' AND '2000-12-31';
SELECT `account_id`, `date` FROM `account` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Prachatice'
SELECT d.`A2` AS district, d.`A3` AS region FROM `loan` l JOIN `account` a ON l.`account_id` = a.`account_id` JOIN `district` d ON a.`district_id` = d.`district_id` WHERE l.`loan_id` = '4990'
SELECT `account`.`account_id`, `district`.`A2` AS district, `district`.`A3` AS region FROM `loan` JOIN `account` ON `loan`.`account_id` = `account`.`account_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`amount` > 300000
SELECT `loan`.`loan_id`, `district`.`A3`, `district`.`A11` FROM `loan` JOIN `account` ON `loan`.`account_id` = `account`.`account_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`duration` = 60
SELECT `district`.`A2`, ((`district`.`A13` - `district`.`A12`) / `district`.`A12`) * 100 AS unemployment_increment_rate FROM `loan` JOIN `account` ON `loan`.`account_id` = `account`.`account_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`status` = 'D';
SELECT (COUNT(CASE WHEN d.`A2` = 'Decin' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM `account` a JOIN `district` d ON a.`district_id` = d.`district_id` WHERE strftime('%Y', a.`date`) = '1993';
SELECT DISTINCT `account_id` FROM `account` WHERE `frequency` = 'POPLATEK MESICNE'
SELECT `district`.`A2`, COUNT(`client`.`client_id`) AS `female_account_holders` FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' GROUP BY `district`.`A2` ORDER BY `female_account_holders` DESC LIMIT 9
SELECT d.`A2` AS district_name, SUM(t.`amount`) AS total_withdrawal FROM `trans` t JOIN `account` a ON t.`account_id` = a.`account_id` JOIN `district` d ON a.`district_id` = d.`district_id` WHERE t.`type` = 'VYDAJ' AND t.`date` LIKE '1996-01%' GROUP BY d.`A2` ORDER BY total_withdrawal DESC LIMIT 10
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` LEFT JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` LEFT JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A3` = 'South Bohemia' AND `card`.`card_id` IS NULL
SELECT `district`.`A3` FROM `loan` JOIN `account` ON `loan`.`account_id` = `account`.`account_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`status` = 'C' GROUP BY `district`.`A3` ORDER BY COUNT(*) DESC LIMIT 1
SELECT AVG(`loan`.`amount`) AS `average_loan_amount` FROM `loan` JOIN `account` ON `loan`.`account_id` = `account`.`account_id` JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `client`.`gender` = 'M'
SELECT `A2` AS district_name, `A3` AS branch_location FROM `district` ORDER BY `A13` DESC LIMIT 1
SELECT COUNT(`account_id`) FROM `account` WHERE `district_id` = (SELECT `district_id` FROM `district` ORDER BY `A16` DESC LIMIT 1)
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `account`.`frequency` = 'POPLATEK MESICNE' AND `trans`.`operation` = 'VYBER KARTOU' AND `trans`.`balance` < 0
SELECT COUNT(*) FROM loan l JOIN account a ON l.account_id = a.account_id WHERE l.amount >= 250000 AND l.status = 'A' AND a.frequency = 'POPLATEK MESICNE' AND l.date BETWEEN '1995-01-01' AND '1997-12-31';
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `loan`.`status` = 'C' AND `account`.`district_id` = 1
SELECT COUNT(*) FROM `client` WHERE `gender` = 'M' AND `district_id` = (SELECT `district_id` FROM `district` ORDER BY `A15` DESC LIMIT 1 OFFSET 1)
SELECT COUNT(*) FROM `card` JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` WHERE `card`.`type` = 'gold' AND `disp`.`type` = 'OWNER';
SELECT COUNT(*) FROM `account` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Pisek';
SELECT DISTINCT `district`.`district_id`, `district`.`A2` FROM `district` JOIN `account` ON `district`.`district_id` = `account`.`district_id` JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `trans`.`date` BETWEEN '1997-01-01' AND '1997-12-31' AND `trans`.`amount` > 10000
SELECT DISTINCT `account`.`account_id` FROM `account` JOIN `order` ON `account`.`account_id` = `order`.`account_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `order`.`k_symbol` = 'SIPO' AND `district`.`A3` = 'Pisek';
SELECT DISTINCT `account`.`account_id` FROM `account` JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`type` = 'gold'
SELECT AVG(`amount`) FROM `trans` WHERE `operation` = 'VYBER KARTOU' AND strftime('%Y', `date`) = '2021'
SELECT DISTINCT `disp`.`client_id` FROM `trans` JOIN `account` ON `trans`.`account_id` = `account`.`account_id` JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` WHERE `trans`.`operation` = 'VYBER KARTOU' AND `trans`.`date` BETWEEN '1998-01-01' AND '1998-12-31' AND `trans`.`amount` < (SELECT AVG(`amount`) FROM `trans` WHERE `operation` = 'VYBER KARTOU' AND `date` BETWEEN '1998-01-01' AND '1998-12-31')
SELECT DISTINCT c.`client_id` FROM `client` c JOIN `disp` d ON c.`client_id` = d.`client_id` JOIN `card` ca ON d.`disp_id` = ca.`disp_id` JOIN `loan` l ON d.`account_id` = l.`account_id` WHERE c.`gender` = 'F' AND d.`type` = 'OWNER' AND ca.`type` = 'credit' AND l.`status` IN ('A', 'C');
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' AND `district`.`A3` = 'south Bohemia'
SELECT `account_id` FROM `account` WHERE `district_id` = (SELECT `district_id` FROM `district` WHERE `A2` = 'Tabor') AND `account_id` IN (SELECT `account_id` FROM `disp` WHERE `type` = 'OWNER')
SELECT DISTINCT `disp`.`type` FROM `disp` JOIN `account` ON `disp`.`account_id` = `account`.`account_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `disp`.`type` != 'OWNER' AND `district`.`A11` > 8000 AND `district`.`A11` <= 9000
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` JOIN `district` ON `account`.`district_id` = `district`.`district_id` JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `district`.`A3` = 'North Bohemia' AND `trans`.`bank` = 'AB';
SELECT DISTINCT `district`.`A2` FROM `district` JOIN `account` ON `district`.`district_id` = `account`.`district_id` JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `trans`.`type` = 'VYDAJ';
SELECT AVG(`district`.`A15`) AS avg_crimes FROM `district` JOIN `account` ON `district`.`district_id` = `account`.`district_id` WHERE `district`.`A15` > 4000 AND strftime('%Y', `account`.`date`) >= '1997'
SELECT COUNT(*) FROM card c JOIN disp d ON c.disp_id = d.disp_id WHERE c.type = 'classic' AND d.type = 'OWNER'
SELECT COUNT(*) FROM `client` JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'M' AND `district`.`A2` = 'Hl.m. Praha'
SELECT (COUNT(*) FILTER (WHERE `type` = 'gold' AND `issued` < '1998-01-01') * 100.0 / COUNT(*)) AS percent_gold FROM `card`
SELECT c.`client_id`, c.`gender`, c.`birth_date`, c.`district_id` FROM `client` c JOIN `disp` d ON c.`client_id` = d.`client_id` JOIN `account` a ON d.`account_id` = a.`account_id` JOIN `loan` l ON a.`account_id` = l.`account_id` ORDER BY l.`amount` DESC LIMIT 1
SELECT `A15` FROM `district` WHERE `district_id` = (SELECT `district_id` FROM `account` WHERE `account_id` = 532)
SELECT `district_id` FROM `account` WHERE `account_id` = (SELECT `account_id` FROM `order` WHERE `order_id` = 33333)
SELECT * FROM `trans` WHERE `account_id` = (SELECT `account_id` FROM `disp` WHERE `client_id` = 3356) AND `operation` = 'VYBER'
SELECT COUNT(*) FROM `account` a JOIN `loan` l ON a.`account_id` = l.`account_id` WHERE a.`frequency` = 'POPLATEK TYDNE' AND l.`amount` < 200000
SELECT `type` FROM `card` JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` WHERE `disp`.`client_id` = 13539
SELECT `A3` FROM `district` WHERE `district_id` = (SELECT `district_id` FROM `client` WHERE `client_id` = 3541)
SELECT `district`.`A2` FROM `district` JOIN `account` ON `district`.`district_id` = `account`.`district_id` JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `loan`.`status` = 'A' GROUP BY `district`.`A2` ORDER BY COUNT(`account`.`account_id`) DESC LIMIT 1
SELECT `client`.`client_id`, `client`.`gender`, `client`.`birth_date`, `client`.`district_id` FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `account` ON `disp`.`account_id` = `account`.`account_id` JOIN `order` ON `account`.`account_id` = `order`.`account_id` WHERE `order`.`order_id` = 32423
SELECT * FROM `trans` WHERE `account_id` IN (SELECT `account_id` FROM `account` WHERE `district_id` = 5)
SELECT COUNT(*) FROM `account` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A3` = 'Jesenik';
SELECT `client`.`client_id` FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`type` = 'junior' AND `card`.`issued` >= '1997-01-01'
SELECT (COUNT(DISTINCT c.`client_id`) * 100.0 / (SELECT COUNT(DISTINCT c2.`client_id`) FROM `client` c2 JOIN `account` a2 ON c2.`district_id` = a2.`district_id` JOIN `district` d2 ON c2.`district_id` = d2.`district_id` WHERE d2.`A11` > 10000)) AS percentage FROM `client` c JOIN `account` a ON c.`district_id` = a.`district_id` JOIN `district` d ON c.`district_id` = d.`district_id` WHERE d.`A11` > 10000 AND c.`gender` = 'F';
WITH loans_1996 AS (SELECT SUM(l.`amount`) AS total_amount_1996 FROM `loan` l JOIN `account` a ON l.`account_id` = a.`account_id` JOIN `disp` d ON a.`account_id` = d.`account_id` JOIN `client` c ON d.`client_id` = c.`client_id` WHERE c.`gender` = 'M' AND strftime('%Y', l.`date`) = '1996'), loans_1997 AS (SELECT SUM(l.`amount`) AS total_amount_1997 FROM `loan` l JOIN `account` a ON l.`account_id` = a.`account_id` JOIN `disp` d ON a.`account_id` = d.`account_id` JOIN `client` c ON d.`client_id` = c.`client_id` WHERE c.`gender` = 'M' AND strftime('%Y', l.`date`) = '1997') SELECT (loans_1997.total_amount_1997 - loans_1996.total_amount_1996) * 100.0 / loans_1996.total_amount_1996 AS growth_rate FROM loans_1996, loans_1997
SELECT COUNT(*) FROM `trans` WHERE `operation` = 'VYBER KARTOU' AND `date` > '1995-12-31';
SELECT (SELECT A16 FROM district WHERE A3 = 'north Bohemia') - (SELECT A16 FROM district WHERE A3 = 'east Bohemia') AS crime_difference;
SELECT COUNT(*) FROM `disp` WHERE `account_id` BETWEEN 1 AND 10 AND `type` IN ('OWNER', 'DISPONENT')
SELECT `frequency`, `k_symbol` FROM `account` JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `account`.`account_id` = 3 AND `trans`.`amount` = 3539
SELECT `birth_date` FROM `client` WHERE `client_id` = (SELECT `client_id` FROM `disp` WHERE `disp_id` = (SELECT `disp_id` FROM `card` WHERE `card_id` = 130))
SELECT COUNT(*) FROM `disp` JOIN `account` ON `disp`.`account_id` = `account`.`account_id` WHERE `disp`.`type` = 'OWNER' AND `account`.`frequency` = 'POPLATEK PO OBRATU';
SELECT SUM(amount) AS total_debt, status FROM loan JOIN account ON loan.account_id = account.account_id JOIN disp ON account.account_id = disp.account_id WHERE disp.client_id = 992 GROUP BY status
SELECT SUM(`trans`.`amount`) AS `sum_amount`, `client`.`gender` FROM `trans` JOIN `account` ON `trans`.`account_id` = `account`.`account_id` JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `trans`.`trans_id` > 851 AND `client`.`client_id` = 4 GROUP BY `client`.`gender`
SELECT c.`type` FROM `card` c JOIN `disp` d ON c.`disp_id` = d.`disp_id` WHERE d.`client_id` = 9
SELECT SUM(`amount`) FROM `trans` WHERE `account_id` IN (SELECT `account_id` FROM `disp` WHERE `client_id` = 617) AND `date` BETWEEN '1998-01-01' AND '1998-12-31' AND `type` = 'PRIJEM'
SELECT `client_id` FROM `client` WHERE `birth_date` BETWEEN '1983-01-01' AND '1987-12-31' AND `district_id` IN (SELECT `district_id` FROM `district` WHERE `A3` = 'East Bohemia')
SELECT `client`.`client_id` FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `account` ON `disp`.`account_id` = `account`.`account_id` JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `client`.`gender` = 'F' ORDER BY `loan`.`amount` DESC LIMIT 3
SELECT COUNT(*) FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN trans ON account.account_id = trans.account_id WHERE client.gender = 'M' AND client.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND trans.k_symbol = 'SIPO' AND trans.amount > 4000;
SELECT COUNT(*) FROM `account` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A3` = 'Beroun' AND `account`.`date` > '1996-12-31';
SELECT COUNT(*) FROM `client` JOIN `disp` USING (`client_id`) JOIN `card` USING (`disp_id`) WHERE `gender` = 'F' AND `type` = 'junior';
SELECT (COUNT(DISTINCT c.`client_id`) * 100.0 / (SELECT COUNT(DISTINCT c2.`client_id`) FROM `client` c2 JOIN `disp` d2 ON c2.`client_id` = d2.`client_id` JOIN `account` a2 ON d2.`account_id` = a2.`account_id` JOIN `district` d ON a2.`district_id` = d.`district_id` WHERE d.`A3` = 'Prague')) AS female_percentage FROM `client` c JOIN `disp` d ON c.`client_id` = d.`client_id` JOIN `account` a ON d.`account_id` = a.`account_id` JOIN `district` d ON a.`district_id` = d.`district_id` WHERE c.`gender` = 'F' AND d.`A3` = 'Prague'
SELECT (COUNT(DISTINCT c.`client_id`) * 100.0 / (SELECT COUNT(DISTINCT c2.`client_id`) FROM `client` c2 JOIN `disp` d2 ON c2.`client_id` = d2.`client_id` JOIN `account` a2 ON d2.`account_id` = a2.`account_id` WHERE a2.`frequency` = 'POPLATEK TYDNE')) AS percentage FROM `client` c JOIN `disp` d ON c.`client_id` = d.`client_id` JOIN `account` a ON d.`account_id` = a.`account_id` WHERE c.`gender` = 'M' AND a.`frequency` = 'POPLATEK TYDNE';
SELECT COUNT(*) FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `account` ON `disp`.`account_id` = `account`.`account_id` WHERE `account`.`frequency` = 'POPLATEK TYDNE' AND `disp`.`type` = 'OWNER';
SELECT `account_id` FROM `loan` WHERE `duration` > 24 AND `date` < '1997-01-01' ORDER BY `amount` ASC LIMIT 1
SELECT `account`.`account_id` FROM `account` JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` JOIN `client` ON `disp`.`client_id` = `client`.`client_id` JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' ORDER BY `client`.`birth_date`, `district`.`A11` LIMIT 1
SELECT COUNT(*) FROM `client` JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`birth_date` LIKE '1920-%' AND `district`.`A3` = 'east Bohemia';
SELECT COUNT(*) FROM `loan` l JOIN `account` a ON l.`account_id` = a.`account_id` WHERE l.`duration` = 24 AND a.`frequency` = 'POPLATEK TYDNE';
SELECT AVG(`amount`) FROM `loan` WHERE `status` = 'C' AND `loan_id` IN (SELECT `loan_id` FROM `trans` WHERE `k_symbol` = 'POPLATEK PO OBRATU')
SELECT `client`.`client_id`, `client`.`district_id` FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` WHERE `disp`.`type` = 'OWNER'
SELECT `client`.`client_id`, strftime('%Y', 'now') - strftime('%Y', `client`.`birth_date`) - (strftime('%m-%d', 'now') < strftime('%m-%d', `client`.`birth_date`)) AS age FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`type` = 'gold' AND `disp`.`type` = 'OWNER';
SELECT `bond_type` FROM `bond` GROUP BY `bond_type` ORDER BY COUNT(`bond_type`) DESC LIMIT 1
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '-' AND `atom`.`element` = 'cl';
SELECT AVG(o_count) FROM (SELECT COUNT(`atom`.`element`) AS o_count FROM `atom` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '-' AND `atom`.`element` = 'o' GROUP BY `atom`.`molecule_id`)
SELECT AVG(single_bond_count) AS average_single_bonds FROM (SELECT COUNT(b.`bond_id`) AS single_bond_count FROM `molecule` m JOIN `bond` b ON m.`molecule_id` = b.`molecule_id` WHERE m.`label` = '+' AND b.`bond_type` = '-' GROUP BY m.`molecule_id`) AS single_bonds;
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '-' AND `atom`.`element` = 'na';
SELECT DISTINCT `molecule`.`molecule_id` FROM `molecule` JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '#' AND `molecule`.`label` = '+';
SELECT SUM(CASE WHEN `element` = 'c' THEN 1 ELSE 0 END) * 1.0 / COUNT(`atom_id`) AS percentage FROM `atom` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '='
SELECT COUNT(*) FROM `bond` WHERE `bond_type` = '#'
SELECT COUNT(*) FROM `atom` WHERE `element` != 'br';
SELECT COUNT(*) FROM `molecule` WHERE `molecule_id` BETWEEN 'TR000' AND 'TR099' AND `label` = '+';
SELECT DISTINCT `molecule_id` FROM `atom` WHERE `element` = 'c'
SELECT `element` FROM `atom` WHERE `atom_id` IN (SELECT `atom_id` FROM `connected` WHERE `bond_id` = 'TR004_8_9')
SELECT DISTINCT `atom`.`element` FROM `atom` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '='
SELECT `molecule`.`label` FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'h' GROUP BY `molecule`.`label` ORDER BY COUNT(`molecule`.`label`) DESC LIMIT 1
SELECT DISTINCT `bond`.`bond_type` FROM `bond` JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `atom`.`element` = 'cl';
SELECT `atom`.`atom_id`, `atom`.`element`, `atom2`.`atom_id` AS `connected_atom_id`, `atom2`.`element` AS `connected_element` FROM `connected` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` JOIN `atom` AS `atom2` ON `connected`.`atom_id2` = `atom2`.`atom_id` WHERE `bond`.`bond_type` = '-';
SELECT `atom`.`atom_id`, `connected`.`atom_id2` FROM `atom` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '-'
SELECT `element` FROM `atom` WHERE `molecule_id` IN (SELECT `molecule_id` FROM `molecule` WHERE `label` = '-') GROUP BY `element` ORDER BY COUNT(*) ASC LIMIT 1
SELECT `bond_type` FROM `bond` WHERE `bond_id` IN (SELECT `bond_id` FROM `connected` WHERE (`atom_id` = 'TR004_8' AND `atom_id2` = 'TR004_20') OR (`atom_id` = 'TR004_20' AND `atom_id2` = 'TR004_8'))
SELECT DISTINCT `molecule`.`label` FROM `molecule` WHERE `molecule`.`label` NOT IN (SELECT `molecule`.`label` FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'sn')
SELECT COUNT(DISTINCT `atom`.`atom_id`) FROM `atom` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE (`atom`.`element` = 'i' OR `atom`.`element` = 's') AND `bond`.`bond_type` = '-'
SELECT `connected`.`atom_id`, `connected`.`atom_id2` FROM `connected` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '#';
SELECT DISTINCT `connected`.`atom_id2` FROM `connected` JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `atom`.`molecule_id` = 'TR181'
SELECT (100 - (SELECT COUNT(DISTINCT `atom`.`molecule_id`) * 100.0 / (SELECT COUNT(DISTINCT `atom`.`molecule_id`) FROM `atom` JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+') FROM `atom` JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+' AND `atom`.`element` = 'f')) AS percentage;
SELECT (COUNT(DISTINCT b.`bond_id`) * 100.0 / (SELECT COUNT(*) FROM `bond` WHERE `bond_type` = '#')) AS `percent` FROM `bond` b JOIN `molecule` m ON b.`molecule_id` = m.`molecule_id` WHERE b.`bond_type` = '#' AND m.`label` = '+';
SELECT `element` FROM `atom` WHERE `molecule_id` = 'TR000' ORDER BY `element` ASC LIMIT 3
SELECT `atom`.`element` FROM `atom` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` WHERE `connected`.`bond_id` = 'TR001_2_6';
SELECT SUM(CASE WHEN `label` = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN `label` = '-' THEN 1 ELSE 0 END) AS difference FROM `molecule`
SELECT `atom_id`, `atom_id2` FROM `connected` WHERE `bond_id` = 'TR000_2_5'
SELECT `bond_id` FROM `connected` WHERE `atom_id2` = 'TR000_2'
SELECT `molecule`.`label` FROM `molecule` JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = ' = ' ORDER BY `molecule`.`label` ASC LIMIT 5;
SELECT ROUND(CAST(SUM(CASE WHEN `bond_type` = '=' THEN 1 ELSE 0 END) AS REAL) / COUNT(`bond_id`), 5) * 100 AS percent FROM `bond` WHERE `molecule_id` = 'TR008'
SELECT ROUND(100.0 * COUNT(CASE WHEN `label` = '+' THEN 1 END) / COUNT(*), 3) AS percent FROM `molecule`;
SELECT ROUND(CAST(SUM(CASE WHEN `element` = 'h' THEN 1 ELSE 0 END) AS REAL) / COUNT(`atom_id`), 4) AS percent FROM `atom` WHERE `molecule_id` = 'TR206';
SELECT DISTINCT `bond_type` FROM `bond` WHERE `molecule_id` = 'TR000'
SELECT `atom`.`element`, `molecule`.`label` FROM `atom` JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`molecule_id` = 'TR060'
SELECT `bond_type`, (SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR010') AS `carcinogenic` FROM `bond` WHERE `molecule_id` = 'TR010' GROUP BY `bond_type` ORDER BY COUNT(`bond_type`) DESC LIMIT 1
SELECT `molecule`.`molecule_id` FROM `molecule` JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `molecule`.`label` = '-' AND `bond`.`bond_type` = '-' GROUP BY `molecule`.`molecule_id` ORDER BY `molecule`.`molecule_id` ASC LIMIT 3
SELECT `bond_id` FROM `bond` WHERE `molecule_id` = 'TR006' ORDER BY `bond_id` ASC LIMIT 2
SELECT COUNT(*) FROM connected WHERE (atom_id = 'TR009_12' OR atom_id2 = 'TR009_12') AND bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = 'TR009')
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+' AND `atom`.`element` = 'br';
SELECT `bond`.`bond_type`, `atom1`.`element` AS `atom1_element`, `atom2`.`element` AS `atom2_element` FROM `bond` JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` JOIN `atom` AS `atom1` ON `connected`.`atom_id` = `atom1`.`atom_id` JOIN `atom` AS `atom2` ON `connected`.`atom_id2` = `atom2`.`atom_id` WHERE `bond`.`bond_id` = 'TR001_6_9';
SELECT `molecule`.`label`, CASE WHEN `molecule`.`label` = '+' THEN 'carcinogenic' ELSE 'non-carcinogenic' END AS `carcinogenic_status` FROM `atom` JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`atom_id` = 'TR001_10'
SELECT COUNT(DISTINCT `molecule_id`) FROM `bond` WHERE `bond_type` = '#';
SELECT COUNT(`bond_id`) AS connection_count FROM `connected` WHERE `atom_id` LIKE 'TR%_19'
SELECT `element` FROM `atom` WHERE `molecule_id` = 'TR004'
SELECT COUNT(*) FROM `molecule` WHERE `label` = '-'
SELECT DISTINCT `molecule`.`molecule_id`, `molecule`.`label` FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+' AND SUBSTR(`atom`.`atom_id`, 7, 2) BETWEEN '21' AND '25';
SELECT DISTINCT `connected`.`bond_id` FROM `connected` JOIN `atom` AS `atom1` ON `connected`.`atom_id` = `atom1`.`atom_id` JOIN `atom` AS `atom2` ON `connected`.`atom_id2` = `atom2`.`atom_id` WHERE (`atom1`.`element` = 'p' AND `atom2`.`element` = 'n') OR (`atom1`.`element` = 'n' AND `atom2`.`element` = 'p')
SELECT m.`label` FROM `molecule` m JOIN `bond` b ON m.`molecule_id` = b.`molecule_id` WHERE b.`bond_type` = ' = ' GROUP BY m.`molecule_id` ORDER BY COUNT(b.`bond_id`) DESC LIMIT 1
SELECT AVG(bond_count) AS average_bonds FROM (SELECT COUNT(`connected`.`bond_id`) AS bond_count FROM `atom` LEFT JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` WHERE `atom`.`element` = 'i' GROUP BY `atom`.`atom_id`)
SELECT `bond`.`bond_type`, `bond`.`bond_id` FROM `bond` JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` WHERE `connected`.`atom_id` = 45 OR `connected`.`atom_id2` = 45
SELECT `element` FROM `atom` WHERE `atom_id` NOT IN (SELECT `atom_id` FROM `connected` UNION SELECT `atom_id2` FROM `connected`)
SELECT `atom`.`atom_id`, `atom`.`element` FROM `atom` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '#' AND `bond`.`molecule_id` = 'TR041';
SELECT `atom`.`element` FROM `atom` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` WHERE `connected`.`bond_id` = 'TR144_8_19'
SELECT `molecule`.`label`, COUNT(`bond`.`bond_id`) AS `double_bond_count` FROM `molecule` JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `molecule`.`label` = '+' AND `bond`.`bond_type` = ' = ' GROUP BY `molecule`.`molecule_id` ORDER BY `double_bond_count` DESC LIMIT 1;
SELECT `element` FROM `atom` WHERE `molecule_id` IN (SELECT `molecule_id` FROM `molecule` WHERE `label` = '+') GROUP BY `element` ORDER BY COUNT(*) ASC LIMIT 1
SELECT DISTINCT `connected`.`atom_id2` FROM `connected` JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `atom`.`element` = 'pb'
SELECT DISTINCT `atom`.`element` FROM `atom` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '#';
SELECT ROUND(100.0 * COUNT(DISTINCT c.bond_id) / (SELECT COUNT(*) FROM bond), 2) AS percentage FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE (a1.element, a2.element) = (SELECT a1.element, a2.element FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id GROUP BY a1.element, a2.element ORDER BY COUNT(*) DESC LIMIT 1)
SELECT ROUND(SUM(CASE WHEN `molecule`.`label` = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(`bond`.`bond_id`), 5) AS proportion FROM `bond` JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '-';
SELECT COUNT(*) FROM `atom` WHERE `element` IN ('c', 'h')
SELECT `connected`.`atom_id2` FROM `connected` JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `atom`.`element` = 's'
SELECT `bond`.`bond_type` FROM `bond` JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `atom`.`element` = 'sn';
SELECT COUNT(DISTINCT `atom`.`element`) FROM `atom` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '-'
SELECT COUNT(DISTINCT `atom`.`atom_id`) FROM `atom` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '#' AND (`atom`.`element` = 'p' OR `atom`.`element` = 'br');
SELECT `bond`.`bond_id` FROM `bond` JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT DISTINCT `molecule`.`molecule_id` FROM `molecule` JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '-' AND `molecule`.`label` = '-'
SELECT (COUNT(DISTINCT `atom`.`atom_id`) * 1.0 / COUNT(DISTINCT `connected`.`atom_id`)) * 100 AS percent FROM `atom` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `atom`.`element` = 'cl' AND `bond`.`bond_type` = '-';
SELECT `label` FROM `molecule` WHERE `molecule_id` IN ('TR000', 'TR001', 'TR002')
SELECT `molecule_id` FROM `molecule` WHERE `label` = '-'
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) AS total_carcinogenic_molecules FROM `molecule` WHERE `molecule`.`label` = '+' AND `molecule`.`molecule_id` BETWEEN 'TR000' AND 'TR030';
SELECT `molecule`.`molecule_id`, `bond`.`bond_type` FROM `molecule` JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `molecule`.`molecule_id` BETWEEN 'TR000' AND 'TR050'
SELECT `atom`.`element` FROM `atom` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` WHERE `connected`.`bond_id` = 'TR001_10_11'
SELECT COUNT(DISTINCT `connected`.`bond_id`) FROM `connected` JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `atom`.`element` = 'i'
SELECT CASE WHEN COUNT(*) > 0 THEN 'carcinogenic' ELSE 'non-carcinogenic' END AS result FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'ca' AND m.label = '+'
SELECT CASE WHEN EXISTS (SELECT 1 FROM `connected` c JOIN `atom` a1 ON c.`atom_id` = a1.`atom_id` JOIN `atom` a2 ON c.`atom_id2` = a2.`atom_id` WHERE c.`bond_id` = 'TR001_1_8' AND (a1.`element` = 'cl' OR a2.`element` = 'cl') AND (a1.`element` = 'c' OR a2.`element` = 'c')) THEN 'Yes' ELSE 'No' END AS `has_both_elements`;
SELECT DISTINCT `molecule`.`molecule_id` FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`element` = 'c' AND `bond`.`bond_type` = '#' AND `molecule`.`label` = '-' LIMIT 2
SELECT (COUNT(DISTINCT `atom`.`atom_id`) * 1.0 / COUNT(DISTINCT `molecule`.`molecule_id`)) * 100 AS percentage FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+' AND `atom`.`element` = 'cl'
SELECT `element` FROM `atom` WHERE `molecule_id` = 'TR001'
SELECT DISTINCT `bond`.`molecule_id` FROM `bond` WHERE `bond_type` = ' = ';
SELECT `connected`.`atom_id`, `connected`.`atom_id2` FROM `connected` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '#';
SELECT `atom`.`element` FROM `atom` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` WHERE `connected`.`bond_id` = 'TR000_1_2'
SELECT COUNT(DISTINCT `bond`.`molecule_id`) FROM `bond` JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '-' AND `molecule`.`label` = '-'
SELECT `molecule`.`label` FROM `bond` JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_id` = 'TR001_10_11';
SELECT `bond`.`bond_id`, `molecule`.`label` FROM `bond` JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '#'
SELECT `element`, COUNT(*) AS tally FROM `atom` JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `label` = '+' AND substr(`atom_id`, 7, 1) = '4' GROUP BY `element`
SELECT (CAST(SUM(CASE WHEN `element` = 'h' THEN 1 ELSE 0 END) AS REAL) / COUNT(`element`)) AS ratio, `label` FROM `atom` JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`molecule_id` = 'TR006' GROUP BY `label`
SELECT CASE WHEN COUNT(*) > 0 THEN 'carcinogenic' ELSE 'non-carcinogenic' END AS carcinogenicity FROM `molecule` m JOIN `atom` a ON m.`molecule_id` = a.`molecule_id` WHERE a.`element` = 'ca' AND m.`label` = '+';
SELECT `bond`.`bond_type` FROM `bond` JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `atom`.`element` = 'c'
SELECT `element` FROM `atom` WHERE `atom_id` IN (SELECT `atom_id` FROM `connected` WHERE `bond_id` = 'TR001_10_11')
SELECT (COUNT(DISTINCT b.`molecule_id`) * 100.0 / COUNT(DISTINCT m.`molecule_id`)) AS percentage FROM `molecule` m LEFT JOIN `bond` b ON m.`molecule_id` = b.`molecule_id` AND b.`bond_type` = '#'
SELECT (CAST(SUM(CASE WHEN `bond_type` = ' = ' THEN 1 ELSE 0 END) AS REAL) / COUNT(`bond_id`)) * 100 AS percent FROM `bond` WHERE `molecule_id` = 'TR047'
SELECT CASE WHEN EXISTS (SELECT 1 FROM `molecule` m JOIN `atom` a ON m.`molecule_id` = a.`molecule_id` WHERE a.`atom_id` = 'TR001_1' AND m.`label` = '+') THEN 'Yes' ELSE 'No' END AS `is_carcinogenic`
SELECT CASE WHEN EXISTS (SELECT 1 FROM `molecule` WHERE `label` = '+' AND `molecule_id` = 'TR151') THEN 'Yes' ELSE 'No' END AS `is_carcinogenic`
SELECT `element` FROM `atom` WHERE `molecule_id` = (SELECT `molecule_id` FROM `molecule` WHERE `label` = 'TR151') AND `element` IN ('pb', 'te', 'ca') LIMIT 1
SELECT COUNT(DISTINCT `molecule_id`) FROM `molecule` WHERE `label` = '+';
SELECT `atom_id` FROM `atom` WHERE `element` = 'c' AND substr(`molecule_id`, 3, 3) >= 10 AND substr(`molecule_id`, 3, 3) <= 50
SELECT COUNT(`atom`.`atom_id`) FROM `atom` JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+';
SELECT `connected`.`bond_id` FROM `connected` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = ' = ' AND `molecule`.`label` = '+'
SELECT COUNT(*) FROM `atom` JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'h' AND `molecule`.`label` = '+';
SELECT `molecule`.`molecule_id` FROM `molecule` JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `bond`.`bond_type` = 'TR000_1_2' AND `atom`.`element` = 'TR000_1' LIMIT 1;
SELECT `atom_id` FROM `atom` WHERE `element` = 'c' AND `molecule_id` IN (SELECT `molecule_id` FROM `molecule` WHERE `label` = '-')
SELECT (COUNT(DISTINCT CASE WHEN `atom`.`element` = 'h' THEN `molecule`.`molecule_id` END) * 100.0) / COUNT(DISTINCT `molecule`.`molecule_id`) AS percentage FROM `molecule` LEFT JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+';
SELECT CASE WHEN EXISTS (SELECT 1 FROM `molecule` WHERE `label` = '+' AND `molecule_id` = 'TR124') THEN 'Yes' ELSE 'No' END AS `is_carcinogenic`
SELECT `atom_id`, `element` FROM `atom` WHERE `molecule_id` = 'TR186'
SELECT `bond_type` FROM `bond` WHERE `bond_id` = 'TR007_4_19'
SELECT `element` FROM `atom` WHERE `atom_id` IN (SELECT `atom_id` FROM `connected` WHERE `bond_id` = 'TR001_2_4')
SELECT COUNT(`bond`.`bond_id`) AS double_bonds, `molecule`.`label` AS carcinogenic FROM `bond` JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = ' = ' AND `molecule`.`label` = '+' AND `molecule`.`molecule_id` = 'TR006' GROUP BY `molecule`.`label`
SELECT `molecule`.`label`, `atom`.`element` FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT `bond`.`bond_id`, `atom1`.`atom_id` AS `atom1_id`, `atom1`.`element` AS `atom1_element`, `atom2`.`atom_id` AS `atom2_id`, `atom2`.`element` AS `atom2_element`, `molecule`.`label` FROM `bond` JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` JOIN `atom` AS `atom1` ON `connected`.`atom_id` = `atom1`.`atom_id` JOIN `atom` AS `atom2` ON `connected`.`atom_id2` = `atom2`.`atom_id` JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '-'
SELECT DISTINCT m.`molecule_id`, m.`label`, a.`element` FROM `molecule` m JOIN `bond` b ON m.`molecule_id` = b.`molecule_id` JOIN `connected` c ON b.`bond_id` = c.`bond_id` JOIN `atom` a ON c.`atom_id` = a.`atom_id` WHERE b.`bond_type` = '#'
SELECT `element` FROM `atom` WHERE `atom_id` IN (SELECT `atom_id` FROM `connected` WHERE `bond_id` = 'TR000_2_3')
SELECT COUNT(*) FROM connected JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.element = 'cl'
SELECT `atom`.`atom_id`, COUNT(DISTINCT `bond`.`bond_type`) AS bond_type_count FROM `atom` JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` LEFT JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` LEFT JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `molecule`.`label` = 'TR346' GROUP BY `atom`.`atom_id`
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) AS total_molecules_with_double_bond, SUM(CASE WHEN `molecule`.`label` = '+' THEN 1 ELSE 0 END) AS carcinogenic_molecules FROM `molecule` JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = ' = '
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` LEFT JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` LEFT JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`element` != 's' AND (`bond`.`bond_type` != ' = ' OR `bond`.`bond_type` IS NULL);
SELECT `molecule`.`label` FROM `bond` JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_id` = 'TR001_2_4' AND `molecule`.`label` = '+' LIMIT 1;
SELECT COUNT(*) FROM `atom` WHERE `molecule_id` = 'TR001'
SELECT COUNT(*) FROM `bond` WHERE `bond_type` = '-';
SELECT DISTINCT `molecule`.`molecule_id`, `molecule`.`label` FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` LIKE '%cl%' AND `molecule`.`label` = '+'
SELECT `molecule`.`molecule_id`, `molecule`.`label` FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'c' AND `molecule`.`label` = '-';
SELECT (COUNT(DISTINCT CASE WHEN `atom`.`element` = 'cl' THEN `molecule`.`molecule_id` END) * 1.0 / COUNT(DISTINCT `molecule`.`molecule_id`)) * 100 AS percentage FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+' AND `atom`.`element` = 'cl';
SELECT `molecule_id` FROM `bond` WHERE `bond_id` = 'TR001_1_7'
SELECT COUNT(DISTINCT `atom`.`element`) AS element_count FROM `atom` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` WHERE `connected`.`bond_id` = 'TR001_3_4';
SELECT `bond_type` FROM `bond` JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` JOIN `atom` AS `atom1` ON `connected`.`atom_id` = `atom1`.`atom_id` JOIN `atom` AS `atom2` ON `connected`.`atom_id2` = `atom2`.`atom_id` WHERE `atom1`.`element` = 'TR000_1' AND `atom2`.`element` = 'TR000_2'
SELECT `molecule`.`label` FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`atom_id` IN ('TR000_2', 'TR000_4') GROUP BY `molecule`.`label` HAVING COUNT(DISTINCT `atom`.`atom_id`) = 2
SELECT `element` FROM `atom` WHERE `atom_id` = 'TR000_1'
SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR000'
SELECT (COUNT(CASE WHEN `bond`.`bond_type` = '-' THEN 1 END) * 1.0 / COUNT(`bond`.`bond_id`)) * 100 AS percentage FROM `atom` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id`
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+' AND `atom`.`element` = 'n';
SELECT `molecule`.`label` FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `atom`.`element` = 's' AND `bond`.`bond_type` = ' = ' GROUP BY `molecule`.`label`
SELECT `molecule`.`molecule_id`, `molecule`.`label` FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '-' GROUP BY `molecule`.`molecule_id` HAVING COUNT(`atom`.`atom_id`) > 5
SELECT DISTINCT `atom`.`element` FROM `atom` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '=' AND `atom`.`molecule_id` = 'TR024'
SELECT `molecule`.`molecule_id`, `molecule`.`label`, COUNT(`atom`.`atom_id`) AS atom_count FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+' GROUP BY `molecule`.`molecule_id` ORDER BY atom_count DESC LIMIT 1
SELECT (COUNT(DISTINCT CASE WHEN `molecule`.`label` = '+' THEN `molecule`.`molecule_id` END) * 100.0) / COUNT(DISTINCT `molecule`.`molecule_id`) AS percentage FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `atom`.`element` = 'h' AND `bond`.`bond_type` = '#';
SELECT COUNT(*) FROM `molecule` WHERE `label` = '+';
SELECT COUNT(DISTINCT `molecule_id`) AS `single_bond_molecules` FROM `bond` WHERE `bond_type` = '-' AND `molecule_id` BETWEEN 'TR004' AND 'TR010';
SELECT COUNT(*) FROM `atom` WHERE `molecule_id` = (SELECT `molecule_id` FROM `molecule` WHERE `label` = 'TR008') AND `element` = 'c'
SELECT `element` FROM `atom` JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`atom_id` = 'TR004_7' AND `molecule`.`label` = '-'
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) AS total_molecules FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `atom`.`element` = 'o' AND `bond`.`bond_type` = ' = '
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '#' AND `molecule`.`label` = '-';
SELECT `atom`.`element`, `bond`.`bond_type` FROM `molecule` JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `molecule`.`molecule_id` = 'TR002'
SELECT `atom`.`atom_id` FROM `atom` JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'c' AND `bond`.`bond_type` = ' = ' AND `molecule`.`label` = 'TR012';
SELECT `atom`.`atom_id` FROM `atom` JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+' AND `atom`.`element` = 'o'
SELECT `name` FROM `cards` WHERE `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL
SELECT `name`, `borderColor`, `cardKingdomFoilId`, `cardKingdomId` FROM `cards` WHERE `borderColor` = 'borderless' AND (`cardKingdomFoilId` IS NULL OR `cardKingdomId` IS NULL)
SELECT `name` FROM `cards` ORDER BY `faceConvertedManaCost` DESC
SELECT `name` FROM `cards` WHERE `frameVersion` = 2015 AND `edhrecRank` < 100
SELECT `cards`.`name` FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`rarity` = 'mythic' AND `legalities`.`status` = 'Banned' AND `legalities`.`format` = 'gladiator';
SELECT `cards`.`name`, `legalities`.`status` FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`types` = 'Artifact' AND `cards`.`side` IS NULL AND `legalities`.`format` = 'vintage';
SELECT `cards`.`id`, `cards`.`artist` FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE (`cards`.`power` = '*' OR `cards`.`power` IS NULL) AND `legalities`.`format` = 'commander' AND `legalities`.`status` = 'Legal'
SELECT `cards`.`id`, `rulings`.`text`, `cards`.`hasContentWarning` FROM `cards` LEFT JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`artist` = 'Stephen Daniele'
SELECT `rulings`.`text` FROM `rulings` JOIN `cards` ON `rulings`.`uuid` = `cards`.`uuid` WHERE `cards`.`name` = 'Sublime Epiphany' AND `cards`.`number` = '74s'
SELECT `cards`.`name`, `cards`.`artist`, `cards`.`isPromo` FROM `cards` JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` GROUP BY `cards`.`uuid` ORDER BY COUNT(`rulings`.`uuid`) DESC LIMIT 1
SELECT `language` FROM `foreign_data` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'annul' AND `number` = '29')
SELECT `name` FROM `cards` WHERE `uuid` IN (SELECT `uuid` FROM `foreign_data` WHERE `language` = 'Japanese')
SELECT (COUNT(DISTINCT `foreign_data`.`id`) * 100.0 / COUNT(DISTINCT `cards`.`id`)) AS percentage FROM `cards` LEFT JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Chinese Simplified'
SELECT `sets`.`name`, `sets`.`totalSetSize` FROM `sets` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Italian'
SELECT COUNT(DISTINCT `type`) FROM `cards` WHERE `artist` = 'Aaron Boyd';
SELECT `keywords` FROM `cards` WHERE `name` = 'Angel of Mercy' LIMIT 1
SELECT COUNT(*) FROM `cards` WHERE `power` = '*';
SELECT `promoTypes` FROM `cards` WHERE `name` = 'Duress' LIMIT 1
SELECT `borderColor` FROM `cards` WHERE `name` = 'Ancestor''s Chosen'
SELECT `originalType` FROM `cards` WHERE `name` = 'Ancestor\'s Chosen'
SELECT DISTINCT `set_translations`.`language` FROM `cards` JOIN `sets` ON `cards`.`setCode` = `sets`.`code` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `cards`.`name` = 'Angel of Mercy';
SELECT COUNT(*) FROM `legalities` JOIN `cards` ON `legalities`.`uuid` = `cards`.`uuid` WHERE `legalities`.`status` = 'restricted' AND `cards`.`isTextless` = 0
SELECT `rulings`.`text` FROM `rulings` JOIN `cards` ON `rulings`.`uuid` = `cards`.`uuid` WHERE `cards`.`name` = 'Condemn';
SELECT COUNT(*) FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`status` = 'restricted' AND `cards`.`isStarter` = 1
SELECT `status` FROM `legalities` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Cloudchaser Eagle' LIMIT 1)
SELECT `type` FROM `cards` WHERE `name` = 'Benalish Knight' LIMIT 1
SELECT `format` FROM `legalities` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Benalish Knight')
SELECT DISTINCT `artist` FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Phyrexian'
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM `cards`)) AS percentage FROM `cards` WHERE `borderColor` = 'borderless'
SELECT COUNT(*) FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'German' AND `cards`.`isReprint` = 1
SELECT COUNT(*) FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`borderColor` = 'borderless' AND `foreign_data`.`language` = 'Russian'
SELECT (COUNT(DISTINCT fd.`id`) * 100.0 / COUNT(DISTINCT c.`id`)) AS percentage FROM `cards` c LEFT JOIN `foreign_data` fd ON c.`uuid` = fd.`uuid` WHERE c.`isStorySpotlight` = 1 AND fd.`language` = 'French'
SELECT COUNT(*) FROM `cards` WHERE `toughness` = 99
SELECT `name` FROM `cards` WHERE `artist` = 'Aaron Boyd'
SELECT COUNT(*) FROM `cards` WHERE `borderColor` = 'black' AND `availability` = 'mtgo'
SELECT `id` FROM `cards` WHERE `convertedManaCost` = 0
SELECT `layout` FROM `cards` WHERE `keywords` LIKE '%flying%'
SELECT COUNT(*) FROM `cards` WHERE `originalType` = 'Summon - Angel' AND `subtypes` NOT LIKE '%Angel%';
SELECT `cards`.`id` FROM `cards` WHERE `cards`.`hasFoil` = 1 AND `cards`.`hasNonFoil` = 1 AND `cards`.`cardKingdomFoilId` IS NOT NULL AND `cards`.`cardKingdomId` IS NOT NULL
SELECT `id` FROM `cards` WHERE `duelDeck` = 'a'
SELECT `edhrecRank` FROM `cards` WHERE `frameVersion` = '2015'
SELECT `foreign_data`.`name` FROM `foreign_data` JOIN `cards` ON `foreign_data`.`uuid` = `cards`.`uuid` WHERE `foreign_data`.`language` = 'Chinese Simplified' ORDER BY `foreign_data`.`name`
SELECT `cards`.`name` FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`availability` = 'paper' AND `foreign_data`.`language` = 'Japanese'
SELECT COUNT(*) FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`status` = 'Banned' AND `cards`.`borderColor` = 'white';
SELECT `cards`.`uuid`, `foreign_data`.`language` FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `legalities`.`format` = 'legacy';
SELECT `text` FROM `rulings` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Beacon of Immortality')
SELECT COUNT(`cards`.`id`) AS `card_count`, `legalities`.`status` FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`frameVersion` = 'future' GROUP BY `legalities`.`status`
SELECT `name`, `colors` FROM `cards` WHERE `setCode` = 'OGW'
SELECT `cards`.`name`, `set_translations`.`language` FROM `cards` JOIN `set_translations` ON `cards`.`setCode` = `set_translations`.`setCode` WHERE `cards`.`setCode` = '10E' AND `cards`.`convertedManaCost` = 5
SELECT `cards`.`name`, `rulings`.`date` FROM `cards` JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`originalType` = 'Creature - Elf'
SELECT `colors`, `format` FROM `cards` LEFT JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`id` BETWEEN 1 AND 20
SELECT DISTINCT `cards`.`id`, `cards`.`name` FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`originalType` = 'Artifact' AND `cards`.`colors` = 'B' AND `foreign_data`.`language` IS NOT NULL
SELECT `cards`.`name` FROM `cards` JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`rarity` = 'uncommon' GROUP BY `cards`.`name` ORDER BY MIN(`rulings`.`date`) ASC LIMIT 3
SELECT COUNT(*) FROM `cards` WHERE `artist` = 'John Avon' AND `cardKingdomId` IS NOT NULL AND `cardKingdomFoilId` IS NULL
SELECT COUNT(*) FROM `cards` WHERE `borderColor` = 'white' AND `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL
SELECT COUNT(*) FROM `cards` WHERE `artist` = 'UDON' AND `availability` = 'mtgo' AND `hand` = -1
SELECT COUNT(*) FROM `cards` WHERE `frameVersion` = '1993' AND `availability` = 'paper' AND `hasContentWarning` = 1
SELECT `manaCost` FROM `cards` WHERE `availability` = 'mtgo,paper' AND `frameVersion` = '2003' AND `borderColor` = 'black' AND `layout` = 'normal'
SELECT SUM(`manaCost`) FROM `cards` WHERE `artist` = 'Rob Alexander'
SELECT DISTINCT `types` FROM `cards` WHERE `availability` = 'arena'
SELECT DISTINCT `set_translations`.`setCode` FROM `set_translations` WHERE `set_translations`.`language` = 'Spanish'
SELECT ROUND(100.0 * COUNT(CASE WHEN `isOnlineOnly` = 1 THEN 1 END) / COUNT(*), 2) AS percentage FROM `cards` WHERE `frameEffects` = 'legendary'
SELECT (COUNT(CASE WHEN `isStorySpotlight` = 1 AND `isTextless` = 0 THEN `id` END) * 100.0 / COUNT(`id`)) AS percentage FROM `cards`
SELECT `name`, (COUNT(`foreign_data`.`id`) * 100.0 / (SELECT COUNT(`cards`.`id`) FROM `cards`)) AS percentage FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Spanish' GROUP BY `cards`.`name` ORDER BY `cards`.`name`
SELECT `language` FROM `set_translations` WHERE `setCode` = (SELECT `setCode` FROM `sets` WHERE `baseSetSize` = 309)
SELECT COUNT(DISTINCT `set_translations`.`setCode`) FROM `set_translations` JOIN `sets` ON `set_translations`.`setCode` = `sets`.`code` WHERE `set_translations`.`language` = 'Portuguese (Brasil)' AND `sets`.`block` = 'Commander';
SELECT `cards`.`id` FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`types` = 'Creature' AND `legalities`.`status` = 'legal';
SELECT DISTINCT `subtypes`, `supertypes` FROM `foreign_data` WHERE `language` = 'German' AND `subtypes` IS NOT NULL AND `supertypes` IS NOT NULL
SELECT COUNT(*) FROM `cards` WHERE (`power` IS NULL OR `power` = '*') AND `text` LIKE '%triggered ability%'
SELECT COUNT(*) FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `legalities`.`format` = 'premodern' AND `rulings`.`text` = 'This is a triggered mana ability.' AND `cards`.`side` IS NULL
SELECT `cards`.`id` FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`artist` = 'Erica Yang' AND `cards`.`availability` = 'paper' AND `legalities`.`format` = 'pauper' AND `legalities`.`status` = 'legal' LIMIT 1
SELECT `artist` FROM `cards` WHERE `flavorText` = 'Das perfekte Gegenmittel zu einer dichten Formation' LIMIT 1
SELECT `foreign_data`.`name` FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`artist` = 'Matthew D. Wilson' AND `cards`.`layout` = 'normal' AND `cards`.`borderColor` = 'black' AND `foreign_data`.`language` = 'French' AND `cards`.`type` LIKE '%Creature%';
SELECT COUNT(*) FROM `cards` JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`rarity` = 'rare' AND `rulings`.`date` = '2007-02-01'
SELECT DISTINCT `set_translations`.`language` FROM `sets` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`baseSetSize` = 180 AND `sets`.`block` = 'Ravnica';
SELECT (COUNT(*) FILTER (WHERE `hasContentWarning` = 0) * 100.0 / COUNT(*)) AS percentage FROM `legalities` JOIN `cards` ON `legalities`.`uuid` = `cards`.`uuid` WHERE `format` = 'commander' AND `status` = 'legal'
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM `cards` WHERE `power` IS NULL OR `power` = '*')) AS percentage FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'French' AND (`cards`.`power` IS NULL OR `cards`.`power` = '*')
SELECT (COUNT(DISTINCT st.`setCode`) * 100.0 / COUNT(DISTINCT s.`code`)) AS percentage FROM `set_translations` st JOIN `sets` s ON st.`setCode` = s.`code` WHERE st.`language` = 'Japanese' AND s.`type` = 'expansion'
SELECT `availability` FROM `cards` WHERE `artist` = 'Daren Bader' LIMIT 1
SELECT COUNT(*) FROM `cards` WHERE `borderColor` = 'borderless' AND `edhrecRank` > 12000
SELECT COUNT(*) FROM `cards` WHERE `isOversized` = 1 AND `isReprint` = 1 AND `isPromo` = 1
SELECT `name` FROM `cards` WHERE (`power` IS NULL OR `power` = '*') AND `promoTypes` = 'arenaleague' ORDER BY `name` ASC LIMIT 3
SELECT `language` FROM `foreign_data` WHERE `multiverseid` = 149934
SELECT `cardKingdomFoilId`, `cardKingdomId` FROM `cards` WHERE `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL ORDER BY `cardKingdomFoilId` ASC LIMIT 3
SELECT (COUNT(*) FILTER (WHERE `isTextless` = 1 AND `layout` = 'normal') * 100.0 / COUNT(*)) AS proportion FROM `cards`
SELECT `number` FROM `cards` WHERE `side` IS NULL AND `subtypes` LIKE '%Angel%' AND `subtypes` LIKE '%Wizard%'
SELECT `name`, `code` FROM `sets` WHERE `mtgoCode` IS NULL OR `mtgoCode` = '' ORDER BY `name` LIMIT 3
SELECT DISTINCT `set_translations`.`language` FROM `set_translations` JOIN `sets` ON `set_translations`.`setCode` = `sets`.`code` WHERE `sets`.`mcmName` = 'Archenemy' AND `sets`.`code` = 'ARC'
SELECT `sets`.`name`, `set_translations`.`translation` FROM `sets` LEFT JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`id` = 5
SELECT `language`, `type` FROM `sets` WHERE `id` = 206
SELECT `sets`.`id`, `sets`.`name` FROM `sets` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Italian' AND `sets`.`block` = 'Shadowmoor' ORDER BY `sets`.`name` ASC LIMIT 2
SELECT `sets`.`id` FROM `sets` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`isForeignOnly` = 1 AND `sets`.`isFoilOnly` = 1 AND `set_translations`.`language` = 'Japanese'
SELECT `sets`.`name` FROM `sets` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Russian' ORDER BY `sets`.`baseSetSize` DESC LIMIT 1
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM `cards` WHERE `isOnlineOnly` = 1)) AS percentage FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`isOnlineOnly` = 1 AND `foreign_data`.`language` = 'Chinese Simplified'
SELECT COUNT(DISTINCT `sets`.`id`) FROM `sets` LEFT JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Japanese' AND (`sets`.`mtgoCode` IS NULL OR `sets`.`mtgoCode` = '')
SELECT `id` FROM `cards` WHERE `borderColor` = 'black'
SELECT `id` FROM `cards` WHERE `frameEffects` = 'extendedart'
SELECT `name` FROM `cards` WHERE `borderColor` = 'black' AND `isFullArt` = 1
SELECT `language` FROM `set_translations` WHERE `id` = '174'
SELECT `name` FROM `sets` WHERE `code` = 'ALL'
SELECT `language` FROM `foreign_data` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'A Pedra Fellwar')
SELECT `code` FROM `sets` WHERE `releaseDate` = '2007-07-13'
SELECT `baseSetSize`, `code` FROM `sets` WHERE `block` IN ('Masques', 'Mirage')
SELECT `code` FROM `sets` WHERE `type` = 'expansion'
SELECT `foreign_data`.`name`, `cards`.`type` FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'boros'
SELECT `foreign_data`.`language`, `foreign_data`.`flavorText`, `cards`.`type` FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'colorpie'
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM `cards` WHERE `name` = 'Abyssal Horror')) AS percentage FROM `cards` WHERE `name` = 'Abyssal Horror' AND `convertedManaCost` = 10
SELECT `code` FROM `sets` WHERE `type` = 'expansion commander'
SELECT `foreign_data`.`name`, `cards`.`type` FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'abzan'
SELECT `foreign_data`.`language`, `cards`.`type` FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'azorius'
SELECT COUNT(*) FROM `cards` WHERE `artist` = 'Aaron Miller' AND `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL
SELECT COUNT(*) FROM `cards` WHERE `availability` LIKE '%paper%' AND `hand` = '3'
SELECT `name` FROM `cards` WHERE `isTextless` = 0
SELECT `convertedManaCost` FROM `cards` WHERE `name` = 'Ancestor`s Chosen'
SELECT COUNT(*) FROM `cards` WHERE `borderColor` = 'white' AND (`power` = '*' OR `power` IS NULL)
SELECT `name` FROM `cards` WHERE `isPromo` = 1 AND `side` IS NOT NULL
SELECT `subtypes`, `supertypes` FROM `cards` WHERE `name` = 'Molimo, Maro-Sorcerer'
SELECT `purchaseUrls` FROM `cards` WHERE `promoTypes` LIKE '%bundle%'
SELECT COUNT(DISTINCT `artist`) FROM `cards` WHERE `borderColor` = 'black' AND `availability` LIKE '%arena,mtgo%'
SELECT CASE WHEN `cards`.`convertedManaCost` > (SELECT `convertedManaCost` FROM `cards` WHERE `name` = 'Shrine Keeper') THEN 'Serra Angel' ELSE 'Shrine Keeper' END AS `costs_more_converted_mana` FROM `cards` WHERE `name` = 'Serra Angel' LIMIT 1
SELECT `artist` FROM `cards` WHERE `flavorName` = 'Battra, Dark Destroyer' LIMIT 1
SELECT `name` FROM `cards` WHERE `frameVersion` = '2003' ORDER BY `convertedManaCost` DESC LIMIT 3
SELECT `set_translations`.`translation` FROM `cards` JOIN `sets` ON `cards`.`setCode` = `sets`.`code` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `cards`.`name` = 'Ancestor''s Chosen' AND `set_translations`.`language` = 'Italian' LIMIT 1
SELECT COUNT(DISTINCT `set_translations`.`translation`) FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` JOIN `set_translations` ON `cards`.`setCode` = `set_translations`.`setCode` WHERE `cards`.`name` = 'Angel of Mercy'
SELECT `cards`.`name` FROM `cards` JOIN `set_translations` ON `cards`.`setCode` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = 'Hauptset Zehnte Edition'
SELECT EXISTS (SELECT 1 FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.language = 'Korean') AS has_korean_version;
SELECT COUNT(*) FROM `cards` JOIN `set_translations` ON `cards`.`setCode` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = 'Hauptset Zehnte Edition' AND `cards`.`artist` = 'Adam Rex'
SELECT `baseSetSize` FROM `sets` WHERE `name` = 'Zehnte Edition'
SELECT `translation` FROM `set_translations` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Eighth Edition') AND `language` = 'Chinese Simplified'
SELECT EXISTS (SELECT 1 FROM `cards` WHERE `name` = 'Angel of Mercy' AND `mtgoCode` IS NOT NULL) AS `appeared_on_mtgo`
SELECT `releaseDate` FROM `sets` WHERE `name` = 'Ancestor''s Chosen'
SELECT `type` FROM `sets` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = ' Hauptset Zehnte Edition';
SELECT COUNT(DISTINCT `set_translations`.`setCode`) FROM `sets` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`block` = 'Ice Age' AND `set_translations`.`language` = 'Italian' AND `set_translations`.`translation` IS NOT NULL
SELECT COUNT(*) FROM sets WHERE name = 'Adarkar Valkyrie' AND isForeignOnly = 1
SELECT COUNT(DISTINCT `sets`.`id`) FROM `sets` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Italian' AND `sets`.`baseSetSize` < 100
SELECT COUNT(*) FROM `cards` WHERE `setCode` = 'Coldsnap' AND `borderColor` = 'black'
SELECT `name` FROM `cards` WHERE `setCode` = 'Coldsnap' ORDER BY `convertedManaCost` DESC LIMIT 1
SELECT DISTINCT `artist` FROM `cards` WHERE `artist` IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND `setCode` = 'Coldsnap'
SELECT `name` FROM `cards` WHERE `setCode` = 'Coldsnap' AND `number` = '4'
SELECT COUNT(*) FROM `cards` AS T1 LEFT JOIN `sets` AS T2 ON T1.`setCode` = T2.`code` WHERE T2.`name` = 'Coldsnap' AND T1.`convertedManaCost` > 5 AND (T1.`power` = '*' OR T1.`power` IS NULL)
SELECT `foreign_data`.`flavorText` FROM `foreign_data` JOIN `cards` ON `foreign_data`.`uuid` = `cards`.`uuid` WHERE `foreign_data`.`language` = 'Italian' AND `cards`.`name` = 'Ancestor''s Chosen'
SELECT DISTINCT `language` FROM `foreign_data` WHERE `uuid` IN (SELECT `uuid` FROM `cards` WHERE `name` = 'Ancestor''s Chosen') AND `flavorText` IS NOT NULL
SELECT `type` FROM `foreign_data` WHERE `language` = 'German' AND `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Ancestor''s Chosen')
SELECT r.`text` FROM `rulings` r JOIN `cards` c ON r.`uuid` = c.`uuid` JOIN `sets` s ON c.`setCode` = s.`code` JOIN `foreign_data` fd ON c.`uuid` = fd.`uuid` WHERE s.`name` = 'Coldsnap' AND fd.`language` = 'Italian'
SELECT `foreign_data`.`name` FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap' AND `foreign_data`.`language` = 'Italian' AND `cards`.`convertedManaCost` = (SELECT MAX(`convertedManaCost`) FROM `cards` JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap')
SELECT `date` FROM `rulings` WHERE `uuid` = (SELECT `uuid` FROM `cards` WHERE `name` = 'Reminisce' LIMIT 1)
SELECT (COUNT(*) FILTER (WHERE `convertedManaCost` = 7) * 100.0 / COUNT(*)) AS percentage FROM `cards` WHERE `name` = 'Coldsnap';
SELECT (COUNT(CASE WHEN `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM `cards` WHERE `name` = 'Coldsnap'
SELECT `code` FROM `sets` WHERE `releaseDate` = '2017-07-14'
SELECT `keyruneCode` FROM `sets` WHERE `code` = 'PKHC'
SELECT `mcmId` FROM `sets` WHERE `code` = 'SS2'
SELECT `mcmName` FROM `sets` WHERE `releaseDate` = '2017-06-09'
SELECT `type` FROM `sets` WHERE `name` = 'From the Vault: Lore' LIMIT 1
SELECT `parentCode` FROM `sets` WHERE `name` = 'Commander 2014 Oversized'
SELECT `cards`.`name`, `rulings`.`text`, `cards`.`hasContentWarning` FROM `cards` JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`artist` = 'Jim Pavelec'
SELECT `sets`.`releaseDate` FROM `cards` JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `cards`.`name` = 'Evacuation' LIMIT 1
SELECT `baseSetSize` FROM `sets` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = 'Rinascita di Alara' LIMIT 1
SELECT `type` FROM `sets` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = 'Huitième édition' LIMIT 1
SELECT `set_translations`.`translation` FROM `set_translations` JOIN `sets` ON `set_translations`.`setCode` = `sets`.`code` JOIN `cards` ON `sets`.`code` = `cards`.`setCode` WHERE `cards`.`name` = 'Tendo Ice Bridge' AND `set_translations`.`language` = 'French' LIMIT 1
SELECT COUNT(*) FROM set_translations WHERE translation IS NOT NULL AND setCode = (SELECT code FROM sets WHERE name = 'Tenth Edition')
SELECT st.`translation` FROM `cards` c JOIN `sets` s ON c.`setCode` = s.`code` JOIN `set_translations` st ON s.`code` = st.`setCode` WHERE c.`name` = 'Fellwar Stone' AND st.`language` = 'Japanese'
SELECT `name`, MAX(`convertedManaCost`) FROM `cards` WHERE `name` = 'Journey into Nyx Hero''s Path'
SELECT `releaseDate` FROM `sets` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = 'Ola de frío' LIMIT 1
SELECT `sets`.`type` FROM `cards` JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `cards`.`name` = 'Samite Pilgrim' LIMIT 1
SELECT COUNT(*) FROM `cards` JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'World Championship Decks 2004' AND `cards`.`convertedManaCost` = '3';
SELECT `translation` FROM `set_translations` WHERE `language` = 'Chinese Simplified' AND `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Mirrodin')
SELECT (SUM(CASE WHEN `cards`.`hasNonFoil` = 1 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Japanese'
SELECT (SUM(CASE WHEN `cards`.`isOnlineOnly` = 1 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Portuguese (Brazil)'
SELECT DISTINCT `availability` FROM `cards` WHERE `artist` = 'Aleksi Briclot' AND `isTextless` = 1
SELECT `id` FROM `sets` ORDER BY `baseSetSize` DESC LIMIT 1
SELECT `artist` FROM `cards` WHERE `side` IS NULL ORDER BY `convertedManaCost` DESC LIMIT 1
SELECT `frameEffects` FROM `cards` WHERE `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL ORDER BY `frameEffects` DESC LIMIT 1
SELECT COUNT(*) FROM `cards` WHERE (`power` IS NULL OR `power` = '*') AND `hasFoil` = 0 AND `duelDeck` = 'a';
SELECT `id` FROM `sets` WHERE `type` = 'commander' ORDER BY `totalSetSize` DESC LIMIT 1
SELECT `name`, `manaCost` FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`format` = 'duel' ORDER BY `manaCost` DESC LIMIT 10
SELECT `cards`.`originalReleaseDate`, `legalities`.`format` FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`rarity` = 'mythic' AND `legalities`.`status` = 'legal' ORDER BY `cards`.`originalReleaseDate` LIMIT 1
SELECT COUNT(*) FROM `cards` JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`artist` = 'Volkan Baǵa' AND `foreign_data`.`language` = 'French'
SELECT COUNT(*) FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`rarity` = 'rare' AND `cards`.`types` = 'Enchantment' AND `cards`.`name` = 'Abundance' AND `legalities`.`status` = 'Legal'
SELECT l.`format`, c.`name` FROM `legalities` l JOIN `cards` c ON l.`uuid` = c.`uuid` WHERE l.`status` = 'Banned' GROUP BY l.`format`, c.`name` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `language` FROM `set_translations` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Battlebond')
SELECT `artist`, `format` FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `artist` = (SELECT `artist` FROM `cards` GROUP BY `artist` ORDER BY COUNT(*) ASC LIMIT 1)
SELECT l.`status` FROM `cards` c JOIN `legalities` l ON c.`uuid` = l.`uuid` WHERE c.`frameVersion` = '1997' AND c.`artist` = 'D. Alexander Gregory' AND (c.`hasContentWarning` = 1 OR c.`name` LIKE '%Wizards of the Coast%') AND l.`format` = 'legacy'
SELECT `cards`.`name`, `legalities`.`format` FROM `cards` LEFT JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`edhrecRank` = 1 AND `legalities`.`status` = 'Banned'
SELECT AVG(id) AS avg_sets, (SELECT language FROM set_translations GROUP BY language ORDER BY COUNT(language) DESC LIMIT 1) AS common_language FROM sets WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31';
SELECT DISTINCT `artist` FROM `cards` WHERE `borderColor` = 'black' AND `availability` = 'arena'
SELECT `uuid` FROM `legalities` WHERE `format` = 'oldschool' AND (`status` = 'banned' OR `status` = 'restricted')
SELECT COUNT(*) FROM `cards` WHERE `artist` = 'Matthew D. Wilson' AND `availability` = 'paper'
SELECT `rulings`.`text` FROM `rulings` JOIN `cards` ON `rulings`.`uuid` = `cards`.`uuid` WHERE `cards`.`artist` = 'Kev Walker' ORDER BY `rulings`.`date` DESC
SELECT `cards`.`name`, `legalities`.`format` FROM `cards` JOIN `sets` ON `cards`.`setCode` = `sets`.`code` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `sets`.`name` = 'Hour of Devastation' AND `legalities`.`status` = 'Legal'
SELECT `sets`.`name` FROM `sets` LEFT JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` NOT LIKE '%Japanese%' AND `set_translations`.`language` = 'Korean'
SELECT DISTINCT `cards`.`frameVersion`, `cards`.`name` FROM `cards` LEFT JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`artist` = 'Allen Williams' AND (`legalities`.`status` = 'Banned' OR `legalities`.`status` IS NULL)
SELECT `DisplayName`, MAX(`Reputation`) AS `MaxReputation` FROM `users` WHERE `DisplayName` IN ('Harlan', 'Jarrod Dixon') GROUP BY `DisplayName` ORDER BY `MaxReputation` DESC LIMIT 1
SELECT `DisplayName` FROM `users` WHERE strftime('%Y', `CreationDate`) = '2011'
SELECT COUNT(*) FROM `users` WHERE `LastAccessDate` > '2014-09-01'
SELECT `DisplayName` FROM `users` ORDER BY `Views` DESC LIMIT 1
SELECT COUNT(*) FROM `users` WHERE `UpVotes` > 100 AND `DownVotes` > 1
SELECT COUNT(*) FROM `users` WHERE `Views` > 10 AND strftime('%Y', `CreationDate`) > '2013'
SELECT COUNT(*) FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'csgillespie')
SELECT `Title` FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'csgillespie')
SELECT `users`.`DisplayName` FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Eliciting priors from experts' LIMIT 1
SELECT `Title` FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'csgillespie') ORDER BY `ViewCount` DESC LIMIT 1
SELECT `users`.`DisplayName` FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` ORDER BY `posts`.`FavoriteCount` DESC LIMIT 1
SELECT SUM(`CommentCount`) AS total_comments FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie'
SELECT MAX(`AnswerCount`) FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'csgillespie')
SELECT `users`.`DisplayName` FROM `posts` JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Examples for teaching: Correlation does not mean causation'
SELECT COUNT(*) FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie' AND `posts`.`ParentId` IS NULL
SELECT DISTINCT `users`.`DisplayName` FROM `users` JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `posts`.`ClosedDate` IS NOT NULL
SELECT COUNT(*) FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`Age` > 65 AND `posts`.`Score` >= 20
SELECT `users`.`Location` FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Eliciting priors from experts' LIMIT 1
SELECT `posts`.`Body` FROM `tags` JOIN `posts` ON `tags`.`ExcerptPostId` = `posts`.`Id` WHERE `tags`.`TagName` = 'bayesian' LIMIT 1
SELECT `posts`.`Body` FROM `tags` JOIN `posts` ON `tags`.`ExcerptPostId` = `posts`.`Id` ORDER BY `tags`.`Count` DESC LIMIT 1
SELECT COUNT(*) FROM `badges` JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie'
SELECT `Name` FROM `badges` WHERE `UserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'csgillespie')
SELECT COUNT(*) FROM `badges` JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie' AND strftime('%Y', `badges`.`Date`) = '2011'
SELECT `DisplayName` FROM `users` WHERE `Id` = (SELECT `UserId` FROM `badges` GROUP BY `UserId` ORDER BY COUNT(`Id`) DESC LIMIT 1)
SELECT AVG(`Score`) FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'csgillespie')
SELECT COUNT(`badges`.`Id`) / COUNT(DISTINCT `users`.`DisplayName`) AS average_badges FROM `users` LEFT JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `users`.`Views` > 200
SELECT (COUNT(DISTINCT CASE WHEN u.`Age` > 65 THEN p.`Id` END) * 100.0 / COUNT(DISTINCT p.`Id`)) AS percentage FROM `posts` p JOIN `users` u ON p.`OwnerUserId` = u.`Id` WHERE p.`Score` > 5
SELECT COUNT(*) FROM `votes` WHERE `UserId` = 58 AND `CreationDate` = '2010-07-19'
SELECT `CreationDate` FROM `votes` GROUP BY `CreationDate` ORDER BY COUNT(`Id`) DESC LIMIT 1
SELECT COUNT(*) FROM `badges` WHERE `Name` = 'Revival';
SELECT `posts`.`Title` FROM `posts` JOIN `comments` ON `posts`.`Id` = `comments`.`PostId` WHERE `comments`.`Score` = (SELECT MAX(`Score`) FROM `comments`)
SELECT `CommentCount` FROM `posts` WHERE `ViewCount` = 1910
SELECT `FavoriteCount` FROM `posts` WHERE `Id` = (SELECT `PostId` FROM `comments` WHERE `UserId` = 3025 AND `CreationDate` = '2014/4/23 20:29:39.0')
SELECT `Text` FROM `comments` WHERE `PostId` = (SELECT `Id` FROM `posts` WHERE `ParentId` = 107829) LIMIT 1
SELECT `ClosedDate` IS NOT NULL AS `well_finished` FROM `comments` JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `comments`.`UserId` = 23853 AND `comments`.`CreationDate` = '2013-07-12 09:08:18.0' LIMIT 1
SELECT `Reputation` FROM `users` WHERE `Id` = (SELECT `OwnerUserId` FROM `posts` WHERE `Id` = '65041')
SELECT COUNT(*) FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Tiago Pasqualini'
SELECT `DisplayName` FROM `users` WHERE `Id` = (SELECT `UserId` FROM `votes` WHERE `Id` = 6347)
SELECT COUNT(`votes`.`Id`) FROM `votes` JOIN `posts` ON `votes`.`PostId` = `posts`.`Id` WHERE `posts`.`Title` LIKE '%data visualization%';
SELECT `Name` FROM `badges` WHERE `UserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'DatEpicCoderGuyWhoPrograms')
SELECT COUNT(`posts`.`Id`) / COUNT(`votes`.`Id`) AS times FROM `posts` LEFT JOIN `votes` ON `posts`.`OwnerUserId` = `votes`.`UserId` WHERE `posts`.`OwnerUserId` = '24'
SELECT `ViewCount` FROM `posts` WHERE `Title` = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer' LIMIT 1
SELECT `Text` FROM `comments` WHERE `Score` = 17
SELECT `DisplayName` FROM `users` WHERE `WebsiteUrl` = 'http://stackoverflow.com'
SELECT `Name` FROM `badges` WHERE `UserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'SilentGhost') LIMIT 1
SELECT `users`.`DisplayName` FROM `comments` JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Text` = 'thank you user93!' LIMIT 1
SELECT `Text` FROM `comments` WHERE `UserDisplayName` = 'A Lion';
SELECT `users`.`DisplayName`, `users`.`Reputation` FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Understanding what Dassault iSight is doing?'
SELECT `comments`.`Text` FROM `comments` JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`Title` = 'How does gentle boosting differ from AdaBoost?'
SELECT `DisplayName` FROM `users` WHERE `Id` IN (SELECT `UserId` FROM `badges` WHERE `Name` = 'Necromancer') LIMIT 10
SELECT `LastEditorDisplayName` FROM `posts` WHERE `Title` = 'Open source tools for visualizing multi-dimensional data' LIMIT 1
SELECT `Title` FROM `posts` WHERE `LastEditorUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'Vebjorn Ljosa')
SELECT SUM(`posts`.`Score`) AS total_score, `users`.`WebsiteUrl` FROM `posts` JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Yevgeny' GROUP BY `users`.`WebsiteUrl`
SELECT `c`.`Text` FROM `comments` `c` JOIN `posts` `p` ON `c`.`PostId` = `p`.`Id` JOIN `postHistory` `ph` ON `p`.`Id` = `ph`.`PostId` WHERE `p`.`Title` = 'Why square the difference instead of taking the absolute value in standard deviation?' AND `ph`.`UserId` = `c`.`UserId`
SELECT SUM(`BountyAmount`) AS total_bounty_amount FROM `votes` JOIN `posts` ON `votes`.`PostId` = `posts`.`Id` WHERE `posts`.`Title` LIKE '%data%' AND `BountyAmount` IS NOT NULL
SELECT `users`.`DisplayName` FROM `votes` JOIN `posts` ON `votes`.`PostId` = `posts`.`Id` JOIN `users` ON `votes`.`UserId` = `users`.`Id` WHERE `votes`.`BountyAmount` = 50 AND `posts`.`Title` LIKE '%variance%';
SELECT `posts`.`Title`, `comments`.`Text`, AVG(`posts`.`ViewCount`) AS average_view_count FROM `posts` JOIN `comments` ON `posts`.`Id` = `comments`.`PostId` WHERE `posts`.`Tags` LIKE '%<humor>%' GROUP BY `posts`.`Id`
SELECT COUNT(`Id`) FROM `comments` WHERE `UserId` = 13
SELECT `Id` FROM `users` ORDER BY `Reputation` DESC LIMIT 1
SELECT `Id` FROM `users` ORDER BY `Views` ASC LIMIT 1
SELECT COUNT(DISTINCT `UserId`) FROM `badges` WHERE `Name` = 'Supporter' AND strftime('%Y', `Date`) = '2011'
SELECT COUNT(DISTINCT `UserId`) FROM (SELECT `UserId`, COUNT(`Name`) AS `Count` FROM `badges` GROUP BY `UserId` HAVING `Count` > 5) AS `UserBadges`;
SELECT COUNT(DISTINCT `b`.`UserId`) FROM `badges` `b` JOIN `users` `u` ON `b`.`UserId` = `u`.`Id` WHERE `u`.`Location` = 'New York' AND `b`.`Name` IN ('Supporter', 'Teacher')
SELECT `users`.`DisplayName`, `users`.`Reputation` FROM `users` JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `posts`.`Id` = 1
SELECT `users`.`Id` FROM `users` JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `posts`.`ViewCount` >= 1000 AND `users`.`Id` NOT IN (SELECT `UserId` FROM `postHistory` GROUP BY `UserId`, `PostId` HAVING COUNT(`Id`) > 1) GROUP BY `users`.`Id`
SELECT `b`.`Name` FROM `badges` `b` JOIN `users` `u` ON `b`.`UserId` = `u`.`Id` JOIN (SELECT `UserId`, COUNT(`Id`) AS `CommentCount` FROM `comments` GROUP BY `UserId` ORDER BY `CommentCount` DESC LIMIT 1) `c` ON `u`.`Id` = `c`.`UserId`;
SELECT COUNT(DISTINCT `users`.`Id`) FROM `users` JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `users`.`Location` = 'India' AND `badges`.`Name` = 'Teacher';
SELECT (COUNT(CASE WHEN strftime('%Y', `Date`) = '2010' THEN 1 END) * 100.0 / COUNT(*) - COUNT(CASE WHEN strftime('%Y', `Date`) = '2011' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_difference FROM `badges` WHERE `Name` = 'Student'
SELECT `postHistory`.`PostHistoryTypeId`, COUNT(DISTINCT `comments`.`UserId`) AS unique_users_commented FROM `postHistory` LEFT JOIN `comments` ON `postHistory`.`PostId` = `comments`.`PostId` WHERE `postHistory`.`PostId` = 3720 GROUP BY `postHistory`.`PostHistoryTypeId`
SELECT `posts`.`Id`, `posts`.`ViewCount` FROM `posts` JOIN `postLinks` ON `posts`.`Id` = `postLinks`.`RelatedPostId` WHERE `postLinks`.`PostId` = 61217
SELECT `Score`, `LinkTypeId` FROM `posts` LEFT JOIN `postLinks` ON `posts`.`Id` = `postLinks`.`PostId` WHERE `posts`.`Id` = 395
SELECT `Id`, `OwnerUserId` FROM `posts` WHERE `Score` > 60
SELECT SUM(`FavoriteCount`) AS total_favorite_count FROM `posts` WHERE `OwnerUserId` = 686 AND strftime('%Y', `CreaionDate`) = '2011'
SELECT SUM(`u`.`UpVotes`) / COUNT(`u`.`Id`) AS `average_up_votes`, SUM(`u`.`Age`) / COUNT(`u`.`Id`) AS `average_age` FROM `users` AS `u` JOIN `posts` AS `p` ON `u`.`Id` = `p`.`OwnerUserId` GROUP BY `u`.`Id` HAVING COUNT(`p`.`Id`) > 10
SELECT COUNT(DISTINCT `UserId`) FROM `badges` WHERE `Name` = 'Announcer'
SELECT `Name` FROM `badges` WHERE `Date` = '2010-07-19 19:39:08.0'
SELECT COUNT(*) FROM `comments` WHERE `Score` > 60
SELECT `Text` FROM `comments` WHERE `CreationDate` = '2010-07-19 19:25:47.0'
SELECT COUNT(*) FROM `posts` WHERE `Score` = 10
SELECT `Name` FROM `badges` WHERE `UserId` IN (SELECT `Id` FROM `users` ORDER BY `Reputation` DESC LIMIT 1)
SELECT `users`.`Reputation` FROM `users` JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `badges`.`Date` = '2010-07-19 19:39:08.0';
SELECT `Name` FROM `badges` JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Pierre'
SELECT `Date` FROM `badges` WHERE `UserId` IN (SELECT `Id` FROM `users` WHERE `Location` = 'Rochester, NY')
SELECT (COUNT(DISTINCT `badges`.`UserId`) * 100.0 / COUNT(DISTINCT `users`.`Id`)) AS percentage FROM `users` LEFT JOIN `badges` ON `users`.`Id` = `badges`.`UserId` AND `badges`.`Name` = 'Teacher'
SELECT (COUNT(DISTINCT CASE WHEN u.`Age` BETWEEN 13 AND 18 THEN b.`UserId` END) * 100.0 / COUNT(DISTINCT b.`UserId`)) AS percentage FROM `badges` b JOIN `users` u ON b.`UserId` = u.`Id` WHERE b.`Name` = 'Organizer';
SELECT `Score` FROM `comments` WHERE `PostId` = (SELECT `Id` FROM `posts` WHERE `CreationDate` = '2010-07-19 19:19:56.0')
SELECT `Text` FROM `comments` WHERE `CreationDate` = '2010-07-19 19:37:33.0'
SELECT `users`.`Age` FROM `users` JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `users`.`Location` = 'Vienna, Austria'
SELECT COUNT(*) FROM `badges` b JOIN `users` u ON b.`UserId` = u.`Id` WHERE b.`Name` = 'Supporter' AND u.`Age` BETWEEN 19 AND 65
SELECT SUM(`users`.`Views`) FROM `users` JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `badges`.`Date` = '2010-07-19 19:39:08.0';
SELECT `Name` FROM `badges` WHERE `UserId` IN (SELECT `Id` FROM `users` WHERE `Reputation` = (SELECT MIN(`Reputation`) FROM `users`))
SELECT `Name` FROM `badges` WHERE `UserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'Sharpie')
SELECT COUNT(*) FROM `badges` JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Supporter' AND `users`.`Age` > 65
SELECT `DisplayName` FROM `users` WHERE `Id` = 30
SELECT COUNT(*) FROM `users` WHERE `Location` = 'New York';
SELECT COUNT(*) FROM `votes` WHERE YEAR(`CreationDate`) = 2010
SELECT COUNT(*) FROM `users` WHERE `Age` BETWEEN 19 AND 65
SELECT `DisplayName` FROM `users` WHERE `Views` = (SELECT MAX(`Views`) FROM `users`)
SELECT CAST(COUNT(`Id`) FILTER (WHERE strftime('%Y', `CreationDate`) = '2010') AS REAL) / COUNT(`Id`) FILTER (WHERE strftime('%Y', `CreationDate`) = '2011') AS ratio FROM `votes`
SELECT DISTINCT `tags`.`TagName` FROM `users` JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` JOIN `tags` ON `posts`.`Id` = `tags`.`ExcerptPostId` WHERE `users`.`DisplayName` = 'John Salvatier';
SELECT COUNT(*) FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'Daniel Vassallo')
SELECT COUNT(*) FROM `votes` JOIN `users` ON `votes`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Harlan';
SELECT `Id` FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'slashnick') ORDER BY `AnswerCount` DESC LIMIT 1
SELECT `OwnerDisplayName`, MAX(SUM(`ViewCount`)) AS `Popularity` FROM `posts` WHERE `OwnerDisplayName` IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY `OwnerDisplayName` ORDER BY `Popularity` DESC LIMIT 1
SELECT COUNT(*) FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Matt Parker' AND `posts`.`Id` IN (SELECT `PostId` FROM `votes` GROUP BY `PostId` HAVING COUNT(`PostId`) > 4);
SELECT COUNT(*) FROM comments JOIN posts ON comments.PostId = posts.Id WHERE comments.Score < 60 AND posts.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Neil McGuigan')
SELECT DISTINCT `tags`.`TagName` FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` JOIN `tags` ON `posts`.`Id` = `tags`.`ExcerptPostId` WHERE `users`.`DisplayName` = 'Mark Meckes' AND `posts`.`CommentCount` = 0
SELECT `users`.`DisplayName` FROM `users` JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `badges`.`Name` = 'Organizer';
SELECT (COUNT(DISTINCT CASE WHEN `tags`.`TagName` = 'r' THEN `posts`.`Id` END) * 1.0 / COUNT(DISTINCT `posts`.`Id`)) * 100 AS percentage FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` JOIN `tags` ON `posts`.`Id` = `tags`.`ExcerptPostId` WHERE `users`.`DisplayName` = 'Community'
SELECT (SELECT SUM(`ViewCount`) FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Mornington') - (SELECT SUM(`ViewCount`) FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Amos') AS `calculation`
SELECT COUNT(DISTINCT `UserId`) FROM `badges` WHERE `Name` = 'Commentator' AND strftime('%Y', `Date`) = '2014'
SELECT COUNT(*) FROM `posts` WHERE `CreationDate` BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59'
SELECT `DisplayName`, `Age` FROM `users` WHERE `Views` = (SELECT MAX(`Views`) FROM `users`)
SELECT `LastEditDate`, `LastEditorUserId` FROM `posts` WHERE `Title` = 'Detecting a given face in a database of facial images' LIMIT 1
SELECT COUNT(*) FROM `comments` WHERE `UserId` = 13 AND `Score` < 60
SELECT `posts`.`Title`, `comments`.`UserDisplayName` FROM `comments` JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `comments`.`Score` > 60
SELECT `Name` FROM `badges` JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`Location` = 'North Pole' AND strftime('%Y', `badges`.`Date`) = '2011'
SELECT `OwnerDisplayName`, `WebsiteUrl` FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `FavoriteCount` > 150
SELECT COUNT(`Id`) AS `PostHistoryCount`, MAX(`CreationDate`) AS `LastEditDate` FROM `postHistory` WHERE `PostId` = (SELECT `Id` FROM `posts` WHERE `Title` = 'What is the best introductory Bayesian statistics textbook?')
SELECT `users`.`LastAccessDate`, `users`.`Location` FROM `users` JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `badges`.`Name` = 'Outliers' ORDER BY `badges`.`Date` DESC LIMIT 1
SELECT `posts`.`Title` FROM `posts` JOIN `postLinks` ON `posts`.`Id` = `postLinks`.`RelatedPostId` WHERE `postLinks`.`PostId` = (SELECT `Id` FROM `posts` WHERE `Title` = 'How to tell if something happened in a data set which monitors a value over time')
SELECT `posts`.`Id` AS `PostId`, `badges`.`Name` AS `BadgeName` FROM `posts` JOIN `badges` ON `posts`.`OwnerUserId` = `badges`.`UserId` WHERE `posts`.`OwnerUserId` = (SELECT `Id` FROM `users` WHERE `UserDisplayName` = 'Samuel') AND `posts`.`CreaionDate` BETWEEN '2013-01-01' AND '2013-12-31' AND `badges`.`Date` BETWEEN '2013-01-01' AND '2013-12-31'
SELECT `OwnerDisplayName` FROM `posts` ORDER BY `ViewCount` DESC LIMIT 1
SELECT `users`.`DisplayName`, `users`.`Location` FROM `users` JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` JOIN `tags` ON `posts`.`Id` = `tags`.`ExcerptPostId` WHERE `tags`.`TagName` = 'hypothesis-testing';
SELECT `p2`.`Title`, `pl`.`LinkTypeId` FROM `posts` AS `p1` JOIN `postLinks` AS `pl` ON `p1`.`Id` = `pl`.`PostId` JOIN `posts` AS `p2` ON `pl`.`RelatedPostId` = `p2`.`Id` WHERE `p1`.`Title` = 'What are principal component scores?'
SELECT `OwnerDisplayName` FROM `posts` WHERE `Id` = (SELECT `ParentId` FROM `posts` WHERE `Score` = (SELECT MAX(`Score`) FROM `posts` WHERE `ParentId` IS NOT NULL) AND `ParentId` IS NOT NULL)
SELECT `u`.`DisplayName`, `u`.`WebsiteUrl` FROM `votes` `v` JOIN `users` `u` ON `v`.`UserId` = `u`.`Id` WHERE `v`.`VoteTypeId` = 8 ORDER BY `v`.`BountyAmount` DESC LIMIT 1
SELECT `Title` FROM `posts` ORDER BY `ViewCount` DESC LIMIT 5
SELECT COUNT(*) FROM `tags` WHERE `Count` BETWEEN 5000 AND 7000
SELECT `OwnerUserId` FROM `posts` ORDER BY `FavoriteCount` DESC LIMIT 1
SELECT Age FROM users ORDER BY Reputation DESC LIMIT 1
SELECT COUNT(*) FROM `posts` JOIN `votes` ON `posts`.`Id` = `votes`.`PostId` WHERE `votes`.`BountyAmount` = 50 AND YEAR(`posts`.`CreaionDate`) = 2011
SELECT `Id` FROM `users` ORDER BY `Age` ASC LIMIT 1
SELECT SUM(`Score`) FROM `posts` WHERE `LasActivityDate` LIKE '2010-07-19%';
SELECT COUNT(`postLinks`.`Id`) / 12 AS average_monthly_links FROM `postLinks` JOIN `posts` ON `postLinks`.`PostId` = `posts`.`Id` WHERE YEAR(`postLinks`.`CreationDate`) = 2010 AND `posts`.`AnswerCount` <= 2
SELECT `PostId` FROM `votes` WHERE `UserId` = 1465 AND `PostId` IN (SELECT `Id` FROM `posts` ORDER BY `FavoriteCount` DESC LIMIT 1)
SELECT `posts`.`Title` FROM `postLinks` JOIN `posts` ON `postLinks`.`PostId` = `posts`.`Id` ORDER BY `postLinks`.`CreationDate` ASC LIMIT 1
SELECT `DisplayName` FROM `users` WHERE `Id` = (SELECT `UserId` FROM `badges` GROUP BY `UserId` ORDER BY COUNT(`Name`) DESC LIMIT 1)
SELECT MIN(`CreationDate`) FROM `votes` WHERE `UserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'chl')
SELECT MIN(`posts`.`CreaionDate`) FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`Age` = (SELECT MIN(`Age`) FROM `users`)
SELECT `DisplayName` FROM `users` WHERE `Id` = (SELECT `UserId` FROM `badges` WHERE `Name` = 'Autobiographer' ORDER BY `Date` LIMIT 1)
SELECT COUNT(DISTINCT `OwnerUserId`) FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`Location` = 'United Kingdom' AND `posts`.`FavoriteCount` >= 4
SELECT AVG(`v`.`PostId`) FROM `votes` `v` JOIN `users` `u` ON `v`.`UserId` = `u`.`Id` WHERE `u`.`Age` = (SELECT MAX(`Age`) FROM `users`);
SELECT `DisplayName` FROM `users` ORDER BY `Reputation` DESC LIMIT 1
SELECT COUNT(*) FROM `users` WHERE `Reputation` > 2000 AND `Views` > 1000
SELECT `DisplayName` FROM `users` WHERE `Age` BETWEEN 19 AND 65
SELECT COUNT(*) FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'Jay Stevens') AND YEAR(`CreaionDate`) = 2010
SELECT `Id`, `Title` FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'Harvey Motulsky') ORDER BY `ViewCount` DESC LIMIT 1
SELECT `Id`, `Title` FROM `posts` ORDER BY `Score` DESC LIMIT 1
SELECT AVG(`Score`) FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'Stephen Turner')
SELECT `OwnerDisplayName` FROM `posts` WHERE `ViewCount` > 20000 AND strftime('%Y', `CreaionDate`) = '2011'
SELECT `posts`.`Id`, `users`.`DisplayName` FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE strftime('%Y', `posts`.`CreaionDate`) = '2010' ORDER BY `posts`.`FavoriteCount` DESC LIMIT 1
SELECT (COUNT(DISTINCT `p`.`Id`) * 100.0 / (SELECT COUNT(DISTINCT `p2`.`Id`) FROM `posts` `p2` WHERE YEAR(`p2`.`CreaionDate`) = 2011)) AS percentage FROM `posts` `p` JOIN `users` `u` ON `p`.`OwnerUserId` = `u`.`Id` WHERE YEAR(`p`.`CreaionDate`) = 2011 AND `u`.`Reputation` > 1000;
SELECT CAST(COUNT(CASE WHEN `Age` BETWEEN 13 AND 18 THEN `Id` END) AS REAL) / COUNT(`Id`) * 100 AS percentage FROM `users`
SELECT `users`.`DisplayName`, `posts`.`ViewCount` FROM `posts` JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `posts`.`Body` LIKE '%Computer Game Datasets%';
SELECT COUNT(*) FROM posts WHERE ViewCount > (SELECT AVG(ViewCount) FROM posts)
SELECT COUNT(`comments`.`Id`) FROM `comments` JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`Score` = (SELECT MAX(`Score`) FROM `posts`);
SELECT COUNT(*) FROM `posts` WHERE `ViewCount` > 35000 AND `CommentCount` = 0
SELECT `users`.`DisplayName`, `users`.`Location` FROM `users` JOIN `posts` ON `users`.`Id` = `posts`.`LastEditorUserId` WHERE `posts`.`Id` = 183 ORDER BY `posts`.`LastEditDate` DESC LIMIT 1
SELECT `Name` FROM `badges` WHERE `Date` = (SELECT MAX(`Date`) FROM `badges` JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Emmett') AND `UserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'Emmett') LIMIT 1;
SELECT COUNT(*) FROM `users` WHERE `Age` BETWEEN 19 AND 65 AND `UpVotes` > 5000
SELECT `badges`.`Date` - `users`.`CreationDate` AS time_to_badge FROM `badges` JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Zolomon' LIMIT 1
SELECT COUNT(`p`.`Id`) AS `PostCount`, COUNT(`c`.`Id`) AS `CommentCount` FROM `users` `u` LEFT JOIN `posts` `p` ON `u`.`Id` = `p`.`OwnerUserId` LEFT JOIN `comments` `c` ON `u`.`Id` = `c`.`UserId` WHERE `u`.`CreationDate` = (SELECT MAX(`CreationDate`) FROM `users`);
SELECT `comments`.`Text`, `comments`.`UserDisplayName` FROM `comments` JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`Title` = 'Analysing wind data with R' ORDER BY `comments`.`CreationDate` DESC LIMIT 10;
SELECT COUNT(DISTINCT `UserId`) FROM `badges` WHERE `Name` = 'Citizen Patrol'
SELECT COUNT(*) FROM `posts` WHERE `Tags` LIKE '%careers%'
SELECT `Reputation`, `Views` FROM `users` WHERE `DisplayName` = 'Jarrod Dixon' LIMIT 1
SELECT COUNT(DISTINCT `comments`.`Id`) AS `CommentCount`, COUNT(DISTINCT `posts`.`Id`) AS `AnswerCount` FROM `posts` LEFT JOIN `comments` ON `posts`.`Id` = `comments`.`PostId` WHERE `posts`.`Title` = 'Clustering 1D data' AND `posts`.`PostTypeId` = 1
SELECT `CreationDate` FROM `users` WHERE `DisplayName` = 'IrishStat' LIMIT 1
SELECT COUNT(*) FROM `votes` WHERE `BountyAmount` >= 30
SELECT ROUND(100.0 * COUNT(CASE WHEN p.Score > 50 THEN 1 END) / COUNT(*), 2) AS percentage FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.Reputation = (SELECT MAX(Reputation) FROM users);
SELECT COUNT(*) FROM `posts` WHERE `Score` < 20
SELECT COUNT(*) FROM `tags` WHERE `Id` < 15 AND `Count` <= 20
SELECT `ExcerptPostId`, `WikiPostId` FROM `tags` WHERE `TagName` = 'sample'
SELECT `u`.`Reputation`, `u`.`UpVotes` FROM `users` `u` JOIN `comments` `c` ON `u`.`Id` = `c`.`UserId` WHERE `c`.`Text` = 'fine, you win :)'
SELECT `comments`.`Text` FROM `comments` JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`Title` LIKE '%linear regression%'
SELECT `comments`.`Text` FROM `comments` JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`ViewCount` BETWEEN 100 AND 150 ORDER BY `comments`.`Score` DESC LIMIT 1
SELECT `users`.`CreationDate`, `users`.`Age` FROM `users` JOIN `comments` ON `users`.`Id` = `comments`.`UserId` WHERE `users`.`WebsiteUrl` LIKE '%http://%'
SELECT COUNT(DISTINCT `comments`.`PostId`) FROM `comments` JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `comments`.`Score` = 0 AND `posts`.`ViewCount` < 5
SELECT COUNT(*) FROM `comments` WHERE `PostId` IN (SELECT `Id` FROM `posts` WHERE `CommentCount` = 1) AND `Score` = 0;
SELECT COUNT(DISTINCT `comments`.`UserId`) FROM `comments` JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Score` = 0 AND `users`.`Age` = 40
SELECT `comments`.`PostId`, `comments`.`Text` FROM `comments` JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`Title` = 'Group differences on a five point Likert item'
SELECT u.`UpVotes` FROM `users` u JOIN `comments` c ON u.`Id` = c.`UserId` WHERE c.`Text` = 'R is also lazy evaluated.';
SELECT `Text` FROM `comments` WHERE `UserId` = (SELECT `Id` FROM `users` WHERE `DisplayName` = 'Harvey Motulsky')
SELECT DISTINCT `users`.`DisplayName` FROM `comments` JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Score` BETWEEN 1 AND 5 AND `users`.`DownVotes` = 0
SELECT (COUNT(DISTINCT c.`UserId`) * 100.0 / (SELECT COUNT(DISTINCT c2.`UserId`) FROM `comments` c2 WHERE c2.`Score` BETWEEN 5 AND 10)) AS percentage FROM `comments` c JOIN `users` u ON c.`UserId` = u.`Id` WHERE c.`Score` BETWEEN 5 AND 10 AND u.`UpVotes` = 0;
SELECT `superpower`.`power_name` FROM `superpower` JOIN `hero_power` ON `superpower`.`id` = `hero_power`.`power_id` JOIN `superhero` ON `hero_power`.`hero_id` = `superhero`.`id` WHERE `superhero`.`superhero_name` = '3-D Man';
SELECT COUNT(DISTINCT `hero_power`.`hero_id`) FROM `hero_power` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Super Strength';
SELECT COUNT(*) FROM `hero_power` JOIN `superhero` ON `hero_power`.`hero_id` = `superhero`.`id` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Super Strength' AND `superhero`.`height_cm` > 200
SELECT `superhero`.`full_name` FROM `superhero` JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` GROUP BY `superhero`.`id` HAVING COUNT(`hero_power`.`power_id`) > 15
SELECT COUNT(*) FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `colour`.`colour` = 'Blue'
SELECT `colour`.`colour` FROM `superhero` JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` WHERE `superhero`.`superhero_name` = 'Apocalypse'
SELECT COUNT(*) FROM `superhero` sh JOIN `colour` c ON sh.`eye_colour_id` = c.`id` JOIN `hero_power` hp ON sh.`id` = hp.`hero_id` JOIN `superpower` sp ON hp.`power_id` = sp.`id` WHERE c.`colour` = 'Blue' AND sp.`power_name` = 'Agility';
SELECT `superhero`.`superhero_name` FROM `superhero` JOIN `colour` AS `eye_colour` ON `superhero`.`eye_colour_id` = `eye_colour`.`id` JOIN `colour` AS `hair_colour` ON `superhero`.`hair_colour_id` = `hair_colour`.`id` WHERE `eye_colour`.`colour` = 'Blue' AND `hair_colour`.`colour` = 'Blond';
SELECT COUNT(*) FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics'
SELECT `superhero_name`, `height_cm` FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher_name` = 'Marvel Comics' ORDER BY `height_cm` DESC
SELECT `publisher_name` FROM `publisher` JOIN `superhero` ON `publisher`.`id` = `superhero`.`publisher_id` WHERE `superhero`.`superhero_name` = 'Sauron'
SELECT `superhero`.`superhero_name`, `colour`.`colour` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics' GROUP BY `colour`.`colour` ORDER BY COUNT(`superhero`.`id`) DESC, `superhero`.`superhero_name`
SELECT AVG(`height_cm`) FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics'
SELECT `superhero`.`superhero_name` FROM `superhero` JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics' AND `superpower`.`power_name` = 'Super Strength';
SELECT COUNT(*) FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'DC Comics'
SELECT `publisher`.`publisher_name` FROM `superhero` JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `attribute`.`attribute_name` = 'Speed' ORDER BY `hero_attribute`.`attribute_value` ASC LIMIT 1
SELECT COUNT(*) FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `colour`.`colour` = 'Gold' AND `publisher`.`publisher_name` = 'Marvel Comics'
SELECT `publisher`.`publisher_name` FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`superhero_name` = 'Blue Beetle II'
SELECT COUNT(*) FROM `superhero` JOIN `colour` ON `superhero`.`hair_colour_id` = `colour`.`id` WHERE `colour`.`colour` = 'Blond';
SELECT `superhero`.`superhero_name` FROM `superhero` JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Intelligence' ORDER BY `hero_attribute`.`attribute_value` LIMIT 1
SELECT `race`.`race` FROM `superhero` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`superhero_name` = 'Copycat';
SELECT `superhero`.`superhero_name` FROM `superhero` JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Durability' AND `hero_attribute`.`attribute_value` < 50
SELECT `superhero`.`superhero_name` FROM `superhero` JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Death Touch';
SELECT COUNT(*) FROM `superhero` JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `gender`.`gender` = 'Female' AND `attribute`.`attribute_name` = 'Strength' AND `hero_attribute`.`attribute_value` = 100
SELECT `superhero_name` FROM `superhero` JOIN (SELECT `hero_id`, COUNT(`power_id`) AS `power_count` FROM `hero_power` GROUP BY `hero_id` ORDER BY `power_count` DESC LIMIT 1) AS `most_powers` ON `superhero`.`id` = `most_powers`.`hero_id`
SELECT COUNT(*) FROM `superhero` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Vampire';
SELECT ROUND(COUNT(CASE WHEN `alignment`.`alignment` = 'Bad' THEN 1 END) * 100.0 / COUNT(*), 2) AS percentage_bad, COUNT(CASE WHEN `alignment`.`alignment` = 'Bad' AND `publisher`.`publisher_name` = 'Marvel Comics' THEN 1 END) AS marvel_bad_count FROM `superhero` JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id`;
SELECT (SELECT COUNT(*) FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics') - (SELECT COUNT(*) FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'DC Comics') AS `difference`;
SELECT `id` FROM `publisher` WHERE `publisher_name` = 'Star Trek'
SELECT AVG(`attribute_value`) AS avg_attribute_value FROM `hero_attribute`
SELECT COUNT(*) FROM `superhero` WHERE `full_name` IS NULL
SELECT `colour`.`colour` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`id` = 75
SELECT `superpower`.`power_name` FROM `superhero` JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`superhero_name` = 'Deathlok';
SELECT AVG(`weight_kg`) FROM `superhero` JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `gender`.`gender` = 'Female'
SELECT `superpower`.`power_name` FROM `superpower` JOIN `hero_power` ON `superpower`.`id` = `hero_power`.`power_id` JOIN `superhero` ON `hero_power`.`hero_id` = `superhero`.`id` JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `gender`.`gender` = 'Male' LIMIT 5;
SELECT `superhero_name` FROM `superhero` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Alien'
SELECT `superhero`.`superhero_name` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`height_cm` BETWEEN 170 AND 190 AND `colour`.`colour` = 'No Colour'
SELECT `superpower`.`power_name` FROM `superpower` JOIN `hero_power` ON `superpower`.`id` = `hero_power`.`power_id` WHERE `hero_power`.`hero_id` = 56
SELECT `full_name` FROM `superhero` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Demi-God' LIMIT 5
SELECT COUNT(*) FROM `superhero` WHERE `alignment_id` = 'Bad';
SELECT `race`.`race` FROM `superhero` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`weight_kg` = 169
SELECT `colour`.`colour` FROM `superhero` JOIN `colour` ON `superhero`.`hair_colour_id` = `colour`.`id` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`height_cm` = 185 AND `race`.`race` = 'human'
SELECT `colour`.`colour` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` ORDER BY `superhero`.`weight_kg` DESC LIMIT 1
SELECT ROUND(100.0 * COUNT(CASE WHEN `publisher`.`publisher_name` = 'Marvel Comics' THEN 1 END) / COUNT(*), 2) AS percentage FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`height_cm` BETWEEN 150 AND 180
SELECT `superhero`.`superhero_name` FROM `superhero` JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `gender`.`gender` = 'Male' AND `superhero`.`weight_kg` > (SELECT 0.79 * AVG(`weight_kg`) FROM `superhero`)
SELECT `superpower`.`power_name` FROM `hero_power` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` GROUP BY `superpower`.`power_name` ORDER BY COUNT(`superpower`.`power_name`) DESC LIMIT 1
SELECT `attribute_value` FROM `hero_attribute` JOIN `superhero` ON `hero_attribute`.`hero_id` = `superhero`.`id` WHERE `superhero`.`superhero_name` = 'Abomination'
SELECT `superpower`.`power_name` FROM `superpower` JOIN `hero_power` ON `superpower`.`id` = `hero_power`.`power_id` WHERE `hero_power`.`hero_id` = 1
SELECT COUNT(DISTINCT `hero_id`) FROM `hero_power` WHERE `power_id` = (SELECT `id` FROM `superpower` WHERE `power_name` = 'stealth')
SELECT `superhero`.`full_name` FROM `hero_attribute` JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` JOIN `superhero` ON `hero_attribute`.`hero_id` = `superhero`.`id` WHERE `attribute`.`attribute_name` = 'strength' ORDER BY `hero_attribute`.`attribute_value` DESC LIMIT 1
SELECT COUNT(`superhero`.`id`) / SUM(CASE WHEN `superhero`.`skin_colour_id` = 1 THEN 1 ELSE 0 END) AS average FROM `superhero`
SELECT COUNT(*) FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Dark Horse Comics';
SELECT `superhero`.`superhero_name` FROM `superhero` JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `attribute`.`attribute_name` = 'durability' AND `publisher`.`publisher_name` = 'Dark Horse Comics' ORDER BY `hero_attribute`.`attribute_value` DESC LIMIT 1
SELECT `colour`.`colour` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`full_name` = 'Abraham Sapien'
SELECT `superhero`.`superhero_name` FROM `superhero` JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Flight';
SELECT `colour1`.`colour` AS `eyes`, `colour2`.`colour` AS `hair`, `colour3`.`colour` AS `skin_colour` FROM `superhero` JOIN `colour` AS `colour1` ON `superhero`.`eye_colour_id` = `colour1`.`id` JOIN `colour` AS `colour2` ON `superhero`.`hair_colour_id` = `colour2`.`id` JOIN `colour` AS `colour3` ON `superhero`.`skin_colour_id` = `colour3`.`id` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `publisher`.`publisher_name` = 'Dark Horse Comics' AND `gender`.`gender` = 'Female'
SELECT `superhero`.`superhero_name`, `publisher`.`publisher_name` FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`hair_colour_id` = `superhero`.`skin_colour_id` AND `superhero`.`hair_colour_id` = `superhero`.`eye_colour_id`
SELECT `race`.`race` FROM `superhero` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`superhero_name` = 'A-Bomb'
SELECT ROUND(100.0 * COUNT(CASE WHEN c.`colour` = 'Blue' THEN 1 END) / COUNT(*), 2) AS percentage FROM `superhero` sh JOIN `colour` c ON sh.`skin_colour_id` = c.`id` WHERE sh.`gender_id` = (SELECT `id` FROM `gender` WHERE `gender` = 'Female')
SELECT `superhero`.`superhero_name`, `race`.`race` FROM `superhero` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`full_name` = 'Charles Chandler';
SELECT `gender`.`gender` FROM `superhero` JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `superhero`.`superhero_name` = 'Agent 13'
SELECT `superhero`.`superhero_name` FROM `superhero` JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Adaptation';
SELECT COUNT(*) FROM `hero_power` WHERE `hero_id` = (SELECT `id` FROM `superhero` WHERE `superhero_name` = 'Amazo')
SELECT `superpower`.`power_name` FROM `superhero` JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`full_name` = 'Hunter Zolomon'
SELECT `superhero`.`height_cm` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `colour`.`colour` = 'Amber'
SELECT `superhero`.`superhero_name` FROM `superhero` JOIN `colour` AS `eye_colour` ON `superhero`.`eye_colour_id` = `eye_colour`.`id` JOIN `colour` AS `hair_colour` ON `superhero`.`hair_colour_id` = `hair_colour`.`id` WHERE `eye_colour`.`colour` = 'Black' AND `hair_colour`.`colour` = 'Black';
SELECT DISTINCT `colour`.`colour` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`skin_colour_id` = (SELECT `id` FROM `colour` WHERE `colour` = 'Gold')
SELECT `full_name` FROM `superhero` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Vampire'
SELECT `superhero_name` FROM `superhero` JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `alignment`.`alignment` = 'Neutral'
SELECT COUNT(*) FROM (SELECT `hero_id`, MAX(`attribute_value`) AS max_strength FROM `hero_attribute` JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute_name` = 'Strength' GROUP BY `hero_id` HAVING max_strength = (SELECT MAX(`attribute_value`) FROM `hero_attribute` JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute_name` = 'Strength'))
SELECT `race`.`race`, `alignment`.`alignment` FROM `superhero` JOIN `race` ON `superhero`.`race_id` = `race`.`id` JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `superhero`.`superhero_name` = 'Cameron Hicks'
SELECT ROUND(100.0 * COUNT(CASE WHEN `gender`.`gender` = 'Female' THEN 1 END) / COUNT(*), 2) AS percent FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics'
SELECT AVG(`weight_kg`) AS average_weight FROM `superhero` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Alien';
SELECT (SELECT `weight_kg` FROM `superhero` WHERE `full_name` = 'Emil Blonsky') - (SELECT `weight_kg` FROM `superhero` WHERE `full_name` = 'Charles Chandler') AS `difference`;
SELECT `superhero_name`, `full_name`, AVG(`height_cm`) AS average_height FROM `superhero` GROUP BY `superhero_name`, `full_name`
SELECT `superpower`.`power_name` FROM `superpower` JOIN `hero_power` ON `superpower`.`id` = `hero_power`.`power_id` JOIN `superhero` ON `hero_power`.`hero_id` = `superhero`.`id` WHERE `superhero`.`superhero_name` = 'Abomination';
SELECT COUNT(*) FROM `superhero` WHERE `race_id` = 21 AND `gender_id` = 1
SELECT `superhero_name` FROM `superhero` JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute_name` = 'Speed' ORDER BY `attribute_value` DESC LIMIT 1
SELECT COUNT(*) FROM `superhero` WHERE `alignment_id` = 3
SELECT `attribute`.`attribute_name`, `hero_attribute`.`attribute_value` FROM `hero_attribute` JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` JOIN `superhero` ON `hero_attribute`.`hero_id` = `superhero`.`id` WHERE `superhero`.`superhero_name` = '3-D Man'
SELECT `superhero`.`superhero_name` FROM `superhero` JOIN `colour` AS `eye_colour` ON `superhero`.`eye_colour_id` = `eye_colour`.`id` JOIN `colour` AS `hair_colour` ON `superhero`.`hair_colour_id` = `hair_colour`.`id` WHERE `eye_colour`.`colour` = 'Blue' AND `hair_colour`.`colour` = 'Brown';
SELECT `publisher`.`publisher_name` FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`superhero_name` IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT COUNT(*) FROM `superhero` WHERE `publisher_id` = 1
SELECT ROUND(100.0 * COUNT(CASE WHEN `eye_colour_id` = 7 THEN 1 END) / COUNT(*), 2) AS percentage FROM `superhero`
SELECT CAST(SUM(CASE WHEN `gender_id` = 1 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN `gender_id` = 2 THEN 1 ELSE 0 END) AS ratio FROM `superhero`
SELECT `superhero_name` FROM `superhero` ORDER BY `height_cm` DESC LIMIT 1
SELECT `id` FROM `superpower` WHERE `power_name` = 'cryokinesis'
SELECT `superhero_name` FROM `superhero` WHERE `id` = 294
SELECT `full_name` FROM `superhero` WHERE `weight_kg` IS NULL OR `weight_kg` = 0
SELECT `colour`.`colour` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`full_name` = 'Karen Beecher-Duncan';
SELECT `superpower`.`power_name` FROM `superhero` JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`full_name` = 'Helen Parr';
SELECT `race`.`race` FROM `superhero` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`weight_kg` = 108 AND `superhero`.`height_cm` = 188
SELECT `publisher_name` FROM `publisher` JOIN `superhero` ON `publisher`.`id` = `superhero`.`publisher_id` WHERE `superhero`.`id` = 38
SELECT `race`.`race` FROM `superhero` JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `hero_attribute`.`attribute_value` = (SELECT MAX(`attribute_value`) FROM `hero_attribute`) LIMIT 1;
SELECT `alignment`.`alignment`, `superpower`.`power_name` FROM `superhero` JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`superhero_name` = 'Atom IV'
SELECT `full_name` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `colour`.`colour` = 'Blue' LIMIT 5
SELECT AVG(`attribute_value`) AS average_attribute_value FROM `hero_attribute` JOIN `superhero` ON `hero_attribute`.`hero_id` = `superhero`.`id` WHERE `superhero`.`alignment_id` = 3;
SELECT DISTINCT `colour`.`colour` FROM `colour` JOIN `superhero` ON `colour`.`id` = `superhero`.`skin_colour_id` JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` WHERE `hero_attribute`.`attribute_value` = 100
SELECT COUNT(*) FROM `superhero` WHERE `alignment_id` = 1 AND `gender_id` = 2
SELECT `superhero`.`superhero_name` FROM `superhero` JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` WHERE `hero_attribute`.`attribute_value` BETWEEN 75 AND 80
SELECT `race`.`race` FROM `superhero` JOIN `colour` ON `superhero`.`hair_colour_id` = `colour`.`id` JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `colour`.`colour` = 'blue' AND `gender`.`gender` = 'male'
SELECT (COUNT(CASE WHEN `gender`.`id` = 2 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM `superhero` JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `alignment`.`id` = 2
SELECT (SELECT COUNT(*) FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`weight_kg` = 0 AND `colour`.`id` = 7) - (SELECT COUNT(*) FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`weight_kg` = 0 AND `colour`.`id` = 1) AS `difference`;
SELECT attribute_value FROM hero_attribute JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE attribute.attribute_name = 'Strength' AND superhero.superhero_name = 'Hulk'
SELECT `superpower`.`power_name` FROM `superpower` JOIN `hero_power` ON `superpower`.`id` = `hero_power`.`power_id` JOIN `superhero` ON `hero_power`.`hero_id` = `superhero`.`id` WHERE `superhero`.`superhero_name` = 'Ajax';
SELECT COUNT(*) FROM `superhero` JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `colour`.`colour` = 'Green' AND `alignment`.`alignment` = 'Bad';
SELECT COUNT(*) FROM `superhero` JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `gender`.`gender` = 'Female' AND `publisher`.`publisher_name` = 'Marvel Comics'
SELECT `superhero`.`superhero_name` FROM `superhero` JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Wind Control' ORDER BY `superhero`.`superhero_name` ASC
SELECT `gender`.`gender` FROM `gender` JOIN `superhero` ON `gender`.`id` = `superhero`.`gender_id` JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Phoenix Force' LIMIT 1
SELECT `superhero_name` FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher_name` = 'DC Comics' ORDER BY `weight_kg` DESC LIMIT 1
SELECT AVG(`height_cm`) AS average_height FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `publisher`.`publisher_name` = 'Dark Horse Comics' AND `race`.`race` <> 'Human'
SELECT COUNT(*) FROM hero_attribute JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Speed' AND hero_attribute.attribute_value = 100;
SELECT (SELECT COUNT(*) FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'DC Comics') - (SELECT COUNT(*) FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics') AS `difference`;
SELECT `attribute`.`attribute_name` FROM `superhero` JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `superhero`.`superhero_name` = 'Black Panther' ORDER BY `hero_attribute`.`attribute_value` LIMIT 1
SELECT `colour`.`colour` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`superhero_name` = 'Abomination' LIMIT 1
SELECT `superhero_name` FROM `superhero` ORDER BY `height_cm` DESC LIMIT 1
SELECT `superhero_name` FROM `superhero` WHERE `full_name` = 'Charles Chandler';
SELECT ROUND(100.0 * COUNT(CASE WHEN `gender`.`gender` = 'Female' THEN 1 END) / COUNT(*), 2) AS percentage FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `publisher`.`publisher_name` = 'George Lucas';
SELECT ROUND(100.0 * COUNT(CASE WHEN `alignment`.`alignment` = 'Good' THEN 1 END) / COUNT(*), 2) AS percentage FROM `superhero` JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics';
SELECT COUNT(*) FROM `superhero` WHERE `full_name` LIKE 'John%';
SELECT `hero_id` FROM `hero_attribute` WHERE `attribute_value` = (SELECT MIN(`attribute_value`) FROM `hero_attribute`)
SELECT `full_name` FROM `superhero` WHERE `superhero_name` = 'Alien'
SELECT `superhero`.`full_name` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`weight_kg` < 100 AND `colour`.`colour` = 'brown'
SELECT `attribute_value` FROM `hero_attribute` JOIN `superhero` ON `hero_attribute`.`hero_id` = `superhero`.`id` WHERE `superhero`.`superhero_name` = 'Aquababy'
SELECT `superhero`.`weight_kg`, `race`.`race` FROM `superhero` JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`id` = 40
SELECT AVG(`height_cm`) FROM `superhero` JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `alignment`.`alignment` = 'neutral'
SELECT `hero_id` FROM `hero_power` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Intelligence'
SELECT `colour`.`colour` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`superhero_name` = 'Blackwulf'
SELECT `superpower`.`power_name` FROM `superhero` JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`height_cm` > (SELECT 0.8 * AVG(`height_cm`) FROM `superhero`)
SELECT `driverRef` FROM `qualifying` WHERE `raceId` = 20 ORDER BY `q1` DESC LIMIT 5
SELECT `drivers`.`surname` FROM `qualifying` JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `qualifying`.`raceId` = 19 ORDER BY `qualifying`.`q2` LIMIT 1
SELECT DISTINCT `races`.`year` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`location` = 'Shanghai';
SELECT `races`.`url` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Circuit de Barcelona-Catalunya'
SELECT `races`.`name` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'Germany'
SELECT `circuits`.`circuitId`, `circuits`.`name`, `circuits`.`location`, `circuits`.`country`, `circuits`.`lat`, `circuits`.`lng`, `circuits`.`alt`, `circuits`.`url` FROM `circuits` JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` JOIN `results` ON `races`.`raceId` = `results`.`raceId` JOIN `constructors` ON `results`.`constructorId` = `constructors`.`constructorId` WHERE `constructors`.`name` = 'Renault';
SELECT COUNT(*) FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`year` = 2010 AND `circuits`.`country` NOT IN ('Asia', 'Europe')
SELECT `races`.`name` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'Spain';
SELECT `lat`, `lng` FROM `circuits` JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` WHERE `races`.`name` = 'Australian Grand Prix'
SELECT `url` FROM `races` WHERE `circuitId` = (SELECT `circuitId` FROM `circuits` WHERE `name` = 'Sepang International Circuit')
SELECT `time` FROM `races` WHERE `circuitId` = (SELECT `circuitId` FROM `circuits` WHERE `name` = 'Sepang International Circuit')
SELECT `lat`, `lng` FROM `circuits` JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` WHERE `races`.`name` = 'Abu Dhabi Grand Prix' LIMIT 1
SELECT `c`.`nationality` FROM `constructors` AS `c` JOIN `constructorResults` AS `cr` ON `c`.`constructorId` = `cr`.`constructorId` WHERE `cr`.`raceId` = 24 AND `cr`.`points` = 1
SELECT `q1` FROM `qualifying` JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Bruno' AND `drivers`.`surname` = 'Senna' AND `qualifying`.`raceId` = 354
SELECT `drivers`.`nationality` FROM `qualifying` JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `qualifying`.`raceId` = 355 AND `qualifying`.`q2` = '0:01:40';
SELECT `number` FROM `qualifying` WHERE `raceId` = 903 AND `q3` LIKE '1:54%' LIMIT 1
SELECT COUNT(*) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2007) AND time IS NULL;
SELECT `url` FROM `seasons` WHERE `year` = (SELECT `year` FROM `races` WHERE `raceId` = 901)
SELECT COUNT(DISTINCT `driverId`) FROM `results` WHERE `raceId` = (SELECT `raceId` FROM `races` WHERE `date` = '2015-11-29') AND `positionText` != 'R' AND `time` IS NOT NULL
SELECT `forename`, `surname` FROM `drivers` WHERE `driverId` IN (SELECT `driverId` FROM `results` WHERE `raceId` = 592 AND `time` IS NOT NULL) ORDER BY `dob` LIMIT 1
SELECT `drivers`.`url` FROM `lapTimes` JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` WHERE `lapTimes`.`raceId` = 161 AND `lapTimes`.`time` LIKE '1:27%'
SELECT `drivers`.`nationality` FROM `results` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `results`.`raceId` = 933 ORDER BY `results`.`fastestLapSpeed` DESC LIMIT 1
SELECT `lat`, `lng` FROM `circuits` JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` WHERE `races`.`name` = 'Malaysian Grand Prix' LIMIT 1
SELECT `constructors`.`url` FROM `constructorResults` JOIN `constructors` ON `constructorResults`.`constructorId` = `constructors`.`constructorId` WHERE `constructorResults`.`raceId` = 9 ORDER BY `constructorResults`.`points` DESC LIMIT 1
SELECT `q1` FROM `qualifying` WHERE `raceId` = 345 AND `driverId` = (SELECT `driverId` FROM `drivers` WHERE `driverRef` = 'lucas_di_grassi')
SELECT `drivers`.`nationality` FROM `qualifying` JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `qualifying`.`raceId` = 347 AND `qualifying`.`q2` = '0:01:15';
SELECT `drivers`.`code` FROM `qualifying` JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `qualifying`.`raceId` = 45 AND `qualifying`.`q3` LIKE '1:33%'
SELECT `time` FROM `results` WHERE `raceId` = 743 AND `driverId` = (SELECT `driverId` FROM `drivers` WHERE `driverRef` = 'mclaren' AND `forename` = 'Bruce' LIMIT 1)
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `results` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`name` = 'San Marino Grand Prix' AND `races`.`year` = 2006 AND `results`.`position` = 2 LIMIT 1;
SELECT `seasons`.`url` FROM `seasons` JOIN `races` ON `seasons`.`year` = `races`.`year` WHERE `races`.`raceId` = 901
SELECT COUNT(DISTINCT `driverId`) FROM `results` WHERE `raceId` = (SELECT `raceId` FROM `races` WHERE `date` = '2015-11-29') AND `statusId` != (SELECT `statusId` FROM `status` WHERE `status` = 'Finished')
SELECT `forename`, `surname` FROM `drivers` WHERE `driverId` IN (SELECT `driverId` FROM `results` WHERE `raceId` = 872 AND `time` IS NOT NULL) ORDER BY `dob` DESC LIMIT 1
SELECT `forename`, `surname` FROM `drivers` WHERE `driverId` = (SELECT `driverId` FROM `lapTimes` WHERE `raceId` = 348 ORDER BY `time` LIMIT 1)
SELECT `d`.`nationality` FROM `results` `r` JOIN `drivers` `d` ON `r`.`driverId` = `d`.`driverId` ORDER BY `r`.`fastestLapSpeed` DESC LIMIT 1
SELECT (100 * (SELECT `fastestLapSpeed` FROM `results` WHERE `raceId` = 853 AND `driverId` = (SELECT `driverId` FROM `drivers` WHERE `forename` = 'Paul' AND `surname` = 'di Resta')) - (SELECT `fastestLapSpeed` FROM `results` WHERE `raceId` = 854 AND `driverId` = (SELECT `driverId` FROM `drivers` WHERE `forename` = 'Paul' AND `surname` = 'di Resta'))) / (SELECT `fastestLapSpeed` FROM `results` WHERE `raceId` = 853 AND `driverId` = (SELECT `driverId` FROM `drivers` WHERE `forename` = 'Paul' AND `surname` = 'di Resta')) AS `percentage`;
SELECT DIVIDE(COUNT(`results`.`driverId`), COUNT(DISTINCT `results`.`driverId`)) AS percentage FROM `results` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`date` = '1983-07-16'
SELECT MIN(`year`) FROM `races` WHERE `name` = 'Singapore Grand Prix';
SELECT `name` FROM `races` WHERE `year` = 2005 ORDER BY `name` DESC
SELECT `name` FROM `races` WHERE `year` = (SELECT MIN(`year`) FROM `races`) AND strftime('%m', `date`) = (SELECT strftime('%m', MIN(`date`)) FROM `races` WHERE `year` = (SELECT MIN(`year`) FROM `races`))
SELECT `name`, `date` FROM `races` WHERE `year` = 1999 AND `round` = (SELECT MAX(`round`) FROM `races` WHERE `year` = 1999)
SELECT `year` FROM `races` GROUP BY `year` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `races`.`name` FROM `races` WHERE `races`.`year` = 2017 AND `races`.`raceId` NOT IN (SELECT `races`.`raceId` FROM `races` WHERE `races`.`year` = 2000)
SELECT `circuits`.`country`, `circuits`.`name`, `circuits`.`location` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`name` = 'European Grand Prix' ORDER BY `races`.`year` LIMIT 1
SELECT MAX(`year`) FROM `races` WHERE `name` = 'British Grand Prix' AND `circuitId` = (SELECT `circuitId` FROM `circuits` WHERE `name` = 'Brands Hatch')
SELECT COUNT(DISTINCT `races`.`year`) FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Silverstone Circuit' AND `races`.`name` = 'British Grand Prix';
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `drivers` JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`year` = 2010 AND `races`.`name` = 'Singapore Grand Prix' ORDER BY `results`.`position`
SELECT `forename`, `surname`, MAX(`points`) AS `points` FROM `driverStandings` JOIN `drivers` USING (`driverId`) GROUP BY `driverId` ORDER BY `points` DESC LIMIT 1
SELECT d.`forename`, d.`surname`, ds.`points` FROM `drivers` d JOIN `driverStandings` ds ON d.`driverId` = ds.`driverId` JOIN `races` r ON ds.`raceId` = r.`raceId` WHERE r.`year` = 2017 AND r.`name` = 'Chinese Grand Prix' ORDER BY ds.`points` DESC LIMIT 3
SELECT `drivers`.`forename`, `drivers`.`surname`, `races`.`name`, MIN(`lapTimes`.`milliseconds`) AS best_lap_time FROM `lapTimes` JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` GROUP BY `lapTimes`.`raceId` ORDER BY best_lap_time LIMIT 1;
SELECT AVG(`lapTimes`.`milliseconds`) AS `average_lap_time` FROM `lapTimes` JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' AND `races`.`name` = 'Malaysian Grand Prix' AND `races`.`year` = 2009
SELECT ROUND(100.0 * COUNT(CASE WHEN `ds`.`position` > 1 THEN 1 END) / COUNT(*), 2) AS percentage FROM `driverStandings` `ds` JOIN `drivers` `d` ON `ds`.`driverId` = `d`.`driverId` JOIN `races` `r` ON `ds`.`raceId` = `r`.`raceId` WHERE `d`.`surname` = 'Hamilton' AND `r`.`year` >= 2010
SELECT `drivers`.`forename`, `drivers`.`surname`, `drivers`.`nationality`, MAX(`driverStandings`.`points`) AS max_points FROM `drivers` JOIN `driverStandings` ON `drivers`.`driverId` = `driverStandings`.`driverId` GROUP BY `drivers`.`driverId` ORDER BY COUNT(`driverStandings`.`wins`) DESC LIMIT 1
SELECT MIN(YEAR(CURRENT_TIMESTAMP) - YEAR(`dob`)) AS age, `forename`, `surname` FROM `drivers` WHERE `nationality` = 'Japanese' ORDER BY `dob` DESC LIMIT 1
SELECT `circuits`.`name` FROM `circuits` JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` WHERE `races`.`year` BETWEEN 1990 AND 2000 GROUP BY `circuits`.`circuitId` HAVING COUNT(`races`.`raceId`) = 4
SELECT `circuits`.`name`, `circuits`.`location`, `races`.`name` FROM `circuits` JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` WHERE `circuits`.`country` = 'USA' AND `races`.`year` = 2006
SELECT `races`.`name` AS `race_name`, `circuits`.`name` AS `circuit_name`, `circuits`.`location` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`date` BETWEEN '2005-09-01' AND '2005-09-30'
SELECT `races`.`name` FROM `results` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Alex' AND `drivers`.`surname` = 'Yoong' AND `results`.`position` < 20
SELECT COUNT(*) FROM `results` r JOIN `races` ra ON r.`raceId` = ra.`raceId` JOIN `drivers` d ON r.`driverId` = d.`driverId` WHERE d.`driverRef` = 'michael_schumacher' AND ra.`name` = 'Malaysian Grand Prix' AND r.`position` = 1
SELECT `races`.`name`, `races`.`year` FROM `results` JOIN `races` ON `results`.`raceId` = `races`.`raceId` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Michael' AND `drivers`.`surname` = 'Schumacher' ORDER BY `results`.`milliseconds` LIMIT 1;
SELECT AVG(`points`) AS average_points FROM `results` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`driverRef` = 'eddie_irvine' AND `races`.`year` = 2000
SELECT r.`name`, ds.`points` FROM `races` r JOIN `driverStandings` ds ON r.`raceId` = ds.`raceId` JOIN `drivers` d ON ds.`driverId` = d.`driverId` WHERE d.`forename` = 'Lewis' AND d.`surname` = 'Hamilton' AND r.`year` = (SELECT MIN(r2.`year`) FROM `races` r2 JOIN `driverStandings` ds2 ON r2.`raceId` = ds2.`raceId` JOIN `drivers` d2 ON ds2.`driverId` = d2.`driverId` WHERE d2.`forename` = 'Lewis' AND d2.`surname` = 'Hamilton') LIMIT 1;
SELECT `races`.`name`, `circuits`.`country` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`year` = 2017 ORDER BY `races`.`date`
SELECT `races`.`name`, `races`.`year`, `circuits`.`location` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` JOIN `results` ON `races`.`raceId` = `results`.`raceId` GROUP BY `races`.`raceId` ORDER BY MAX(`results`.`laps`) DESC LIMIT 1;
SELECT (COUNT(*) FILTER (WHERE `country` = 'Germany') * 100.0 / COUNT(*)) AS percentage FROM `races` WHERE `name` = 'European Grand Prix';
SELECT `lat`, `lng` FROM `circuits` WHERE `name` = 'Silverstone Circuit'
SELECT `name`, `lat` FROM `circuits` WHERE `name` IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY `lat` DESC LIMIT 1
SELECT `circuitRef` FROM `circuits` WHERE `name` = 'Marina Bay Street Circuit' LIMIT 1
SELECT `country` FROM `circuits` ORDER BY `alt` DESC LIMIT 1
SELECT COUNT(*) FROM `drivers` WHERE `code` IS NULL
SELECT `country` FROM `drivers` ORDER BY `dob` LIMIT 1
SELECT `surname` FROM `drivers` WHERE `nationality` = 'Italian'
SELECT `url` FROM `drivers` WHERE `driverRef` = 'anthony_davidson'
SELECT `driverRef` FROM `drivers` WHERE `forename` = 'Lewis' AND `surname` = 'Hamilton'
SELECT `circuits`.`name` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`year` = 2009 AND `races`.`name` = 'Spanish Grand Prix'
SELECT DISTINCT `races`.`year` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Silverstone Circuit'
SELECT url FROM circuits WHERE name = 'Silverstone Circuit'
SELECT `time` FROM `races` WHERE `year` = 2010 AND `circuitId` = (SELECT `circuitId` FROM `circuits` WHERE `name` = 'Yas Marina Circuit')
SELECT COUNT(*) FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'Italy'
SELECT `date` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Barcelona-Catalunya';
SELECT `circuits`.`url` FROM `circuits` JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` WHERE `races`.`name` = 'Spanish Grand Prix' AND `races`.`year` = 2009
SELECT MIN(`fastestLapTime`) FROM `results` WHERE `driverId` = (SELECT `driverId` FROM `drivers` WHERE `driverRef` = 'hamilton')
SELECT `forename`, `surname` FROM `drivers` WHERE `driverId` = (SELECT `driverId` FROM `results` ORDER BY `fastestLapSpeed` DESC LIMIT 1)
SELECT d.`driverRef` FROM `drivers` d JOIN `results` r ON d.`driverId` = r.`driverId` JOIN `races` ra ON r.`raceId` = ra.`raceId` WHERE ra.`name` = 'Canadian Grand Prix' AND ra.`year` = 2007 AND r.`position` = 1 LIMIT 1
SELECT `races`.`name` FROM `races` JOIN `results` ON `races`.`raceId` = `results`.`raceId` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`driverRef` = 'hamilton';
SELECT `races`.`name` FROM `results` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' ORDER BY `results`.`rank` LIMIT 1
SELECT MAX(`fastestLapSpeed`) FROM `results` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`name` = 'Spanish Grand Prix' AND `races`.`year` = 2009
SELECT DISTINCT `races`.`year` FROM `races` JOIN `results` ON `races`.`raceId` = `results`.`raceId` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`driverRef` = 'hamilton';
SELECT `positionOrder` FROM `results` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' AND `races`.`name` = 'Chinese Grand Prix' AND `races`.`year` = 2008
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `results` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`year` = 1989 AND `races`.`name` = 'Australian Grand Prix' AND `results`.`grid` = 4
SELECT COUNT(DISTINCT `driverId`) FROM `results` WHERE `raceId` = (SELECT `raceId` FROM `races` WHERE `year` = 2008 AND `name` = 'Australian Grand Prix') AND `time` IS NOT NULL
SELECT `time` FROM `lapTimes` WHERE `driverId` = (SELECT `driverId` FROM `drivers` WHERE `driverRef` = 'hamilton') AND `raceId` = (SELECT `raceId` FROM `races` WHERE `year` = 2008 AND `name` = 'Australian Grand Prix') ORDER BY `milliseconds` ASC LIMIT 1
SELECT `time` FROM `results` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`name` = 'Australian Grand Prix' AND `races`.`year` = 2008 AND `results`.`position` = 2
SELECT `drivers`.`forename`, `drivers`.`surname`, `drivers`.`url` FROM `driverStandings` JOIN `drivers` ON `driverStandings`.`driverId` = `drivers`.`driverId` JOIN `races` ON `driverStandings`.`raceId` = `races`.`raceId` WHERE `races`.`year` = 2008 AND `races`.`name` = 'Australian Grand Prix' AND `driverStandings`.`position` = 1 LIMIT 1
SELECT COUNT(DISTINCT `drivers`.`driverId`) FROM `drivers` JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`nationality` = 'British' AND `races`.`year` = 2008 AND `races`.`name` = 'Australian Grand Prix';
SELECT COUNT(DISTINCT `results`.`driverId`) FROM `results` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`year` = 2008 AND `races`.`name` = 'Chinese Grand Prix' AND `results`.`time` IS NOT NULL
SELECT SUM(`points`) FROM `driverStandings` JOIN `drivers` ON `driverStandings`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`driverRef` = 'hamilton'
SELECT AVG(CAST(SUBSTR(`fastestLapTime`, 1, 2) AS INTEGER) * 60 + CAST(SUBSTR(`fastestLapTime`, 4, 2) AS INTEGER) + CAST(SUBSTR(`fastestLapTime`, 7, 3) AS FLOAT) / 1000) AS avg_fastest_lap_time_seconds FROM `results` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`driverRef` = 'hamilton';
SELECT COUNT(`lapTimes`.`raceId`) * 1.0 / (SELECT COUNT(DISTINCT `lapTimes`.`driverId`) FROM `lapTimes` JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `races`.`year` = 2008 AND `races`.`name` = 'Australian Grand Prix') AS rate FROM `lapTimes` JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `races`.`year` = 2008 AND `races`.`name` = 'Australian Grand Prix' AND `lapTimes`.`time` IS NOT NULL
WITH champion_time AS (SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND position = 1), last_driver_time AS (SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND position = (SELECT MAX(position) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND position IS NOT NULL)) SELECT (strftime('%s', last_driver_time.time) - strftime('%s', champion_time.time)) * 100.0 / strftime('%s', last_driver_time.time) AS faster_percentage FROM champion_time, last_driver_time;
SELECT COUNT(*) FROM `circuits` WHERE `location` = 'Adelaide' AND `country` = 'Australia';
SELECT `lat`, `lng` FROM `circuits` WHERE `country` = 'USA'
SELECT COUNT(*) FROM `drivers` WHERE `nationality` = 'British' AND strftime('%Y', `dob`) > '1980';
SELECT MAX(`points`) FROM `constructorStandings` WHERE `constructorId` IN (SELECT `constructorId` FROM `constructors` WHERE `nationality` = 'British')
SELECT `constructorId`, MAX(`points`) FROM `constructorStandings`
SELECT `constructors`.`name` FROM `constructors` JOIN `constructorResults` ON `constructors`.`constructorId` = `constructorResults`.`constructorId` WHERE `constructorResults`.`raceId` = 291 AND `constructorResults`.`points` = 0;
SELECT COUNT(DISTINCT `constructorId`) FROM `constructorResults` WHERE `points` = 0 AND `constructorId` IN (SELECT `constructorId` FROM `constructors` WHERE `nationality` = 'Japanese') GROUP BY `constructorId` HAVING COUNT(`raceId`) = 2
SELECT DISTINCT `constructors`.`name` FROM `constructors` JOIN `constructorStandings` ON `constructors`.`constructorId` = `constructorStandings`.`constructorId` WHERE `constructorStandings`.`position` = 1
SELECT COUNT(DISTINCT `constructors`.`constructorId`) FROM `constructors` JOIN `results` ON `constructors`.`constructorId` = `results`.`constructorId` WHERE `constructors`.`nationality` = 'French' AND `results`.`laps` > 50
SELECT ROUND(100.0 * COUNT(DISTINCT CASE WHEN `r`.`time` IS NOT NULL THEN `d`.`driverId` END) / COUNT(DISTINCT `d`.`driverId`), 2) AS completion_percentage FROM `drivers` AS `d` JOIN `results` AS `r` ON `d`.`driverId` = `r`.`driverId` JOIN `races` AS `ra` ON `r`.`raceId` = `ra`.`raceId` WHERE `d`.`nationality` = 'Japanese' AND `ra`.`year` BETWEEN 2007 AND 2009
SELECT `races`.`year`, AVG(CAST(SUBSTR(`results`.`time`, 1, 2) * 3600 + SUBSTR(`results`.`time`, 4, 2) * 60 + SUBSTR(`results`.`time`, 7, 2) + SUBSTR(`results`.`time`, 10) / 1000.0 AS REAL)) AS avg_time_seconds FROM `results` JOIN `races` ON `results`.`raceId` = `races`.`raceId` JOIN `driverStandings` ON `results`.`raceId` = `driverStandings`.`raceId` AND `results`.`driverId` = `driverStandings`.`driverId` WHERE `driverStandings`.`position` = 1 AND `races`.`year` < 1975 AND `results`.`time` IS NOT NULL GROUP BY `races`.`year`
SELECT `forename`, `surname` FROM `drivers` WHERE `driverId` IN (SELECT `driverId` FROM `driverStandings` WHERE `position` = 2) AND `dob` > '1975-12-31';
SELECT COUNT(*) FROM `drivers` d JOIN `results` r ON d.`driverId` = r.`driverId` WHERE d.`nationality` = 'Italian' AND r.`time` IS NULL
SELECT `forename`, `surname` FROM `drivers` WHERE `driverId` = (SELECT `driverId` FROM `lapTimes` ORDER BY `milliseconds` ASC LIMIT 1)
SELECT MIN(`lap`) FROM `lapTimes` JOIN `driverStandings` ON `lapTimes`.`driverId` = `driverStandings`.`driverId` AND `lapTimes`.`raceId` = `driverStandings`.`raceId` WHERE `driverStandings`.`position` = 1 AND `lapTimes`.`raceId` IN (SELECT `raceId` FROM `races` WHERE `year` = 2009)
SELECT AVG(`fastestLapSpeed`) AS avg_fastest_lap_speed FROM `results` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`name` = 'Spanish Grand Prix' AND `races`.`year` = 2009
SELECT `races`.`name`, `races`.`year` FROM `results` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `results`.`milliseconds` IS NOT NULL ORDER BY `results`.`milliseconds` ASC LIMIT 1;
SELECT (COUNT(DISTINCT CASE WHEN d.`dob` < '1985-01-01' AND r.`laps` > 50 THEN d.`driverId` END) * 100.0 / COUNT(DISTINCT CASE WHEN r.`year` BETWEEN 2000 AND 2005 THEN d.`driverId` END)) AS percentage FROM `drivers` d JOIN `results` r ON d.`driverId` = r.`driverId` JOIN `races` ra ON r.`raceId` = ra.`raceId` WHERE ra.`year` BETWEEN 2000 AND 2005
SELECT COUNT(DISTINCT `lapTimes`.`driverId`) FROM `lapTimes` JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`nationality` = 'French' AND `lapTimes`.`milliseconds` < 120000
SELECT `code` FROM `drivers` WHERE `nationality` = 'American'
SELECT `raceId` FROM `races` WHERE `year` = 2009
SELECT COUNT(DISTINCT `driverId`) AS `driver_count` FROM `results` WHERE `raceId` = 18
SELECT code FROM drivers ORDER BY dob DESC LIMIT 3
SELECT `driverRef` FROM `drivers` WHERE `forename` = 'Robert' AND `surname` = 'Kubica'
SELECT COUNT(*) FROM `drivers` WHERE `nationality` = 'British' AND strftime('%Y', `dob`) = '1980';
SELECT d.`driverId`, d.`forename`, d.`surname`, MIN(lt.`time`) AS `earliestLapTime` FROM `drivers` d JOIN `lapTimes` lt ON d.`driverId` = lt.`driverId` WHERE d.`nationality` = 'German' AND d.`dob` BETWEEN '1980-01-01' AND '1990-12-31' GROUP BY d.`driverId` ORDER BY `earliestLapTime` LIMIT 3
SELECT `driverRef` FROM `drivers` WHERE `nationality` = 'German' ORDER BY `dob` LIMIT 1
SELECT DISTINCT `drivers`.`driverId`, `drivers`.`code` FROM `drivers` JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` WHERE `drivers`.`dob` LIKE '1971-%' AND `results`.`fastestLapTime` IS NOT NULL
SELECT `drivers`.`driverId`, `drivers`.`driverRef`, `drivers`.`forename`, `drivers`.`surname`, MAX(`lapTimes`.`time`) AS `latest_lap_time` FROM `drivers` JOIN `lapTimes` ON `drivers`.`driverId` = `lapTimes`.`driverId` WHERE `drivers`.`nationality` = 'Spanish' AND `drivers`.`dob` < '1982-01-01' GROUP BY `drivers`.`driverId` ORDER BY `latest_lap_time` DESC LIMIT 10;
SELECT `races`.`year` FROM `results` JOIN `races` ON `results`.`raceId` = `races`.`raceId` ORDER BY `results`.`fastestLapTime` LIMIT 1
SELECT `year` FROM `races` JOIN `lapTimes` ON `races`.`raceId` = `lapTimes`.`raceId` ORDER BY `lapTimes`.`time` DESC LIMIT 1
SELECT `driverId` FROM `lapTimes` WHERE `lap` = 1 ORDER BY `time` ASC LIMIT 5
SELECT COUNT(*) FROM results WHERE raceId > 50 AND raceId < 100 AND statusId = 2 AND time IS NOT NULL
SELECT `location`, `lat`, `lng`, COUNT(*) AS `times_held` FROM `circuits` WHERE `country` = 'Austria' GROUP BY `location`, `lat`, `lng`
SELECT `races`.`round` FROM `results` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `results`.`time` IS NOT NULL GROUP BY `races`.`round` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `drivers`.`driverRef`, `drivers`.`nationality`, `drivers`.`dob` FROM `qualifying` JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `qualifying`.`raceId` = 23 AND `qualifying`.`q2` IS NOT NULL
SELECT r.`year`, r.`name`, r.`date`, r.`time` FROM `races` r JOIN `qualifying` q ON r.`raceId` = q.`raceId` JOIN `drivers` d ON q.`driverId` = d.`driverId` WHERE d.`dob` = (SELECT MAX(`dob`) FROM `drivers`) AND r.`date` = (SELECT MIN(`date`) FROM `races` r2 JOIN `qualifying` q2 ON r2.`raceId` = q2.`raceId` JOIN `drivers` d2 ON q2.`driverId` = d2.`driverId` WHERE d2.`dob` = (SELECT MAX(`dob`) FROM `drivers`)) LIMIT 1;
SELECT COUNT(DISTINCT `drivers`.`driverId`) FROM `drivers` JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` WHERE `drivers`.`nationality` = 'American' AND `results`.`statusId` = (SELECT `statusId` FROM `status` WHERE `status` = 'Puncture')
SELECT `constructors`.`url` FROM `constructors` JOIN `constructorStandings` ON `constructors`.`constructorId` = `constructorStandings`.`constructorId` WHERE `constructors`.`nationality` = 'Italian' ORDER BY `constructorStandings`.`points` DESC LIMIT 1
SELECT `url` FROM `constructors` WHERE `constructorId` = (SELECT `constructorId` FROM `constructorStandings` GROUP BY `constructorId` ORDER BY SUM(`wins`) DESC LIMIT 1)
SELECT `drivers`.`driverId`, `drivers`.`driverRef`, `drivers`.`forename`, `drivers`.`surname`, `lapTimes`.`time` FROM `lapTimes` JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `races`.`name` = 'French Grand Prix' AND `lapTimes`.`lap` = 3 ORDER BY `lapTimes`.`time` DESC LIMIT 1
SELECT `races`.`name`, `lapTimes`.`time`, `lapTimes`.`milliseconds` FROM `lapTimes` JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `lapTimes`.`lap` = 1 ORDER BY `lapTimes`.`milliseconds` ASC LIMIT 1;
SELECT AVG(`fastestLapTime`) FROM `results` WHERE `raceId` = (SELECT `raceId` FROM `races` WHERE `year` = 2006 AND `name` = 'United States Grand Prix') AND `rank` < 11
SELECT d.`forename` || ' ' || d.`surname` AS full_name, AVG(p.`duration`) AS avg_duration FROM `drivers` d JOIN `pitStops` p ON d.`driverId` = p.`driverId` WHERE d.`nationality` = 'German' AND d.`dob` BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY d.`driverId` ORDER BY avg_duration ASC LIMIT 3
SELECT d.`forename`, d.`surname`, r.`time` FROM `results` r JOIN `drivers` d ON r.`driverId` = d.`driverId` JOIN `races` ra ON r.`raceId` = ra.`raceId` WHERE ra.`year` = 2008 AND ra.`name` = 'Canadian Grand Prix' AND r.`position` = 1
SELECT `constructors`.`constructorRef`, `constructors`.`url` FROM `results` JOIN `races` ON `results`.`raceId` = `races`.`raceId` JOIN `constructors` ON `results`.`constructorId` = `constructors`.`constructorId` WHERE `races`.`year` = 2009 AND `races`.`name` = 'Singapore Grand Prix' AND `results`.`position` = 1 LIMIT 1;
SELECT `forename` || ' ' || `surname` AS full_name, `dob` FROM `drivers` WHERE `nationality` = 'Austrian' AND `dob` BETWEEN '1981-01-01' AND '1991-12-31'
SELECT `forename` || ' ' || `surname` AS full_name, `url`, `dob` FROM `drivers` WHERE `nationality` = 'German' AND `dob` BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY `dob` DESC
SELECT `location`, `country`, `lat`, `lng` FROM `circuits` WHERE `name` = 'Hungaroring'
SELECT c.`name`, c.`nationality`, SUM(cr.`points`) AS total_points FROM constructors c JOIN constructorResults cr ON c.`constructorId` = cr.`constructorId` JOIN races r ON cr.`raceId` = r.`raceId` WHERE r.`name` = 'Monaco Grand Prix' AND r.`year` BETWEEN 1980 AND 2010 GROUP BY c.`constructorId` ORDER BY total_points DESC LIMIT 1
SELECT AVG(`r`.`points`) AS `average_score` FROM `results` `r` JOIN `drivers` `d` ON `r`.`driverId` = `d`.`driverId` JOIN `races` `ra` ON `r`.`raceId` = `ra`.`raceId` WHERE `d`.`driverRef` = 'hamilton' AND `ra`.`name` = 'Turkish Grand Prix';
SELECT `year`, AVG(`race_count`) AS `avg_races` FROM (SELECT `year`, COUNT(*) AS `race_count` FROM `races` WHERE `date` BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY `year`) GROUP BY `year`
SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT SUM(`wins`) FROM `driverStandings` WHERE `position` = 91
SELECT `races`.`name` FROM `results` JOIN `races` ON `results`.`raceId` = `races`.`raceId` ORDER BY `results`.`fastestLapTime` LIMIT 1
SELECT `location` || ', ' || `country` AS full_location FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `date` = (SELECT MAX(`date`) FROM `races`) LIMIT 1
SELECT d.`forename`, d.`surname` FROM `qualifying` q JOIN `drivers` d ON q.`driverId` = d.`driverId` JOIN `races` r ON q.`raceId` = r.`raceId` JOIN `circuits` c ON r.`circuitId` = c.`circuitId` WHERE c.`name` = 'Marina Bay Street Circuit' AND r.`year` = 2008 AND q.`position` = 1 AND r.`round` = 3 ORDER BY q.`q3` LIMIT 1
SELECT `forename` || ' ' || `surname` AS full_name, `nationality`, `name` AS race_name FROM `drivers` JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `dob` = (SELECT MAX(`dob`) FROM `drivers`) ORDER BY `races`.`date` LIMIT 1;
SELECT COUNT(*) FROM results WHERE driverId = (SELECT driverId FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Canadian Grand Prix') AND statusId = 3 GROUP BY driverId ORDER BY COUNT(*) DESC LIMIT 1) AND statusId = 3;
SELECT d.`forename` || ' ' || d.`surname` AS full_name, SUM(ds.`wins`) AS total_wins FROM `drivers` d JOIN `driverStandings` ds ON d.`driverId` = ds.`driverId` WHERE d.`dob` = (SELECT MIN(`dob`) FROM `drivers`) GROUP BY d.`driverId`
SELECT MAX(`duration`) FROM `pitStops`
SELECT MIN(`time`) FROM `lapTimes`
SELECT MAX(`duration`) FROM `pitStops` WHERE `driverId` = (SELECT `driverId` FROM `drivers` WHERE `driverRef` = 'hamilton')
SELECT `lap` FROM `pitStops` JOIN `drivers` ON `pitStops`.`driverId` = `drivers`.`driverId` JOIN `races` ON `pitStops`.`raceId` = `races`.`raceId` WHERE `drivers`.`driverRef` = 'hamilton' AND `races`.`year` = 2011 AND `races`.`name` = 'Australian Grand Prix' LIMIT 1
SELECT `pitStops`.`driverId`, `drivers`.`forename`, `drivers`.`surname`, `pitStops`.`duration` FROM `pitStops` JOIN `drivers` ON `pitStops`.`driverId` = `drivers`.`driverId` JOIN `races` ON `pitStops`.`raceId` = `races`.`raceId` WHERE `races`.`year` = 2011 AND `races`.`name` = 'Australian Grand Prix';
SELECT MIN(`time`) FROM `lapTimes` WHERE `driverId` = (SELECT `driverId` FROM `drivers` WHERE `driverRef` = 'hamilton') AND `raceId` IN (SELECT `raceId` FROM `races` WHERE `name` LIKE '%Formula_1%')
SELECT d.`forename`, d.`surname` FROM `drivers` d JOIN `lapTimes` lt ON d.`driverId` = lt.`driverId` ORDER BY lt.`time` LIMIT 20;
SELECT `lapTimes`.`position` FROM `lapTimes` JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`driverRef` = 'hamilton' ORDER BY `lapTimes`.`time` LIMIT 1
SELECT MIN(`time`) FROM `lapTimes` JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `races`.`name` = 'Austrian Grand Prix'
SELECT `races`.`name`, MIN(`lapTimes`.`time`) AS `lap_record` FROM `lapTimes` JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'Italy' GROUP BY `races`.`name`
SELECT `races`.`name` FROM `lapTimes` JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Austrian Grand Prix Circuit' ORDER BY `lapTimes`.`time` LIMIT 1
SELECT p.`duration` FROM `pitStops` p JOIN `lapTimes` l ON p.`raceId` = l.`raceId` AND p.`driverId` = l.`driverId` JOIN `races` r ON l.`raceId` = r.`raceId` WHERE r.`name` = 'Austrian Grand Prix' ORDER BY l.`time` LIMIT 1;
SELECT `lat`, `lng` FROM `circuits` WHERE `circuitId` IN (SELECT `circuitId` FROM `races` WHERE `raceId` IN (SELECT `raceId` FROM `lapTimes` WHERE `time` = '1:29.488'))
SELECT AVG(`milliseconds`) FROM `pitStops` JOIN `drivers` ON `pitStops`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`driverRef` = 'hamilton'
SELECT AVG(`milliseconds`) AS `average` FROM `lapTimes` JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'Italy';
SELECT `player_api_id` FROM `Player_Attributes` WHERE `overall_rating` = (SELECT MAX(`overall_rating`) FROM `Player_Attributes`) LIMIT 1
SELECT `Player`.`height`, `Player`.`player_name` FROM `Player` ORDER BY `Player`.`height` DESC LIMIT 1
SELECT `preferred_foot` FROM `Player_Attributes` WHERE `potential` = (SELECT MIN(`potential`) FROM `Player_Attributes`) LIMIT 1
SELECT COUNT(*) FROM `Player_Attributes` WHERE `overall_rating` >= 60 AND `overall_rating` < 65 AND `defensive_work_rate` = 'low';
SELECT `player_api_id` FROM `Player_Attributes` ORDER BY `crossing` DESC LIMIT 5
SELECT `League`.`name` FROM `Match` JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `Match`.`season` = '2015/2016' GROUP BY `League`.`name` ORDER BY SUM(`Match`.`home_team_goal` + `Match`.`away_team_goal`) DESC LIMIT 1
SELECT `home_team_api_id`, COUNT(*) AS losses FROM `Match` WHERE `season` = '2015/2016' AND `home_team_goal` < `away_team_goal` GROUP BY `home_team_api_id` ORDER BY losses ASC LIMIT 1
SELECT `Player`.`player_name` FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` ORDER BY `Player_Attributes`.`penalties` DESC LIMIT 10
SELECT `Team`.`team_long_name` FROM `Match` JOIN `Team` ON `Match`.`away_team_api_id` = `Team`.`team_api_id` JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `League`.`name` = 'Scotland Premier League' AND `Match`.`season` = '2009/2010' AND `Match`.`away_team_goal` > `Match`.`home_team_goal` GROUP BY `Team`.`team_long_name` ORDER BY COUNT(*) DESC LIMIT 1;
SELECT `team_long_name`, `buildUpPlaySpeed` FROM `Team_Attributes` JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` ORDER BY `buildUpPlaySpeed` DESC LIMIT 4
SELECT `League`.`name` FROM `Match` JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `Match`.`season` = '2015/2016' GROUP BY `Match`.`league_id` ORDER BY SUM(`Match`.`home_team_goal` = `Match`.`away_team_goal`) DESC LIMIT 1;
SELECT `Player`.`player_name`, (strftime('%Y', 'now') - strftime('%Y', `Player`.`birthday`)) - (strftime('%m-%d', 'now') < strftime('%m-%d', `Player`.`birthday`)) AS `age` FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player_Attributes`.`sprint_speed` >= 97 AND strftime('%Y', `Player_Attributes`.`date`) BETWEEN '2013' AND '2015'
SELECT `League`.`name`, COUNT(`Match`.`league_id`) AS match_count FROM `Match` JOIN `League` ON `Match`.`league_id` = `League`.`id` GROUP BY `Match`.`league_id` ORDER BY match_count DESC LIMIT 1
SELECT AVG(`height`) AS average_height FROM `Player` WHERE `birthday` >= '1990-01-01 00:00:00' AND `birthday` < '1996-01-01 00:00:00'
SELECT `player_api_id` FROM `Player_Attributes` WHERE `date` LIKE '2010%' AND `overall_rating` = (SELECT MAX(`overall_rating`) FROM `Player_Attributes` WHERE `date` LIKE '2010%')
SELECT `team_fifa_api_id` FROM `Team_Attributes` WHERE `buildUpPlaySpeed` > 50 AND `buildUpPlaySpeed` < 60
SELECT `t`.`team_long_name` FROM `Team_Attributes` AS `ta` JOIN `Team` AS `t` ON `ta`.`team_api_id` = `t`.`team_api_id` WHERE `ta`.`buildUpPlayPassing` > (SELECT SUM(`buildUpPlayPassing`) / COUNT(*) FROM `Team_Attributes` WHERE `buildUpPlayPassing` IS NOT NULL) AND strftime('%Y', `ta`.`date`) = '2012'
SELECT (COUNT(CASE WHEN pa.`preferred_foot` = 'left' THEN 1 END) * 100.0 / COUNT(*)) AS left_foot_percentage FROM `Player_Attributes` pa JOIN `Player` p ON pa.`player_fifa_api_id` = p.`player_fifa_api_id` WHERE strftime('%Y', p.`birthday`) BETWEEN '1987' AND '1992';
SELECT l.`name`, SUM(m.`home_team_goal` + m.`away_team_goal`) AS total_goals FROM `Match` m JOIN `League` l ON m.`league_id` = l.`id` GROUP BY l.`name` ORDER BY total_goals ASC LIMIT 5;
SELECT SUM(`long_shots`) / COUNT(`player_fifa_api_id`) AS average_long_shots FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Ahmed Samir Farag'
SELECT `Player`.`player_name` FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`height` > 180 GROUP BY `Player`.`player_name` ORDER BY AVG(`Player_Attributes`.`heading_accuracy`) DESC LIMIT 10;
SELECT `Team`.`team_long_name` FROM `Team_Attributes` JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team_Attributes`.`buildUpPlayDribblingClass` = 'Normal' AND `Team_Attributes`.`date` >= '2014-01-01 00:00:00' AND `Team_Attributes`.`date` <= '2014-01-31 00:00:00' AND `Team_Attributes`.`chanceCreationPassing` < (SELECT SUM(`chanceCreationPassing`) / COUNT(`id`) FROM `Team_Attributes`) ORDER BY `Team_Attributes`.`chanceCreationPassing` DESC;
SELECT `League`.`name` FROM `Match` JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `Match`.`season` = '2009/2010' GROUP BY `League`.`name` HAVING AVG(`Match`.`home_team_goal`) > AVG(`Match`.`away_team_goal`)
SELECT `team_short_name` FROM `Team` WHERE `team_long_name` = 'Queens Park Rangers';
SELECT `player_name` FROM `Player` WHERE substr(`birthday`, 1, 4) = '1970' AND substr(`birthday`, 6, 2) = '10'
SELECT `attacking_work_rate` FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Franco Zennaro' LIMIT 1
SELECT buildUpPlayPositioningClass FROM `Team_Attributes` WHERE `team_api_id` = (SELECT `team_api_id` FROM `Team` WHERE `team_long_name` = 'ADO Den Haag') ORDER BY `date` DESC LIMIT 1
SELECT heading_accuracy FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Francois Affolter') AND `date` = '2014-09-18 00:00:00' ORDER BY `date` DESC LIMIT 1;
SELECT `overall_rating` FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Gabriel Tamas' AND strftime('%Y', `Player_Attributes`.`date`) = '2011' ORDER BY `Player_Attributes`.`date` DESC LIMIT 1;
SELECT COUNT(*) FROM `Match` JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `League`.`name` = 'Scotland Premier League' AND `Match`.`season` = '2015/2016'
SELECT `preferred_foot` FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` ORDER BY `Player`.`birthday` DESC LIMIT 1
SELECT `Player`.`player_name` FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`potential` = (SELECT MAX(`potential`) FROM `Player_Attributes`);
SELECT COUNT(*) FROM `Player_Attributes` pa JOIN `Player` p ON pa.`player_api_id` = p.`player_api_id` WHERE p.`weight` < 130 AND pa.`preferred_foot` = 'left';
SELECT `team_short_name` FROM `Team` t JOIN `Team_Attributes` ta ON t.`team_api_id` = ta.`team_api_id` WHERE ta.`chanceCreationPassingClass` = 'Risky'
SELECT `defensive_work_rate` FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'David Wilson' LIMIT 1
SELECT `Player`.`birthday` FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` ORDER BY `Player_Attributes`.`overall_rating` DESC LIMIT 1
SELECT `League`.`name` FROM `League` JOIN `Country` ON `League`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Netherlands';
SELECT SUM(`home_team_goal`) / COUNT(DISTINCT `Match`.`id`) AS average_home_team_goal FROM `Match` JOIN `Country` ON `Match`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Poland' AND `Match`.`season` = '2010/2011';
SELECT p1.`player_name` AS highest_player, p2.`player_name` AS shortest_player, MAX(pa1.`finishing`) AS highest_finishing_rate, MIN(pa2.`finishing`) AS shortest_finishing_rate FROM `Player` p1 JOIN `Player_Attributes` pa1 ON p1.`player_api_id` = pa1.`player_api_id` JOIN `Player` p2 ON p2.`player_api_id` = pa2.`player_api_id` JOIN `Player_Attributes` pa2 ON p2.`player_api_id` = pa2.`player_api_id` WHERE p1.`height` = (SELECT MAX(`height`) FROM `Player`) AND p2.`height` = (SELECT MIN(`height`) FROM `Player`) GROUP BY p1.`player_name`, p2.`player_name`
SELECT `player_name` FROM `Player` WHERE `height` > 180
SELECT COUNT(*) FROM `Player` WHERE strftime('%Y', `birthday`) > '1990';
SELECT COUNT(*) FROM `Player` WHERE `player_name` LIKE 'Adam %' AND `weight` > 170
SELECT `Player`.`player_name` FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`overall_rating` > 80 AND strftime('%Y', `Player_Attributes`.`date`) BETWEEN '2008' AND '2010';
SELECT `Player_Attributes`.`potential` FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Aaron Doran' ORDER BY `Player_Attributes`.`date` DESC LIMIT 1;
SELECT `player_name` FROM `Player` WHERE `player_api_id` IN (SELECT `player_api_id` FROM `Player_Attributes` WHERE `preferred_foot` = 'left')
SELECT `team_long_name` FROM `Team` JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `buildUpPlaySpeedClass` = 'Fast';
SELECT `buildUpPlayPassingClass` FROM `Team_Attributes` JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_short_name` = 'CLB' LIMIT 1;
SELECT `team_short_name` FROM `Team` JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `buildUpPlayPassing` > 70
SELECT SUM(`t2`.`overall_rating`) / COUNT(`t2`.`id`) AS `average_overall_rating` FROM `Player` AS `t1` JOIN `Player_Attributes` AS `t2` ON `t1`.`player_api_id` = `t2`.`player_api_id` WHERE `t1`.`height` > 170 AND strftime('%Y', `t2`.`date`) >= '2010' AND strftime('%Y', `t2`.`date`) <= '2015';
SELECT `player_name` FROM `Player` ORDER BY `height` ASC LIMIT 1
SELECT `Country`.`name` FROM `Country` JOIN `League` ON `Country`.`id` = `League`.`country_id` WHERE `League`.`name` = 'Italy Serie A';
SELECT `team_short_name` FROM `Team_Attributes` JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `buildUpPlaySpeed` = 31 AND `buildUpPlayDribbling` = 53 AND `buildUpPlayPassing` = 32
SELECT AVG(`overall_rating`) FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Aaron Doran';
SELECT COUNT(*) FROM `Match` JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `League`.`name` = 'Germany 1. Bundesliga' AND strftime('%Y-%m', `Match`.`date`) BETWEEN '2008-08' AND '2008-10';
SELECT DISTINCT `Team`.`team_short_name` FROM `Match` JOIN `Team` ON `Match`.`home_team_api_id` = `Team`.`team_api_id` WHERE `Match`.`home_team_goal` = 10
SELECT `Player`.`player_name` FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`balance` = (SELECT MAX(`balance`) FROM `Player_Attributes`) AND `Player_Attributes`.`potential` = 61
SELECT (SUM(CASE WHEN `Player`.`player_name` = 'Abdou Diallo' THEN `Player_Attributes`.`ball_control` ELSE 0 END) / COUNT(CASE WHEN `Player`.`player_name` = 'Abdou Diallo' THEN `Player_Attributes`.`id` ELSE NULL END)) - (SUM(CASE WHEN `Player`.`player_name` = 'Aaron Appindangoye' THEN `Player_Attributes`.`ball_control` ELSE 0 END) / COUNT(CASE WHEN `Player`.`player_name` = 'Aaron Appindangoye' THEN `Player_Attributes`.`id` ELSE NULL END)) AS `difference` FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id`
SELECT `team_long_name` FROM `Team` WHERE `team_short_name` = 'GEN'
SELECT p1.`player_name`, p1.`birthday` AS `birthday1`, p2.`player_name`, p2.`birthday` AS `birthday2` FROM `Player` p1 JOIN `Player` p2 ON p1.`player_name` = 'Aaron Lennon' AND p2.`player_name` = 'Abdelaziz Barrada' WHERE p1.`birthday` < p2.`birthday`
SELECT `player_name` FROM `Player` ORDER BY `height` DESC LIMIT 1
SELECT COUNT(*) FROM `Player_Attributes` WHERE `preferred_foot` = 'left' AND `attacking_work_rate` = 'low';
SELECT `Country`.`name` FROM `Country` JOIN `League` ON `Country`.`id` = `League`.`country_id` WHERE `League`.`name` = 'Belgium Jupiler League';
SELECT `name` FROM `League` JOIN `Country` ON `League`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Germany';
SELECT `Player`.`player_name` FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` ORDER BY `Player_Attributes`.`overall_rating` DESC LIMIT 1
SELECT COUNT(DISTINCT `Player`.`player_api_id`) FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE strftime('%Y', `Player`.`birthday`) < '1986' AND `Player_Attributes`.`defensive_work_rate` = 'high';
SELECT p.`player_name`, pa.`crossing` FROM `Player` p JOIN `Player_Attributes` pa ON p.`player_api_id` = pa.`player_api_id` WHERE p.`player_name` IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY pa.`crossing` DESC LIMIT 1
SELECT `heading_accuracy` FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Ariel Borysiuk' ORDER BY `Player_Attributes`.`date` DESC LIMIT 1
SELECT COUNT(*) FROM `Player_Attributes` pa JOIN `Player` p ON pa.`player_api_id` = p.`player_api_id` WHERE p.`height` > 180 AND pa.`volleys` > 70
SELECT `Player`.`player_name` FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player_Attributes`.`volleys` > 70 AND `Player_Attributes`.`dribbling` > 70
SELECT COUNT(*) FROM `Match` JOIN `Country` ON `Match`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Belgium' AND `Match`.`season` = '2008/2009';
SELECT `long_passing` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` ORDER BY `birthday` LIMIT 1)
SELECT COUNT(*) FROM `Match` JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `League`.`name` = 'Belgium Jupiler League' AND SUBSTR(`Match`.`date`, 1, 7) = '2009-04'
SELECT `League`.`name` FROM `Match` JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `Match`.`season` = '2008/2009' GROUP BY `League`.`name` ORDER BY COUNT(*) DESC LIMIT 1
SELECT AVG(`pa`.`overall_rating`) AS `average_overall_rating` FROM `Player_Attributes` `pa` JOIN `Player` `p` ON `pa`.`player_api_id` = `p`.`player_api_id` WHERE strftime('%Y', `p`.`birthday`) < '1986'
SELECT (100 * (`Ariel Borysiuk`.`overall_rating` - `Paulin Puel`.`overall_rating`) / `Paulin Puel`.`overall_rating`) AS percentage_difference FROM (SELECT `overall_rating` FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Ariel Borysiuk' ORDER BY `Player_Attributes`.`date` DESC LIMIT 1) AS `Ariel Borysiuk`, (SELECT `overall_rating` FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Paulin Puel' ORDER BY `Player_Attributes`.`date` DESC LIMIT 1) AS `Paulin Puel`
SELECT AVG(`buildUpPlaySpeed`) AS `average_build_up_play_speed` FROM `Team_Attributes` WHERE `team_api_id` = (SELECT `team_api_id` FROM `Team` WHERE `team_long_name` = 'Heart of Midlothian')
SELECT AVG(`T1`.`overall_rating`) AS `average_overall_rating` FROM `Player_Attributes` AS `T1` JOIN `Player` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T2`.`player_name` = 'Pietro Marino';
SELECT SUM(`crossing`) AS total_crossing_score FROM `Player_Attributes` AS T1 JOIN `Player` AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Aaron Lennox';
SELECT MAX(`chanceCreationPassing`) AS highest_score, `chanceCreationPassingClass` AS classification FROM `Team_Attributes` WHERE `team_api_id` IN (SELECT `team_api_id` FROM `Team` WHERE `team_long_name` = 'Ajax') GROUP BY `chanceCreationPassingClass` ORDER BY highest_score DESC LIMIT 1
SELECT `preferred_foot` FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Abdou Diallo' ORDER BY `Player_Attributes`.`date` DESC LIMIT 1
SELECT MAX(`overall_rating`) FROM `Player_Attributes` AS T1 JOIN `Player` AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Dorlan Pabon';
SELECT AVG(`away_team_goal`) FROM `Match` JOIN `Team` ON `Match`.`away_team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'Parma' AND `Match`.`country_id` = (SELECT `id` FROM `Country` WHERE `name` = 'Italy');
SELECT `Player`.`player_name` FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player_Attributes`.`overall_rating` = 77 AND `Player_Attributes`.`date` LIKE '2016-06-23%' ORDER BY `Player`.`birthday` ASC LIMIT 1;
SELECT `overall_rating` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Aaron Mooy') AND `date` LIKE '2016-02-04%';
SELECT `potential` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Francesco Parravicini') AND `date` = '2010-08-30 00:00:00' LIMIT 1
SELECT `attacking_work_rate` FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Francesco Migliore' AND `Player_Attributes`.`date` LIKE '2015-05-01%';
SELECT `defensive_work_rate` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Kevin Berigaud') AND `date` = '2013-02-22 00:00:00';
SELECT `Player_Attributes`.`date` FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Kevin Constant' ORDER BY `Player_Attributes`.`crossing` DESC LIMIT 1
SELECT `buildUpPlaySpeedClass` FROM `Team_Attributes` WHERE `team_api_id` = (SELECT `team_api_id` FROM `Team` WHERE `team_long_name` = 'Willem II') AND `date` = '2012-02-22';
SELECT `buildUpPlayDribblingClass` FROM `Team_Attributes` WHERE `team_api_id` = (SELECT `team_api_id` FROM `Team` WHERE `team_short_name` = 'LEI') AND `date` = '2015-09-10 00:00:00';
SELECT `buildUpPlayPassingClass` FROM `Team_Attributes` WHERE `team_api_id` = (SELECT `team_api_id` FROM `Team` WHERE `team_long_name` = 'FC Lorient') AND `date` LIKE '2010-02-22%';
SELECT `chanceCreationPassingClass` FROM `Team_Attributes` WHERE `team_api_id` = (SELECT `team_api_id` FROM `Team` WHERE `team_long_name` = 'PEC Zwolle') AND `date` = '2013-09-20 00:00:00';
SELECT `chanceCreationCrossingClass` FROM `Team_Attributes` WHERE `team_api_id` = (SELECT `team_api_id` FROM `Team` WHERE `team_long_name` = 'Hull City') AND `date` = '2010-02-22 00:00:00';
SELECT `defenceAggressionClass` FROM `Team_Attributes` WHERE `team_api_id` = (SELECT `team_api_id` FROM `Team` WHERE `team_long_name` = 'Hannover 96') AND `date` LIKE '2015-09-10%';
SELECT AVG(`overall_rating`) FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Marko Arnautovic' AND SUBSTR(`Player_Attributes`.`date`, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'
SELECT (100.0 * (SELECT `overall_rating` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Landon Donovan') AND `date` <= '2013-07-12' ORDER BY `date` DESC LIMIT 1) - (SELECT `overall_rating` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Jordan Bowery') AND `date` <= '2013-07-12' ORDER BY `date` DESC LIMIT 1)) / (SELECT `overall_rating` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Landon Donovan') AND `date` <= '2013-07-12' ORDER BY `date` DESC LIMIT 1) AS percentage
SELECT `player_name` FROM `Player` ORDER BY `height` DESC LIMIT 1
SELECT `player_api_id` FROM `Player` ORDER BY `weight` DESC LIMIT 10
SELECT `Player`.`player_name` FROM `Player` WHERE (strftime('%Y', 'now') - strftime('%Y', `Player`.`birthday`)) - (strftime('%m-%d', 'now') < strftime('%m-%d', `Player`.`birthday`)) >= 35
SELECT SUM(`home_team_goal`) AS total_goals FROM `Match` JOIN `Player` ON `Match`.`home_player_1` = `Player`.`player_api_id` OR `Match`.`home_player_2` = `Player`.`player_api_id` OR `Match`.`home_player_3` = `Player`.`player_api_id` OR `Match`.`home_player_4` = `Player`.`player_api_id` OR `Match`.`home_player_5` = `Player`.`player_api_id` OR `Match`.`home_player_6` = `Player`.`player_api_id` OR `Match`.`home_player_7` = `Player`.`player_api_id` OR `Match`.`home_player_8` = `Player`.`player_api_id` OR `Match`.`home_player_9` = `Player`.`player_api_id` OR `Match`.`home_player_10` = `Player`.`player_api_id` OR `Match`.`home_player_11` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Aaron Lennon'
SELECT SUM(`away_team_goal`) AS total_away_goals FROM `Match` WHERE (`away_player_1` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Daan Smith') OR `away_player_1` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Filipe Ferreira') OR `away_player_2` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Daan Smith') OR `away_player_2` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Filipe Ferreira') OR `away_player_3` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Daan Smith') OR `away_player_3` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Filipe Ferreira') OR `away_player_4` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Daan Smith') OR `away_player_4` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Filipe Ferreira') OR `away_player_5` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Daan Smith') OR `away_player_5` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Filipe Ferreira') OR `away_player_6` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Daan Smith') OR `away_player_6` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Filipe Ferreira') OR `away_player_7` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Daan Smith') OR `away_player_7` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Filipe Ferreira') OR `away_player_8` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Daan Smith') OR `away_player_8` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Filipe Ferreira') OR `away_player_9` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Daan Smith') OR `away_player_9` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Filipe Ferreira') OR `away_player_10` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Daan Smith') OR `away_player_10` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Filipe Ferreira') OR `away_player_11` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Daan Smith') OR `away_player_11` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Filipe Ferreira'))
SELECT SUM(`home_team_goal`) FROM `Match` WHERE `home_player_1` IN (SELECT `player_api_id` FROM `Player` WHERE SUBSTR(datetime(CURRENT_TIMESTAMP,'localtime'), 1, 4) - SUBSTR(`birthday`, 1, 4) < 31) OR `home_player_2` IN (SELECT `player_api_id` FROM `Player` WHERE SUBSTR(datetime(CURRENT_TIMESTAMP,'localtime'), 1, 4) - SUBSTR(`birthday`, 1, 4) < 31) OR `home_player_3` IN (SELECT `player_api_id` FROM `Player` WHERE SUBSTR(datetime(CURRENT_TIMESTAMP,'localtime'), 1, 4) - SUBSTR(`birthday`, 1, 4) < 31) OR `home_player_4` IN (SELECT `player_api_id` FROM `Player` WHERE SUBSTR(datetime(CURRENT_TIMESTAMP,'localtime'), 1, 4) - SUBSTR(`birthday`, 1, 4) < 31) OR `home_player_5` IN (SELECT `player_api_id` FROM `Player` WHERE SUBSTR(datetime(CURRENT_TIMESTAMP,'localtime'), 1, 4) - SUBSTR(`birthday`, 1, 4) < 31) OR `home_player_6` IN (SELECT `player_api_id` FROM `Player` WHERE SUBSTR(datetime(CURRENT_TIMESTAMP,'localtime'), 1, 4) - SUBSTR(`birthday`, 1, 4) < 31) OR `home_player_7` IN (SELECT `player_api_id` FROM `Player` WHERE SUBSTR(datetime(CURRENT_TIMESTAMP,'localtime'), 1, 4) - SUBSTR(`birthday`, 1, 4) < 31) OR `home_player_8` IN (SELECT `player_api_id` FROM `Player` WHERE SUBSTR(datetime(CURRENT_TIMESTAMP,'localtime'), 1, 4) - SUBSTR(`birthday`, 1, 4) < 31) OR `home_player_9` IN (SELECT `player_api_id` FROM `Player` WHERE SUBSTR(datetime(CURRENT_TIMESTAMP,'localtime'), 1, 4) - SUBSTR(`birthday`, 1, 4) < 31) OR `home_player_10` IN (SELECT `player_api_id` FROM `Player` WHERE SUBSTR(datetime(CURRENT_TIMESTAMP,'localtime'), 1, 4) - SUBSTR(`birthday`, 1, 4) < 31) OR `home_player_11` IN (SELECT `player_api_id` FROM `Player` WHERE SUBSTR(datetime(CURRENT_TIMESTAMP,'localtime'), 1, 4) - SUBSTR(`birthday`, 1, 4) < 31)
SELECT `player_name` FROM `Player` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player_Attributes` ORDER BY `overall_rating` DESC LIMIT 1)
SELECT `Player`.`player_name` FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`potential` = (SELECT MAX(`potential`) FROM `Player_Attributes`)
SELECT `Player`.`player_name` FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`attacking_work_rate` = 'high';
SELECT `Player`.`player_name` FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`finishing` = 1 ORDER BY `Player`.`birthday` LIMIT 1;
SELECT `Player`.`player_name` FROM `Player` JOIN `Country` ON `Player`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Belgium';
SELECT DISTINCT `Country`.`name` FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` JOIN `Country` ON `Player`.`id` = `Country`.`id` WHERE `Player_Attributes`.`vision` > 89
SELECT `Country`.`name` FROM `Player` JOIN `Country` ON `Player`.`id` = `Country`.`id` GROUP BY `Country`.`name` ORDER BY AVG(`Player`.`weight`) DESC LIMIT 1
SELECT `team_long_name` FROM `Team` t JOIN `Team_Attributes` ta ON t.`team_api_id` = ta.`team_api_id` WHERE ta.`buildUpPlaySpeedClass` = 'Slow';
SELECT DISTINCT `Team`.`team_short_name` FROM `Team` JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team_Attributes`.`chanceCreationPassingClass` = 'Safe'
SELECT AVG(`Player`.`height`) AS `average_heights` FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` JOIN `Match` ON `Player`.`player_api_id` = `Match`.`home_player_1` OR `Player`.`player_api_id` = `Match`.`home_player_2` OR `Player`.`player_api_id` = `Match`.`home_player_3` OR `Player`.`player_api_id` = `Match`.`home_player_4` OR `Player`.`player_api_id` = `Match`.`home_player_5` OR `Player`.`player_api_id` = `Match`.`home_player_6` OR `Player`.`player_api_id` = `Match`.`home_player_7` OR `Player`.`player_api_id` = `Match`.`home_player_8` OR `Player`.`player_api_id` = `Match`.`home_player_9` OR `Player`.`player_api_id` = `Match`.`home_player_10` OR `Player`.`player_api_id` = `Match`.`home_player_11` OR `Player`.`player_api_id` = `Match`.`away_player_1` OR `Player`.`player_api_id` = `Match`.`away_player_2` OR `Player`.`player_api_id` = `Match`.`away_player_3` OR `Player`.`player_api_id` = `Match`.`away_player_4` OR `Player`.`player_api_id` = `Match`.`away_player_5` OR `Player`.`player_api_id` = `Match`.`away_player_6` OR `Player`.`player_api_id` = `Match`.`away_player_7` OR `Player`.`player_api_id` = `Match`.`away_player_8` OR `Player`.`player_api_id` = `Match`.`away_player_9` OR `Player`.`player_api_id` = `Match`.`away_player_10` OR `Player`.`player_api_id` = `Match`.`away_player_11` JOIN `Country` ON `Match`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Italy';
SELECT `player_name` FROM `Player` WHERE `height` > 180 ORDER BY `player_name` LIMIT 3
SELECT COUNT(*) FROM `Player` WHERE `player_name` LIKE 'Aaron%' AND `birthday` > '1990';
SELECT (SELECT jumping FROM `Player_Attributes` WHERE `id` = 6) - (SELECT jumping FROM `Player_Attributes` WHERE `id` = 23) AS `jumping_difference`;
SELECT `player_api_id` FROM `Player_Attributes` WHERE `preferred_foot` = 'right' ORDER BY `potential` ASC LIMIT 5
SELECT COUNT(*) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'left';
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM `Player_Attributes`)) AS percentage FROM `Player_Attributes` WHERE `stamina` > 80 AND `strength` > 80
SELECT `Country`.`name` FROM `Country` JOIN `League` ON `Country`.`id` = `League`.`country_id` WHERE `League`.`name` = 'Poland Ekstraklasa';
SELECT `home_team_goal`, `away_team_goal` FROM `Match` JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `Match`.`date` LIKE '2008-09-24%' AND `League`.`name` = 'Belgium Jupiler League'
SELECT `sprint_speed`, `agility`, `acceleration` FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Alexis Blin' ORDER BY `Player_Attributes`.`date` DESC LIMIT 1
SELECT buildUpPlaySpeedClass FROM `Team_Attributes` JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'KSV Cercle Brugge' ORDER BY `Team_Attributes`.`date` DESC LIMIT 1;
SELECT COUNT(*) FROM `Match` WHERE `season` = '2015/2016' AND `league_id` = (SELECT `id` FROM `League` WHERE `name` = 'Italian Serie A')
SELECT MAX(`home_team_goal`) FROM `Match` JOIN `League` ON `Match`.`league_id` = `League`.`id` JOIN `Country` ON `Match`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Netherlands' AND `League`.`name` = 'Eredivisie';
SELECT `Player_Attributes`.`finishing`, `Player_Attributes`.`curve` FROM `Player_Attributes` JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`weight` = (SELECT MAX(`weight`) FROM `Player`);
SELECT L.`name`, COUNT(M.`id`) AS game_count FROM `Match` M JOIN `League` L ON M.`league_id` = L.`id` WHERE M.`season` = '2015/2016' GROUP BY L.`name` ORDER BY game_count DESC LIMIT 4;
SELECT `Team`.`team_long_name` FROM `Match` JOIN `Team` ON `Match`.`away_team_api_id` = `Team`.`team_api_id` ORDER BY `Match`.`away_team_goal` DESC LIMIT 1
SELECT `Player`.`player_name` FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` ORDER BY `Player_Attributes`.`overall_rating` DESC LIMIT 1
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM `Player_Attributes` WHERE `overall_rating` > 70)) AS percentage FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`height` < 180 AND `Player_Attributes`.`overall_rating` > 70
SELECT (SELECT COUNT(`Patient`.`ID`) FROM `Patient` WHERE `SEX` = 'M' AND `Admission` = '+') AS in_patient_count, (SELECT COUNT(`Patient`.`ID`) FROM `Patient` WHERE `SEX` = 'M' AND `Admission` = '-') AS out_patient_count, ((SELECT COUNT(`Patient`.`ID`) FROM `Patient` WHERE `SEX` = 'M' AND `Admission` = '+') - (SELECT COUNT(`Patient`.`ID`) FROM `Patient` WHERE `SEX` = 'M' AND `Admission` = '-')) * 100.0 / (SELECT COUNT(`Patient`.`ID`) FROM `Patient` WHERE `SEX` = 'M' AND `Admission` = '-') AS deviation_percentage
SELECT (COUNT(`Patient`.`ID`) * 100.0 / (SELECT COUNT(`Patient`.`ID`) FROM `Patient` WHERE `SEX` = 'F')) AS percentage FROM `Patient` WHERE `SEX` = 'F' AND strftime('%Y', `Birthday`) > '1930'
SELECT ROUND(100.0 * COUNT(CASE WHEN `Patient`.`Admission` = '+' THEN 1 END) / COUNT(*), 2) AS PercentInpatient FROM `Patient` WHERE `Patient`.`Birthday` BETWEEN '1930-01-01' AND '1940-12-31'
SELECT (SELECT COUNT(`Patient`.`ID`) FROM `Patient` WHERE `Diagnosis` = 'SLE' AND `Admission` = '-') / (SELECT COUNT(`Patient`.`ID`) FROM `Patient` WHERE `Diagnosis` = 'SLE' AND `Admission` = '+') AS ratio FROM `Patient` LIMIT 1
SELECT `Patient`.`Diagnosis`, `Laboratory`.`Date` FROM `Patient` LEFT JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`ID` = '30609';
SELECT `Patient`.`SEX`, `Patient`.`Birthday`, `Examination`.`Examination Date`, `Examination`.`Symptoms` FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`ID` = '163109'
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`LDH` > '500'
SELECT `Patient`.`ID`, (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) AS age FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Examination`.`RVVT` = '+'
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Diagnosis` FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Examination`.`Thrombosis` = 2
SELECT DISTINCT `Patient`.`ID` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE strftime('%Y', `Patient`.`Birthday`) = '1937' AND `Laboratory`.`T-CHO` >= '250'
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Diagnosis` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`ALB` < 3.5
SELECT (COUNT(DISTINCT `Laboratory`.`ID`) * 100.0 / (SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` WHERE `Patient`.`SEX` = 'F')) AS percentage FROM `Laboratory` JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Patient`.`SEX` = 'F' AND (`Laboratory`.`TP` < '6.0' OR `Laboratory`.`TP` > '8.5')
SELECT AVG(`aCL IgG`) AS `average_aCL_IgG` FROM `Examination` JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Patient`.`Admission` = '+' AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) >= '50'
SELECT COUNT(*) FROM `Patient` WHERE `SEX` = 'F' AND `Description` LIKE '%1997%' AND `Admission` = '-'
SELECT MIN(YEAR(`First Date`) - YEAR(Birthday)) AS youngest_age FROM Patient
SELECT COUNT(*) FROM Examination e JOIN Patient p ON e.`ID` = p.`ID` WHERE e.`Thrombosis` = '1' AND e.`Examination Date` BETWEEN '1997-01-01' AND '1997-12-31' AND p.`SEX` = 'F'
SELECT MAX(strftime('%Y', 'now') - strftime('%Y', `Birthday`)) - MIN(strftime('%Y', 'now') - strftime('%Y', `Birthday`)) AS age_gap FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `TG` >= 200
SELECT `Examination`.`Symptoms`, `Examination`.`Diagnosis` FROM `Examination` JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Patient`.`Birthday` = (SELECT MAX(`Birthday`) FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Examination`)) AND `Examination`.`Symptoms` IS NOT NULL LIMIT 1;
SELECT COUNT(`Laboratory`.`ID`) / 12.0 AS average_monthly_tests FROM `Laboratory` JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`Date` BETWEEN '1998-01-01' AND '1998-12-31' AND `Patient`.`SEX` = 'M'
SELECT `Laboratory`.`Date`, (SUBTRACT(year(`Patient`.`First Date`), year(`Patient`.`Birthday`))) AS `Age` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'SJS' ORDER BY `Patient`.`Birthday` ASC LIMIT 1
SELECT (SELECT COUNT(*) FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.UA <= '8.0' AND Patient.SEX = 'M') / (SELECT COUNT(*) FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.UA <= '6.5' AND Patient.SEX = 'F') AS ratio;
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` LEFT JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Examination`.`ID` IS NULL OR (strftime('%Y', `Examination`.`Examination Date`) - strftime('%Y', `Patient`.`First Date`)) >= 1
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`Birthday` < '1990-01-01' AND `Examination`.`Examination Date` BETWEEN '1990-01-01' AND '1993-12-31';
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`T-BIL` >= '2.0';
SELECT `Diagnosis` FROM `Examination` WHERE `Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY `Diagnosis` ORDER BY COUNT(*) DESC LIMIT 1
SELECT AVG(1999 - STRFTIME('%Y', `Patient`.`Birthday`)) AS average_age FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`Date` BETWEEN '1991-10-01' AND '1991-10-30'
SELECT SUBTRACT(year(`Examination Date`), year(`Birthday`)) AS Age, `Diagnosis` FROM `Examination` JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `HGB` = (SELECT MAX(`HGB`) FROM `Laboratory`)
SELECT `ANA` FROM `Examination` WHERE `ID` = 3605340 AND `Examination Date` = '1996-12-02'
SELECT CASE WHEN `T-CHO` < 250 THEN 'Yes' ELSE 'No' END AS `Normal_Level` FROM `Laboratory` WHERE `ID` = 2927464 AND `Date` = '1995-09-04'
SELECT `SEX` FROM `Patient` WHERE `Diagnosis` = 'AORTITIS' ORDER BY `First Date` LIMIT 1
SELECT `aCL IgM` FROM `Examination` WHERE `ID` = (SELECT `ID` FROM `Patient` WHERE `Diagnosis` = 'SLE' AND `Description` = '1994-02-19') AND `Examination Date` = '1993/11/12'
SELECT `SEX` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`Date` = '1992-06-12' AND `Laboratory`.`GPT` = '9'
SELECT (strftime('%Y', `Laboratory`.`Date`) - strftime('%Y', `Patient`.`Birthday`)) AS age FROM `Laboratory` JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`Date` = '1991-10-21' AND `Laboratory`.`UA` = '8.4' LIMIT 1
SELECT COUNT(`Laboratory`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`First Date` = '1991-06-13' AND `Patient`.`Diagnosis` = 'SJS' AND `Laboratory`.`Date` BETWEEN '1995-01-01' AND '1995-12-31'
SELECT `Patient`.`Diagnosis` FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Examination`.`Diagnosis` = 'SLE' AND `Examination`.`Examination Date` = '1997-01-27'
SELECT `Symptoms` FROM `Examination` JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Patient`.`Birthday` = '1959-03-01' AND `Examination`.`Examination Date` = '1993-09-27'
SELECT (SUM(CASE WHEN `Date` LIKE '1981-11-%' THEN `T-CHO` ELSE 0 END) - SUM(CASE WHEN `Date` LIKE '1981-12-%' THEN `T-CHO` ELSE 0 END)) / SUM(CASE WHEN `Date` LIKE '1981-11-%' THEN `T-CHO` ELSE 0 END) * 100 AS decrease_rate FROM `Laboratory` WHERE `ID` = (SELECT `ID` FROM `Patient` WHERE `Birthday` = '1959-02-18') AND (`Date` LIKE '1981-11-%' OR `Date` LIKE '1981-12-%')
SELECT `Patient`.`ID` FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`Diagnosis` = 'Behcet' AND `Examination`.`Examination Date` >= '1997-01-01' AND `Examination`.`Examination Date` < '1998-01-01';
SELECT DISTINCT `Patient`.`ID` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`Date` BETWEEN '1987-07-06' AND '1996-01-31' AND `Laboratory`.`GPT` > 30 AND `Laboratory`.`ALB` < 4
SELECT `ID` FROM `Patient` WHERE `SEX` = 'F' AND strftime('%Y', `Birthday`) = '1964' AND `Admission` = '+'
SELECT COUNT(*) FROM Examination WHERE `Thrombosis` = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination)
SELECT (COUNT(DISTINCT CASE WHEN `Laboratory`.`UA` <= 6.5 THEN `Laboratory`.`ID` END) * 100.0 / COUNT(DISTINCT CASE WHEN `Laboratory`.`U-PRO` > 0 AND `Laboratory`.`U-PRO` < 30 THEN `Laboratory`.`ID` END)) AS percentage FROM `Laboratory` WHERE `Laboratory`.`U-PRO` > 0 AND `Laboratory`.`U-PRO` < 30 AND `Laboratory`.`UA` <= 6.5
SELECT (COUNT(DISTINCT CASE WHEN `Diagnosis` = 'BEHCET' THEN `Patient`.`ID` END) * 100.0 / COUNT(DISTINCT `Patient`.`ID`)) AS percentage FROM `Patient` WHERE `SEX` = 'M' AND strftime('%Y', `First Date`) = '1981';
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday`, `Patient`.`Description`, `Patient`.`First Date`, `Patient`.`Admission`, `Patient`.`Diagnosis` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '-' AND `Laboratory`.`Date` LIKE '1991-10%' AND `Laboratory`.`T-BIL` < 2.0
SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'F' AND Patient.Birthday BETWEEN '1980-01-01' AND '1989-12-31' AND Examination.`ANA Pattern` != 'P'
SELECT `Patient`.`SEX` FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Diagnosis` = 'PSS' AND `Laboratory`.`CRP` > 2 AND `Laboratory`.`CRE` = 1 AND `Laboratory`.`LDH` = 123
SELECT AVG(`ALB`) AS avg_albumin FROM `Laboratory` JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Patient`.`SEX` = 'F' AND `Laboratory`.`PLT` > 400 AND `Patient`.`Diagnosis` = 'SLE'
SELECT Symptoms FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY COUNT(*) DESC LIMIT 1
SELECT `Description`, `Diagnosis` FROM `Patient` WHERE `ID` = 48473
SELECT COUNT(*) FROM `Patient` WHERE `SEX` = 'F' AND `Diagnosis` = 'APS';
SELECT COUNT(DISTINCT `Laboratory`.`ID`) FROM `Laboratory` WHERE YEAR(`Date`) = '1997' AND (`TP` <= 6 OR `TP` >= 8.5)
SELECT (COUNT(DISTINCT CASE WHEN `Diagnosis` LIKE '%ITP%' THEN `Patient`.`ID` END) * 100.0 / COUNT(DISTINCT CASE WHEN `Diagnosis` LIKE '%SLE%' THEN `Patient`.`ID` END)) AS proportion FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Symptoms` LIKE '%thrombocytopenia%';
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE YEAR(`Birthday`) = '1980' AND `Diagnosis` = 'RA')) AS percentage FROM Patient WHERE YEAR(`Birthday`) = '1980' AND `Diagnosis` = 'RA' AND `SEX` = 'F'
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Examination`.`Examination Date` BETWEEN '1995' AND '1997' AND `Examination`.`Diagnosis` = 'Behcet' AND `Patient`.`Admission` = '-'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'F' AND `Laboratory`.`WBC` < 3.5
SELECT DATEDIFF(`Examination Date`, `First Date`) AS days_before_evaluation FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.ID = 821298
SELECT CASE WHEN (SEX = 'M' AND UA > 8.0) OR (SEX = 'F' AND UA > 6.5) THEN 'Yes' ELSE 'No' END AS NormalRange FROM Laboratory WHERE ID = 57266
SELECT `Date` FROM `Laboratory` WHERE `ID` = '48473' AND `GOT` >= 60
SELECT `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GOT` < 60 AND strftime('%Y', `Laboratory`.`Date`) = '1994'
SELECT DISTINCT `Patient`.`ID` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`GPT` >= 60
SELECT `Patient`.`Diagnosis` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GPT` > 60 ORDER BY `Patient`.`Birthday` ASC;
SELECT AVG(`LDH`) FROM `Laboratory` WHERE `LDH` < 500
SELECT `Patient`.`ID`, (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) AS age FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`LDH` BETWEEN 600 AND 800
SELECT `Patient`.`ID`, `Patient`.`Admission` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`ALP` < 300
SELECT `Patient`.`ID`, `Laboratory`.`ALP` < 300 AS `Is_ALP_Normal` FROM `Patient` LEFT JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Birthday` = '1982-04-01'
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TP` < 6.0
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Laboratory`.`TP`, (`Laboratory`.`TP` - 8.5) AS TP_Deviation FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'F' AND `Laboratory`.`TP` > 8.5
SELECT `Patient`.`ID`, `Patient`.`Birthday` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND (`Laboratory`.`ALB` <= 3.5 OR `Laboratory`.`ALB` >= 5.5) ORDER BY `Patient`.`Birthday` DESC
SELECT `Patient`.`ID`, CASE WHEN `Laboratory`.`ALB` BETWEEN 3.5 AND 5.5 THEN 'Within Normal Range' ELSE 'Not Within Normal Range' END AS `Albumin Status` FROM `Patient` LEFT JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Birthday` LIKE '1982-%' GROUP BY `Patient`.`ID`
SELECT (COUNT(DISTINCT CASE WHEN l.`UA` > 6.5 THEN l.`ID` END) * 100.0 / COUNT(DISTINCT CASE WHEN p.`SEX` = 'F' THEN p.`ID` END)) AS percentage FROM `Patient` p JOIN `Laboratory` l ON p.`ID` = l.`ID` WHERE p.`SEX` = 'F'
SELECT AVG(`Laboratory`.`UA`) AS average_UA FROM `Laboratory` JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE (`Laboratory`.`UA` < 8.0 AND `Patient`.`SEX` = 'M') OR (`Laboratory`.`UA` < 6.5 AND `Patient`.`SEX` = 'F') AND `Laboratory`.`Date` = (SELECT MAX(`Date`) FROM `Laboratory` AS `LatestLab` WHERE `LatestLab`.`ID` = `Laboratory`.`ID`)
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`UN` = 29
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'RA' AND `Laboratory`.`UN` < 30
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`CRE` >= 1.5
SELECT (SUM(CASE WHEN `SEX` = 'M' AND `CRE` >= 1.5 THEN 1 ELSE 0 END) > SUM(CASE WHEN `SEX` = 'F' AND `CRE` >= 1.5 THEN 1 ELSE 0 END)) AS result FROM `Laboratory`
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`T-BIL` = (SELECT MAX(`T-BIL`) FROM `Laboratory`);
SELECT `Patient`.`SEX`, GROUP_CONCAT(DISTINCT `Patient`.`ID`) AS `Patient_List` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`T-BIL` >= 2.0 GROUP BY `Patient`.`SEX`;
SELECT `Patient`.`ID`, `Laboratory`.`T-CHO` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Birthday` = (SELECT MIN(`Birthday`) FROM `Patient`) ORDER BY `Laboratory`.`T-CHO` DESC LIMIT 1;
SELECT AVG(CAST(STRFTIME('%Y.%m%d', 'now') - STRFTIME('%Y.%m%d', `Birthday`) AS INTEGER)) AS average_age FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `SEX` = 'M' AND `T-CHO` >= 250
SELECT `Patient`.`ID`, `Patient`.`Diagnosis` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TG` > 300
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TG` >= 200 AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) > 50;
SELECT DISTINCT `Patient`.`ID` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '-' AND `Laboratory`.`CPK` < 250
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND year(`Patient`.`Birthday`) BETWEEN '1936' AND '1956' AND `Laboratory`.`CPK` >= 250
SELECT `Patient`.`ID`, `Patient`.`SEX`, (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) AS age FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GLU` >= 180 AND `Laboratory`.`T-CHO` < 250
SELECT `Patient`.`ID`, `Laboratory`.`GLU` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Description` LIKE '%1991%' AND `Laboratory`.`GLU` < 180
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`WBC` <= 3.5 OR `Laboratory`.`WBC` >= 9.0 GROUP BY `Patient`.`SEX`, `Patient`.`Birthday` ORDER BY `Patient`.`Birthday` ASC;
SELECT `Patient`.`ID`, (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) AS Age, `Patient`.`Diagnosis` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`RBC` < 3.5
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday`, `Patient`.`Admission` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'F' AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) >= 50 AND (`Laboratory`.`RBC` <= 3.5 OR `Laboratory`.`RBC` >= 6.0)
SELECT `Patient`.`ID`, `Patient`.`SEX` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '-' AND `Laboratory`.`HGB` < 10
SELECT `Patient`.`ID`, `Patient`.`SEX` FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Examination`.`Diagnosis` = 'SLE' AND `Examination`.`aCL IgG` IS NOT NULL AND `Examination`.`aCL IgM` IS NOT NULL AND `Examination`.`ANA` IS NOT NULL AND `Examination`.`ANA Pattern` IS NOT NULL AND `Examination`.`aCL IgA` IS NOT NULL AND `Examination`.`KCT` IS NOT NULL AND `Examination`.`RVVT` IS NOT NULL AND `Examination`.`LAC` IS NOT NULL AND `Examination`.`Symptoms` IS NOT NULL AND `Examination`.`Thrombosis` IS NOT NULL AND `Laboratory`.`HGB` > 10 AND `Laboratory`.`HGB` < 17 ORDER BY `Patient`.`Birthday` ASC LIMIT 1;
SELECT `Patient`.`ID`, (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) AS age FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`HCT` >= 52 GROUP BY `Patient`.`ID` HAVING COUNT(`Laboratory`.`ID`) > 2
SELECT AVG(`HCT`) AS `average_hematocrit` FROM `Laboratory` WHERE `Date` LIKE '1991%' AND `HCT` < 29
SELECT SUM(CASE WHEN `PLT` < 100 THEN 1 ELSE 0 END) AS lower_than_normal, SUM(CASE WHEN `PLT` > 400 THEN 1 ELSE 0 END) AS higher_than_normal FROM `Laboratory` WHERE `PLT` <= 100 OR `PLT` >= 400
SELECT DISTINCT `Patient`.`ID` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE YEAR(`Laboratory`.`Date`) = '1984' AND (YEAR(CURRENT_TIMESTAMP) - YEAR(`Patient`.`Birthday`)) < 50 AND `Laboratory`.`PLT` BETWEEN 100 AND 400
SELECT (SUM(CASE WHEN `Laboratory`.`PT` >= 14 AND `Patient`.`SEX` = 'F' THEN 1 ELSE 0 END) * 100.0 / SUM(CASE WHEN `Laboratory`.`PT` >= 14 THEN 1 ELSE 0 END)) AS percentage FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) > 55
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday`, `Patient`.`Description`, `Patient`.`First Date`, `Patient`.`Admission`, `Patient`.`Diagnosis` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE strftime('%Y', `Patient`.`First Date`) > '1992' AND `Laboratory`.`PT` < 14
SELECT COUNT(*) FROM `Examination` WHERE `Examination Date` > '1997-01-01' AND `APTT` < 45
SELECT COUNT(DISTINCT `Laboratory`.`ID`) AS `Count` FROM `Laboratory` JOIN `Examination` ON `Laboratory`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`APTT` > 45 AND `Examination`.`Thrombosis` = 0
SELECT COUNT(*) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`WBC` > 3.5 AND `Laboratory`.`WBC` < 9.0 AND (`Laboratory`.`FG` <= 150 OR `Laboratory`.`FG` >= 450)
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Birthday` > '1980-01-01' AND (`Laboratory`.`FG` < 150 OR `Laboratory`.`FG` > 450);
SELECT `Patient`.`Diagnosis` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`U-PRO` >= 30;
SELECT `Patient`.`ID` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`U-PRO` > 0 AND `Laboratory`.`U-PRO` < 30 AND `Patient`.`Diagnosis` = 'SLE' LIMIT 1
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`IGG` >= 2000
SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE `IGG` > 900 AND `IGG` < 2000 AND `Symptoms` IS NOT NULL
SELECT `Patient`.`Diagnosis` FROM `Laboratory` JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`IGA` BETWEEN 80 AND 500 ORDER BY `Laboratory`.`IGA` DESC LIMIT 1
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`IGA` > 80 AND `Laboratory`.`IGA` < 500 AND `Patient`.`First Date` >= '1990-01-01';
SELECT `Diagnosis` FROM (SELECT `Diagnosis`, COUNT(`Diagnosis`) AS `Diagnosis_Count` FROM `Examination` WHERE `ID` IN (SELECT `ID` FROM `Laboratory` WHERE `IGM` <= 40 OR `IGM` >= 400) GROUP BY `Diagnosis`) ORDER BY `Diagnosis_Count` DESC LIMIT 1
SELECT COUNT(*) FROM Patient p LEFT JOIN Laboratory l ON p.ID = l.ID WHERE l.`CRP` = '+' AND p.`Description` IS NULL
SELECT COUNT(*) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`CRE` >= 1.5 AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) < 70
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`RA` IN ('-', '+-') AND `Examination`.`KCT` = '+'
SELECT `Patient`.`Diagnosis` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Birthday` >= '1985-01-01' AND `Laboratory`.`RA` IN ('-', '+-')
SELECT `Patient`.`ID` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`RF` < 20 AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) > 60
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`RF` < 20 AND `Examination`.`Thrombosis` = '0';
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`C3` > 35 AND `Examination`.`ANA Pattern` = 'P'
SELECT `Patient`.`ID` FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE (`Laboratory`.`HCT` <= 29 OR `Laboratory`.`HCT` >= 52) ORDER BY `Examination`.`aCL IgA` DESC LIMIT 1
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Thrombosis` = 1 AND `Laboratory`.`C4` > 10
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`RNP` IN ('-', '+-') AND `Patient`.`Admission` = '+';
SELECT `Patient`.`Birthday` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`RNP` NOT IN ('-', '+-') ORDER BY `Patient`.`Birthday` DESC LIMIT 1
SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE `SM` IN ('-', '+-') AND `Thrombosis` = 0
SELECT `Patient`.`ID` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`SM` NOT IN ('negative', '0') ORDER BY `Patient`.`Birthday` DESC LIMIT 3
SELECT DISTINCT `Examination`.`ID` FROM `Examination` JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Examination Date` > '1997-01-01' AND `Laboratory`.`SC170` IN ('negative', '0')
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`SC170` IN ('negative', '0') AND `Patient`.`SEX` = 'F' AND `Patient`.`Symptoms` IS NULL
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`SSA` IN('-','+-') AND YEAR(`Patient`.`First Date`) < 2000
SELECT `Patient`.`ID` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`SSA` NOT IN ('negative', '0') ORDER BY `Patient`.`First Date` LIMIT 1
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Examination`.`SSB` IN ('-', '+-') AND `Patient`.`Diagnosis` = 'SLE'
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`SSB` IN ('negative', '0') AND `Examination`.`Symptoms` IS NOT NULL
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`CENTROMEA` IN ('-', '+-') AND `Laboratory`.`SSB` IN ('-', '+-');
SELECT DISTINCT `Patient`.`Diagnosis` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`DNA` >= 8
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` LEFT JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`DNA` < 8 AND `Patient`.`Description` IS NULL
SELECT COUNT(*) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`IGG` > 900 AND `Laboratory`.`IGG` < 2000 AND `Patient`.`Admission` = '+'
SELECT (COUNT(DISTINCT l.`ID`) * 1.0 / COUNT(DISTINCT CASE WHEN l.`GOT` >= 60 THEN l.`ID` END)) * 100 AS percentage FROM `Laboratory` l JOIN `Patient` p ON l.`ID` = p.`ID` WHERE l.`GOT` >= 60 AND p.`Diagnosis` = 'SLE'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`GOT` < 60
SELECT MIN(`Birthday`) FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Laboratory` WHERE `GOT` >= 60)
SELECT `Patient`.`Birthday` FROM `Laboratory` JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`GPT` < 60 ORDER BY `Laboratory`.`GPT` DESC LIMIT 3
SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GOT < 60 AND Patient.SEX = 'M'
SELECT MIN(`First Date`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `LDH` < 500 ORDER BY `LDH` DESC LIMIT 1;
SELECT MAX(`Laboratory`.`Date`) FROM `Laboratory` JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`LDH` >= 500 AND `Patient`.`First Date` = (SELECT MAX(`First Date`) FROM `Patient`);
SELECT COUNT(*) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`ALP` >= 300 AND `Patient`.`Admission` = '+'
SELECT COUNT(*) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '-' AND `Laboratory`.`ALP` < 300
SELECT DISTINCT `Patient`.`Diagnosis` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TP` < 6.0
SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis = 'SJS' AND Laboratory.TP > 6.0 AND Laboratory.TP < 8.5
SELECT `Examination Date` FROM `Examination` WHERE `ID` = (SELECT `ID` FROM `Laboratory` WHERE `ALB` = (SELECT MAX(`ALB`) FROM `Laboratory` WHERE `ALB` > 3.5 AND `ALB` < 5.5))
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`ALB` > 3.5 AND `Laboratory`.`ALB` < 5.5 AND `Laboratory`.`TP` BETWEEN 6.0 AND 8.5
SELECT `aCL IgG`, `aCL IgM`, `aCL IgA` FROM Examination WHERE ID = (SELECT ID FROM Laboratory WHERE UA = (SELECT MAX(UA) FROM Laboratory WHERE UA > 6.50) AND ID IN (SELECT ID FROM Patient WHERE SEX = 'F'))
SELECT MAX(`ANA`) FROM `Examination` JOIN `Laboratory` USING (`ID`) WHERE `CRE` < 1.5
SELECT `Patient`.`ID` FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`CRE` < 1.5 GROUP BY `Patient`.`ID` HAVING MAX(`Examination`.`aCL IgA`) ORDER BY MAX(`Examination`.`aCL IgA`) DESC LIMIT 1
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`T-BIL` >= 2.0 AND `Examination`.`ANA Pattern` LIKE '%P%';
SELECT `Examination`.`ANA` FROM `Examination` JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`T-BIL` < 2.0 ORDER BY `Laboratory`.`T-BIL` DESC LIMIT 1
SELECT COUNT(*) FROM `Examination` JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`T-CHO` >= 250 AND `Examination`.`KCT` = '-';
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`T-CHO` < 250 AND `Examination`.`ANA Pattern` = 'P';
SELECT COUNT(*) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TG` < 200 AND EXISTS (SELECT 1 FROM `Examination` WHERE `Examination`.`ID` = `Patient`.`ID` AND `Examination`.`Symptoms` IS NOT NULL)
SELECT `Patient`.`Diagnosis` FROM `Laboratory` JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`TG` < 200 ORDER BY `Laboratory`.`TG` DESC LIMIT 1
SELECT DISTINCT `Patient`.`ID` FROM `Patient` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Thrombosis` = 0 AND `Laboratory`.`CPK` < 250
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`CPK` < 250 AND (`Examination`.`KCT` = '+' OR `Examination`.`RVVT` = '+' OR `Examination`.`LAC` = '+');
SELECT MIN(`Birthday`) FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Laboratory` WHERE `GLU` > 180)
SELECT COUNT(*) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`GLU` < 180 AND `Examination`.`Thrombosis` = 0
SELECT COUNT(*) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '+' AND `Laboratory`.`WBC` BETWEEN 3.5 AND 9.0
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'SLE' AND `Laboratory`.`WBC` BETWEEN 3.5 AND 9.0
SELECT `Patient`.`ID` FROM `Patient` JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE (`Laboratory`.`RBC` <= 3.5 OR `Laboratory`.`RBC` >= 6.0) AND `Patient`.`Admission` = '-'
SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.PLT > 100 AND Laboratory.PLT < 400 AND Patient.Diagnosis IS NOT NULL
SELECT `Laboratory`.`PLT` FROM `Laboratory` JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`PLT` > 100 AND `Laboratory`.`PLT` < 400 AND `Patient`.`Diagnosis` = 'MCTD';
SELECT AVG(`PT`) AS average_prothrombin_time FROM `Laboratory` JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`PT` < 14
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Thrombosis` IN (1, 2) AND `Laboratory`.`PT` < 14
SELECT `major_name` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `first_name` = 'Angela' AND `last_name` = 'Sanders'
SELECT COUNT(*) FROM `member` m JOIN `major` ma ON m.`link_to_major` = ma.`major_id` WHERE ma.`college` = 'College of Engineering'
SELECT `first_name`, `last_name` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`department` = 'Art and Design'
SELECT COUNT(DISTINCT `attendance`.`link_to_member`) FROM `attendance` JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Women''s Soccer'
SELECT `member`.`phone` FROM `member` JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Women''s Soccer'
SELECT COUNT(*) FROM `member` m JOIN `attendance` a ON m.`member_id` = a.`link_to_member` JOIN `event` e ON a.`link_to_event` = e.`event_id` WHERE e.`event_name` = 'Women''s Soccer' AND m.`t_shirt_size` = 'Medium'
SELECT `event`.`event_name` FROM `event` JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` GROUP BY `event`.`event_id` ORDER BY COUNT(`attendance`.`link_to_event`) DESC LIMIT 1
SELECT `college` FROM `major` JOIN `member` ON `major`.`major_id` = `member`.`link_to_major` WHERE `member`.`position` = 'Vice President'
SELECT `event`.`event_name` FROM `event` JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Maya' AND `member`.`last_name` = 'Mclean';
SELECT COUNT(*) FROM `event` JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Sacha' AND `member`.`last_name` = 'Harrison' AND YEAR(`event`.`event_date`) = 2019
SELECT COUNT(*) FROM event WHERE `event_id` IN (SELECT `link_to_event` FROM attendance GROUP BY `link_to_event` HAVING COUNT(`link_to_member`) > 10) AND `type` = 'Meeting';
SELECT `event_name` FROM `event` WHERE `event_id` IN (SELECT `link_to_event` FROM `attendance` GROUP BY `link_to_event` HAVING COUNT(`link_to_event`) > 20) AND `type` != 'fundraiser';
SELECT COUNT(`attendance`.`link_to_event`) / COUNT(DISTINCT `event`.`event_name`) AS average_attendance FROM `event` JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` WHERE `event`.`type` = 'Meeting' AND strftime('%Y', `event`.`event_date`) = '2020'
SELECT `expense_description`, MAX(`cost`) AS `max_cost` FROM `expense` JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` WHERE `budget`.`event_status` = 'club events' GROUP BY `expense_description` ORDER BY `max_cost` DESC LIMIT 1
SELECT COUNT(*) FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Environmental Engineering'
SELECT `member`.`first_name` || ' ' || `member`.`last_name` AS full_name FROM `member` JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Laugh Out Loud';
SELECT `last_name` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Law and Constitutional Studies'
SELECT `county` FROM `zip_code` WHERE `zip_code` = (SELECT `zip` FROM `member` WHERE `first_name` = 'Sherri' AND `last_name` = 'Ramsey' LIMIT 1)
SELECT `college` FROM `major` WHERE `major_id` = (SELECT `link_to_major` FROM `member` WHERE `first_name` = 'Tyler' AND `last_name` = 'Hewitt')
SELECT SUM(`amount`) FROM `income` JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `member`.`position` = 'Vice President'
SELECT SUM(`expense`.`cost`) FROM `expense` JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `expense`.`expense_description` = 'Food' AND `event`.`event_name` = 'September Meeting';
SELECT `zip_code`.`city`, `zip_code`.`state` FROM `member` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`position` = 'President'
SELECT `first_name` || ' ' || `last_name` AS full_name FROM `member` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`state` = 'Illinois'
SELECT SUM(`expense`.`cost`) FROM `expense` JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'September Meeting' AND `budget`.`category` = 'Advertisement';
SELECT DISTINCT `major`.`department` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` IN ('Pierce', 'Guidi');
SELECT SUM(`amount`) AS total_budgeted_amount FROM `budget` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'October Speaker';
SELECT `expense_id`, `approved` FROM `expense` JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'October Meeting' AND `event`.`event_date` = '2019-10-08'
SELECT AVG(e.`cost`) AS avg_cost FROM `expense` e JOIN `member` m ON e.`link_to_member` = m.`member_id` WHERE m.`first_name` = 'Elijah' AND m.`last_name` = 'Allen' AND (strftime('%m', e.`expense_date`) = '09' OR strftime('%m', e.`expense_date`) = '10')
SELECT (SELECT SUM(`spent`) FROM `budget` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE SUBSTR(`event`.`event_date`, 1, 4) = '2019') - (SELECT SUM(`spent`) FROM `budget` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE SUBSTR(`event`.`event_date`, 1, 4) = '2020') AS `difference`;
SELECT `location` FROM `event` WHERE `event_name` = 'Spring Budget Review' LIMIT 1
SELECT SUM(`expense`.`cost`) FROM `expense` JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Posters' AND `event`.`event_date` = '2019-09-04';
SELECT `remaining` FROM `budget` WHERE `category` = 'Food' ORDER BY `amount` DESC LIMIT 1
SELECT `notes` FROM `income` WHERE `source` = 'Fundraising' AND `date_received` = '2019-09-14'
SELECT COUNT(*) FROM `major` WHERE `college` = 'College of Humanities and Social Sciences'
SELECT `phone` FROM `member` WHERE `first_name` = 'Carlo' AND `last_name` = 'Jacobs' LIMIT 1
SELECT `county` FROM `zip_code` WHERE `zip_code` = (SELECT `zip` FROM `member` WHERE `first_name` = 'Adela' AND `last_name` = 'O\'Gallagher')
SELECT COUNT(*) FROM `budget` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'November Meeting' AND `budget`.`remaining` < 0
SELECT SUM(`amount`) FROM `budget` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'September Speaker'
SELECT `event`.`status` FROM `event` JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `expense`.`expense_description` = 'Post Cards, Posters' AND `expense`.`expense_date` = '2019-08-20';
SELECT `major_name` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `first_name` = 'Brent' AND `last_name` = 'Thomason'
SELECT COUNT(*) FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business' AND `member`.`t_shirt_size` = 'Medium'
SELECT `zip_code`.`type` FROM `member` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`first_name` = 'Christof' AND `member`.`last_name` = 'Nielson';
SELECT `major_name` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `position` = 'Vice President' LIMIT 1
SELECT `state` FROM `zip_code` WHERE `zip_code` = (SELECT `zip` FROM `member` WHERE `first_name` = 'Sacha' AND `last_name` = 'Harrison')
SELECT `major`.`department` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'President' LIMIT 1
SELECT `date_received` FROM `income` JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Connor' AND `member`.`last_name` = 'Hilton' AND `income`.`source` = 'Dues' LIMIT 1
SELECT `first_name`, `last_name` FROM `member` WHERE `member_id` = (SELECT `link_to_member` FROM `income` WHERE `source` = 'Dues' ORDER BY `date_received` LIMIT 1)
SELECT COUNT(*) FROM budget b1 JOIN event e1 ON b1.link_to_event = e1.event_id JOIN budget b2 ON b1.category = b2.category JOIN event e2 ON b2.link_to_event = e2.event_id WHERE b1.category = 'Advertisement' AND e1.event_name = 'Yearly Kickoff' AND e2.event_name = 'October Meeting' AND b1.amount > b2.amount;
SELECT (SUM(`amount`) * 100.0 / (SELECT SUM(`amount`) FROM `budget` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'November Speaker'))) AS `percentage` FROM `budget` WHERE `category` = 'Parking' AND `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'November Speaker')
SELECT SUM(`cost`) AS total_cost FROM `expense` WHERE `expense_description` = 'Pizza'
SELECT COUNT(DISTINCT `city`) FROM `zip_code` WHERE `county` = 'Orange County' AND `state` = 'Virginia';
SELECT DISTINCT `department` FROM `major` WHERE `college` = 'College of Humanities and Social Sciences';
SELECT `city`, `county`, `state` FROM `zip_code` WHERE `zip_code` = (SELECT `zip` FROM `member` WHERE `first_name` = 'Amy' AND `last_name` = 'Firth' LIMIT 1)
SELECT `expense`.`expense_description` FROM `expense` JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` WHERE `budget`.`remaining` = (SELECT MIN(`remaining`) FROM `budget`);
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'October Meeting'
SELECT `college` FROM `major` WHERE `major_id` IN (SELECT `link_to_major` FROM `member` GROUP BY `link_to_major` ORDER BY COUNT(*) DESC LIMIT 1)
SELECT `major_name` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`phone` = '809-555-3360'
SELECT `event_name` FROM `event` WHERE `event_id` = (SELECT `link_to_event` FROM `budget` ORDER BY `amount` DESC LIMIT 1)
SELECT `expense_description` FROM `expense` JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`position` = 'Vice President';
SELECT COUNT(DISTINCT `attendance`.`link_to_member`) FROM `attendance` JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Women''s Soccer'
SELECT `date_received` FROM `income` JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Casey' AND `member`.`last_name` = 'Mason' LIMIT 1
SELECT COUNT(*) FROM `member` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`state` = 'Maryland'
SELECT COUNT(*) FROM `attendance` JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `member`.`phone` = '954-555-6240'
SELECT `first_name`, `last_name` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`department` = 'School of Applied Sciences, Technology and Education'
SELECT `event_name` FROM `event` JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`status` = 'Closed' ORDER BY (`budget`.`spent` / `budget`.`amount`) DESC LIMIT 1
SELECT COUNT(*) FROM `member` WHERE `position` = 'President';
SELECT MAX(`spent`) FROM `budget`
SELECT COUNT(*) FROM `event` WHERE `type` = 'Meeting' AND YEAR(`event_date`) = 2020
SELECT SUM(`spent`) AS total_spent_for_food FROM `budget` WHERE `category` = 'Food'
SELECT `first_name`, `last_name` FROM `member` WHERE `member_id` IN (SELECT `link_to_member` FROM `attendance` GROUP BY `link_to_member` HAVING COUNT(`link_to_event`) > 7)
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `major`.`major_name` = 'Interior Design' AND `event`.`event_name` = 'Community Theater';
SELECT `first_name` || ' ' || `last_name` AS `full_name` FROM `member` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`city` = 'Georgetown' AND `zip_code`.`state` = 'South Carolina';
SELECT SUM(`income`.`amount`) FROM `income` JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Grant' AND `member`.`last_name` = 'Gilmour'
SELECT `first_name`, `last_name` FROM `member` JOIN `income` ON `member`.`member_id` = `income`.`link_to_member` WHERE `income`.`amount` > 40
SELECT SUM(`cost`) AS total_expense FROM `expense` JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Yearly Kickoff';
SELECT `first_name`, `last_name` FROM `member` WHERE `member_id` = (SELECT `link_to_member` FROM `budget` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'Yearly Kickoff'))
SELECT `member`.`first_name`, `member`.`last_name`, `income`.`source` FROM `member` JOIN `income` ON `member`.`member_id` = `income`.`link_to_member` ORDER BY `income`.`amount` DESC LIMIT 1
SELECT `event_name` FROM `event` JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` ORDER BY `budget`.`spent` ASC LIMIT 1
SELECT ROUND(SUM(CASE WHEN `event`.`event_name` = 'Yearly Kickoff' THEN `expense`.`cost` ELSE 0 END) * 100.0 / SUM(`expense`.`cost`), 2) AS percentage FROM `expense` JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id`
SELECT CAST(SUM(CASE WHEN `major_name` = 'Finance' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN `major_name` = 'Physics' THEN 1 ELSE 0 END) AS ratio FROM `major`
SELECT `source` FROM `income` WHERE `date_received` BETWEEN '2019-09-01' AND '2019-09-30' ORDER BY `amount` DESC LIMIT 1
SELECT `first_name`, `last_name`, `email` FROM `member` WHERE `position` = 'Secretary'
SELECT COUNT(*) FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Physics Teaching'
SELECT COUNT(DISTINCT `attendance`.`link_to_member`) FROM `attendance` JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Community Theater' AND strftime('%Y', `event`.`event_date`) = '2019';
SELECT COUNT(`a`.`link_to_event`) AS `events_attended`, `m`.`link_to_major` FROM `attendance` AS `a` JOIN `member` AS `m` ON `a`.`link_to_member` = `m`.`member_id` WHERE `m`.`first_name` = 'Luisa' AND `m`.`last_name` = 'Guidi' GROUP BY `m`.`link_to_major`
SELECT DIVIDE(SUM(`budget`.`spent`), COUNT(`budget`.`spent`)) AS average_spent FROM `budget` WHERE `budget`.`category` = 'Food' AND `budget`.`event_status` = 'Closed'
SELECT `event_name` FROM `event` WHERE `event_id` = (SELECT `link_to_event` FROM `budget` WHERE `category` = 'Advertisement' ORDER BY `spent` DESC LIMIT 1)
SELECT CASE WHEN COUNT(*) > 0 THEN 'Yes' ELSE 'No' END AS attended FROM `attendance` a JOIN `member` m ON a.`link_to_member` = m.`member_id` JOIN `event` e ON a.`link_to_event` = e.`event_id` WHERE m.`first_name` = 'Maya' AND m.`last_name` = 'Mclean' AND e.`event_name` = 'Women''s Soccer';
SELECT (SUM(CASE WHEN `type` = 'Community Service' THEN 1 ELSE 0 END) * 100.0 / COUNT(`event_id`)) AS percentage_share FROM `event` WHERE `event_date` BETWEEN '2019-01-01' AND '2019-12-31'
SELECT `expense`.`cost` FROM `expense` JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `expense`.`expense_description` = 'Posters' AND `event`.`event_name` = 'September Speaker';
SELECT `t_shirt_size` FROM `member` GROUP BY `t_shirt_size` ORDER BY COUNT(`t_shirt_size`) DESC LIMIT 1
SELECT `event_name` FROM `event` JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `status` = 'Closed' AND `remaining` < 0 ORDER BY `remaining` LIMIT 1
SELECT `expense`.`expense_description`, SUM(`expense`.`cost`) AS total_value FROM `expense` JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'October Meeting' AND `expense`.`approved` = 1 GROUP BY `expense`.`expense_description`
SELECT `category`, SUM(`amount`) AS `amount_budgeted` FROM `budget` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_name` = 'April Speaker') GROUP BY `category` ORDER BY `amount_budgeted` ASC;
SELECT `budget_id`, `amount` FROM `budget` WHERE `category` = 'Food' ORDER BY `amount` DESC LIMIT 1
SELECT `budget_id`, `amount` FROM `budget` WHERE `category` = 'Advertisement' ORDER BY `amount` DESC LIMIT 3
SELECT SUM(`cost`) AS total_cost FROM `expense` WHERE `expense_description` = 'Parking';
SELECT SUM(`cost`) AS total_expense FROM `expense` WHERE `expense_date` = '2019-08-20'
SELECT `member`.`first_name` || ' ' || `member`.`last_name` AS full_name, SUM(`expense`.`cost`) AS total_cost FROM `member` JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` WHERE `member`.`member_id` = 'rec4BLdZHS2Blfp4v' GROUP BY `member`.`member_id`
SELECT `expense_description` FROM `expense` JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Sacha' AND `member`.`last_name` = 'Harrison';
SELECT `expense_description` FROM `expense` JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`t_shirt_size` = 'X-Large'
SELECT `member`.`zip` FROM `expense` JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `expense`.`cost` < 50
SELECT `major_name` FROM `major` WHERE `major_id` = (SELECT `link_to_major` FROM `member` WHERE `first_name` = 'Phillip' AND `last_name` = 'Cullen')
SELECT `position` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business'
SELECT COUNT(*) FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business' AND `member`.`t_shirt_size` = 'Medium';
SELECT DISTINCT `event`.`type` FROM `event` JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`remaining` > 30
SELECT DISTINCT `category` FROM `budget` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`location` = 'MU 215'
SELECT `type` FROM `event` WHERE `event_date` = '2020-03-24T12:00:00'
SELECT `major_name` FROM `major` WHERE `major_id` = (SELECT `link_to_major` FROM `member` WHERE `position` = 'Vice President' LIMIT 1)
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM `member`)) AS percentage FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'Member' AND `major`.`major_name` = 'Business'
SELECT DISTINCT `category` FROM `budget` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`location` = 'MU 215'
SELECT COUNT(*) FROM `income` WHERE `amount` = 50
SELECT COUNT(*) FROM `member` WHERE `position` = 'Member' AND `t_shirt_size` = 'X-Large'
SELECT COUNT(*) FROM `major` WHERE `college` = 'College of Agriculture and Applied Sciences' AND `department` = 'School of Applied Sciences, Technology and Education'
SELECT `member`.`last_name`, `major`.`department`, `major`.`college` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Environmental Engineering'
SELECT `budget`.`category` FROM `budget` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`location` = 'MU 215' AND `event`.`type` = 'Guest Speaker' AND `budget`.`spent` = 0
SELECT `zip_code`.`city`, `zip_code`.`state` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `major`.`department` = 'Electrical and Computer Engineering Department' AND `member`.`position` = 'Member'
SELECT `event_name` FROM `event` JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `event`.`type` = 'Social' AND `member`.`position` = 'Vice President' AND `event`.`location` = '900 E. Washington St';
SELECT `last_name`, `position` FROM `member` JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` WHERE `expense_description` = 'Pizza' AND `expense_date` = '2019-09-10'
SELECT `last_name` FROM `member` JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `member`.`position` = 'Member' AND `event`.`event_name` = 'Women''s Soccer'
SELECT (COUNT(CASE WHEN i.`amount` = 50 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM `member` m JOIN `income` i ON m.`member_id` = i.`link_to_member` WHERE m.`t_shirt_size` = 'Medium' AND m.`position` = 'Member';
SELECT DISTINCT `state` FROM `zip_code` WHERE `type` = 'PO Box'
SELECT `zip_code` FROM `zip_code` WHERE `type` = 'PO Box' AND `county` = 'San Juan Municipio' AND `short_state` = 'PR'
SELECT `event_name` FROM `event` WHERE `type` = 'Game' AND `status` = 'Closed' AND `event_date` BETWEEN '2019-03-15' AND '2020-03-20'
SELECT `attendance`.`link_to_event` FROM `attendance` JOIN `expense` ON `attendance`.`link_to_member` = `expense`.`link_to_member` WHERE `expense`.`cost` > 50
SELECT `member`.`member_id`, `member`.`first_name`, `member`.`last_name`, `attendance`.`link_to_event` FROM `member` JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` WHERE `expense`.`approved` = 'true' AND `expense`.`expense_date` BETWEEN '2019-01-10' AND '2019-11-19'
SELECT `college` FROM `major` WHERE `major_id` = (SELECT `link_to_major` FROM `member` WHERE `first_name` = 'Katy' AND `link_to_major` = 'rec1N0upiVLy5esTO')
SELECT `member`.`phone` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business' AND `major`.`college` = 'College of Agriculture and Applied Sciences';
SELECT `member`.`email` FROM `expense` JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `expense`.`expense_date` BETWEEN '2019-09-10' AND '2019-11-19' AND `expense`.`cost` > 20
SELECT COUNT(*) FROM `member` m JOIN `major` ma ON m.`link_to_major` = ma.`major_id` WHERE ma.`major_name` = 'education' AND ma.`college` = 'College of Education & Human Services' AND m.`position` = 'Member';
SELECT (COUNT(CASE WHEN b.`remaining` < 0 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM `budget` b
SELECT `event_id`, `location`, `status` FROM `event` WHERE `event_date` BETWEEN '2019-11-01' AND '2020-03-31'
SELECT `expense_id`, `expense_description`, `expense_date`, `cost`, `approved`, `link_to_member`, `link_to_budget` FROM `expense` WHERE `cost` > 50
SELECT `first_name`, `last_name` FROM `member` WHERE `t_shirt_size` = 'X-Large';
SELECT (SUM(CASE WHEN `type` = 'PO Box' THEN 1 ELSE 0 END) * 100.0 / COUNT(`zip_code`)) AS percentage FROM `zip_code`
SELECT `event_name`, `location` FROM `event` JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `remaining` > 0
SELECT `event`.`event_name`, `event`.`event_date` FROM `event` JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `expense`.`expense_description` = 'Pizza' AND `expense`.`cost` > 50 AND `expense`.`cost` < 100
SELECT `member`.`first_name`, `member`.`last_name`, `major`.`major_name` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` WHERE `expense`.`cost` > 100
SELECT DISTINCT `zip_code`.`city`, `zip_code`.`county` FROM `event` JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` JOIN `income` ON `budget`.`link_to_event` = `income`.`link_to_member` JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE (SELECT COUNT(*) FROM `income` WHERE `income`.`link_to_member` = `member`.`member_id`) > 40
SELECT `m`.`first_name`, `m`.`last_name`, MAX(`e`.`cost`) AS `max_cost` FROM `expense` `e` JOIN `member` `m` ON `e`.`link_to_member` = `m`.`member_id` JOIN `budget` `b` ON `e`.`link_to_budget` = `b`.`budget_id` WHERE `e`.`link_to_member` IN (SELECT `link_to_member` FROM `expense` GROUP BY `link_to_member` HAVING COUNT(DISTINCT `link_to_budget`) > 1) GROUP BY `m`.`member_id` ORDER BY `max_cost` DESC LIMIT 1;
SELECT SUM(`cost`) / COUNT(DISTINCT `event_id`) AS average_amount_paid FROM `expense` JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`position` != 'Member'
SELECT `event_name` FROM `event` WHERE `event_id` IN (SELECT `link_to_event` FROM `budget` WHERE `category` = 'Parking' AND `spent` < (SELECT SUM(`spent`) / COUNT(`event_id`) FROM `budget` WHERE `category` = 'Parking'))
SELECT (SUM(`expense`.`cost`) / COUNT(DISTINCT `event`.`event_id`)) * 100 AS percentage FROM `event` LEFT JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` LEFT JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `event`.`type` = 'Meeting'
SELECT `budget_id` FROM `expense` WHERE `expense_description` = 'Water, chips, cookies' ORDER BY `cost` DESC LIMIT 1
SELECT `first_name`, `last_name` FROM `member` JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` GROUP BY `member`.`member_id` ORDER BY SUM(`expense`.`cost`) DESC LIMIT 5
SELECT `first_name`, `last_name`, `phone` FROM `member` JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` WHERE `expense`.`cost` > (SELECT AVG(`cost`) FROM `expense`)
SELECT (SUM(CASE WHEN `zip_code`.`state` = 'New Jersey' THEN 1 ELSE 0 END) * 1.0 / COUNT(`member`.`position` = 'Member')) - (SUM(CASE WHEN `zip_code`.`state` = 'Vermont' THEN 1 ELSE 0 END) * 1.0 / COUNT(`member`.`position` = 'Member')) AS difference FROM `member` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`position` = 'Member'
SELECT `major`.`major_name`, `major`.`department` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Garrett' AND `member`.`last_name` = 'Gerke' LIMIT 1
SELECT `member`.`first_name` || ' ' || `member`.`last_name` AS full_name, `expense`.`cost` FROM `expense` JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `expense`.`expense_description` = 'Water, Veggie tray, supplies';
SELECT `member`.`last_name`, `member`.`phone` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Elementary Education'
SELECT `category`, `amount` FROM `budget` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'January Speaker'
SELECT `event_name` FROM `event` JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`category` = 'Food'
SELECT `first_name`, `last_name`, `amount` FROM `member` JOIN `income` ON `member`.`member_id` = `income`.`link_to_member` WHERE `date_received` = '2019-09-09'
SELECT `category` FROM `budget` JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `expense_description` = 'Posters' LIMIT 1
SELECT `member`.`first_name`, `member`.`last_name`, `major`.`college` FROM `member` JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'Secretary'
SELECT `event`.`event_name`, SUM(`budget`.`spent`) AS total_spent FROM `budget` JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `budget`.`category` = 'Speaker Gifts' GROUP BY `event`.`event_name`
SELECT `city` FROM `zip_code` WHERE `zip_code` = (SELECT `zip` FROM `member` WHERE `first_name` = 'Garrett' AND `last_name` = 'Gerke' LIMIT 1)
SELECT `first_name`, `last_name`, `position` FROM `member` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`city` = 'Lincolnton' AND `zip_code`.`state` = 'North Carolina' AND `zip_code`.`zip_code` = '28092'
SELECT COUNT(*) FROM `gasstations` WHERE `Country` = 'CZE' AND `Segment` = 'Premium';
SELECT CAST((SELECT COUNT(*) FROM `customers` WHERE `Currency` = 'EUR') AS REAL) / (SELECT COUNT(*) FROM `customers` WHERE `Currency` = 'CZK') AS `ratio`
SELECT `customers`.`CustomerID`, MIN(`yearmonth`.`Consumption`) AS `MinConsumption` FROM `yearmonth` JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `yearmonth`.`Date` BETWEEN 201201 AND 201212 AND `customers`.`Currency` = 'LAM' GROUP BY `customers`.`CustomerID` ORDER BY `MinConsumption` LIMIT 1
SELECT AVG(`Consumption`) / 12 AS `AverageMonthlyConsumption` FROM `yearmonth` JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Segment` = 'SME' AND SUBSTR(`yearmonth`.`Date`, 1, 4) = '2013';
SELECT `customers`.`CustomerID`, SUM(`yearmonth`.`Consumption`) AS total_consumption FROM `customers` JOIN `yearmonth` ON `customers`.`CustomerID` = `yearmonth`.`CustomerID` WHERE `customers`.`Currency` = 'CZK' AND `yearmonth`.`Date` BETWEEN 201101 AND 201112 GROUP BY `customers`.`CustomerID` ORDER BY total_consumption DESC LIMIT 1
SELECT COUNT(DISTINCT `yearmonth`.`CustomerID`) FROM `yearmonth` JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Segment` = 'KAM' AND `yearmonth`.`Consumption` < 30000 AND `yearmonth`.`Date` BETWEEN 201201 AND 201212
SELECT (SELECT SUM(`yearmonth`.`Consumption`) FROM `yearmonth` JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Currency` = 'CZK' AND SUBSTR(`yearmonth`.`Date`, 1, 4) = '2012') - (SELECT SUM(`yearmonth`.`Consumption`) FROM `yearmonth` JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Currency` = 'EUR' AND SUBSTR(`yearmonth`.`Date`, 1, 4) = '2012') AS `DifferenceInConsumption`
SELECT strftime('%Y', `transactions_1k`.`Date`) AS `Year`, SUM(`transactions_1k`.`Amount`) AS `TotalGasUse` FROM `transactions_1k` JOIN `customers` ON `transactions_1k`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Currency` = 'EUR' GROUP BY `Year` ORDER BY `TotalGasUse` DESC LIMIT 1
SELECT `Segment`, SUM(`Consumption`) AS TotalConsumption FROM `yearmonth` JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` GROUP BY `Segment` ORDER BY TotalConsumption LIMIT 1
SELECT SUBSTR(`yearmonth`.`Date`, 1, 4) AS `Year`, SUM(`yearmonth`.`Consumption`) AS `TotalConsumption` FROM `yearmonth` JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Currency` = 'CZK' GROUP BY `Year` ORDER BY `TotalConsumption` DESC LIMIT 1
SELECT SUBSTR(`Date`, 5, 2) AS `Month`, SUM(`Consumption`) AS `TotalConsumption` FROM `yearmonth` WHERE `CustomerID` IN (SELECT `CustomerID` FROM `customers` WHERE `Segment` = 'SME') AND `Date` BETWEEN '201301' AND '201312' GROUP BY `Month` ORDER BY `TotalConsumption` DESC LIMIT 1
WITH SegmentConsumption AS (SELECT c.`Segment`, y.`CustomerID`, SUM(y.`Consumption`) AS TotalConsumption FROM `yearmonth` y JOIN `customers` c ON y.`CustomerID` = c.`CustomerID` WHERE y.`Date` BETWEEN 201301 AND 201312 AND c.`Currency` = 'CZK' GROUP BY c.`Segment`, y.`CustomerID`), MinConsumption AS (SELECT `Segment`, MIN(TotalConsumption) AS MinConsumption FROM SegmentConsumption GROUP BY `Segment`), AnnualAverage AS (SELECT sc.`Segment`, AVG(sc.TotalConsumption) AS AnnualAverage FROM SegmentConsumption sc JOIN MinConsumption mc ON sc.`Segment` = mc.`Segment` AND sc.TotalConsumption = mc.MinConsumption GROUP BY sc.`Segment`) SELECT (SELECT AnnualAverage FROM AnnualAverage WHERE `Segment` = 'SME') - (SELECT AnnualAverage FROM AnnualAverage WHERE `Segment` = 'LAM') AS SME_LAM_Difference, (SELECT AnnualAverage FROM AnnualAverage WHERE `Segment` = 'LAM') - (SELECT AnnualAverage FROM AnnualAverage WHERE `Segment` = 'KAM') AS LAM_KAM_Difference, (SELECT AnnualAverage FROM AnnualAverage WHERE `Segment` = 'KAM') - (SELECT AnnualAverage FROM AnnualAverage WHERE `Segment` = 'SME') AS KAM_SME_Difference;
WITH consumption_2012 AS (SELECT `CustomerID`, SUM(`Consumption`) AS consumption_2012 FROM `yearmonth` WHERE SUBSTR(`Date`, 1, 4) = '2012' GROUP BY `CustomerID`), consumption_2013 AS (SELECT `CustomerID`, SUM(`Consumption`) AS consumption_2013 FROM `yearmonth` WHERE SUBSTR(`Date`, 1, 4) = '2013' GROUP BY `CustomerID`), consumption_diff AS (SELECT c2012.`CustomerID`, c2012.consumption_2012, c2013.consumption_2013, (c2013.consumption_2013 - c2012.consumption_2012) AS diff, (c2013.consumption_2013 - c2012.consumption_2012) * 100.0 / c2013.consumption_2013 AS percentage_increase FROM consumption_2012 c2012 JOIN consumption_2013 c2013 ON c2012.`CustomerID` = c2013.`CustomerID`), segments_consumption AS (SELECT `Segment`, AVG(cd.percentage_increase) AS avg_percentage_increase FROM `customers` c JOIN consumption_diff cd ON c.`CustomerID` = cd.`CustomerID` WHERE c.`Currency` = 'EUR' GROUP BY `Segment`) SELECT `Segment`, avg_percentage_increase FROM segments_consumption ORDER BY avg_percentage_increase DESC LIMIT 1 UNION ALL SELECT `Segment`, avg_percentage_increase FROM segments_consumption ORDER BY avg_percentage_increase ASC LIMIT 1
SELECT SUM(`Consumption`) AS total_consumption FROM `yearmonth` WHERE `CustomerID` = 6 AND `Date` BETWEEN 201308 AND 201311
SELECT (SELECT COUNT(*) FROM `gasstations` WHERE `Country` = 'CZE' AND `Segment` = 'Discount') - (SELECT COUNT(*) FROM `gasstations` WHERE `Country` = 'SVK' AND `Segment` = 'Discount') AS `DiscountDifference`;
SELECT ym1.Consumption - ym2.Consumption AS consumption_difference FROM yearmonth ym1 JOIN yearmonth ym2 ON ym1.Date = 201304 AND ym2.Date = 201304 WHERE ym1.CustomerID = 7 AND ym2.CustomerID = 5
SELECT SUM(CASE WHEN c.`Currency` = 'CZK' THEN 1 ELSE 0 END) - SUM(CASE WHEN c.`Currency` = 'EUR' THEN 1 ELSE 0 END) AS Difference FROM `customers` c JOIN `transactions_1k` t ON c.`CustomerID` = t.`CustomerID` WHERE c.`Segment` = 'SME'
SELECT c.`CustomerID`, c.`Segment`, c.`Currency`, y.`Consumption` FROM `customers` c JOIN `yearmonth` y ON c.`CustomerID` = y.`CustomerID` WHERE c.`Currency` = 'Euro' AND y.`Date` = '201310' AND c.`Segment` = 'LAM' ORDER BY y.`Consumption` DESC LIMIT 1
SELECT `customers`.`CustomerID`, SUM(`yearmonth`.`Consumption`) AS TotalConsumption FROM `customers` JOIN `yearmonth` ON `customers`.`CustomerID` = `yearmonth`.`CustomerID` WHERE `customers`.`Segment` = 'KAM' GROUP BY `customers`.`CustomerID` ORDER BY TotalConsumption DESC LIMIT 1
SELECT SUM(`Consumption`) AS total_consumption FROM `yearmonth` JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `yearmonth`.`Date` = 201305 AND `customers`.`Segment` = 'KAM'
SELECT (COUNT(DISTINCT ym.`CustomerID`) * 100.0 / (SELECT COUNT(DISTINCT c.`CustomerID`) FROM `customers` c WHERE c.`Segment` = 'LAM')) AS `Percentage` FROM `yearmonth` ym JOIN `customers` c ON ym.`CustomerID` = c.`CustomerID` WHERE ym.`Consumption` > 46.73 AND c.`Segment` = 'LAM'
SELECT `Country`, COUNT(*) AS `TotalValueForMoneyStations` FROM `gasstations` WHERE `Segment` = 'value for money' GROUP BY `Country` ORDER BY `TotalValueForMoneyStations` DESC
SELECT (COUNT(DISTINCT t.`CustomerID`) FILTER (WHERE c.`Currency` = 'Euro') * 100.0 / COUNT(DISTINCT t.`CustomerID`)) AS percentage FROM `transactions_1k` t JOIN `customers` c ON t.`CustomerID` = c.`CustomerID` WHERE c.`Segment` = 'KAM'
SELECT (COUNT(DISTINCT CASE WHEN `Consumption` > 528.3 THEN `CustomerID` END) * 100.0 / COUNT(DISTINCT `CustomerID`)) AS percentage FROM `yearmonth` WHERE `Date` = '201202';
SELECT (COUNT(CASE WHEN `gasstations`.`Segment` = 'Premium' THEN 1 END) * 100.0 / COUNT(*)) AS Percentage FROM `gasstations` WHERE `gasstations`.`Country` = 'Slovakia';
SELECT `CustomerID` FROM `yearmonth` WHERE `Date` = '201309' ORDER BY `Consumption` DESC LIMIT 1
SELECT `customers`.`Segment`, SUM(`yearmonth`.`Consumption`) AS `TotalConsumption` FROM `yearmonth` JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `yearmonth`.`Date` = '201309' GROUP BY `customers`.`Segment` ORDER BY `TotalConsumption` ASC LIMIT 1
SELECT `customers`.`CustomerID`, MIN(`yearmonth`.`Consumption`) AS `MinConsumption` FROM `yearmonth` JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `yearmonth`.`Date` = '201206' AND `customers`.`Segment` = 'SME' GROUP BY `customers`.`CustomerID` ORDER BY `MinConsumption` LIMIT 1
SELECT MAX(`Consumption`) FROM `yearmonth` WHERE SUBSTR(`Date`, 1, 4) = '2012'
SELECT MAX(Consumption / 12) AS MonthlyConsumption FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Currency = 'euro'
SELECT `products`.`Description` FROM `transactions_1k` JOIN `products` ON `transactions_1k`.`ProductID` = `products`.`ProductID` JOIN `yearmonth` ON `transactions_1k`.`CustomerID` = `yearmonth`.`CustomerID` WHERE `yearmonth`.`Date` LIKE '201309%'
SELECT DISTINCT `gasstations`.`Country` FROM `transactions_1k` JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `transactions_1k`.`Date` LIKE '201306%'
SELECT DISTINCT `gasstations`.`ChainID` FROM `gasstations` JOIN `transactions_1k` ON `gasstations`.`GasStationID` = `transactions_1k`.`GasStationID` JOIN `customers` ON `transactions_1k`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Currency` = 'Euro'
SELECT `products`.`Description` FROM `transactions_1k` JOIN `products` ON `transactions_1k`.`ProductID` = `products`.`ProductID` JOIN `customers` ON `transactions_1k`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Currency` = 'Euro'
SELECT AVG(`Price`) AS average_total_price FROM `transactions_1k` WHERE `Date` LIKE '2012-01-%'
SELECT COUNT(DISTINCT `yearmonth`.`CustomerID`) FROM `yearmonth` JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Currency` = 'EUR' AND `yearmonth`.`Consumption` > 1000
SELECT `products`.`Description` FROM `transactions_1k` JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` JOIN `products` ON `transactions_1k`.`ProductID` = `products`.`ProductID` WHERE `gasstations`.`Country` = 'CZE'
SELECT MIN(`Time`) AS `EarliestTime`, MAX(`Time`) AS `LatestTime` FROM `transactions_1k` WHERE `GasStationID` IN (SELECT `GasStationID` FROM `gasstations` WHERE `ChainID` = 11)
SELECT COUNT(*) FROM `transactions_1k` t JOIN `gasstations` g ON t.`GasStationID` = g.`GasStationID` WHERE g.`Country` = 'CZE' AND t.`Price` > 1000
SELECT COUNT(*) FROM `transactions_1k` t JOIN `gasstations` g ON t.`GasStationID` = g.`GasStationID` WHERE g.`Country` = 'CZE' AND t.`Date` > '2012-01-01';
SELECT AVG(`Price`) AS average_total_price FROM `transactions_1k` JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `gasstations`.`Country` = 'CZE'
SELECT AVG(t.`Price`) AS average_total_price FROM transactions_1k t JOIN customers c ON t.`CustomerID` = c.`CustomerID` WHERE c.`Currency` = 'euro'
SELECT `CustomerID` FROM `transactions_1k` WHERE `Date` = '2012-08-25' ORDER BY `Amount` DESC LIMIT 1
SELECT g.`Country` FROM `transactions_1k` t JOIN `gasstations` g ON t.`GasStationID` = g.`GasStationID` WHERE t.`Date` = '2012-08-25' ORDER BY t.`Time` LIMIT 1
SELECT `Currency` FROM `customers` WHERE `CustomerID` = (SELECT `CustomerID` FROM `transactions_1k` WHERE `Date` = '2012-08-24' AND `Time` = '16:25:00' LIMIT 1)
SELECT `customers`.`Segment` FROM `customers` JOIN `transactions_1k` ON `customers`.`CustomerID` = `transactions_1k`.`CustomerID` WHERE `transactions_1k`.`Date` = '2012-08-23' AND `transactions_1k`.`Time` = '21:20:00';
SELECT COUNT(*) FROM `transactions_1k` JOIN `customers` ON `transactions_1k`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Currency` = 'CZK' AND `transactions_1k`.`Date` = '2012-08-26' AND `transactions_1k`.`Time` < '13:00:00';
SELECT `Segment` FROM `customers` ORDER BY `CustomerID` ASC LIMIT 1
SELECT `Country` FROM `gasstations` JOIN `transactions_1k` ON `gasstations`.`GasStationID` = `transactions_1k`.`GasStationID` WHERE `transactions_1k`.`Date` = '2012-08-24' AND `transactions_1k`.`Time` = '12:42:00';
SELECT `ProductID` FROM `transactions_1k` WHERE `Date` = '2012-08-23' AND `Time` = '21:20:00'
SELECT y.`Date`, y.`Consumption` FROM `yearmonth` y JOIN `transactions_1k` t ON y.`CustomerID` = t.`CustomerID` WHERE t.`Amount` = 124.05 AND t.`Date` = '2012-08-24' AND y.`Date` LIKE '2012-01-%'
SELECT COUNT(*) FROM `transactions_1k` t JOIN `gasstations` g ON t.`GasStationID` = g.`GasStationID` WHERE t.`Date` = '2012-08-26' AND t.`Time` BETWEEN '08:00:00' AND '09:00:00' AND g.`Country` = 'CZE';
SELECT `Currency` FROM `customers` WHERE `CustomerID` = (SELECT `CustomerID` FROM `yearmonth` WHERE `Date` LIKE '201306' AND `Consumption` = 214582.17)
SELECT `Country` FROM `gasstations` JOIN `transactions_1k` ON `gasstations`.`GasStationID` = `transactions_1k`.`GasStationID` WHERE `transactions_1k`.`CardID` = 667467 LIMIT 1
SELECT `customers`.`Currency` FROM `transactions_1k` JOIN `customers` ON `transactions_1k`.`CustomerID` = `customers`.`CustomerID` WHERE `transactions_1k`.`Amount` = 548.4 AND `transactions_1k`.`Date` = '2012-08-24';
SELECT (COUNT(DISTINCT t.`CustomerID`) * 100.0 / (SELECT COUNT(DISTINCT y.`CustomerID`) FROM `yearmonth` y WHERE y.`Date` = '2012-08-25')) AS `Percentage` FROM `transactions_1k` t JOIN `customers` c ON t.`CustomerID` = c.`CustomerID` WHERE c.`Currency` = 'EUR' AND t.`Date` = '2012-08-25'
SELECT (y2012.Consumption - y2013.Consumption) / y2012.Consumption AS ConsumptionDecreaseRate FROM yearmonth y2012 JOIN yearmonth y2013 ON y2012.CustomerID = y2013.CustomerID JOIN transactions_1k t ON y2012.CustomerID = t.CustomerID WHERE t.Amount = 634.8 AND t.Date = '2012-08-25' AND y2012.Date = '2012-12-31' AND y2013.Date = '2013-12-31'
SELECT `GasStationID`, SUM(`Amount` * `Price`) AS Revenue FROM `transactions_1k` GROUP BY `GasStationID` ORDER BY Revenue DESC LIMIT 1
SELECT (COUNT(DISTINCT CASE WHEN g.`Segment` = 'premium' THEN g.`GasStationID` END) * 100.0 / COUNT(DISTINCT g.`GasStationID`)) AS premium_percentage FROM `gasstations` g WHERE g.`Country` = 'SVK';
SELECT SUM(`transactions_1k`.`Amount`) AS total_spent_at_gas_stations, SUM(CASE WHEN `transactions_1k`.`Date` = '201201' THEN `transactions_1k`.`Amount` ELSE 0 END) AS spent_in_january_2012 FROM `transactions_1k` WHERE `transactions_1k`.`CustomerID` = '38508'
SELECT `products`.`Description` FROM `transactions_1k` JOIN `products` ON `transactions_1k`.`ProductID` = `products`.`ProductID` GROUP BY `products`.`ProductID` ORDER BY SUM(`transactions_1k`.`Amount`) DESC LIMIT 5
SELECT c.`CustomerID`, SUM(t.`Amount` * t.`Price`) / SUM(t.`Amount`) AS `AveragePricePerItem`, c.`Currency` FROM `customers` c JOIN `transactions_1k` t ON c.`CustomerID` = t.`CustomerID` GROUP BY c.`CustomerID`, c.`Currency` ORDER BY SUM(t.`Amount` * t.`Price`) DESC LIMIT 1;
SELECT `Country` FROM `gasstations` JOIN `transactions_1k` ON `gasstations`.`GasStationID` = `transactions_1k`.`GasStationID` WHERE `transactions_1k`.`ProductID` = 2 ORDER BY `transactions_1k`.`Price` DESC LIMIT 1
SELECT y.`Consumption` FROM yearmonth y JOIN transactions_1k t ON y.`CustomerID` = t.`CustomerID` WHERE t.`ProductID` = 5 AND t.`Price` / t.`Amount` > 29.00 AND y.`Date` = '201208'
